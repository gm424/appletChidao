import {
  arrow_down_default,
  arrow_left_default,
  arrow_right_default,
  arrow_up_default,
  back_default,
  calendar_default,
  caret_right_default,
  caret_top_default,
  check_default,
  circle_check_default,
  circle_check_filled_default,
  circle_close_default,
  circle_close_filled_default,
  clock_default,
  close_default,
  d_arrow_left_default,
  d_arrow_right_default,
  delete_default,
  document_default,
  full_screen_default,
  hide_default,
  info_filled_default,
  loading_default,
  minus_default,
  more_default,
  more_filled_default,
  picture_filled_default,
  plus_default,
  question_filled_default,
  refresh_left_default,
  refresh_right_default,
  scale_to_original_default,
  search_default,
  sort_down_default,
  sort_up_default,
  star_default,
  star_filled_default,
  success_filled_default,
  view_default,
  warning_filled_default,
  zoom_in_default,
  zoom_out_default
} from "./chunk-OE5DBB65.js";
import {
  __commonJS,
  __export,
  __reExport,
  __toESM
} from "./chunk-MWF3D2R5.js";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/dayjs.min.js"(exports2, module2) {
    !function(t, e) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs = e();
    }(exports2, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s2 = "minute", u2 = "hour", a2 = "day", o2 = "week", c2 = "month", f2 = "quarter", h30 = "year", d2 = "date", l2 = "Invalid Date", $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M2 = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t2) {
        var e2 = ["th", "st", "nd", "rd"], n2 = t2 % 100;
        return "[" + t2 + (e2[(n2 - 20) % 10] || e2[n2] || e2[0]) + "]";
      } }, m2 = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, v2 = { s: m2, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m2(r2, 2, "0") + ":" + m2(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date())
          return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, c2), s3 = n2 - i2 < 0, u3 = e2.clone().add(r2 + (s3 ? -1 : 1), c2);
        return +(-(r2 + (n2 - i2) / (s3 ? i2 - u3 : u3 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: c2, y: h30, w: o2, d: a2, D: d2, h: u2, m: s2, s: i, ms: r, Q: f2 }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return void 0 === t2;
      } }, g = "en", D2 = {};
      D2[g] = M2;
      var p2 = function(t2) {
        return t2 instanceof b2;
      }, S2 = function t2(e2, n2, r2) {
        var i2;
        if (!e2)
          return g;
        if ("string" == typeof e2) {
          var s3 = e2.toLowerCase();
          D2[s3] && (i2 = s3), n2 && (D2[s3] = n2, i2 = s3);
          var u3 = e2.split("-");
          if (!i2 && u3.length > 1)
            return t2(u3[0]);
        } else {
          var a3 = e2.name;
          D2[a3] = e2, i2 = a3;
        }
        return !r2 && i2 && (g = i2), i2 || !r2 && g;
      }, w2 = function(t2, e2) {
        if (p2(t2))
          return t2.clone();
        var n2 = "object" == typeof e2 ? e2 : {};
        return n2.date = t2, n2.args = arguments, new b2(n2);
      }, O2 = v2;
      O2.l = S2, O2.i = p2, O2.w = function(t2, e2) {
        return w2(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var b2 = function() {
        function M3(t2) {
          this.$L = S2(t2.locale, null, true), this.parse(t2);
        }
        var m3 = M3.prototype;
        return m3.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (null === e2)
              return /* @__PURE__ */ new Date(NaN);
            if (O2.u(e2))
              return /* @__PURE__ */ new Date();
            if (e2 instanceof Date)
              return new Date(e2);
            if ("string" == typeof e2 && !/Z$/i.test(e2)) {
              var r2 = e2.match($);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s3 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s3)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s3);
              }
            }
            return new Date(e2);
          }(t2), this.$x = t2.x || {}, this.init();
        }, m3.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m3.$utils = function() {
          return O2;
        }, m3.isValid = function() {
          return !(this.$d.toString() === l2);
        }, m3.isSame = function(t2, e2) {
          var n2 = w2(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m3.isAfter = function(t2, e2) {
          return w2(t2) < this.startOf(e2);
        }, m3.isBefore = function(t2, e2) {
          return this.endOf(e2) < w2(t2);
        }, m3.$g = function(t2, e2, n2) {
          return O2.u(t2) ? this[e2] : this.set(n2, t2);
        }, m3.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m3.valueOf = function() {
          return this.$d.getTime();
        }, m3.startOf = function(t2, e2) {
          var n2 = this, r2 = !!O2.u(e2) || e2, f3 = O2.p(t2), l3 = function(t3, e3) {
            var i2 = O2.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a2);
          }, $2 = function(t3, e3) {
            return O2.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M4 = this.$M, m4 = this.$D, v3 = "set" + (this.$u ? "UTC" : "");
          switch (f3) {
            case h30:
              return r2 ? l3(1, 0) : l3(31, 11);
            case c2:
              return r2 ? l3(1, M4) : l3(0, M4 + 1);
            case o2:
              var g2 = this.$locale().weekStart || 0, D3 = (y2 < g2 ? y2 + 7 : y2) - g2;
              return l3(r2 ? m4 - D3 : m4 + (6 - D3), M4);
            case a2:
            case d2:
              return $2(v3 + "Hours", 0);
            case u2:
              return $2(v3 + "Minutes", 1);
            case s2:
              return $2(v3 + "Seconds", 2);
            case i:
              return $2(v3 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m3.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m3.$set = function(t2, e2) {
          var n2, o3 = O2.p(t2), f3 = "set" + (this.$u ? "UTC" : ""), l3 = (n2 = {}, n2[a2] = f3 + "Date", n2[d2] = f3 + "Date", n2[c2] = f3 + "Month", n2[h30] = f3 + "FullYear", n2[u2] = f3 + "Hours", n2[s2] = f3 + "Minutes", n2[i] = f3 + "Seconds", n2[r] = f3 + "Milliseconds", n2)[o3], $2 = o3 === a2 ? this.$D + (e2 - this.$W) : e2;
          if (o3 === c2 || o3 === h30) {
            var y2 = this.clone().set(d2, 1);
            y2.$d[l3]($2), y2.init(), this.$d = y2.set(d2, Math.min(this.$D, y2.daysInMonth())).$d;
          } else
            l3 && this.$d[l3]($2);
          return this.init(), this;
        }, m3.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m3.get = function(t2) {
          return this[O2.p(t2)]();
        }, m3.add = function(r2, f3) {
          var d3, l3 = this;
          r2 = Number(r2);
          var $2 = O2.p(f3), y2 = function(t2) {
            var e2 = w2(l3);
            return O2.w(e2.date(e2.date() + Math.round(t2 * r2)), l3);
          };
          if ($2 === c2)
            return this.set(c2, this.$M + r2);
          if ($2 === h30)
            return this.set(h30, this.$y + r2);
          if ($2 === a2)
            return y2(1);
          if ($2 === o2)
            return y2(7);
          var M4 = (d3 = {}, d3[s2] = e, d3[u2] = n, d3[i] = t, d3)[$2] || 1, m4 = this.$d.getTime() + r2 * M4;
          return O2.w(m4, this);
        }, m3.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m3.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid())
            return n2.invalidDate || l2;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = O2.z(this), s3 = this.$H, u3 = this.$m, a3 = this.$M, o3 = n2.weekdays, c3 = n2.months, f3 = n2.meridiem, h31 = function(t3, n3, i3, s4) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s4);
          }, d3 = function(t3) {
            return O2.s(s3 % 12 || 12, t3, "0");
          }, $2 = f3 || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          };
          return r2.replace(y, function(t3, r3) {
            return r3 || function(t4) {
              switch (t4) {
                case "YY":
                  return String(e2.$y).slice(-2);
                case "YYYY":
                  return O2.s(e2.$y, 4, "0");
                case "M":
                  return a3 + 1;
                case "MM":
                  return O2.s(a3 + 1, 2, "0");
                case "MMM":
                  return h31(n2.monthsShort, a3, c3, 3);
                case "MMMM":
                  return h31(c3, a3);
                case "D":
                  return e2.$D;
                case "DD":
                  return O2.s(e2.$D, 2, "0");
                case "d":
                  return String(e2.$W);
                case "dd":
                  return h31(n2.weekdaysMin, e2.$W, o3, 2);
                case "ddd":
                  return h31(n2.weekdaysShort, e2.$W, o3, 3);
                case "dddd":
                  return o3[e2.$W];
                case "H":
                  return String(s3);
                case "HH":
                  return O2.s(s3, 2, "0");
                case "h":
                  return d3(1);
                case "hh":
                  return d3(2);
                case "a":
                  return $2(s3, u3, true);
                case "A":
                  return $2(s3, u3, false);
                case "m":
                  return String(u3);
                case "mm":
                  return O2.s(u3, 2, "0");
                case "s":
                  return String(e2.$s);
                case "ss":
                  return O2.s(e2.$s, 2, "0");
                case "SSS":
                  return O2.s(e2.$ms, 3, "0");
                case "Z":
                  return i2;
              }
              return null;
            }(t3) || i2.replace(":", "");
          });
        }, m3.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m3.diff = function(r2, d3, l3) {
          var $2, y2 = this, M4 = O2.p(d3), m4 = w2(r2), v3 = (m4.utcOffset() - this.utcOffset()) * e, g2 = this - m4, D3 = function() {
            return O2.m(y2, m4);
          };
          switch (M4) {
            case h30:
              $2 = D3() / 12;
              break;
            case c2:
              $2 = D3();
              break;
            case f2:
              $2 = D3() / 3;
              break;
            case o2:
              $2 = (g2 - v3) / 6048e5;
              break;
            case a2:
              $2 = (g2 - v3) / 864e5;
              break;
            case u2:
              $2 = g2 / n;
              break;
            case s2:
              $2 = g2 / e;
              break;
            case i:
              $2 = g2 / t;
              break;
            default:
              $2 = g2;
          }
          return l3 ? $2 : O2.a($2);
        }, m3.daysInMonth = function() {
          return this.endOf(c2).$D;
        }, m3.$locale = function() {
          return D2[this.$L];
        }, m3.locale = function(t2, e2) {
          if (!t2)
            return this.$L;
          var n2 = this.clone(), r2 = S2(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m3.clone = function() {
          return O2.w(this.$d, this);
        }, m3.toDate = function() {
          return new Date(this.valueOf());
        }, m3.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m3.toISOString = function() {
          return this.$d.toISOString();
        }, m3.toString = function() {
          return this.$d.toUTCString();
        }, M3;
      }(), _2 = b2.prototype;
      return w2.prototype = _2, [["$ms", r], ["$s", i], ["$m", s2], ["$H", u2], ["$W", a2], ["$M", c2], ["$y", h30], ["$D", d2]].forEach(function(t2) {
        _2[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), w2.extend = function(t2, e2) {
        return t2.$i || (t2(e2, b2, w2), t2.$i = true), w2;
      }, w2.locale = S2, w2.isDayjs = p2, w2.unix = function(t2) {
        return w2(1e3 * t2);
      }, w2.en = D2[g], w2.Ls = D2, w2.p = {}, w2;
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/customParseFormat.js
var require_customParseFormat = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/customParseFormat.js"(exports2, module2) {
    !function(e, t) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_customParseFormat = t();
    }(exports2, function() {
      "use strict";
      var e = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, t = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, n = /\d\d/, r = /\d\d?/, i = /\d*[^-_:/,()\s\d]+/, o2 = {}, s2 = function(e2) {
        return (e2 = +e2) + (e2 > 68 ? 1900 : 2e3);
      };
      var a2 = function(e2) {
        return function(t2) {
          this[e2] = +t2;
        };
      }, f2 = [/[+-]\d\d:?(\d\d)?|Z/, function(e2) {
        (this.zone || (this.zone = {})).offset = function(e3) {
          if (!e3)
            return 0;
          if ("Z" === e3)
            return 0;
          var t2 = e3.match(/([+-]|\d\d)/g), n2 = 60 * t2[1] + (+t2[2] || 0);
          return 0 === n2 ? 0 : "+" === t2[0] ? -n2 : n2;
        }(e2);
      }], h30 = function(e2) {
        var t2 = o2[e2];
        return t2 && (t2.indexOf ? t2 : t2.s.concat(t2.f));
      }, u2 = function(e2, t2) {
        var n2, r2 = o2.meridiem;
        if (r2) {
          for (var i2 = 1; i2 <= 24; i2 += 1)
            if (e2.indexOf(r2(i2, 0, t2)) > -1) {
              n2 = i2 > 12;
              break;
            }
        } else
          n2 = e2 === (t2 ? "pm" : "PM");
        return n2;
      }, d2 = { A: [i, function(e2) {
        this.afternoon = u2(e2, false);
      }], a: [i, function(e2) {
        this.afternoon = u2(e2, true);
      }], S: [/\d/, function(e2) {
        this.milliseconds = 100 * +e2;
      }], SS: [n, function(e2) {
        this.milliseconds = 10 * +e2;
      }], SSS: [/\d{3}/, function(e2) {
        this.milliseconds = +e2;
      }], s: [r, a2("seconds")], ss: [r, a2("seconds")], m: [r, a2("minutes")], mm: [r, a2("minutes")], H: [r, a2("hours")], h: [r, a2("hours")], HH: [r, a2("hours")], hh: [r, a2("hours")], D: [r, a2("day")], DD: [n, a2("day")], Do: [i, function(e2) {
        var t2 = o2.ordinal, n2 = e2.match(/\d+/);
        if (this.day = n2[0], t2)
          for (var r2 = 1; r2 <= 31; r2 += 1)
            t2(r2).replace(/\[|\]/g, "") === e2 && (this.day = r2);
      }], M: [r, a2("month")], MM: [n, a2("month")], MMM: [i, function(e2) {
        var t2 = h30("months"), n2 = (h30("monthsShort") || t2.map(function(e3) {
          return e3.slice(0, 3);
        })).indexOf(e2) + 1;
        if (n2 < 1)
          throw new Error();
        this.month = n2 % 12 || n2;
      }], MMMM: [i, function(e2) {
        var t2 = h30("months").indexOf(e2) + 1;
        if (t2 < 1)
          throw new Error();
        this.month = t2 % 12 || t2;
      }], Y: [/[+-]?\d+/, a2("year")], YY: [n, function(e2) {
        this.year = s2(e2);
      }], YYYY: [/\d{4}/, a2("year")], Z: f2, ZZ: f2 };
      function c2(n2) {
        var r2, i2;
        r2 = n2, i2 = o2 && o2.formats;
        for (var s3 = (n2 = r2.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(t2, n3, r3) {
          var o3 = r3 && r3.toUpperCase();
          return n3 || i2[r3] || e[r3] || i2[o3].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(e2, t3, n4) {
            return t3 || n4.slice(1);
          });
        })).match(t), a3 = s3.length, f3 = 0; f3 < a3; f3 += 1) {
          var h31 = s3[f3], u3 = d2[h31], c3 = u3 && u3[0], l2 = u3 && u3[1];
          s3[f3] = l2 ? { regex: c3, parser: l2 } : h31.replace(/^\[|\]$/g, "");
        }
        return function(e2) {
          for (var t2 = {}, n3 = 0, r3 = 0; n3 < a3; n3 += 1) {
            var i3 = s3[n3];
            if ("string" == typeof i3)
              r3 += i3.length;
            else {
              var o3 = i3.regex, f4 = i3.parser, h32 = e2.slice(r3), u4 = o3.exec(h32)[0];
              f4.call(t2, u4), e2 = e2.replace(u4, "");
            }
          }
          return function(e3) {
            var t3 = e3.afternoon;
            if (void 0 !== t3) {
              var n4 = e3.hours;
              t3 ? n4 < 12 && (e3.hours += 12) : 12 === n4 && (e3.hours = 0), delete e3.afternoon;
            }
          }(t2), t2;
        };
      }
      return function(e2, t2, n2) {
        n2.p.customParseFormat = true, e2 && e2.parseTwoDigitYear && (s2 = e2.parseTwoDigitYear);
        var r2 = t2.prototype, i2 = r2.parse;
        r2.parse = function(e3) {
          var t3 = e3.date, r3 = e3.utc, s3 = e3.args;
          this.$u = r3;
          var a3 = s3[1];
          if ("string" == typeof a3) {
            var f3 = true === s3[2], h31 = true === s3[3], u3 = f3 || h31, d3 = s3[2];
            h31 && (d3 = s3[2]), o2 = this.$locale(), !f3 && d3 && (o2 = n2.Ls[d3]), this.$d = function(e4, t4, n3) {
              try {
                if (["x", "X"].indexOf(t4) > -1)
                  return new Date(("X" === t4 ? 1e3 : 1) * e4);
                var r4 = c2(t4)(e4), i3 = r4.year, o3 = r4.month, s4 = r4.day, a4 = r4.hours, f4 = r4.minutes, h32 = r4.seconds, u4 = r4.milliseconds, d4 = r4.zone, l3 = /* @__PURE__ */ new Date(), m3 = s4 || (i3 || o3 ? 1 : l3.getDate()), M3 = i3 || l3.getFullYear(), Y2 = 0;
                i3 && !o3 || (Y2 = o3 > 0 ? o3 - 1 : l3.getMonth());
                var p2 = a4 || 0, v2 = f4 || 0, D2 = h32 || 0, g = u4 || 0;
                return d4 ? new Date(Date.UTC(M3, Y2, m3, p2, v2, D2, g + 60 * d4.offset * 1e3)) : n3 ? new Date(Date.UTC(M3, Y2, m3, p2, v2, D2, g)) : new Date(M3, Y2, m3, p2, v2, D2, g);
              } catch (e5) {
                return /* @__PURE__ */ new Date("");
              }
            }(t3, a3, r3), this.init(), d3 && true !== d3 && (this.$L = this.locale(d3).$L), u3 && t3 != this.format(a3) && (this.$d = /* @__PURE__ */ new Date("")), o2 = {};
          } else if (a3 instanceof Array)
            for (var l2 = a3.length, m2 = 1; m2 <= l2; m2 += 1) {
              s3[1] = a3[m2 - 1];
              var M2 = n2.apply(this, s3);
              if (M2.isValid()) {
                this.$d = M2.$d, this.$L = M2.$L, this.init();
                break;
              }
              m2 === l2 && (this.$d = /* @__PURE__ */ new Date(""));
            }
          else
            i2.call(this, e3);
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/localeData.js
var require_localeData = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/localeData.js"(exports2, module2) {
    !function(n, e) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = e() : "function" == typeof define && define.amd ? define(e) : (n = "undefined" != typeof globalThis ? globalThis : n || self).dayjs_plugin_localeData = e();
    }(exports2, function() {
      "use strict";
      return function(n, e, t) {
        var r = e.prototype, o2 = function(n2) {
          return n2 && (n2.indexOf ? n2 : n2.s);
        }, u2 = function(n2, e2, t2, r2, u3) {
          var i2 = n2.name ? n2 : n2.$locale(), a3 = o2(i2[e2]), s3 = o2(i2[t2]), f2 = a3 || s3.map(function(n3) {
            return n3.slice(0, r2);
          });
          if (!u3)
            return f2;
          var d2 = i2.weekStart;
          return f2.map(function(n3, e3) {
            return f2[(e3 + (d2 || 0)) % 7];
          });
        }, i = function() {
          return t.Ls[t.locale()];
        }, a2 = function(n2, e2) {
          return n2.formats[e2] || function(n3) {
            return n3.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(n4, e3, t2) {
              return e3 || t2.slice(1);
            });
          }(n2.formats[e2.toUpperCase()]);
        }, s2 = function() {
          var n2 = this;
          return { months: function(e2) {
            return e2 ? e2.format("MMMM") : u2(n2, "months");
          }, monthsShort: function(e2) {
            return e2 ? e2.format("MMM") : u2(n2, "monthsShort", "months", 3);
          }, firstDayOfWeek: function() {
            return n2.$locale().weekStart || 0;
          }, weekdays: function(e2) {
            return e2 ? e2.format("dddd") : u2(n2, "weekdays");
          }, weekdaysMin: function(e2) {
            return e2 ? e2.format("dd") : u2(n2, "weekdaysMin", "weekdays", 2);
          }, weekdaysShort: function(e2) {
            return e2 ? e2.format("ddd") : u2(n2, "weekdaysShort", "weekdays", 3);
          }, longDateFormat: function(e2) {
            return a2(n2.$locale(), e2);
          }, meridiem: this.$locale().meridiem, ordinal: this.$locale().ordinal };
        };
        r.localeData = function() {
          return s2.bind(this)();
        }, t.localeData = function() {
          var n2 = i();
          return { firstDayOfWeek: function() {
            return n2.weekStart || 0;
          }, weekdays: function() {
            return t.weekdays();
          }, weekdaysShort: function() {
            return t.weekdaysShort();
          }, weekdaysMin: function() {
            return t.weekdaysMin();
          }, months: function() {
            return t.months();
          }, monthsShort: function() {
            return t.monthsShort();
          }, longDateFormat: function(e2) {
            return a2(n2, e2);
          }, meridiem: n2.meridiem, ordinal: n2.ordinal };
        }, t.months = function() {
          return u2(i(), "months");
        }, t.monthsShort = function() {
          return u2(i(), "monthsShort", "months", 3);
        }, t.weekdays = function(n2) {
          return u2(i(), "weekdays", null, null, n2);
        }, t.weekdaysShort = function(n2) {
          return u2(i(), "weekdaysShort", "weekdays", 3, n2);
        }, t.weekdaysMin = function(n2) {
          return u2(i(), "weekdaysMin", "weekdays", 2, n2);
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/advancedFormat.js
var require_advancedFormat = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/advancedFormat.js"(exports2, module2) {
    !function(e, t) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_advancedFormat = t();
    }(exports2, function() {
      "use strict";
      return function(e, t) {
        var r = t.prototype, n = r.format;
        r.format = function(e2) {
          var t2 = this, r2 = this.$locale();
          if (!this.isValid())
            return n.bind(this)(e2);
          var s2 = this.$utils(), a2 = (e2 || "YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g, function(e3) {
            switch (e3) {
              case "Q":
                return Math.ceil((t2.$M + 1) / 3);
              case "Do":
                return r2.ordinal(t2.$D);
              case "gggg":
                return t2.weekYear();
              case "GGGG":
                return t2.isoWeekYear();
              case "wo":
                return r2.ordinal(t2.week(), "W");
              case "w":
              case "ww":
                return s2.s(t2.week(), "w" === e3 ? 1 : 2, "0");
              case "W":
              case "WW":
                return s2.s(t2.isoWeek(), "W" === e3 ? 1 : 2, "0");
              case "k":
              case "kk":
                return s2.s(String(0 === t2.$H ? 24 : t2.$H), "k" === e3 ? 1 : 2, "0");
              case "X":
                return Math.floor(t2.$d.getTime() / 1e3);
              case "x":
                return t2.$d.getTime();
              case "z":
                return "[" + t2.offsetName() + "]";
              case "zzz":
                return "[" + t2.offsetName("long") + "]";
              default:
                return e3;
            }
          });
          return n.bind(this)(a2);
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/weekOfYear.js
var require_weekOfYear = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/weekOfYear.js"(exports2, module2) {
    !function(e, t) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_weekOfYear = t();
    }(exports2, function() {
      "use strict";
      var e = "week", t = "year";
      return function(i, n, r) {
        var f2 = n.prototype;
        f2.week = function(i2) {
          if (void 0 === i2 && (i2 = null), null !== i2)
            return this.add(7 * (i2 - this.week()), "day");
          var n2 = this.$locale().yearStart || 1;
          if (11 === this.month() && this.date() > 25) {
            var f3 = r(this).startOf(t).add(1, t).date(n2), s2 = r(this).endOf(e);
            if (f3.isBefore(s2))
              return 1;
          }
          var a2 = r(this).startOf(t).date(n2).startOf(e).subtract(1, "millisecond"), o2 = this.diff(a2, e, true);
          return o2 < 0 ? r(this).startOf("week").week() : Math.ceil(o2);
        }, f2.weeks = function(e2) {
          return void 0 === e2 && (e2 = null), this.week(e2);
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/weekYear.js
var require_weekYear = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/weekYear.js"(exports2, module2) {
    !function(e, t) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_weekYear = t();
    }(exports2, function() {
      "use strict";
      return function(e, t) {
        t.prototype.weekYear = function() {
          var e2 = this.month(), t2 = this.week(), n = this.year();
          return 1 === t2 && 11 === e2 ? n + 1 : 0 === e2 && t2 >= 52 ? n - 1 : n;
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/dayOfYear.js
var require_dayOfYear = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/dayOfYear.js"(exports2, module2) {
    !function(e, t) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_dayOfYear = t();
    }(exports2, function() {
      "use strict";
      return function(e, t, n) {
        t.prototype.dayOfYear = function(e2) {
          var t2 = Math.round((n(this).startOf("day") - n(this).startOf("year")) / 864e5) + 1;
          return null == e2 ? t2 : this.add(e2 - t2, "day");
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/isSameOrAfter.js
var require_isSameOrAfter = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/isSameOrAfter.js"(exports2, module2) {
    !function(e, t) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isSameOrAfter = t();
    }(exports2, function() {
      "use strict";
      return function(e, t) {
        t.prototype.isSameOrAfter = function(e2, t2) {
          return this.isSame(e2, t2) || this.isAfter(e2, t2);
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/isSameOrBefore.js
var require_isSameOrBefore = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/dayjs/plugin/isSameOrBefore.js"(exports2, module2) {
    !function(e, i) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = i() : "function" == typeof define && define.amd ? define(i) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isSameOrBefore = i();
    }(exports2, function() {
      "use strict";
      return function(e, i) {
        i.prototype.isSameOrBefore = function(e2, i2) {
          return this.isSame(e2, i2) || this.isBefore(e2, i2);
        };
      };
    });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/escape-html/index.js
var require_escape_html = __commonJS({
  "../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/escape-html/index.js"(exports2, module2) {
    "use strict";
    var matchHtmlRegExp = /["'&<>]/;
    module2.exports = escapeHtml2;
    function escapeHtml2(string3) {
      var str = "" + string3;
      var match = matchHtmlRegExp.exec(str);
      if (!match) {
        return str;
      }
      var escape2;
      var html = "";
      var index = 0;
      var lastIndex = 0;
      for (index = match.index; index < str.length; index++) {
        switch (str.charCodeAt(index)) {
          case 34:
            escape2 = "&quot;";
            break;
          case 38:
            escape2 = "&amp;";
            break;
          case 39:
            escape2 = "&#39;";
            break;
          case 60:
            escape2 = "&lt;";
            break;
          case 62:
            escape2 = "&gt;";
            break;
          default:
            continue;
        }
        if (lastIndex !== index) {
          html += str.substring(lastIndex, index);
        }
        lastIndex = index + 1;
        html += escape2;
      }
      return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/dom/aria.mjs
var FOCUSABLE_ELEMENT_SELECTORS = `a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])`;
var isVisible = (element) => {
  if (false)
    return true;
  const computed190 = getComputedStyle(element);
  return computed190.position === "fixed" ? false : element.offsetParent !== null;
};
var obtainAllFocusableElements = (element) => {
  return Array.from(element.querySelectorAll(FOCUSABLE_ELEMENT_SELECTORS)).filter((item) => isFocusable(item) && isVisible(item));
};
var isFocusable = (element) => {
  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute("tabIndex") !== null) {
    return true;
  }
  if (element.disabled) {
    return false;
  }
  switch (element.nodeName) {
    case "A": {
      return !!element.href && element.rel !== "ignore";
    }
    case "INPUT": {
      return !(element.type === "hidden" || element.type === "file");
    }
    case "BUTTON":
    case "SELECT":
    case "TEXTAREA": {
      return true;
    }
    default: {
      return false;
    }
  }
};
var triggerEvent = function(elm, name, ...opts) {
  let eventName;
  if (name.includes("mouse") || name.includes("click")) {
    eventName = "MouseEvents";
  } else if (name.includes("key")) {
    eventName = "KeyboardEvent";
  } else {
    eventName = "HTMLEvents";
  }
  const evt = document.createEvent(eventName);
  evt.initEvent(name, ...opts);
  elm.dispatchEvent(evt);
  return elm;
};
var isLeaf = (el) => !el.getAttribute("aria-owns");
var getSibling = (el, distance, elClass) => {
  const { parentNode } = el;
  if (!parentNode)
    return null;
  const siblings = parentNode.querySelectorAll(elClass);
  const index = Array.prototype.indexOf.call(siblings, el);
  return siblings[index + distance] || null;
};
var focusNode = (el) => {
  if (!el)
    return;
  el.focus();
  !isLeaf(el) && el.click();
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/dom/event.mjs
var composeEventHandlers = (theirsHandler, oursHandler, { checkForDefaultPrevented = true } = {}) => {
  const handleEvent = (event) => {
    const shouldPrevent = theirsHandler == null ? void 0 : theirsHandler(event);
    if (checkForDefaultPrevented === false || !shouldPrevent) {
      return oursHandler == null ? void 0 : oursHandler(event);
    }
  };
  return handleEvent;
};
var whenMouse = (handler) => {
  return (e) => e.pointerType === "mouse" ? handler(e) : void 0;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@vueuse/shared/node_modules/vue-demi/lib/index.mjs
var lib_exports = {};
__export(lib_exports, {
  Vue: () => Vue,
  Vue2: () => Vue2,
  del: () => del,
  install: () => install,
  isVue2: () => isVue2,
  isVue3: () => isVue3,
  set: () => set
});
__reExport(lib_exports, vue_star);
import * as Vue from "vue";
import * as vue_star from "vue";
var isVue2 = false;
var isVue3 = true;
var Vue2 = void 0;
function install() {
}
function set(target2, key, val) {
  if (Array.isArray(target2)) {
    target2.length = Math.max(target2.length, key);
    target2.splice(key, 1, val);
    return val;
  }
  target2[key] = val;
  return val;
}
function del(target2, key) {
  if (Array.isArray(target2)) {
    target2.splice(key, 1);
    return;
  }
  delete target2[key];
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@vueuse/shared/index.mjs
var __defProp$9 = Object.defineProperty;
var __defProps$6 = Object.defineProperties;
var __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$b = Object.getOwnPropertySymbols;
var __hasOwnProp$b = Object.prototype.hasOwnProperty;
var __propIsEnum$b = Object.prototype.propertyIsEnumerable;
var __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$9 = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp$b.call(b2, prop))
      __defNormalProp$9(a2, prop, b2[prop]);
  if (__getOwnPropSymbols$b)
    for (var prop of __getOwnPropSymbols$b(b2)) {
      if (__propIsEnum$b.call(b2, prop))
        __defNormalProp$9(a2, prop, b2[prop]);
    }
  return a2;
};
var __spreadProps$6 = (a2, b2) => __defProps$6(a2, __getOwnPropDescs$6(b2));
function computedEager(fn2, options) {
  var _a2;
  const result2 = (0, lib_exports.shallowRef)();
  (0, lib_exports.watchEffect)(() => {
    result2.value = fn2();
  }, __spreadProps$6(__spreadValues$9({}, options), {
    flush: (_a2 = options == null ? void 0 : options.flush) != null ? _a2 : "sync"
  }));
  return (0, lib_exports.readonly)(result2);
}
var _a;
var isClient = typeof window !== "undefined";
var isDef = (val) => typeof val !== "undefined";
var isFunction = (val) => typeof val === "function";
var isString = (val) => typeof val === "string";
var noop = () => {
};
var isIOS = isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function resolveUnref(r) {
  return typeof r === "function" ? r() : (0, lib_exports.unref)(r);
}
function createFilterWrapper(filter2, fn2) {
  function wrapper(...args) {
    return new Promise((resolve, reject2) => {
      Promise.resolve(filter2(() => fn2.apply(this, args), { fn: fn2, thisArg: this, args })).then(resolve).catch(reject2);
    });
  }
  return wrapper;
}
function debounceFilter(ms, options = {}) {
  let timer;
  let maxTimer;
  let lastRejector = noop;
  const _clearTimeout = (timer2) => {
    clearTimeout(timer2);
    lastRejector();
    lastRejector = noop;
  };
  const filter2 = (invoke2) => {
    const duration = resolveUnref(ms);
    const maxDuration = resolveUnref(options.maxWait);
    if (timer)
      _clearTimeout(timer);
    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {
      if (maxTimer) {
        _clearTimeout(maxTimer);
        maxTimer = null;
      }
      return Promise.resolve(invoke2());
    }
    return new Promise((resolve, reject2) => {
      lastRejector = options.rejectOnCancel ? reject2 : resolve;
      if (maxDuration && !maxTimer) {
        maxTimer = setTimeout(() => {
          if (timer)
            _clearTimeout(timer);
          maxTimer = null;
          resolve(invoke2());
        }, maxDuration);
      }
      timer = setTimeout(() => {
        if (maxTimer)
          _clearTimeout(maxTimer);
        maxTimer = null;
        resolve(invoke2());
      }, duration);
    });
  };
  return filter2;
}
function throttleFilter(ms, trailing = true, leading = true, rejectOnCancel = false) {
  let lastExec = 0;
  let timer;
  let isLeading = true;
  let lastRejector = noop;
  let lastValue;
  const clear2 = () => {
    if (timer) {
      clearTimeout(timer);
      timer = void 0;
      lastRejector();
      lastRejector = noop;
    }
  };
  const filter2 = (_invoke) => {
    const duration = resolveUnref(ms);
    const elapsed = Date.now() - lastExec;
    const invoke2 = () => {
      return lastValue = _invoke();
    };
    clear2();
    if (duration <= 0) {
      lastExec = Date.now();
      return invoke2();
    }
    if (elapsed > duration && (leading || !isLeading)) {
      lastExec = Date.now();
      invoke2();
    } else if (trailing) {
      lastValue = new Promise((resolve, reject2) => {
        lastRejector = rejectOnCancel ? reject2 : resolve;
        timer = setTimeout(() => {
          lastExec = Date.now();
          isLeading = true;
          resolve(invoke2());
          clear2();
        }, Math.max(0, duration - elapsed));
      });
    }
    if (!leading && !timer)
      timer = setTimeout(() => isLeading = true, duration);
    isLeading = false;
    return lastValue;
  };
  return filter2;
}
function identity(arg) {
  return arg;
}
function tryOnScopeDispose(fn2) {
  if ((0, lib_exports.getCurrentScope)()) {
    (0, lib_exports.onScopeDispose)(fn2);
    return true;
  }
  return false;
}
function useDebounceFn(fn2, ms = 200, options = {}) {
  return createFilterWrapper(debounceFilter(ms, options), fn2);
}
function refDebounced(value, ms = 200, options = {}) {
  const debounced = (0, lib_exports.ref)(value.value);
  const updater = useDebounceFn(() => {
    debounced.value = value.value;
  }, ms, options);
  (0, lib_exports.watch)(value, () => updater());
  return debounced;
}
function useThrottleFn(fn2, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {
  return createFilterWrapper(throttleFilter(ms, trailing, leading, rejectOnCancel), fn2);
}
function tryOnMounted(fn2, sync = true) {
  if ((0, lib_exports.getCurrentInstance)())
    (0, lib_exports.onMounted)(fn2);
  else if (sync)
    fn2();
  else
    (0, lib_exports.nextTick)(fn2);
}
function useTimeoutFn(cb, interval, options = {}) {
  const {
    immediate = true
  } = options;
  const isPending = (0, lib_exports.ref)(false);
  let timer = null;
  function clear2() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function stop() {
    isPending.value = false;
    clear2();
  }
  function start(...args) {
    clear2();
    isPending.value = true;
    timer = setTimeout(() => {
      isPending.value = false;
      timer = null;
      cb(...args);
    }, resolveUnref(interval));
  }
  if (immediate) {
    isPending.value = true;
    if (isClient)
      start();
  }
  tryOnScopeDispose(stop);
  return {
    isPending: (0, lib_exports.readonly)(isPending),
    start,
    stop
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@vueuse/core/node_modules/vue-demi/lib/index.mjs
var lib_exports2 = {};
__export(lib_exports2, {
  Vue: () => Vue3,
  Vue2: () => Vue22,
  del: () => del2,
  install: () => install2,
  isVue2: () => isVue22,
  isVue3: () => isVue32,
  set: () => set2
});
__reExport(lib_exports2, vue_star2);
import * as Vue3 from "vue";
import * as vue_star2 from "vue";
var isVue22 = false;
var isVue32 = true;
var Vue22 = void 0;
function install2() {
}
function set2(target2, key, val) {
  if (Array.isArray(target2)) {
    target2.length = Math.max(target2.length, key);
    target2.splice(key, 1, val);
    return val;
  }
  target2[key] = val;
  return val;
}
function del2(target2, key) {
  if (Array.isArray(target2)) {
    target2.splice(key, 1);
    return;
  }
  delete target2[key];
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@vueuse/core/index.mjs
function unrefElement(elRef) {
  var _a2;
  const plain = resolveUnref(elRef);
  return (_a2 = plain == null ? void 0 : plain.$el) != null ? _a2 : plain;
}
var defaultWindow = isClient ? window : void 0;
var defaultDocument = isClient ? window.document : void 0;
var defaultNavigator = isClient ? window.navigator : void 0;
var defaultLocation = isClient ? window.location : void 0;
function useEventListener(...args) {
  let target2;
  let events;
  let listeners;
  let options;
  if (isString(args[0]) || Array.isArray(args[0])) {
    [events, listeners, options] = args;
    target2 = defaultWindow;
  } else {
    [target2, events, listeners, options] = args;
  }
  if (!target2)
    return noop;
  if (!Array.isArray(events))
    events = [events];
  if (!Array.isArray(listeners))
    listeners = [listeners];
  const cleanups = [];
  const cleanup = () => {
    cleanups.forEach((fn2) => fn2());
    cleanups.length = 0;
  };
  const register2 = (el, event, listener, options2) => {
    el.addEventListener(event, listener, options2);
    return () => el.removeEventListener(event, listener, options2);
  };
  const stopWatch = (0, lib_exports2.watch)(() => [unrefElement(target2), resolveUnref(options)], ([el, options2]) => {
    cleanup();
    if (!el)
      return;
    cleanups.push(...events.flatMap((event) => {
      return listeners.map((listener) => register2(el, event, listener, options2));
    }));
  }, { immediate: true, flush: "post" });
  const stop = () => {
    stopWatch();
    cleanup();
  };
  tryOnScopeDispose(stop);
  return stop;
}
var _iOSWorkaround = false;
function onClickOutside(target2, handler, options = {}) {
  const { window: window2 = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;
  if (!window2)
    return;
  if (isIOS && !_iOSWorkaround) {
    _iOSWorkaround = true;
    Array.from(window2.document.body.children).forEach((el) => el.addEventListener("click", noop));
  }
  let shouldListen = true;
  const shouldIgnore = (event) => {
    return ignore.some((target22) => {
      if (typeof target22 === "string") {
        return Array.from(window2.document.querySelectorAll(target22)).some((el) => el === event.target || event.composedPath().includes(el));
      } else {
        const el = unrefElement(target22);
        return el && (event.target === el || event.composedPath().includes(el));
      }
    });
  };
  const listener = (event) => {
    const el = unrefElement(target2);
    if (!el || el === event.target || event.composedPath().includes(el))
      return;
    if (event.detail === 0)
      shouldListen = !shouldIgnore(event);
    if (!shouldListen) {
      shouldListen = true;
      return;
    }
    handler(event);
  };
  const cleanup = [
    useEventListener(window2, "click", listener, { passive: true, capture }),
    useEventListener(window2, "pointerdown", (e) => {
      const el = unrefElement(target2);
      if (el)
        shouldListen = !e.composedPath().includes(el) && !shouldIgnore(e);
    }, { passive: true }),
    detectIframe && useEventListener(window2, "blur", (event) => {
      var _a2;
      const el = unrefElement(target2);
      if (((_a2 = window2.document.activeElement) == null ? void 0 : _a2.tagName) === "IFRAME" && !(el == null ? void 0 : el.contains(window2.document.activeElement)))
        handler(event);
    })
  ].filter(Boolean);
  const stop = () => cleanup.forEach((fn2) => fn2());
  return stop;
}
function useSupported(callback, sync = false) {
  const isSupported = (0, lib_exports2.ref)();
  const update2 = () => isSupported.value = Boolean(callback());
  update2();
  tryOnMounted(update2, sync);
  return isSupported;
}
function cloneFnJSON(source) {
  return JSON.parse(JSON.stringify(source));
}
var _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var globalKey = "__vueuse_ssr_handlers__";
_global[globalKey] = _global[globalKey] || {};
var handlers = _global[globalKey];
function useCssVar(prop, target2, { window: window2 = defaultWindow, initialValue = "" } = {}) {
  const variable = (0, lib_exports2.ref)(initialValue);
  const elRef = (0, lib_exports2.computed)(() => {
    var _a2;
    return unrefElement(target2) || ((_a2 = window2 == null ? void 0 : window2.document) == null ? void 0 : _a2.documentElement);
  });
  (0, lib_exports2.watch)([elRef, () => resolveUnref(prop)], ([el, prop2]) => {
    var _a2;
    if (el && window2) {
      const value = (_a2 = window2.getComputedStyle(el).getPropertyValue(prop2)) == null ? void 0 : _a2.trim();
      variable.value = value || initialValue;
    }
  }, { immediate: true });
  (0, lib_exports2.watch)(variable, (val) => {
    var _a2;
    if ((_a2 = elRef.value) == null ? void 0 : _a2.style)
      elRef.value.style.setProperty(resolveUnref(prop), val);
  });
  return variable;
}
function useDocumentVisibility({ document: document2 = defaultDocument } = {}) {
  if (!document2)
    return (0, lib_exports2.ref)("visible");
  const visibility = (0, lib_exports2.ref)(document2.visibilityState);
  useEventListener(document2, "visibilitychange", () => {
    visibility.value = document2.visibilityState;
  });
  return visibility;
}
var __getOwnPropSymbols$g = Object.getOwnPropertySymbols;
var __hasOwnProp$g = Object.prototype.hasOwnProperty;
var __propIsEnum$g = Object.prototype.propertyIsEnumerable;
var __objRest$2 = (source, exclude) => {
  var target2 = {};
  for (var prop in source)
    if (__hasOwnProp$g.call(source, prop) && exclude.indexOf(prop) < 0)
      target2[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$g)
    for (var prop of __getOwnPropSymbols$g(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$g.call(source, prop))
        target2[prop] = source[prop];
    }
  return target2;
};
function useResizeObserver(target2, callback, options = {}) {
  const _a2 = options, { window: window2 = defaultWindow } = _a2, observerOptions = __objRest$2(_a2, ["window"]);
  let observer;
  const isSupported = useSupported(() => window2 && "ResizeObserver" in window2);
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const stopWatch = (0, lib_exports2.watch)(() => unrefElement(target2), (el) => {
    cleanup();
    if (isSupported.value && window2 && el) {
      observer = new ResizeObserver(callback);
      observer.observe(el, observerOptions);
    }
  }, { immediate: true, flush: "post" });
  const stop = () => {
    cleanup();
    stopWatch();
  };
  tryOnScopeDispose(stop);
  return {
    isSupported,
    stop
  };
}
function useElementBounding(target2, options = {}) {
  const {
    reset = true,
    windowResize = true,
    windowScroll = true,
    immediate = true
  } = options;
  const height = (0, lib_exports2.ref)(0);
  const bottom = (0, lib_exports2.ref)(0);
  const left2 = (0, lib_exports2.ref)(0);
  const right2 = (0, lib_exports2.ref)(0);
  const top = (0, lib_exports2.ref)(0);
  const width = (0, lib_exports2.ref)(0);
  const x2 = (0, lib_exports2.ref)(0);
  const y = (0, lib_exports2.ref)(0);
  function update2() {
    const el = unrefElement(target2);
    if (!el) {
      if (reset) {
        height.value = 0;
        bottom.value = 0;
        left2.value = 0;
        right2.value = 0;
        top.value = 0;
        width.value = 0;
        x2.value = 0;
        y.value = 0;
      }
      return;
    }
    const rect = el.getBoundingClientRect();
    height.value = rect.height;
    bottom.value = rect.bottom;
    left2.value = rect.left;
    right2.value = rect.right;
    top.value = rect.top;
    width.value = rect.width;
    x2.value = rect.x;
    y.value = rect.y;
  }
  useResizeObserver(target2, update2);
  (0, lib_exports2.watch)(() => unrefElement(target2), (ele) => !ele && update2());
  if (windowScroll)
    useEventListener("scroll", update2, { capture: true, passive: true });
  if (windowResize)
    useEventListener("resize", update2, { passive: true });
  tryOnMounted(() => {
    if (immediate)
      update2();
  });
  return {
    height,
    bottom,
    left: left2,
    right: right2,
    top,
    width,
    x: x2,
    y,
    update: update2
  };
}
var defaultState = {
  x: 0,
  y: 0,
  pointerId: 0,
  pressure: 0,
  tiltX: 0,
  tiltY: 0,
  width: 0,
  height: 0,
  twist: 0,
  pointerType: null
};
var keys = Object.keys(defaultState);
var SwipeDirection;
(function(SwipeDirection2) {
  SwipeDirection2["UP"] = "UP";
  SwipeDirection2["RIGHT"] = "RIGHT";
  SwipeDirection2["DOWN"] = "DOWN";
  SwipeDirection2["LEFT"] = "LEFT";
  SwipeDirection2["NONE"] = "NONE";
})(SwipeDirection || (SwipeDirection = {}));
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a2, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    }
  return a2;
};
var _TransitionPresets = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
var TransitionPresets = __spreadValues({
  linear: identity
}, _TransitionPresets);
function useVModel(props, key, emit, options = {}) {
  var _a2, _b, _c, _d, _e;
  const {
    clone: clone2 = false,
    passive = false,
    eventName,
    deep = false,
    defaultValue
  } = options;
  const vm = (0, lib_exports2.getCurrentInstance)();
  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a2 = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a2.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));
  let event = eventName;
  if (!key) {
    if (isVue22) {
      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;
      key = (modelOptions == null ? void 0 : modelOptions.value) || "value";
      if (!eventName)
        event = (modelOptions == null ? void 0 : modelOptions.event) || "input";
    } else {
      key = "modelValue";
    }
  }
  event = eventName || event || `update:${key.toString()}`;
  const cloneFn = (val) => !clone2 ? val : isFunction(clone2) ? clone2(val) : cloneFnJSON(val);
  const getValue3 = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;
  if (passive) {
    const initialValue = getValue3();
    const proxy = (0, lib_exports2.ref)(initialValue);
    (0, lib_exports2.watch)(() => props[key], (v2) => proxy.value = cloneFn(v2));
    (0, lib_exports2.watch)(proxy, (v2) => {
      if (v2 !== props[key] || deep)
        _emit(event, v2);
    }, { deep });
    return proxy;
  } else {
    return (0, lib_exports2.computed)({
      get() {
        return getValue3();
      },
      set(value) {
        _emit(event, value);
      }
    });
  }
}
function useWindowFocus({ window: window2 = defaultWindow } = {}) {
  if (!window2)
    return (0, lib_exports2.ref)(false);
  const focused = (0, lib_exports2.ref)(window2.document.hasFocus());
  useEventListener(window2, "blur", () => {
    focused.value = false;
  });
  useEventListener(window2, "focus", () => {
    focused.value = true;
  });
  return focused;
}
function useWindowSize(options = {}) {
  const {
    window: window2 = defaultWindow,
    initialWidth = Infinity,
    initialHeight = Infinity,
    listenOrientation = true,
    includeScrollbar = true
  } = options;
  const width = (0, lib_exports2.ref)(initialWidth);
  const height = (0, lib_exports2.ref)(initialHeight);
  const update2 = () => {
    if (window2) {
      if (includeScrollbar) {
        width.value = window2.innerWidth;
        height.value = window2.innerHeight;
      } else {
        width.value = window2.document.documentElement.clientWidth;
        height.value = window2.document.documentElement.clientHeight;
      }
    }
  };
  update2();
  tryOnMounted(update2);
  useEventListener("resize", update2, { passive: true });
  if (listenOrientation)
    useEventListener("orientationchange", update2, { passive: true });
  return { width, height };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/browser.mjs
var isFirefox = () => isClient && /firefox/i.test(window.navigator.userAgent);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/dom/position.mjs
var isInContainer = (el, container) => {
  if (!isClient || !el || !container)
    return false;
  const elRect = el.getBoundingClientRect();
  let containerRect;
  if (container instanceof Element) {
    containerRect = container.getBoundingClientRect();
  } else {
    containerRect = {
      top: 0,
      right: window.innerWidth,
      bottom: window.innerHeight,
      left: 0
    };
  }
  return elRect.top < containerRect.bottom && elRect.bottom > containerRect.top && elRect.right > containerRect.left && elRect.left < containerRect.right;
};
var getOffsetTop = (el) => {
  let offset2 = 0;
  let parent2 = el;
  while (parent2) {
    offset2 += parent2.offsetTop;
    parent2 = parent2.offsetParent;
  }
  return offset2;
};
var getOffsetTopDistance = (el, containerEl) => {
  return Math.abs(getOffsetTop(el) - getOffsetTop(containerEl));
};
var getClientXY = (event) => {
  let clientX;
  let clientY;
  if (event.type === "touchend") {
    clientY = event.changedTouches[0].clientY;
    clientX = event.changedTouches[0].clientX;
  } else if (event.type.startsWith("touch")) {
    clientY = event.touches[0].clientY;
    clientX = event.touches[0].clientX;
  } else {
    clientY = event.clientY;
    clientX = event.clientX;
  }
  return {
    clientX,
    clientY
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/types.mjs
import { isArray as isArray2, isObject as isObject3, isString as isString3 } from "@vue/shared";
import { isArray as isArray3, isDate as isDate2, isFunction as isFunction3, isObject as isObject4, isPromise, isString as isString4, isSymbol as isSymbol2 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_freeGlobal.js
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getRawTag.js
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result2 = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result2;
}
var getRawTag_default = getRawTag;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_objectToString.js
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectToString_default = objectToString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var baseGetTag_default = baseGetTag;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;
}
var isSymbol_default = isSymbol;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseToNumber.js
var NAN = 0 / 0;
function baseToNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN;
  }
  return +value;
}
var baseToNumber_default = baseToNumber;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayMap.js
function arrayMap(array4, iteratee2) {
  var index = -1, length = array4 == null ? 0 : array4.length, result2 = Array(length);
  while (++index < length) {
    result2[index] = iteratee2(array4[index], index, array4);
  }
  return result2;
}
var arrayMap_default = arrayMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isArray.js
var isArray = Array.isArray;
var isArray_default = isArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
}
var baseToString_default = baseToString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createMathOperation.js
function createMathOperation(operator, defaultValue) {
  return function(value, other) {
    var result2;
    if (value === void 0 && other === void 0) {
      return defaultValue;
    }
    if (value !== void 0) {
      result2 = value;
    }
    if (other !== void 0) {
      if (result2 === void 0) {
        return other;
      }
      if (typeof value == "string" || typeof other == "string") {
        value = baseToString_default(value);
        other = baseToString_default(other);
      } else {
        value = baseToNumber_default(value);
        other = baseToNumber_default(other);
      }
      result2 = operator(value, other);
    }
    return result2;
  };
}
var createMathOperation_default = createMathOperation;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/add.js
var add = createMathOperation_default(function(augend, addend) {
  return augend + addend;
}, 0);
var add_default = add;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_trimmedEndIndex.js
var reWhitespace = /\s/;
function trimmedEndIndex(string3) {
  var index = string3.length;
  while (index-- && reWhitespace.test(string3.charAt(index))) {
  }
  return index;
}
var trimmedEndIndex_default = trimmedEndIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseTrim.js
var reTrimStart = /^\s+/;
function baseTrim(string3) {
  return string3 ? string3.slice(0, trimmedEndIndex_default(string3) + 1).replace(reTrimStart, "") : string3;
}
var baseTrim_default = baseTrim;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isObject.js
function isObject2(value) {
  var type4 = typeof value;
  return value != null && (type4 == "object" || type4 == "function");
}
var isObject_default = isObject2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toNumber.js
var NAN2 = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN2;
  }
  if (isObject_default(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject_default(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim_default(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN2 : +value;
}
var toNumber_default = toNumber;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toFinite.js
var INFINITY2 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber_default(value);
  if (value === INFINITY2 || value === -INFINITY2) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_default = toFinite;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toInteger.js
function toInteger(value) {
  var result2 = toFinite_default(value), remainder = result2 % 1;
  return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
}
var toInteger_default = toInteger;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/after.js
var FUNC_ERROR_TEXT = "Expected a function";
function after(n, func) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger_default(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}
var after_default = after;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/identity.js
function identity2(value) {
  return value;
}
var identity_default = identity2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction2(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid2 = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid2 ? "Symbol(src)_1." + uid2 : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var toSource_default = toSource;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty2 = objectProto3.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern4 = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern4.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getValue.js
function getValue(object4, key) {
  return object4 == null ? void 0 : object4[key];
}
var getValue_default = getValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getNative.js
function getNative(object4, key) {
  var value = getValue_default(object4, key);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_WeakMap.js
var WeakMap2 = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_metaMap.js
var metaMap = WeakMap_default && new WeakMap_default();
var metaMap_default = metaMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSetData.js
var baseSetData = !metaMap_default ? identity_default : function(func, data) {
  metaMap_default.set(func, data);
  return func;
};
var baseSetData_default = baseSetData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseCreate.js
var objectCreate = Object.create;
var baseCreate = function() {
  function object4() {
  }
  return function(proto) {
    if (!isObject_default(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object4.prototype = proto;
    var result2 = new object4();
    object4.prototype = void 0;
    return result2;
  };
}();
var baseCreate_default = baseCreate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createCtor.js
function createCtor(Ctor) {
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return new Ctor();
      case 1:
        return new Ctor(args[0]);
      case 2:
        return new Ctor(args[0], args[1]);
      case 3:
        return new Ctor(args[0], args[1], args[2]);
      case 4:
        return new Ctor(args[0], args[1], args[2], args[3]);
      case 5:
        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate_default(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
    return isObject_default(result2) ? result2 : thisBinding;
  };
}
var createCtor_default = createCtor;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createBind.js
var WRAP_BIND_FLAG = 1;
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor_default(func);
  function wrapper() {
    var fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return fn2.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}
var createBind_default = createBind;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_composeArgs.js
var nativeMax = Math.max;
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array(leftLength + rangeLength), isUncurried = !isCurried;
  while (++leftIndex < leftLength) {
    result2[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result2[leftIndex++] = args[argsIndex++];
  }
  return result2;
}
var composeArgs_default = composeArgs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_composeArgsRight.js
var nativeMax2 = Math.max;
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax2(argsLength - holdersLength, 0), result2 = Array(rangeLength + rightLength), isUncurried = !isCurried;
  while (++argsIndex < rangeLength) {
    result2[argsIndex] = args[argsIndex];
  }
  var offset2 = argsIndex;
  while (++rightIndex < rightLength) {
    result2[offset2 + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[offset2 + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result2;
}
var composeArgsRight_default = composeArgsRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_countHolders.js
function countHolders(array4, placeholder) {
  var length = array4.length, result2 = 0;
  while (length--) {
    if (array4[length] === placeholder) {
      ++result2;
    }
  }
  return result2;
}
var countHolders_default = countHolders;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseLodash.js
function baseLodash() {
}
var baseLodash_default = baseLodash;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_LazyWrapper.js
var MAX_ARRAY_LENGTH = 4294967295;
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}
LazyWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;
var LazyWrapper_default = LazyWrapper;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/noop.js
function noop2() {
}
var noop_default = noop2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getData.js
var getData = !metaMap_default ? noop_default : function(func) {
  return metaMap_default.get(func);
};
var getData_default = getData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_realNames.js
var realNames = {};
var realNames_default = realNames;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getFuncName.js
var objectProto4 = Object.prototype;
var hasOwnProperty3 = objectProto4.hasOwnProperty;
function getFuncName(func) {
  var result2 = func.name + "", array4 = realNames_default[result2], length = hasOwnProperty3.call(realNames_default, result2) ? array4.length : 0;
  while (length--) {
    var data = array4[length], otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result2;
}
var getFuncName_default = getFuncName;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_LodashWrapper.js
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = void 0;
}
LodashWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;
var LodashWrapper_default = LodashWrapper;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_copyArray.js
function copyArray(source, array4) {
  var index = -1, length = source.length;
  array4 || (array4 = Array(length));
  while (++index < length) {
    array4[index] = source[index];
  }
  return array4;
}
var copyArray_default = copyArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_wrapperClone.js
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper_default) {
    return wrapper.clone();
  }
  var result2 = new LodashWrapper_default(wrapper.__wrapped__, wrapper.__chain__);
  result2.__actions__ = copyArray_default(wrapper.__actions__);
  result2.__index__ = wrapper.__index__;
  result2.__values__ = wrapper.__values__;
  return result2;
}
var wrapperClone_default = wrapperClone;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/wrapperLodash.js
var objectProto5 = Object.prototype;
var hasOwnProperty4 = objectProto5.hasOwnProperty;
function lodash(value) {
  if (isObjectLike_default(value) && !isArray_default(value) && !(value instanceof LazyWrapper_default)) {
    if (value instanceof LodashWrapper_default) {
      return value;
    }
    if (hasOwnProperty4.call(value, "__wrapped__")) {
      return wrapperClone_default(value);
    }
  }
  return new LodashWrapper_default(value);
}
lodash.prototype = baseLodash_default.prototype;
lodash.prototype.constructor = lodash;
var wrapperLodash_default = lodash;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isLaziable.js
function isLaziable(func) {
  var funcName = getFuncName_default(func), other = wrapperLodash_default[funcName];
  if (typeof other != "function" || !(funcName in LazyWrapper_default.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData_default(other);
  return !!data && func === data[0];
}
var isLaziable_default = isLaziable;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setData.js
var setData = shortOut_default(baseSetData_default);
var setData_default = setData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getWrapDetails.js
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
var reSplitDetails = /,? & /;
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}
var getWrapDetails_default = getWrapDetails;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_insertWrapDetails.js
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
  details = details.join(length > 2 ? ", " : " ");
  return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
}
var insertWrapDetails_default = insertWrapDetails;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/constant.js
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_defineProperty.js
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var defineProperty_default = defineProperty;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string3) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string3),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayEach.js
function arrayEach(array4, iteratee2) {
  var index = -1, length = array4 == null ? 0 : array4.length;
  while (++index < length) {
    if (iteratee2(array4[index], index, array4) === false) {
      break;
    }
  }
  return array4;
}
var arrayEach_default = arrayEach;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFindIndex.js
function baseFindIndex(array4, predicate, fromIndex, fromRight) {
  var length = array4.length, index = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index-- : ++index < length) {
    if (predicate(array4[index], index, array4)) {
      return index;
    }
  }
  return -1;
}
var baseFindIndex_default = baseFindIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsNaN.js
function baseIsNaN(value) {
  return value !== value;
}
var baseIsNaN_default = baseIsNaN;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_strictIndexOf.js
function strictIndexOf(array4, value, fromIndex) {
  var index = fromIndex - 1, length = array4.length;
  while (++index < length) {
    if (array4[index] === value) {
      return index;
    }
  }
  return -1;
}
var strictIndexOf_default = strictIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIndexOf.js
function baseIndexOf(array4, value, fromIndex) {
  return value === value ? strictIndexOf_default(array4, value, fromIndex) : baseFindIndex_default(array4, baseIsNaN_default, fromIndex);
}
var baseIndexOf_default = baseIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayIncludes.js
function arrayIncludes(array4, value) {
  var length = array4 == null ? 0 : array4.length;
  return !!length && baseIndexOf_default(array4, value, 0) > -1;
}
var arrayIncludes_default = arrayIncludes;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_updateWrapDetails.js
var WRAP_BIND_FLAG2 = 1;
var WRAP_BIND_KEY_FLAG = 2;
var WRAP_CURRY_FLAG = 8;
var WRAP_CURRY_RIGHT_FLAG = 16;
var WRAP_PARTIAL_FLAG = 32;
var WRAP_PARTIAL_RIGHT_FLAG = 64;
var WRAP_ARY_FLAG = 128;
var WRAP_REARG_FLAG = 256;
var WRAP_FLIP_FLAG = 512;
var wrapFlags = [
  ["ary", WRAP_ARY_FLAG],
  ["bind", WRAP_BIND_FLAG2],
  ["bindKey", WRAP_BIND_KEY_FLAG],
  ["curry", WRAP_CURRY_FLAG],
  ["curryRight", WRAP_CURRY_RIGHT_FLAG],
  ["flip", WRAP_FLIP_FLAG],
  ["partial", WRAP_PARTIAL_FLAG],
  ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
  ["rearg", WRAP_REARG_FLAG]
];
function updateWrapDetails(details, bitmask) {
  arrayEach_default(wrapFlags, function(pair) {
    var value = "_." + pair[0];
    if (bitmask & pair[1] && !arrayIncludes_default(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}
var updateWrapDetails_default = updateWrapDetails;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setWrapToString.js
function setWrapToString(wrapper, reference, bitmask) {
  var source = reference + "";
  return setToString_default(wrapper, insertWrapDetails_default(source, updateWrapDetails_default(getWrapDetails_default(source), bitmask)));
}
var setWrapToString_default = setWrapToString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createRecurry.js
var WRAP_BIND_FLAG3 = 1;
var WRAP_BIND_KEY_FLAG2 = 2;
var WRAP_CURRY_BOUND_FLAG = 4;
var WRAP_CURRY_FLAG2 = 8;
var WRAP_PARTIAL_FLAG2 = 32;
var WRAP_PARTIAL_RIGHT_FLAG2 = 64;
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG2, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
  bitmask |= isCurry ? WRAP_PARTIAL_FLAG2 : WRAP_PARTIAL_RIGHT_FLAG2;
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG2 : WRAP_PARTIAL_FLAG2);
  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG3 | WRAP_BIND_KEY_FLAG2);
  }
  var newData = [
    func,
    bitmask,
    thisArg,
    newPartials,
    newHolders,
    newPartialsRight,
    newHoldersRight,
    argPos,
    ary2,
    arity
  ];
  var result2 = wrapFunc.apply(void 0, newData);
  if (isLaziable_default(func)) {
    setData_default(result2, newData);
  }
  result2.placeholder = placeholder;
  return setWrapToString_default(result2, func, bitmask);
}
var createRecurry_default = createRecurry;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getHolder.js
function getHolder(func) {
  var object4 = func;
  return object4.placeholder;
}
var getHolder_default = getHolder;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isIndex.js
var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type4 = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type4 == "number" || type4 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_reorder.js
var nativeMin = Math.min;
function reorder(array4, indexes) {
  var arrLength = array4.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray_default(array4);
  while (length--) {
    var index = indexes[length];
    array4[length] = isIndex_default(index, arrLength) ? oldArray[index] : void 0;
  }
  return array4;
}
var reorder_default = reorder;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_replaceHolders.js
var PLACEHOLDER = "__lodash_placeholder__";
function replaceHolders(array4, placeholder) {
  var index = -1, length = array4.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array4[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array4[index] = PLACEHOLDER;
      result2[resIndex++] = index;
    }
  }
  return result2;
}
var replaceHolders_default = replaceHolders;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createHybrid.js
var WRAP_BIND_FLAG4 = 1;
var WRAP_BIND_KEY_FLAG3 = 2;
var WRAP_CURRY_FLAG3 = 8;
var WRAP_CURRY_RIGHT_FLAG2 = 16;
var WRAP_ARY_FLAG2 = 128;
var WRAP_FLIP_FLAG2 = 512;
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG2, isBind = bitmask & WRAP_BIND_FLAG4, isBindKey = bitmask & WRAP_BIND_KEY_FLAG3, isCurried = bitmask & (WRAP_CURRY_FLAG3 | WRAP_CURRY_RIGHT_FLAG2), isFlip = bitmask & WRAP_FLIP_FLAG2, Ctor = isBindKey ? void 0 : createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length;
    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder_default(wrapper), holdersCount = countHolders_default(args, placeholder);
    }
    if (partials) {
      args = composeArgs_default(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight_default(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders_default(args, placeholder);
      return createRecurry_default(
        func,
        bitmask,
        createHybrid,
        wrapper.placeholder,
        thisArg,
        args,
        newHolders,
        argPos,
        ary2,
        arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
    length = args.length;
    if (argPos) {
      args = reorder_default(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary2 < length) {
      args.length = ary2;
    }
    if (this && this !== root_default && this instanceof wrapper) {
      fn2 = Ctor || createCtor_default(fn2);
    }
    return fn2.apply(thisBinding, args);
  }
  return wrapper;
}
var createHybrid_default = createHybrid;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createCurry.js
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length, placeholder = getHolder_default(wrapper);
    while (index--) {
      args[index] = arguments[index];
    }
    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders_default(args, placeholder);
    length -= holders.length;
    if (length < arity) {
      return createRecurry_default(
        func,
        bitmask,
        createHybrid_default,
        wrapper.placeholder,
        void 0,
        args,
        holders,
        void 0,
        void 0,
        arity - length
      );
    }
    var fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return apply_default(fn2, this, args);
  }
  return wrapper;
}
var createCurry_default = createCurry;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createPartial.js
var WRAP_BIND_FLAG5 = 1;
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG5, Ctor = createCtor_default(func);
  function wrapper() {
    var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply_default(fn2, isBind ? thisArg : this, args);
  }
  return wrapper;
}
var createPartial_default = createPartial;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mergeData.js
var PLACEHOLDER2 = "__lodash_placeholder__";
var WRAP_BIND_FLAG6 = 1;
var WRAP_BIND_KEY_FLAG4 = 2;
var WRAP_CURRY_BOUND_FLAG2 = 4;
var WRAP_CURRY_FLAG4 = 8;
var WRAP_ARY_FLAG3 = 128;
var WRAP_REARG_FLAG2 = 256;
var nativeMin2 = Math.min;
function mergeData(data, source) {
  var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG6 | WRAP_BIND_KEY_FLAG4 | WRAP_ARY_FLAG3);
  var isCombo = srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_CURRY_FLAG4 || srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_REARG_FLAG2 && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG3 | WRAP_REARG_FLAG2) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG4;
  if (!(isCommon || isCombo)) {
    return data;
  }
  if (srcBitmask & WRAP_BIND_FLAG6) {
    data[2] = source[2];
    newBitmask |= bitmask & WRAP_BIND_FLAG6 ? 0 : WRAP_CURRY_BOUND_FLAG2;
  }
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs_default(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders_default(data[3], PLACEHOLDER2) : source[4];
  }
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight_default(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders_default(data[5], PLACEHOLDER2) : source[6];
  }
  value = source[7];
  if (value) {
    data[7] = value;
  }
  if (srcBitmask & WRAP_ARY_FLAG3) {
    data[8] = data[8] == null ? source[8] : nativeMin2(data[8], source[8]);
  }
  if (data[9] == null) {
    data[9] = source[9];
  }
  data[0] = source[0];
  data[1] = newBitmask;
  return data;
}
var mergeData_default = mergeData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createWrap.js
var FUNC_ERROR_TEXT2 = "Expected a function";
var WRAP_BIND_FLAG7 = 1;
var WRAP_BIND_KEY_FLAG5 = 2;
var WRAP_CURRY_FLAG5 = 8;
var WRAP_CURRY_RIGHT_FLAG3 = 16;
var WRAP_PARTIAL_FLAG3 = 32;
var WRAP_PARTIAL_RIGHT_FLAG3 = 64;
var nativeMax3 = Math.max;
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG5;
  if (!isBindKey && typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG3 | WRAP_PARTIAL_RIGHT_FLAG3);
    partials = holders = void 0;
  }
  ary2 = ary2 === void 0 ? ary2 : nativeMax3(toInteger_default(ary2), 0);
  arity = arity === void 0 ? arity : toInteger_default(arity);
  length -= holders ? holders.length : 0;
  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG3) {
    var partialsRight = partials, holdersRight = holders;
    partials = holders = void 0;
  }
  var data = isBindKey ? void 0 : getData_default(func);
  var newData = [
    func,
    bitmask,
    thisArg,
    partials,
    holders,
    partialsRight,
    holdersRight,
    argPos,
    ary2,
    arity
  ];
  if (data) {
    mergeData_default(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax3(newData[9] - length, 0);
  if (!arity && bitmask & (WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3)) {
    bitmask &= ~(WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG7) {
    var result2 = createBind_default(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG5 || bitmask == WRAP_CURRY_RIGHT_FLAG3) {
    result2 = createCurry_default(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG3 || bitmask == (WRAP_BIND_FLAG7 | WRAP_PARTIAL_FLAG3)) && !holders.length) {
    result2 = createPartial_default(func, bitmask, thisArg, partials);
  } else {
    result2 = createHybrid_default.apply(void 0, newData);
  }
  var setter = data ? baseSetData_default : setData_default;
  return setWrapToString_default(setter(result2, newData), func, bitmask);
}
var createWrap_default = createWrap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/ary.js
var WRAP_ARY_FLAG4 = 128;
function ary(func, n, guard) {
  n = guard ? void 0 : n;
  n = func && n == null ? func.length : n;
  return createWrap_default(func, WRAP_ARY_FLAG4, void 0, void 0, void 0, void 0, n);
}
var ary_default = ary;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseAssignValue.js
function baseAssignValue(object4, key, value) {
  if (key == "__proto__" && defineProperty_default) {
    defineProperty_default(object4, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object4[key] = value;
  }
}
var baseAssignValue_default = baseAssignValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/eq.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_assignValue.js
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
function assignValue(object4, key, value) {
  var objValue = object4[key];
  if (!(hasOwnProperty5.call(object4, key) && eq_default(objValue, value)) || value === void 0 && !(key in object4)) {
    baseAssignValue_default(object4, key, value);
  }
}
var assignValue_default = assignValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_copyObject.js
function copyObject(source, props, object4, customizer) {
  var isNew = !object4;
  object4 || (object4 = {});
  var index = -1, length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object4[key], source[key], key, object4, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue_default(object4, key, newValue);
    } else {
      assignValue_default(object4, key, newValue);
    }
  }
  return object4;
}
var copyObject_default = copyObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_overRest.js
var nativeMax4 = Math.max;
function overRest(func, start, transform2) {
  start = nativeMax4(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax4(args.length - start, 0), array4 = Array(length);
    while (++index < length) {
      array4[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform2(array4);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isLength.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
}
var isLength_default = isLength;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value, index, object4) {
  if (!isObject_default(object4)) {
    return false;
  }
  var type4 = typeof index;
  if (type4 == "number" ? isArrayLike_default(object4) && isIndex_default(index, object4.length) : type4 == "string" && index in object4) {
    return eq_default(object4[index], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object4, sources) {
    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object4 = Object(object4);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object4, source, index, customizer);
      }
    }
    return object4;
  });
}
var createAssigner_default = createAssigner;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isPrototype.js
var objectProto7 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto7;
  return value === proto;
}
var isPrototype_default = isPrototype;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseTimes.js
function baseTimes(n, iteratee2) {
  var index = -1, result2 = Array(n);
  while (++index < n) {
    result2[index] = iteratee2(index);
  }
  return result2;
}
var baseTimes_default = baseTimes;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isArguments.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
var propertyIsEnumerable = objectProto8.propertyIsEnumerable;
var isArguments = baseIsArguments_default(function() {
  return arguments;
}()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty6.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseUnary.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_nodeUtil.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types2 = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types2) {
      return types2;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e) {
  }
}();
var nodeUtil_default = nodeUtil;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayLikeKeys.js
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes_default(value.length, String) : [], length = result2.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty7.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex_default(key, length)))) {
      result2.push(key);
    }
  }
  return result2;
}
var arrayLikeKeys_default = arrayLikeKeys;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_overArg.js
function overArg(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var overArg_default = overArg;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseKeys.js
var objectProto10 = Object.prototype;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
function baseKeys(object4) {
  if (!isPrototype_default(object4)) {
    return nativeKeys_default(object4);
  }
  var result2 = [];
  for (var key in Object(object4)) {
    if (hasOwnProperty8.call(object4, key) && key != "constructor") {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeys_default = baseKeys;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/keys.js
function keys2(object4) {
  return isArrayLike_default(object4) ? arrayLikeKeys_default(object4) : baseKeys_default(object4);
}
var keys_default = keys2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/assign.js
var objectProto11 = Object.prototype;
var hasOwnProperty9 = objectProto11.hasOwnProperty;
var assign = createAssigner_default(function(object4, source) {
  if (isPrototype_default(source) || isArrayLike_default(source)) {
    copyObject_default(source, keys_default(source), object4);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty9.call(source, key)) {
      assignValue_default(object4, key, source[key]);
    }
  }
});
var assign_default = assign;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_nativeKeysIn.js
function nativeKeysIn(object4) {
  var result2 = [];
  if (object4 != null) {
    for (var key in Object(object4)) {
      result2.push(key);
    }
  }
  return result2;
}
var nativeKeysIn_default = nativeKeysIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseKeysIn.js
var objectProto12 = Object.prototype;
var hasOwnProperty10 = objectProto12.hasOwnProperty;
function baseKeysIn(object4) {
  if (!isObject_default(object4)) {
    return nativeKeysIn_default(object4);
  }
  var isProto = isPrototype_default(object4), result2 = [];
  for (var key in object4) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty10.call(object4, key)))) {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeysIn_default = baseKeysIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/keysIn.js
function keysIn(object4) {
  return isArrayLike_default(object4) ? arrayLikeKeys_default(object4, true) : baseKeysIn_default(object4);
}
var keysIn_default = keysIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/assignIn.js
var assignIn = createAssigner_default(function(object4, source) {
  copyObject_default(source, keysIn_default(source), object4);
});
var assignIn_default = assignIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/assignInWith.js
var assignInWith = createAssigner_default(function(object4, source, srcIndex, customizer) {
  copyObject_default(source, keysIn_default(source), object4, customizer);
});
var assignInWith_default = assignInWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/assignWith.js
var assignWith = createAssigner_default(function(object4, source, srcIndex, customizer) {
  copyObject_default(source, keys_default(source), object4, customizer);
});
var assignWith_default = assignWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value, object4) {
  if (isArray_default(value)) {
    return false;
  }
  var type4 = typeof value;
  if (type4 == "number" || type4 == "symbol" || type4 == "boolean" || value == null || isSymbol_default(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object4 != null && value in Object(object4);
}
var isKey_default = isKey;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hashDelete.js
function hashDelete(key) {
  var result2 = this.has(key) && delete this.__data__[key];
  this.size -= result2 ? 1 : 0;
  return result2;
}
var hashDelete_default = hashDelete;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto13 = Object.prototype;
var hasOwnProperty11 = objectProto13.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate_default) {
    var result2 = data[key];
    return result2 === HASH_UNDEFINED ? void 0 : result2;
  }
  return hasOwnProperty11.call(data, key) ? data[key] : void 0;
}
var hashGet_default = hashGet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hashHas.js
var objectProto14 = Object.prototype;
var hasOwnProperty12 = objectProto14.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty12.call(data, key);
}
var hashHas_default = hashHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;
  return this;
}
var hashSet_default = hashSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Hash.js
function Hash(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_assocIndexOf.js
function assocIndexOf(array4, key) {
  var length = array4.length;
  while (length--) {
    if (eq_default(array4[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_listCacheGet.js
function listCacheGet(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var listCacheGet_default = listCacheGet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_listCacheHas.js
function listCacheHas(key) {
  return assocIndexOf_default(this.__data__, key) > -1;
}
var listCacheHas_default = listCacheHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_listCacheSet.js
function listCacheSet(key, value) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_ListCache.js
function ListCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isKeyable.js
function isKeyable(value) {
  var type4 = typeof value;
  return type4 == "string" || type4 == "number" || type4 == "symbol" || type4 == "boolean" ? value !== "__proto__" : value === null;
}
var isKeyable_default = isKeyable;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getMapData.js
function getMapData(map2, key) {
  var data = map2.__data__;
  return isKeyable_default(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var getMapData_default = getMapData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mapCacheDelete.js
function mapCacheDelete(key) {
  var result2 = getMapData_default(this, key)["delete"](key);
  this.size -= result2 ? 1 : 0;
  return result2;
}
var mapCacheDelete_default = mapCacheDelete;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mapCacheGet.js
function mapCacheGet(key) {
  return getMapData_default(this, key).get(key);
}
var mapCacheGet_default = mapCacheGet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mapCacheHas.js
function mapCacheHas(key) {
  return getMapData_default(this, key).has(key);
}
var mapCacheHas_default = mapCacheHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mapCacheSet.js
function mapCacheSet(key, value) {
  var data = getMapData_default(this, key), size4 = data.size;
  data.set(key, value);
  this.size += data.size == size4 ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_MapCache.js
function MapCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/memoize.js
var FUNC_ERROR_TEXT3 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache2 = memoized.cache;
    if (cache2.has(key)) {
      return cache2.get(key);
    }
    var result2 = func.apply(this, args);
    memoized.cache = cache2.set(key, result2) || cache2;
    return result2;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result2 = memoize_default(func, function(key) {
    if (cache2.size === MAX_MEMOIZE_SIZE) {
      cache2.clear();
    }
    return key;
  });
  var cache2 = result2.cache;
  return result2;
}
var memoizeCapped_default = memoizeCapped;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string3) {
  var result2 = [];
  if (string3.charCodeAt(0) === 46) {
    result2.push("");
  }
  string3.replace(rePropName, function(match, number4, quote, subString) {
    result2.push(quote ? subString.replace(reEscapeChar, "$1") : number4 || match);
  });
  return result2;
});
var stringToPath_default = stringToPath;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toString.js
function toString(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_castPath.js
function castPath(value, object4) {
  if (isArray_default(value)) {
    return value;
  }
  return isKey_default(value, object4) ? [value] : stringToPath_default(toString_default(value));
}
var castPath_default = castPath;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_toKey.js
var INFINITY3 = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol_default(value)) {
    return value;
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY3 ? "-0" : result2;
}
var toKey_default = toKey;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseGet.js
function baseGet(object4, path) {
  path = castPath_default(path, object4);
  var index = 0, length = path.length;
  while (object4 != null && index < length) {
    object4 = object4[toKey_default(path[index++])];
  }
  return index && index == length ? object4 : void 0;
}
var baseGet_default = baseGet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/get.js
function get(object4, path, defaultValue) {
  var result2 = object4 == null ? void 0 : baseGet_default(object4, path);
  return result2 === void 0 ? defaultValue : result2;
}
var get_default = get;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseAt.js
function baseAt(object4, paths) {
  var index = -1, length = paths.length, result2 = Array(length), skip = object4 == null;
  while (++index < length) {
    result2[index] = skip ? void 0 : get_default(object4, paths[index]);
  }
  return result2;
}
var baseAt_default = baseAt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayPush.js
function arrayPush(array4, values2) {
  var index = -1, length = values2.length, offset2 = array4.length;
  while (++index < length) {
    array4[offset2 + index] = values2[index];
  }
  return array4;
}
var arrayPush_default = arrayPush;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isFlattenable.js
var spreadableSymbol = Symbol_default ? Symbol_default.isConcatSpreadable : void 0;
function isFlattenable(value) {
  return isArray_default(value) || isArguments_default(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var isFlattenable_default = isFlattenable;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFlatten.js
function baseFlatten(array4, depth, predicate, isStrict, result2) {
  var index = -1, length = array4.length;
  predicate || (predicate = isFlattenable_default);
  result2 || (result2 = []);
  while (++index < length) {
    var value = array4[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result2);
      } else {
        arrayPush_default(result2, value);
      }
    } else if (!isStrict) {
      result2[result2.length] = value;
    }
  }
  return result2;
}
var baseFlatten_default = baseFlatten;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flatten.js
function flatten(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseFlatten_default(array4, 1) : [];
}
var flatten_default = flatten;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_flatRest.js
function flatRest(func) {
  return setToString_default(overRest_default(func, void 0, flatten_default), func + "");
}
var flatRest_default = flatRest;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/at.js
var at = flatRest_default(baseAt_default);
var at_default = at;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getPrototype.js
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isPlainObject.js
var objectTag2 = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto15 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty13 = objectProto15.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value) {
  if (!isObjectLike_default(value) || baseGetTag_default(value) != objectTag2) {
    return false;
  }
  var proto = getPrototype_default(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty13.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isError.js
var domExcTag = "[object DOMException]";
var errorTag2 = "[object Error]";
function isError(value) {
  if (!isObjectLike_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == errorTag2 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject_default(value);
}
var isError_default = isError;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/attempt.js
var attempt = baseRest_default(function(func, args) {
  try {
    return apply_default(func, void 0, args);
  } catch (e) {
    return isError_default(e) ? e : new Error(e);
  }
});
var attempt_default = attempt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/before.js
var FUNC_ERROR_TEXT4 = "Expected a function";
function before(n, func) {
  var result2;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT4);
  }
  n = toInteger_default(n);
  return function() {
    if (--n > 0) {
      result2 = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = void 0;
    }
    return result2;
  };
}
var before_default = before;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/bind.js
var WRAP_BIND_FLAG8 = 1;
var WRAP_PARTIAL_FLAG4 = 32;
var bind = baseRest_default(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG8;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bind));
    bitmask |= WRAP_PARTIAL_FLAG4;
  }
  return createWrap_default(func, bitmask, thisArg, partials, holders);
});
bind.placeholder = {};
var bind_default = bind;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/bindAll.js
var bindAll = flatRest_default(function(object4, methodNames) {
  arrayEach_default(methodNames, function(key) {
    key = toKey_default(key);
    baseAssignValue_default(object4, key, bind_default(object4[key], object4));
  });
  return object4;
});
var bindAll_default = bindAll;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/bindKey.js
var WRAP_BIND_FLAG9 = 1;
var WRAP_BIND_KEY_FLAG6 = 2;
var WRAP_PARTIAL_FLAG5 = 32;
var bindKey = baseRest_default(function(object4, key, partials) {
  var bitmask = WRAP_BIND_FLAG9 | WRAP_BIND_KEY_FLAG6;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG5;
  }
  return createWrap_default(key, bitmask, object4, partials, holders);
});
bindKey.placeholder = {};
var bindKey_default = bindKey;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSlice.js
function baseSlice(array4, start, end2) {
  var index = -1, length = array4.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end2 = end2 > length ? length : end2;
  if (end2 < 0) {
    end2 += length;
  }
  length = start > end2 ? 0 : end2 - start >>> 0;
  start >>>= 0;
  var result2 = Array(length);
  while (++index < length) {
    result2[index] = array4[index + start];
  }
  return result2;
}
var baseSlice_default = baseSlice;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_castSlice.js
function castSlice(array4, start, end2) {
  var length = array4.length;
  end2 = end2 === void 0 ? length : end2;
  return !start && end2 >= length ? array4 : baseSlice_default(array4, start, end2);
}
var castSlice_default = castSlice;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hasUnicode.js
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsZWJ = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
function hasUnicode(string3) {
  return reHasUnicode.test(string3);
}
var hasUnicode_default = hasUnicode;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_asciiToArray.js
function asciiToArray(string3) {
  return string3.split("");
}
var asciiToArray_default = asciiToArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_unicodeToArray.js
var rsAstralRange2 = "\\ud800-\\udfff";
var rsComboMarksRange2 = "\\u0300-\\u036f";
var reComboHalfMarksRange2 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange2 = "\\u20d0-\\u20ff";
var rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;
var rsVarRange2 = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange2 + "]";
var rsCombo = "[" + rsComboRange2 + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange2 + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ2 = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange2 + "]?";
var rsOptJoin = "(?:" + rsZWJ2 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string3) {
  return string3.match(reUnicode) || [];
}
var unicodeToArray_default = unicodeToArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stringToArray.js
function stringToArray(string3) {
  return hasUnicode_default(string3) ? unicodeToArray_default(string3) : asciiToArray_default(string3);
}
var stringToArray_default = stringToArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createCaseFirst.js
function createCaseFirst(methodName) {
  return function(string3) {
    string3 = toString_default(string3);
    var strSymbols = hasUnicode_default(string3) ? stringToArray_default(string3) : void 0;
    var chr = strSymbols ? strSymbols[0] : string3.charAt(0);
    var trailing = strSymbols ? castSlice_default(strSymbols, 1).join("") : string3.slice(1);
    return chr[methodName]() + trailing;
  };
}
var createCaseFirst_default = createCaseFirst;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/upperFirst.js
var upperFirst = createCaseFirst_default("toUpperCase");
var upperFirst_default = upperFirst;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/capitalize.js
function capitalize(string3) {
  return upperFirst_default(toString_default(string3).toLowerCase());
}
var capitalize_default = capitalize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayReduce.js
function arrayReduce(array4, iteratee2, accumulator, initAccum) {
  var index = -1, length = array4 == null ? 0 : array4.length;
  if (initAccum && length) {
    accumulator = array4[++index];
  }
  while (++index < length) {
    accumulator = iteratee2(accumulator, array4[index], index, array4);
  }
  return accumulator;
}
var arrayReduce_default = arrayReduce;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_basePropertyOf.js
function basePropertyOf(object4) {
  return function(key) {
    return object4 == null ? void 0 : object4[key];
  };
}
var basePropertyOf_default = basePropertyOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_deburrLetter.js
var deburredLetters = {
  // Latin-1 Supplement block.
  "À": "A",
  "Á": "A",
  "Â": "A",
  "Ã": "A",
  "Ä": "A",
  "Å": "A",
  "à": "a",
  "á": "a",
  "â": "a",
  "ã": "a",
  "ä": "a",
  "å": "a",
  "Ç": "C",
  "ç": "c",
  "Ð": "D",
  "ð": "d",
  "È": "E",
  "É": "E",
  "Ê": "E",
  "Ë": "E",
  "è": "e",
  "é": "e",
  "ê": "e",
  "ë": "e",
  "Ì": "I",
  "Í": "I",
  "Î": "I",
  "Ï": "I",
  "ì": "i",
  "í": "i",
  "î": "i",
  "ï": "i",
  "Ñ": "N",
  "ñ": "n",
  "Ò": "O",
  "Ó": "O",
  "Ô": "O",
  "Õ": "O",
  "Ö": "O",
  "Ø": "O",
  "ò": "o",
  "ó": "o",
  "ô": "o",
  "õ": "o",
  "ö": "o",
  "ø": "o",
  "Ù": "U",
  "Ú": "U",
  "Û": "U",
  "Ü": "U",
  "ù": "u",
  "ú": "u",
  "û": "u",
  "ü": "u",
  "Ý": "Y",
  "ý": "y",
  "ÿ": "y",
  "Æ": "Ae",
  "æ": "ae",
  "Þ": "Th",
  "þ": "th",
  "ß": "ss",
  // Latin Extended-A block.
  "Ā": "A",
  "Ă": "A",
  "Ą": "A",
  "ā": "a",
  "ă": "a",
  "ą": "a",
  "Ć": "C",
  "Ĉ": "C",
  "Ċ": "C",
  "Č": "C",
  "ć": "c",
  "ĉ": "c",
  "ċ": "c",
  "č": "c",
  "Ď": "D",
  "Đ": "D",
  "ď": "d",
  "đ": "d",
  "Ē": "E",
  "Ĕ": "E",
  "Ė": "E",
  "Ę": "E",
  "Ě": "E",
  "ē": "e",
  "ĕ": "e",
  "ė": "e",
  "ę": "e",
  "ě": "e",
  "Ĝ": "G",
  "Ğ": "G",
  "Ġ": "G",
  "Ģ": "G",
  "ĝ": "g",
  "ğ": "g",
  "ġ": "g",
  "ģ": "g",
  "Ĥ": "H",
  "Ħ": "H",
  "ĥ": "h",
  "ħ": "h",
  "Ĩ": "I",
  "Ī": "I",
  "Ĭ": "I",
  "Į": "I",
  "İ": "I",
  "ĩ": "i",
  "ī": "i",
  "ĭ": "i",
  "į": "i",
  "ı": "i",
  "Ĵ": "J",
  "ĵ": "j",
  "Ķ": "K",
  "ķ": "k",
  "ĸ": "k",
  "Ĺ": "L",
  "Ļ": "L",
  "Ľ": "L",
  "Ŀ": "L",
  "Ł": "L",
  "ĺ": "l",
  "ļ": "l",
  "ľ": "l",
  "ŀ": "l",
  "ł": "l",
  "Ń": "N",
  "Ņ": "N",
  "Ň": "N",
  "Ŋ": "N",
  "ń": "n",
  "ņ": "n",
  "ň": "n",
  "ŋ": "n",
  "Ō": "O",
  "Ŏ": "O",
  "Ő": "O",
  "ō": "o",
  "ŏ": "o",
  "ő": "o",
  "Ŕ": "R",
  "Ŗ": "R",
  "Ř": "R",
  "ŕ": "r",
  "ŗ": "r",
  "ř": "r",
  "Ś": "S",
  "Ŝ": "S",
  "Ş": "S",
  "Š": "S",
  "ś": "s",
  "ŝ": "s",
  "ş": "s",
  "š": "s",
  "Ţ": "T",
  "Ť": "T",
  "Ŧ": "T",
  "ţ": "t",
  "ť": "t",
  "ŧ": "t",
  "Ũ": "U",
  "Ū": "U",
  "Ŭ": "U",
  "Ů": "U",
  "Ű": "U",
  "Ų": "U",
  "ũ": "u",
  "ū": "u",
  "ŭ": "u",
  "ů": "u",
  "ű": "u",
  "ų": "u",
  "Ŵ": "W",
  "ŵ": "w",
  "Ŷ": "Y",
  "ŷ": "y",
  "Ÿ": "Y",
  "Ź": "Z",
  "Ż": "Z",
  "Ž": "Z",
  "ź": "z",
  "ż": "z",
  "ž": "z",
  "Ĳ": "IJ",
  "ĳ": "ij",
  "Œ": "Oe",
  "œ": "oe",
  "ŉ": "'n",
  "ſ": "s"
};
var deburrLetter = basePropertyOf_default(deburredLetters);
var deburrLetter_default = deburrLetter;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/deburr.js
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
var rsComboMarksRange3 = "\\u0300-\\u036f";
var reComboHalfMarksRange3 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange3 = "\\u20d0-\\u20ff";
var rsComboRange3 = rsComboMarksRange3 + reComboHalfMarksRange3 + rsComboSymbolsRange3;
var rsCombo2 = "[" + rsComboRange3 + "]";
var reComboMark = RegExp(rsCombo2, "g");
function deburr(string3) {
  string3 = toString_default(string3);
  return string3 && string3.replace(reLatin, deburrLetter_default).replace(reComboMark, "");
}
var deburr_default = deburr;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_asciiWords.js
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(string3) {
  return string3.match(reAsciiWord) || [];
}
var asciiWords_default = asciiWords;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hasUnicodeWord.js
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function hasUnicodeWord(string3) {
  return reHasUnicodeWord.test(string3);
}
var hasUnicodeWord_default = hasUnicodeWord;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_unicodeWords.js
var rsAstralRange3 = "\\ud800-\\udfff";
var rsComboMarksRange4 = "\\u0300-\\u036f";
var reComboHalfMarksRange4 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange4 = "\\u20d0-\\u20ff";
var rsComboRange4 = rsComboMarksRange4 + reComboHalfMarksRange4 + rsComboSymbolsRange4;
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsPunctuationRange = "\\u2000-\\u206f";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange3 = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
var rsApos = "['’]";
var rsBreak = "[" + rsBreakRange + "]";
var rsCombo3 = "[" + rsComboRange4 + "]";
var rsDigits = "\\d+";
var rsDingbat = "[" + rsDingbatRange + "]";
var rsLower = "[" + rsLowerRange + "]";
var rsMisc = "[^" + rsAstralRange3 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
var rsFitz2 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier2 = "(?:" + rsCombo3 + "|" + rsFitz2 + ")";
var rsNonAstral2 = "[^" + rsAstralRange3 + "]";
var rsRegional2 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair2 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = "[" + rsUpperRange + "]";
var rsZWJ3 = "\\u200d";
var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
var reOptMod2 = rsModifier2 + "?";
var rsOptVar2 = "[" + rsVarRange3 + "]?";
var rsOptJoin2 = "(?:" + rsZWJ3 + "(?:" + [rsNonAstral2, rsRegional2, rsSurrPair2].join("|") + ")" + rsOptVar2 + reOptMod2 + ")*";
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq2 = rsOptVar2 + reOptMod2 + rsOptJoin2;
var rsEmoji = "(?:" + [rsDingbat, rsRegional2, rsSurrPair2].join("|") + ")" + rsSeq2;
var reUnicodeWord = RegExp([
  rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
  rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
  rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
  rsUpper + "+" + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join("|"), "g");
function unicodeWords(string3) {
  return string3.match(reUnicodeWord) || [];
}
var unicodeWords_default = unicodeWords;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/words.js
function words(string3, pattern4, guard) {
  string3 = toString_default(string3);
  pattern4 = guard ? void 0 : pattern4;
  if (pattern4 === void 0) {
    return hasUnicodeWord_default(string3) ? unicodeWords_default(string3) : asciiWords_default(string3);
  }
  return string3.match(pattern4) || [];
}
var words_default = words;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createCompounder.js
var rsApos2 = "['’]";
var reApos = RegExp(rsApos2, "g");
function createCompounder(callback) {
  return function(string3) {
    return arrayReduce_default(words_default(deburr_default(string3).replace(reApos, "")), callback, "");
  };
}
var createCompounder_default = createCompounder;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/camelCase.js
var camelCase = createCompounder_default(function(result2, word, index) {
  word = word.toLowerCase();
  return result2 + (index ? capitalize_default(word) : word);
});
var camelCase_default = camelCase;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/castArray.js
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return isArray_default(value) ? value : [value];
}
var castArray_default = castArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createRound.js
var nativeIsFinite = root_default.isFinite;
var nativeMin3 = Math.min;
function createRound(methodName) {
  var func = Math[methodName];
  return function(number4, precision) {
    number4 = toNumber_default(number4);
    precision = precision == null ? 0 : nativeMin3(toInteger_default(precision), 292);
    if (precision && nativeIsFinite(number4)) {
      var pair = (toString_default(number4) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
      pair = (toString_default(value) + "e").split("e");
      return +(pair[0] + "e" + (+pair[1] - precision));
    }
    return func(number4);
  };
}
var createRound_default = createRound;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/ceil.js
var ceil = createRound_default("ceil");
var ceil_default = ceil;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/chain.js
function chain(value) {
  var result2 = wrapperLodash_default(value);
  result2.__chain__ = true;
  return result2;
}
var chain_default = chain;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/chunk.js
var nativeCeil = Math.ceil;
var nativeMax5 = Math.max;
function chunk(array4, size4, guard) {
  if (guard ? isIterateeCall_default(array4, size4, guard) : size4 === void 0) {
    size4 = 1;
  } else {
    size4 = nativeMax5(toInteger_default(size4), 0);
  }
  var length = array4 == null ? 0 : array4.length;
  if (!length || size4 < 1) {
    return [];
  }
  var index = 0, resIndex = 0, result2 = Array(nativeCeil(length / size4));
  while (index < length) {
    result2[resIndex++] = baseSlice_default(array4, index, index += size4);
  }
  return result2;
}
var chunk_default = chunk;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseClamp.js
function baseClamp(number4, lower, upper) {
  if (number4 === number4) {
    if (upper !== void 0) {
      number4 = number4 <= upper ? number4 : upper;
    }
    if (lower !== void 0) {
      number4 = number4 >= lower ? number4 : lower;
    }
  }
  return number4;
}
var baseClamp_default = baseClamp;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/clamp.js
function clamp2(number4, lower, upper) {
  if (upper === void 0) {
    upper = lower;
    lower = void 0;
  }
  if (upper !== void 0) {
    upper = toNumber_default(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== void 0) {
    lower = toNumber_default(lower);
    lower = lower === lower ? lower : 0;
  }
  return baseClamp_default(toNumber_default(number4), lower, upper);
}
var clamp_default = clamp2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stackDelete.js
function stackDelete(key) {
  var data = this.__data__, result2 = data["delete"](key);
  this.size = data.size;
  return result2;
}
var stackDelete_default = stackDelete;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stackGet.js
function stackGet(key) {
  return this.__data__.get(key);
}
var stackGet_default = stackGet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stackHas.js
function stackHas(key) {
  return this.__data__.has(key);
}
var stackHas_default = stackHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stackSet.js
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache_default) {
    var pairs = data.__data__;
    if (!Map_default || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache_default(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var stackSet_default = stackSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Stack.js
function Stack(entries) {
  var data = this.__data__ = new ListCache_default(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseAssign.js
function baseAssign(object4, source) {
  return object4 && copyObject_default(source, keys_default(source), object4);
}
var baseAssign_default = baseAssign;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseAssignIn.js
function baseAssignIn(object4, source) {
  return object4 && copyObject_default(source, keysIn_default(source), object4);
}
var baseAssignIn_default = baseAssignIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cloneBuffer.js
var freeExports3 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule3 = freeExports3 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports3 = freeModule3 && freeModule3.exports === freeExports3;
var Buffer2 = moduleExports3 ? root_default.Buffer : void 0;
var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result2);
  return result2;
}
var cloneBuffer_default = cloneBuffer;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayFilter.js
function arrayFilter(array4, predicate) {
  var index = -1, length = array4 == null ? 0 : array4.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array4[index];
    if (predicate(value, index, array4)) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var arrayFilter_default = arrayFilter;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getSymbols.js
var objectProto16 = Object.prototype;
var propertyIsEnumerable2 = objectProto16.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object4) {
  if (object4 == null) {
    return [];
  }
  object4 = Object(object4);
  return arrayFilter_default(nativeGetSymbols(object4), function(symbol) {
    return propertyIsEnumerable2.call(object4, symbol);
  });
};
var getSymbols_default = getSymbols;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_copySymbols.js
function copySymbols(source, object4) {
  return copyObject_default(source, getSymbols_default(source), object4);
}
var copySymbols_default = copySymbols;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getSymbolsIn.js
var nativeGetSymbols2 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols2 ? stubArray_default : function(object4) {
  var result2 = [];
  while (object4) {
    arrayPush_default(result2, getSymbols_default(object4));
    object4 = getPrototype_default(object4);
  }
  return result2;
};
var getSymbolsIn_default = getSymbolsIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_copySymbolsIn.js
function copySymbolsIn(source, object4) {
  return copyObject_default(source, getSymbolsIn_default(source), object4);
}
var copySymbolsIn_default = copySymbolsIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseGetAllKeys.js
function baseGetAllKeys(object4, keysFunc, symbolsFunc) {
  var result2 = keysFunc(object4);
  return isArray_default(object4) ? result2 : arrayPush_default(result2, symbolsFunc(object4));
}
var baseGetAllKeys_default = baseGetAllKeys;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getAllKeys.js
function getAllKeys(object4) {
  return baseGetAllKeys_default(object4, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getAllKeysIn.js
function getAllKeysIn(object4) {
  return baseGetAllKeys_default(object4, keysIn_default, getSymbolsIn_default);
}
var getAllKeysIn_default = getAllKeysIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_DataView.js
var DataView = getNative_default(root_default, "DataView");
var DataView_default = DataView;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getTag.js
var mapTag2 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag2 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag2 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag2 || Map_default && getTag(new Map_default()) != mapTag2 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag2 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value) {
    var result2 = baseGetTag_default(value), Ctor = result2 == objectTag3 ? value.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag2;
        case mapCtorString:
          return mapTag2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag2;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result2;
  };
}
var getTag_default = getTag;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_initCloneArray.js
var objectProto17 = Object.prototype;
var hasOwnProperty14 = objectProto17.hasOwnProperty;
function initCloneArray(array4) {
  var length = array4.length, result2 = new array4.constructor(length);
  if (length && typeof array4[0] == "string" && hasOwnProperty14.call(array4, "index")) {
    result2.index = array4.index;
    result2.input = array4.input;
  }
  return result2;
}
var initCloneArray_default = initCloneArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_Uint8Array.js
var Uint8Array2 = root_default.Uint8Array;
var Uint8Array_default = Uint8Array2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cloneArrayBuffer.js
function cloneArrayBuffer(arrayBuffer) {
  var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array_default(result2).set(new Uint8Array_default(arrayBuffer));
  return result2;
}
var cloneArrayBuffer_default = cloneArrayBuffer;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cloneDataView.js
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var cloneDataView_default = cloneDataView;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cloneRegExp.js
var reFlags = /\w*$/;
function cloneRegExp(regexp4) {
  var result2 = new regexp4.constructor(regexp4.source, reFlags.exec(regexp4));
  result2.lastIndex = regexp4.lastIndex;
  return result2;
}
var cloneRegExp_default = cloneRegExp;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cloneSymbol.js
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto2 ? symbolProto2.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var cloneSymbol_default = cloneSymbol;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cloneTypedArray.js
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var cloneTypedArray_default = cloneTypedArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_initCloneByTag.js
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var mapTag3 = "[object Map]";
var numberTag2 = "[object Number]";
var regexpTag2 = "[object RegExp]";
var setTag3 = "[object Set]";
var stringTag2 = "[object String]";
var symbolTag2 = "[object Symbol]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag3 = "[object DataView]";
var float32Tag2 = "[object Float32Array]";
var float64Tag2 = "[object Float64Array]";
var int8Tag2 = "[object Int8Array]";
var int16Tag2 = "[object Int16Array]";
var int32Tag2 = "[object Int32Array]";
var uint8Tag2 = "[object Uint8Array]";
var uint8ClampedTag2 = "[object Uint8ClampedArray]";
var uint16Tag2 = "[object Uint16Array]";
var uint32Tag2 = "[object Uint32Array]";
function initCloneByTag(object4, tag, isDeep) {
  var Ctor = object4.constructor;
  switch (tag) {
    case arrayBufferTag2:
      return cloneArrayBuffer_default(object4);
    case boolTag2:
    case dateTag2:
      return new Ctor(+object4);
    case dataViewTag3:
      return cloneDataView_default(object4, isDeep);
    case float32Tag2:
    case float64Tag2:
    case int8Tag2:
    case int16Tag2:
    case int32Tag2:
    case uint8Tag2:
    case uint8ClampedTag2:
    case uint16Tag2:
    case uint32Tag2:
      return cloneTypedArray_default(object4, isDeep);
    case mapTag3:
      return new Ctor();
    case numberTag2:
    case stringTag2:
      return new Ctor(object4);
    case regexpTag2:
      return cloneRegExp_default(object4);
    case setTag3:
      return new Ctor();
    case symbolTag2:
      return cloneSymbol_default(object4);
  }
}
var initCloneByTag_default = initCloneByTag;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_initCloneObject.js
function initCloneObject(object4) {
  return typeof object4.constructor == "function" && !isPrototype_default(object4) ? baseCreate_default(getPrototype_default(object4)) : {};
}
var initCloneObject_default = initCloneObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsMap.js
var mapTag4 = "[object Map]";
function baseIsMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == mapTag4;
}
var baseIsMap_default = baseIsMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isMap.js
var nodeIsMap = nodeUtil_default && nodeUtil_default.isMap;
var isMap = nodeIsMap ? baseUnary_default(nodeIsMap) : baseIsMap_default;
var isMap_default = isMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsSet.js
var setTag4 = "[object Set]";
function baseIsSet(value) {
  return isObjectLike_default(value) && getTag_default(value) == setTag4;
}
var baseIsSet_default = baseIsSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isSet.js
var nodeIsSet = nodeUtil_default && nodeUtil_default.isSet;
var isSet = nodeIsSet ? baseUnary_default(nodeIsSet) : baseIsSet_default;
var isSet_default = isSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseClone.js
var CLONE_DEEP_FLAG = 1;
var CLONE_FLAT_FLAG = 2;
var CLONE_SYMBOLS_FLAG = 4;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var boolTag3 = "[object Boolean]";
var dateTag3 = "[object Date]";
var errorTag3 = "[object Error]";
var funcTag3 = "[object Function]";
var genTag2 = "[object GeneratorFunction]";
var mapTag5 = "[object Map]";
var numberTag3 = "[object Number]";
var objectTag4 = "[object Object]";
var regexpTag3 = "[object RegExp]";
var setTag5 = "[object Set]";
var stringTag3 = "[object String]";
var symbolTag3 = "[object Symbol]";
var weakMapTag3 = "[object WeakMap]";
var arrayBufferTag3 = "[object ArrayBuffer]";
var dataViewTag4 = "[object DataView]";
var float32Tag3 = "[object Float32Array]";
var float64Tag3 = "[object Float64Array]";
var int8Tag3 = "[object Int8Array]";
var int16Tag3 = "[object Int16Array]";
var int32Tag3 = "[object Int32Array]";
var uint8Tag3 = "[object Uint8Array]";
var uint8ClampedTag3 = "[object Uint8ClampedArray]";
var uint16Tag3 = "[object Uint16Array]";
var uint32Tag3 = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag3] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag3] = cloneableTags[float64Tag3] = cloneableTags[int8Tag3] = cloneableTags[int16Tag3] = cloneableTags[int32Tag3] = cloneableTags[mapTag5] = cloneableTags[numberTag3] = cloneableTags[objectTag4] = cloneableTags[regexpTag3] = cloneableTags[setTag5] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag3] = cloneableTags[uint8ClampedTag3] = cloneableTags[uint16Tag3] = cloneableTags[uint32Tag3] = true;
cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
function baseClone(value, bitmask, customizer, key, object4, stack) {
  var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result2 = object4 ? customizer(value, key, object4, stack) : customizer(value);
  }
  if (result2 !== void 0) {
    return result2;
  }
  if (!isObject_default(value)) {
    return value;
  }
  var isArr = isArray_default(value);
  if (isArr) {
    result2 = initCloneArray_default(value);
    if (!isDeep) {
      return copyArray_default(value, result2);
    }
  } else {
    var tag = getTag_default(value), isFunc = tag == funcTag3 || tag == genTag2;
    if (isBuffer_default(value)) {
      return cloneBuffer_default(value, isDeep);
    }
    if (tag == objectTag4 || tag == argsTag3 || isFunc && !object4) {
      result2 = isFlat || isFunc ? {} : initCloneObject_default(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn_default(value, baseAssignIn_default(result2, value)) : copySymbols_default(value, baseAssign_default(result2, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object4 ? value : {};
      }
      result2 = initCloneByTag_default(value, tag, isDeep);
    }
  }
  stack || (stack = new Stack_default());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result2);
  if (isSet_default(value)) {
    value.forEach(function(subValue) {
      result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap_default(value)) {
    value.forEach(function(subValue, key2) {
      result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn_default : getAllKeys_default : isFlat ? keysIn_default : keys_default;
  var props = isArr ? void 0 : keysFunc(value);
  arrayEach_default(props || value, function(subValue, key2) {
    if (props) {
      key2 = subValue;
      subValue = value[key2];
    }
    assignValue_default(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
  });
  return result2;
}
var baseClone_default = baseClone;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/clone.js
var CLONE_SYMBOLS_FLAG2 = 4;
function clone(value) {
  return baseClone_default(value, CLONE_SYMBOLS_FLAG2);
}
var clone_default = clone;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/cloneDeep.js
var CLONE_DEEP_FLAG2 = 1;
var CLONE_SYMBOLS_FLAG3 = 4;
function cloneDeep(value) {
  return baseClone_default(value, CLONE_DEEP_FLAG2 | CLONE_SYMBOLS_FLAG3);
}
var cloneDeep_default = cloneDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/cloneDeepWith.js
var CLONE_DEEP_FLAG3 = 1;
var CLONE_SYMBOLS_FLAG4 = 4;
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_DEEP_FLAG3 | CLONE_SYMBOLS_FLAG4, customizer);
}
var cloneDeepWith_default = cloneDeepWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/cloneWith.js
var CLONE_SYMBOLS_FLAG5 = 4;
function cloneWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_SYMBOLS_FLAG5, customizer);
}
var cloneWith_default = cloneWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/commit.js
function wrapperCommit() {
  return new LodashWrapper_default(this.value(), this.__chain__);
}
var commit_default = wrapperCommit;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/compact.js
function compact(array4) {
  var index = -1, length = array4 == null ? 0 : array4.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array4[index];
    if (value) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var compact_default = compact;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/concat.js
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1), array4 = arguments[0], index = length;
  while (index--) {
    args[index - 1] = arguments[index];
  }
  return arrayPush_default(isArray_default(array4) ? copyArray_default(array4) : [array4], baseFlatten_default(args, 1));
}
var concat_default = concat;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setCacheHas.js
function setCacheHas(value) {
  return this.__data__.has(value);
}
var setCacheHas_default = setCacheHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_SetCache.js
function SetCache(values2) {
  var index = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new MapCache_default();
  while (++index < length) {
    this.add(values2[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arraySome.js
function arraySome(array4, predicate) {
  var index = -1, length = array4 == null ? 0 : array4.length;
  while (++index < length) {
    if (predicate(array4[index], index, array4)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_cacheHas.js
function cacheHas(cache2, key) {
  return cache2.has(key);
}
var cacheHas_default = cacheHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array4, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array4.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array4);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array4;
  }
  var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array4, other);
  stack.set(other, array4);
  while (++index < arrLength) {
    var arrValue = array4[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array4, stack) : customizer(arrValue, othValue, index, array4, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result2 = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result2 = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result2 = false;
      break;
    }
  }
  stack["delete"](array4);
  stack["delete"](other);
  return result2;
}
var equalArrays_default = equalArrays;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_mapToArray.js
function mapToArray(map2) {
  var index = -1, result2 = Array(map2.size);
  map2.forEach(function(value, key) {
    result2[++index] = [key, value];
  });
  return result2;
}
var mapToArray_default = mapToArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setToArray.js
function setToArray(set5) {
  var index = -1, result2 = Array(set5.size);
  set5.forEach(function(value) {
    result2[++index] = value;
  });
  return result2;
}
var setToArray_default = setToArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag4 = "[object Boolean]";
var dateTag4 = "[object Date]";
var errorTag4 = "[object Error]";
var mapTag6 = "[object Map]";
var numberTag4 = "[object Number]";
var regexpTag4 = "[object RegExp]";
var setTag6 = "[object Set]";
var stringTag4 = "[object String]";
var symbolTag4 = "[object Symbol]";
var arrayBufferTag4 = "[object ArrayBuffer]";
var dataViewTag5 = "[object DataView]";
var symbolProto3 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
function equalByTag(object4, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag5:
      if (object4.byteLength != other.byteLength || object4.byteOffset != other.byteOffset) {
        return false;
      }
      object4 = object4.buffer;
      other = other.buffer;
    case arrayBufferTag4:
      if (object4.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object4), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag4:
    case dateTag4:
    case numberTag4:
      return eq_default(+object4, +other);
    case errorTag4:
      return object4.name == other.name && object4.message == other.message;
    case regexpTag4:
    case stringTag4:
      return object4 == other + "";
    case mapTag6:
      var convert = mapToArray_default;
    case setTag6:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object4.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object4);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object4, other);
      var result2 = equalArrays_default(convert(object4), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object4);
      return result2;
    case symbolTag4:
      if (symbolValueOf2) {
        return symbolValueOf2.call(object4) == symbolValueOf2.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto18 = Object.prototype;
var hasOwnProperty15 = objectProto18.hasOwnProperty;
function equalObjects(object4, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object4), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty15.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object4);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object4;
  }
  var result2 = true;
  stack.set(object4, other);
  stack.set(other, object4);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object4[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object4, stack) : customizer(objValue, othValue, key, object4, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result2 = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result2 && !skipCtor) {
    var objCtor = object4.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object4 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result2 = false;
    }
  }
  stack["delete"](object4);
  stack["delete"](other);
  return result2;
}
var equalObjects_default = equalObjects;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag4 = "[object Arguments]";
var arrayTag3 = "[object Array]";
var objectTag5 = "[object Object]";
var objectProto19 = Object.prototype;
var hasOwnProperty16 = objectProto19.hasOwnProperty;
function baseIsEqualDeep(object4, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object4), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag3 : getTag_default(object4), othTag = othIsArr ? arrayTag3 : getTag_default(other);
  objTag = objTag == argsTag4 ? objectTag5 : objTag;
  othTag = othTag == argsTag4 ? objectTag5 : othTag;
  var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object4)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object4) ? equalArrays_default(object4, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object4, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty16.call(object4, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty16.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object4.value() : object4, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object4, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsEqual.js
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_default(value) && !isObjectLike_default(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep_default(value, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object4, source, matchData, customizer) {
  var index = matchData.length, length = index, noCustomizer = !customizer;
  if (object4 == null) {
    return !length;
  }
  object4 = Object(object4);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object4[data[0]] : !(data[0] in object4)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0], objValue = object4[key], srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === void 0 && !(key in object4)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result2 = customizer(objValue, srcValue, key, object4, source, stack);
      }
      if (!(result2 === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result2)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isStrictComparable.js
function isStrictComparable(value) {
  return value === value && !isObject_default(value);
}
var isStrictComparable_default = isStrictComparable;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getMatchData.js
function getMatchData(object4) {
  var result2 = keys_default(object4), length = result2.length;
  while (length--) {
    var key = result2[length], value = object4[key];
    result2[length] = [key, value, isStrictComparable_default(value)];
  }
  return result2;
}
var getMatchData_default = getMatchData;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_matchesStrictComparable.js
function matchesStrictComparable(key, srcValue) {
  return function(object4) {
    if (object4 == null) {
      return false;
    }
    return object4[key] === srcValue && (srcValue !== void 0 || key in Object(object4));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object4) {
    return object4 === source || baseIsMatch_default(object4, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseHasIn.js
function baseHasIn(object4, key) {
  return object4 != null && key in Object(object4);
}
var baseHasIn_default = baseHasIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_hasPath.js
function hasPath(object4, path, hasFunc) {
  path = castPath_default(path, object4);
  var index = -1, length = path.length, result2 = false;
  while (++index < length) {
    var key = toKey_default(path[index]);
    if (!(result2 = object4 != null && hasFunc(object4, key))) {
      break;
    }
    object4 = object4[key];
  }
  if (result2 || ++index != length) {
    return result2;
  }
  length = object4 == null ? 0 : object4.length;
  return !!length && isLength_default(length) && isIndex_default(key, length) && (isArray_default(object4) || isArguments_default(object4));
}
var hasPath_default = hasPath;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/hasIn.js
function hasIn(object4, path) {
  return object4 != null && hasPath_default(object4, path, baseHasIn_default);
}
var hasIn_default = hasIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path, srcValue) {
  if (isKey_default(path) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path), srcValue);
  }
  return function(object4) {
    var objValue = get_default(object4, path);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object4, path) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseProperty.js
function baseProperty(key) {
  return function(object4) {
    return object4 == null ? void 0 : object4[key];
  };
}
var baseProperty_default = baseProperty;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_basePropertyDeep.js
function basePropertyDeep(path) {
  return function(object4) {
    return baseGet_default(object4, path);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/property.js
function property(path) {
  return isKey_default(path) ? baseProperty_default(toKey_default(path)) : basePropertyDeep_default(path);
}
var property_default = property;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIteratee.js
function baseIteratee(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity_default;
  }
  if (typeof value == "object") {
    return isArray_default(value) ? baseMatchesProperty_default(value[0], value[1]) : baseMatches_default(value);
  }
  return property_default(value);
}
var baseIteratee_default = baseIteratee;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/cond.js
var FUNC_ERROR_TEXT5 = "Expected a function";
function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length, toIteratee = baseIteratee_default;
  pairs = !length ? [] : arrayMap_default(pairs, function(pair) {
    if (typeof pair[1] != "function") {
      throw new TypeError(FUNC_ERROR_TEXT5);
    }
    return [toIteratee(pair[0]), pair[1]];
  });
  return baseRest_default(function(args) {
    var index = -1;
    while (++index < length) {
      var pair = pairs[index];
      if (apply_default(pair[0], this, args)) {
        return apply_default(pair[1], this, args);
      }
    }
  });
}
var cond_default = cond;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseConformsTo.js
function baseConformsTo(object4, source, props) {
  var length = props.length;
  if (object4 == null) {
    return !length;
  }
  object4 = Object(object4);
  while (length--) {
    var key = props[length], predicate = source[key], value = object4[key];
    if (value === void 0 && !(key in object4) || !predicate(value)) {
      return false;
    }
  }
  return true;
}
var baseConformsTo_default = baseConformsTo;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseConforms.js
function baseConforms(source) {
  var props = keys_default(source);
  return function(object4) {
    return baseConformsTo_default(object4, source, props);
  };
}
var baseConforms_default = baseConforms;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/conforms.js
var CLONE_DEEP_FLAG4 = 1;
function conforms(source) {
  return baseConforms_default(baseClone_default(source, CLONE_DEEP_FLAG4));
}
var conforms_default = conforms;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/conformsTo.js
function conformsTo(object4, source) {
  return source == null || baseConformsTo_default(object4, source, keys_default(source));
}
var conformsTo_default = conformsTo;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayAggregator.js
function arrayAggregator(array4, setter, iteratee2, accumulator) {
  var index = -1, length = array4 == null ? 0 : array4.length;
  while (++index < length) {
    var value = array4[index];
    setter(accumulator, value, iteratee2(value), array4);
  }
  return accumulator;
}
var arrayAggregator_default = arrayAggregator;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createBaseFor.js
function createBaseFor(fromRight) {
  return function(object4, iteratee2, keysFunc) {
    var index = -1, iterable = Object(object4), props = keysFunc(object4), length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee2(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object4;
  };
}
var createBaseFor_default = createBaseFor;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFor.js
var baseFor = createBaseFor_default();
var baseFor_default = baseFor;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseForOwn.js
function baseForOwn(object4, iteratee2) {
  return object4 && baseFor_default(object4, iteratee2, keys_default);
}
var baseForOwn_default = baseForOwn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createBaseEach.js
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee2) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_default(collection)) {
      return eachFunc(collection, iteratee2);
    }
    var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index-- : ++index < length) {
      if (iteratee2(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var createBaseEach_default = createBaseEach;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseEach.js
var baseEach = createBaseEach_default(baseForOwn_default);
var baseEach_default = baseEach;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseAggregator.js
function baseAggregator(collection, setter, iteratee2, accumulator) {
  baseEach_default(collection, function(value, key, collection2) {
    setter(accumulator, value, iteratee2(value), collection2);
  });
  return accumulator;
}
var baseAggregator_default = baseAggregator;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createAggregator.js
function createAggregator(setter, initializer) {
  return function(collection, iteratee2) {
    var func = isArray_default(collection) ? arrayAggregator_default : baseAggregator_default, accumulator = initializer ? initializer() : {};
    return func(collection, setter, baseIteratee_default(iteratee2, 2), accumulator);
  };
}
var createAggregator_default = createAggregator;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/countBy.js
var objectProto20 = Object.prototype;
var hasOwnProperty17 = objectProto20.hasOwnProperty;
var countBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty17.call(result2, key)) {
    ++result2[key];
  } else {
    baseAssignValue_default(result2, key, 1);
  }
});
var countBy_default = countBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/create.js
function create(prototype, properties) {
  var result2 = baseCreate_default(prototype);
  return properties == null ? result2 : baseAssign_default(result2, properties);
}
var create_default = create;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/curry.js
var WRAP_CURRY_FLAG6 = 8;
function curry(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_FLAG6, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curry.placeholder;
  return result2;
}
curry.placeholder = {};
var curry_default = curry;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/curryRight.js
var WRAP_CURRY_RIGHT_FLAG4 = 16;
function curryRight(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_RIGHT_FLAG4, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curryRight.placeholder;
  return result2;
}
curryRight.placeholder = {};
var curryRight_default = curryRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/now.js
var now = function() {
  return root_default.Date.now();
};
var now_default = now;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/debounce.js
var FUNC_ERROR_TEXT6 = "Expected a function";
var nativeMax6 = Math.max;
var nativeMin4 = Math.min;
function debounce(func, wait, options) {
  var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT6);
  }
  wait = toNumber_default(wait) || 0;
  if (isObject_default(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax6(toNumber_default(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result2 = func.apply(thisArg, args);
    return result2;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result2;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin4(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now_default();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result2;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result2 : trailingEdge(now_default());
  }
  function debounced() {
    var time = now_default(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result2;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_default = debounce;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/defaultTo.js
function defaultTo(value, defaultValue) {
  return value == null || value !== value ? defaultValue : value;
}
var defaultTo_default = defaultTo;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/defaults.js
var objectProto21 = Object.prototype;
var hasOwnProperty18 = objectProto21.hasOwnProperty;
var defaults = baseRest_default(function(object4, sources) {
  object4 = Object(object4);
  var index = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : void 0;
  if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
    length = 1;
  }
  while (++index < length) {
    var source = sources[index];
    var props = keysIn_default(source);
    var propsIndex = -1;
    var propsLength = props.length;
    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object4[key];
      if (value === void 0 || eq_default(value, objectProto21[key]) && !hasOwnProperty18.call(object4, key)) {
        object4[key] = source[key];
      }
    }
  }
  return object4;
});
var defaults_default = defaults;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_assignMergeValue.js
function assignMergeValue(object4, key, value) {
  if (value !== void 0 && !eq_default(object4[key], value) || value === void 0 && !(key in object4)) {
    baseAssignValue_default(object4, key, value);
  }
}
var assignMergeValue_default = assignMergeValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isArrayLikeObject.js
function isArrayLikeObject(value) {
  return isObjectLike_default(value) && isArrayLike_default(value);
}
var isArrayLikeObject_default = isArrayLikeObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_safeGet.js
function safeGet(object4, key) {
  if (key === "constructor" && typeof object4[key] === "function") {
    return;
  }
  if (key == "__proto__") {
    return;
  }
  return object4[key];
}
var safeGet_default = safeGet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toPlainObject.js
function toPlainObject(value) {
  return copyObject_default(value, keysIn_default(value));
}
var toPlainObject_default = toPlainObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseMergeDeep.js
function baseMergeDeep(object4, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet_default(object4, key), srcValue = safeGet_default(source, key), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue_default(object4, key, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key + "", object4, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_default(srcValue), isBuff = !isArr && isBuffer_default(srcValue), isTyped = !isArr && !isBuff && isTypedArray_default(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_default(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_default(objValue)) {
        newValue = copyArray_default(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer_default(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray_default(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_default(srcValue) || isArguments_default(srcValue)) {
      newValue = objValue;
      if (isArguments_default(objValue)) {
        newValue = toPlainObject_default(objValue);
      } else if (!isObject_default(objValue) || isFunction_default(objValue)) {
        newValue = initCloneObject_default(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue_default(object4, key, newValue);
}
var baseMergeDeep_default = baseMergeDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseMerge.js
function baseMerge(object4, source, srcIndex, customizer, stack) {
  if (object4 === source) {
    return;
  }
  baseFor_default(source, function(srcValue, key) {
    stack || (stack = new Stack_default());
    if (isObject_default(srcValue)) {
      baseMergeDeep_default(object4, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet_default(object4, key), srcValue, key + "", object4, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue_default(object4, key, newValue);
    }
  }, keysIn_default);
}
var baseMerge_default = baseMerge;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_customDefaultsMerge.js
function customDefaultsMerge(objValue, srcValue, key, object4, source, stack) {
  if (isObject_default(objValue) && isObject_default(srcValue)) {
    stack.set(srcValue, objValue);
    baseMerge_default(objValue, srcValue, void 0, customDefaultsMerge, stack);
    stack["delete"](srcValue);
  }
  return objValue;
}
var customDefaultsMerge_default = customDefaultsMerge;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/mergeWith.js
var mergeWith = createAssigner_default(function(object4, source, srcIndex, customizer) {
  baseMerge_default(object4, source, srcIndex, customizer);
});
var mergeWith_default = mergeWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/defaultsDeep.js
var defaultsDeep = baseRest_default(function(args) {
  args.push(void 0, customDefaultsMerge_default);
  return apply_default(mergeWith_default, void 0, args);
});
var defaultsDeep_default = defaultsDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseDelay.js
var FUNC_ERROR_TEXT7 = "Expected a function";
function baseDelay(func, wait, args) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT7);
  }
  return setTimeout(function() {
    func.apply(void 0, args);
  }, wait);
}
var baseDelay_default = baseDelay;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/defer.js
var defer = baseRest_default(function(func, args) {
  return baseDelay_default(func, 1, args);
});
var defer_default = defer;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/delay.js
var delay = baseRest_default(function(func, wait, args) {
  return baseDelay_default(func, toNumber_default(wait) || 0, args);
});
var delay_default = delay;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayIncludesWith.js
function arrayIncludesWith(array4, value, comparator) {
  var index = -1, length = array4 == null ? 0 : array4.length;
  while (++index < length) {
    if (comparator(value, array4[index])) {
      return true;
    }
  }
  return false;
}
var arrayIncludesWith_default = arrayIncludesWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseDifference.js
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference(array4, values2, iteratee2, comparator) {
  var index = -1, includes2 = arrayIncludes_default, isCommon = true, length = array4.length, result2 = [], valuesLength = values2.length;
  if (!length) {
    return result2;
  }
  if (iteratee2) {
    values2 = arrayMap_default(values2, baseUnary_default(iteratee2));
  }
  if (comparator) {
    includes2 = arrayIncludesWith_default;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes2 = cacheHas_default;
    isCommon = false;
    values2 = new SetCache_default(values2);
  }
  outer:
    while (++index < length) {
      var value = array4[index], computed190 = iteratee2 == null ? value : iteratee2(value);
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed190 === computed190) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed190) {
            continue outer;
          }
        }
        result2.push(value);
      } else if (!includes2(values2, computed190, comparator)) {
        result2.push(value);
      }
    }
  return result2;
}
var baseDifference_default = baseDifference;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/difference.js
var difference = baseRest_default(function(array4, values2) {
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, baseFlatten_default(values2, 1, isArrayLikeObject_default, true)) : [];
});
var difference_default = difference;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/last.js
function last(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? array4[length - 1] : void 0;
}
var last_default = last;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/differenceBy.js
var differenceBy = baseRest_default(function(array4, values2) {
  var iteratee2 = last_default(values2);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2)) : [];
});
var differenceBy_default = differenceBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/differenceWith.js
var differenceWith = baseRest_default(function(array4, values2) {
  var comparator = last_default(values2);
  if (isArrayLikeObject_default(comparator)) {
    comparator = void 0;
  }
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), void 0, comparator) : [];
});
var differenceWith_default = differenceWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/divide.js
var divide = createMathOperation_default(function(dividend, divisor) {
  return dividend / divisor;
}, 1);
var divide_default = divide;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/drop.js
function drop(array4, n, guard) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array4, n < 0 ? 0 : n, length);
}
var drop_default = drop;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/dropRight.js
function dropRight(array4, n, guard) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array4, 0, n < 0 ? 0 : n);
}
var dropRight_default = dropRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseWhile.js
function baseWhile(array4, predicate, isDrop, fromRight) {
  var length = array4.length, index = fromRight ? length : -1;
  while ((fromRight ? index-- : ++index < length) && predicate(array4[index], index, array4)) {
  }
  return isDrop ? baseSlice_default(array4, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice_default(array4, fromRight ? index + 1 : 0, fromRight ? length : index);
}
var baseWhile_default = baseWhile;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/dropRightWhile.js
function dropRightWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3), true, true) : [];
}
var dropRightWhile_default = dropRightWhile;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/dropWhile.js
function dropWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3), true) : [];
}
var dropWhile_default = dropWhile;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_castFunction.js
function castFunction(value) {
  return typeof value == "function" ? value : identity_default;
}
var castFunction_default = castFunction;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/forEach.js
function forEach(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEach_default : baseEach_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEach_default = forEach;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayEachRight.js
function arrayEachRight(array4, iteratee2) {
  var length = array4 == null ? 0 : array4.length;
  while (length--) {
    if (iteratee2(array4[length], length, array4) === false) {
      break;
    }
  }
  return array4;
}
var arrayEachRight_default = arrayEachRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseForRight.js
var baseForRight = createBaseFor_default(true);
var baseForRight_default = baseForRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseForOwnRight.js
function baseForOwnRight(object4, iteratee2) {
  return object4 && baseForRight_default(object4, iteratee2, keys_default);
}
var baseForOwnRight_default = baseForOwnRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseEachRight.js
var baseEachRight = createBaseEach_default(baseForOwnRight_default, true);
var baseEachRight_default = baseEachRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/forEachRight.js
function forEachRight(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEachRight_default : baseEachRight_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEachRight_default = forEachRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/endsWith.js
function endsWith(string3, target2, position) {
  string3 = toString_default(string3);
  target2 = baseToString_default(target2);
  var length = string3.length;
  position = position === void 0 ? length : baseClamp_default(toInteger_default(position), 0, length);
  var end2 = position;
  position -= target2.length;
  return position >= 0 && string3.slice(position, end2) == target2;
}
var endsWith_default = endsWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseToPairs.js
function baseToPairs(object4, props) {
  return arrayMap_default(props, function(key) {
    return [key, object4[key]];
  });
}
var baseToPairs_default = baseToPairs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_setToPairs.js
function setToPairs(set5) {
  var index = -1, result2 = Array(set5.size);
  set5.forEach(function(value) {
    result2[++index] = [value, value];
  });
  return result2;
}
var setToPairs_default = setToPairs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createToPairs.js
var mapTag7 = "[object Map]";
var setTag7 = "[object Set]";
function createToPairs(keysFunc) {
  return function(object4) {
    var tag = getTag_default(object4);
    if (tag == mapTag7) {
      return mapToArray_default(object4);
    }
    if (tag == setTag7) {
      return setToPairs_default(object4);
    }
    return baseToPairs_default(object4, keysFunc(object4));
  };
}
var createToPairs_default = createToPairs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toPairs.js
var toPairs = createToPairs_default(keys_default);
var toPairs_default = toPairs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toPairsIn.js
var toPairsIn = createToPairs_default(keysIn_default);
var toPairsIn_default = toPairsIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_escapeHtmlChar.js
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar = basePropertyOf_default(htmlEscapes);
var escapeHtmlChar_default = escapeHtmlChar;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/escape.js
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape(string3) {
  string3 = toString_default(string3);
  return string3 && reHasUnescapedHtml.test(string3) ? string3.replace(reUnescapedHtml, escapeHtmlChar_default) : string3;
}
var escape_default = escape;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/escapeRegExp.js
var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
var reHasRegExpChar = RegExp(reRegExpChar2.source);
function escapeRegExp(string3) {
  string3 = toString_default(string3);
  return string3 && reHasRegExpChar.test(string3) ? string3.replace(reRegExpChar2, "\\$&") : string3;
}
var escapeRegExp_default = escapeRegExp;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayEvery.js
function arrayEvery(array4, predicate) {
  var index = -1, length = array4 == null ? 0 : array4.length;
  while (++index < length) {
    if (!predicate(array4[index], index, array4)) {
      return false;
    }
  }
  return true;
}
var arrayEvery_default = arrayEvery;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseEvery.js
function baseEvery(collection, predicate) {
  var result2 = true;
  baseEach_default(collection, function(value, index, collection2) {
    result2 = !!predicate(value, index, collection2);
    return result2;
  });
  return result2;
}
var baseEvery_default = baseEvery;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/every.js
function every(collection, predicate, guard) {
  var func = isArray_default(collection) ? arrayEvery_default : baseEvery_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var every_default = every;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toLength.js
var MAX_ARRAY_LENGTH2 = 4294967295;
function toLength(value) {
  return value ? baseClamp_default(toInteger_default(value), 0, MAX_ARRAY_LENGTH2) : 0;
}
var toLength_default = toLength;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFill.js
function baseFill(array4, value, start, end2) {
  var length = array4.length;
  start = toInteger_default(start);
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end2 = end2 === void 0 || end2 > length ? length : toInteger_default(end2);
  if (end2 < 0) {
    end2 += length;
  }
  end2 = start > end2 ? 0 : toLength_default(end2);
  while (start < end2) {
    array4[start++] = value;
  }
  return array4;
}
var baseFill_default = baseFill;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/fill.js
function fill(array4, value, start, end2) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  if (start && typeof start != "number" && isIterateeCall_default(array4, value, start)) {
    start = 0;
    end2 = length;
  }
  return baseFill_default(array4, value, start, end2);
}
var fill_default = fill;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFilter.js
function baseFilter(collection, predicate) {
  var result2 = [];
  baseEach_default(collection, function(value, index, collection2) {
    if (predicate(value, index, collection2)) {
      result2.push(value);
    }
  });
  return result2;
}
var baseFilter_default = baseFilter;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/filter.js
function filter(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, baseIteratee_default(predicate, 3));
}
var filter_default = filter;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createFind.js
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike_default(collection)) {
      var iteratee2 = baseIteratee_default(predicate, 3);
      collection = keys_default(collection);
      predicate = function(key) {
        return iteratee2(iterable[key], key, iterable);
      };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee2 ? collection[index] : index] : void 0;
  };
}
var createFind_default = createFind;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/findIndex.js
var nativeMax7 = Math.max;
function findIndex(array4, predicate, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index < 0) {
    index = nativeMax7(length + index, 0);
  }
  return baseFindIndex_default(array4, baseIteratee_default(predicate, 3), index);
}
var findIndex_default = findIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/find.js
var find = createFind_default(findIndex_default);
var find_default = find;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFindKey.js
function baseFindKey(collection, predicate, eachFunc) {
  var result2;
  eachFunc(collection, function(value, key, collection2) {
    if (predicate(value, key, collection2)) {
      result2 = key;
      return false;
    }
  });
  return result2;
}
var baseFindKey_default = baseFindKey;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/findKey.js
function findKey(object4, predicate) {
  return baseFindKey_default(object4, baseIteratee_default(predicate, 3), baseForOwn_default);
}
var findKey_default = findKey;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/findLastIndex.js
var nativeMax8 = Math.max;
var nativeMin5 = Math.min;
function findLastIndex(array4, predicate, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== void 0) {
    index = toInteger_default(fromIndex);
    index = fromIndex < 0 ? nativeMax8(length + index, 0) : nativeMin5(index, length - 1);
  }
  return baseFindIndex_default(array4, baseIteratee_default(predicate, 3), index, true);
}
var findLastIndex_default = findLastIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/findLast.js
var findLast = createFind_default(findLastIndex_default);
var findLast_default = findLast;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/findLastKey.js
function findLastKey(object4, predicate) {
  return baseFindKey_default(object4, baseIteratee_default(predicate, 3), baseForOwnRight_default);
}
var findLastKey_default = findLastKey;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/head.js
function head(array4) {
  return array4 && array4.length ? array4[0] : void 0;
}
var head_default = head;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseMap.js
function baseMap(collection, iteratee2) {
  var index = -1, result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value, key, collection2) {
    result2[++index] = iteratee2(value, key, collection2);
  });
  return result2;
}
var baseMap_default = baseMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/map.js
function map(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayMap_default : baseMap_default;
  return func(collection, baseIteratee_default(iteratee2, 3));
}
var map_default = map;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flatMap.js
function flatMap(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), 1);
}
var flatMap_default = flatMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flatMapDeep.js
var INFINITY4 = 1 / 0;
function flatMapDeep(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), INFINITY4);
}
var flatMapDeep_default = flatMapDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flatMapDepth.js
function flatMapDepth(collection, iteratee2, depth) {
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(map_default(collection, iteratee2), depth);
}
var flatMapDepth_default = flatMapDepth;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flattenDeep.js
var INFINITY5 = 1 / 0;
function flattenDeep(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseFlatten_default(array4, INFINITY5) : [];
}
var flattenDeep_default = flattenDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flattenDepth.js
function flattenDepth(array4, depth) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(array4, depth);
}
var flattenDepth_default = flattenDepth;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flip.js
var WRAP_FLIP_FLAG3 = 512;
function flip(func) {
  return createWrap_default(func, WRAP_FLIP_FLAG3);
}
var flip_default = flip;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/floor.js
var floor = createRound_default("floor");
var floor_default = floor;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createFlow.js
var FUNC_ERROR_TEXT8 = "Expected a function";
var WRAP_CURRY_FLAG7 = 8;
var WRAP_PARTIAL_FLAG6 = 32;
var WRAP_ARY_FLAG5 = 128;
var WRAP_REARG_FLAG3 = 256;
function createFlow(fromRight) {
  return flatRest_default(function(funcs) {
    var length = funcs.length, index = length, prereq = LodashWrapper_default.prototype.thru;
    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT8);
      }
      if (prereq && !wrapper && getFuncName_default(func) == "wrapper") {
        var wrapper = new LodashWrapper_default([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];
      var funcName = getFuncName_default(func), data = funcName == "wrapper" ? getData_default(func) : void 0;
      if (data && isLaziable_default(data[0]) && data[1] == (WRAP_ARY_FLAG5 | WRAP_CURRY_FLAG7 | WRAP_PARTIAL_FLAG6 | WRAP_REARG_FLAG3) && !data[4].length && data[9] == 1) {
        wrapper = wrapper[getFuncName_default(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = func.length == 1 && isLaziable_default(func) ? wrapper[funcName]() : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments, value = args[0];
      if (wrapper && args.length == 1 && isArray_default(value)) {
        return wrapper.plant(value).value();
      }
      var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
      while (++index2 < length) {
        result2 = funcs[index2].call(this, result2);
      }
      return result2;
    };
  });
}
var createFlow_default = createFlow;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flow.js
var flow = createFlow_default();
var flow_default = flow;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/flowRight.js
var flowRight = createFlow_default(true);
var flowRight_default = flowRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/forIn.js
function forIn(object4, iteratee2) {
  return object4 == null ? object4 : baseFor_default(object4, castFunction_default(iteratee2), keysIn_default);
}
var forIn_default = forIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/forInRight.js
function forInRight(object4, iteratee2) {
  return object4 == null ? object4 : baseForRight_default(object4, castFunction_default(iteratee2), keysIn_default);
}
var forInRight_default = forInRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/forOwn.js
function forOwn(object4, iteratee2) {
  return object4 && baseForOwn_default(object4, castFunction_default(iteratee2));
}
var forOwn_default = forOwn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/forOwnRight.js
function forOwnRight(object4, iteratee2) {
  return object4 && baseForOwnRight_default(object4, castFunction_default(iteratee2));
}
var forOwnRight_default = forOwnRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/fromPairs.js
function fromPairs(pairs) {
  var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
  while (++index < length) {
    var pair = pairs[index];
    result2[pair[0]] = pair[1];
  }
  return result2;
}
var fromPairs_default = fromPairs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseFunctions.js
function baseFunctions(object4, props) {
  return arrayFilter_default(props, function(key) {
    return isFunction_default(object4[key]);
  });
}
var baseFunctions_default = baseFunctions;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/functions.js
function functions(object4) {
  return object4 == null ? [] : baseFunctions_default(object4, keys_default(object4));
}
var functions_default = functions;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/functionsIn.js
function functionsIn(object4) {
  return object4 == null ? [] : baseFunctions_default(object4, keysIn_default(object4));
}
var functionsIn_default = functionsIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/groupBy.js
var objectProto22 = Object.prototype;
var hasOwnProperty19 = objectProto22.hasOwnProperty;
var groupBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty19.call(result2, key)) {
    result2[key].push(value);
  } else {
    baseAssignValue_default(result2, key, [value]);
  }
});
var groupBy_default = groupBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseGt.js
function baseGt(value, other) {
  return value > other;
}
var baseGt_default = baseGt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createRelationalOperation.js
function createRelationalOperation(operator) {
  return function(value, other) {
    if (!(typeof value == "string" && typeof other == "string")) {
      value = toNumber_default(value);
      other = toNumber_default(other);
    }
    return operator(value, other);
  };
}
var createRelationalOperation_default = createRelationalOperation;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/gt.js
var gt = createRelationalOperation_default(baseGt_default);
var gt_default = gt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/gte.js
var gte = createRelationalOperation_default(function(value, other) {
  return value >= other;
});
var gte_default = gte;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseHas.js
var objectProto23 = Object.prototype;
var hasOwnProperty20 = objectProto23.hasOwnProperty;
function baseHas(object4, key) {
  return object4 != null && hasOwnProperty20.call(object4, key);
}
var baseHas_default = baseHas;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/has.js
function has(object4, path) {
  return object4 != null && hasPath_default(object4, path, baseHas_default);
}
var has_default = has;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseInRange.js
var nativeMax9 = Math.max;
var nativeMin6 = Math.min;
function baseInRange(number4, start, end2) {
  return number4 >= nativeMin6(start, end2) && number4 < nativeMax9(start, end2);
}
var baseInRange_default = baseInRange;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/inRange.js
function inRange(number4, start, end2) {
  start = toFinite_default(start);
  if (end2 === void 0) {
    end2 = start;
    start = 0;
  } else {
    end2 = toFinite_default(end2);
  }
  number4 = toNumber_default(number4);
  return baseInRange_default(number4, start, end2);
}
var inRange_default = inRange;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isString.js
var stringTag5 = "[object String]";
function isString2(value) {
  return typeof value == "string" || !isArray_default(value) && isObjectLike_default(value) && baseGetTag_default(value) == stringTag5;
}
var isString_default = isString2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseValues.js
function baseValues(object4, props) {
  return arrayMap_default(props, function(key) {
    return object4[key];
  });
}
var baseValues_default = baseValues;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/values.js
function values(object4) {
  return object4 == null ? [] : baseValues_default(object4, keys_default(object4));
}
var values_default = values;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/includes.js
var nativeMax10 = Math.max;
function includes(collection, value, fromIndex, guard) {
  collection = isArrayLike_default(collection) ? collection : values_default(collection);
  fromIndex = fromIndex && !guard ? toInteger_default(fromIndex) : 0;
  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax10(length + fromIndex, 0);
  }
  return isString_default(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf_default(collection, value, fromIndex) > -1;
}
var includes_default = includes;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/indexOf.js
var nativeMax11 = Math.max;
function indexOf(array4, value, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index < 0) {
    index = nativeMax11(length + index, 0);
  }
  return baseIndexOf_default(array4, value, index);
}
var indexOf_default = indexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/initial.js
function initial(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseSlice_default(array4, 0, -1) : [];
}
var initial_default = initial;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIntersection.js
var nativeMin7 = Math.min;
function baseIntersection(arrays, iteratee2, comparator) {
  var includes2 = comparator ? arrayIncludesWith_default : arrayIncludes_default, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result2 = [];
  while (othIndex--) {
    var array4 = arrays[othIndex];
    if (othIndex && iteratee2) {
      array4 = arrayMap_default(array4, baseUnary_default(iteratee2));
    }
    maxLength = nativeMin7(array4.length, maxLength);
    caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array4.length >= 120) ? new SetCache_default(othIndex && array4) : void 0;
  }
  array4 = arrays[0];
  var index = -1, seen = caches[0];
  outer:
    while (++index < length && result2.length < maxLength) {
      var value = array4[index], computed190 = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (!(seen ? cacheHas_default(seen, computed190) : includes2(result2, computed190, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache2 = caches[othIndex];
          if (!(cache2 ? cacheHas_default(cache2, computed190) : includes2(arrays[othIndex], computed190, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed190);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseIntersection_default = baseIntersection;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_castArrayLikeObject.js
function castArrayLikeObject(value) {
  return isArrayLikeObject_default(value) ? value : [];
}
var castArrayLikeObject_default = castArrayLikeObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/intersection.js
var intersection = baseRest_default(function(arrays) {
  var mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped) : [];
});
var intersection_default = intersection;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/intersectionBy.js
var intersectionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  if (iteratee2 === last_default(mapped)) {
    iteratee2 = void 0;
  } else {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, baseIteratee_default(iteratee2, 2)) : [];
});
var intersectionBy_default = intersectionBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/intersectionWith.js
var intersectionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  comparator = typeof comparator == "function" ? comparator : void 0;
  if (comparator) {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, void 0, comparator) : [];
});
var intersectionWith_default = intersectionWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseInverter.js
function baseInverter(object4, setter, iteratee2, accumulator) {
  baseForOwn_default(object4, function(value, key, object5) {
    setter(accumulator, iteratee2(value), key, object5);
  });
  return accumulator;
}
var baseInverter_default = baseInverter;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createInverter.js
function createInverter(setter, toIteratee) {
  return function(object4, iteratee2) {
    return baseInverter_default(object4, setter, toIteratee(iteratee2), {});
  };
}
var createInverter_default = createInverter;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/invert.js
var objectProto24 = Object.prototype;
var nativeObjectToString3 = objectProto24.toString;
var invert = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString3.call(value);
  }
  result2[value] = key;
}, constant_default(identity_default));
var invert_default = invert;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/invertBy.js
var objectProto25 = Object.prototype;
var hasOwnProperty21 = objectProto25.hasOwnProperty;
var nativeObjectToString4 = objectProto25.toString;
var invertBy = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString4.call(value);
  }
  if (hasOwnProperty21.call(result2, value)) {
    result2[value].push(key);
  } else {
    result2[value] = [key];
  }
}, baseIteratee_default);
var invertBy_default = invertBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_parent.js
function parent(object4, path) {
  return path.length < 2 ? object4 : baseGet_default(object4, baseSlice_default(path, 0, -1));
}
var parent_default = parent;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseInvoke.js
function baseInvoke(object4, path, args) {
  path = castPath_default(path, object4);
  object4 = parent_default(object4, path);
  var func = object4 == null ? object4 : object4[toKey_default(last_default(path))];
  return func == null ? void 0 : apply_default(func, object4, args);
}
var baseInvoke_default = baseInvoke;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/invoke.js
var invoke = baseRest_default(baseInvoke_default);
var invoke_default = invoke;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/invokeMap.js
var invokeMap = baseRest_default(function(collection, path, args) {
  var index = -1, isFunc = typeof path == "function", result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value) {
    result2[++index] = isFunc ? apply_default(path, value, args) : baseInvoke_default(value, path, args);
  });
  return result2;
});
var invokeMap_default = invokeMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsArrayBuffer.js
var arrayBufferTag5 = "[object ArrayBuffer]";
function baseIsArrayBuffer(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == arrayBufferTag5;
}
var baseIsArrayBuffer_default = baseIsArrayBuffer;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isArrayBuffer.js
var nodeIsArrayBuffer = nodeUtil_default && nodeUtil_default.isArrayBuffer;
var isArrayBuffer = nodeIsArrayBuffer ? baseUnary_default(nodeIsArrayBuffer) : baseIsArrayBuffer_default;
var isArrayBuffer_default = isArrayBuffer;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isBoolean.js
var boolTag5 = "[object Boolean]";
function isBoolean(value) {
  return value === true || value === false || isObjectLike_default(value) && baseGetTag_default(value) == boolTag5;
}
var isBoolean_default = isBoolean;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsDate.js
var dateTag5 = "[object Date]";
function baseIsDate(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == dateTag5;
}
var baseIsDate_default = baseIsDate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isDate.js
var nodeIsDate = nodeUtil_default && nodeUtil_default.isDate;
var isDate = nodeIsDate ? baseUnary_default(nodeIsDate) : baseIsDate_default;
var isDate_default = isDate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isElement.js
function isElement(value) {
  return isObjectLike_default(value) && value.nodeType === 1 && !isPlainObject_default(value);
}
var isElement_default = isElement;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isEmpty.js
var mapTag8 = "[object Map]";
var setTag8 = "[object Set]";
var objectProto26 = Object.prototype;
var hasOwnProperty22 = objectProto26.hasOwnProperty;
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike_default(value) && (isArray_default(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer_default(value) || isTypedArray_default(value) || isArguments_default(value))) {
    return !value.length;
  }
  var tag = getTag_default(value);
  if (tag == mapTag8 || tag == setTag8) {
    return !value.size;
  }
  if (isPrototype_default(value)) {
    return !baseKeys_default(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty22.call(value, key)) {
      return false;
    }
  }
  return true;
}
var isEmpty_default = isEmpty;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isEqual.js
function isEqual(value, other) {
  return baseIsEqual_default(value, other);
}
var isEqual_default = isEqual;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isEqualWith.js
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  var result2 = customizer ? customizer(value, other) : void 0;
  return result2 === void 0 ? baseIsEqual_default(value, other, void 0, customizer) : !!result2;
}
var isEqualWith_default = isEqualWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isFinite.js
var nativeIsFinite2 = root_default.isFinite;
function isFinite(value) {
  return typeof value == "number" && nativeIsFinite2(value);
}
var isFinite_default = isFinite;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isInteger.js
function isInteger(value) {
  return typeof value == "number" && value == toInteger_default(value);
}
var isInteger_default = isInteger;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isMatch.js
function isMatch(object4, source) {
  return object4 === source || baseIsMatch_default(object4, source, getMatchData_default(source));
}
var isMatch_default = isMatch;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isMatchWith.js
function isMatchWith(object4, source, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseIsMatch_default(object4, source, getMatchData_default(source), customizer);
}
var isMatchWith_default = isMatchWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isNumber.js
var numberTag5 = "[object Number]";
function isNumber2(value) {
  return typeof value == "number" || isObjectLike_default(value) && baseGetTag_default(value) == numberTag5;
}
var isNumber_default = isNumber2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isNaN.js
function isNaN2(value) {
  return isNumber_default(value) && value != +value;
}
var isNaN_default = isNaN2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_isMaskable.js
var isMaskable = coreJsData_default ? isFunction_default : stubFalse_default;
var isMaskable_default = isMaskable;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isNative.js
var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function isNative(value) {
  if (isMaskable_default(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return baseIsNative_default(value);
}
var isNative_default = isNative;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isNil.js
function isNil(value) {
  return value == null;
}
var isNil_default = isNil;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isNull.js
function isNull(value) {
  return value === null;
}
var isNull_default = isNull;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIsRegExp.js
var regexpTag5 = "[object RegExp]";
function baseIsRegExp(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == regexpTag5;
}
var baseIsRegExp_default = baseIsRegExp;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isRegExp.js
var nodeIsRegExp = nodeUtil_default && nodeUtil_default.isRegExp;
var isRegExp = nodeIsRegExp ? baseUnary_default(nodeIsRegExp) : baseIsRegExp_default;
var isRegExp_default = isRegExp;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isSafeInteger.js
var MAX_SAFE_INTEGER3 = 9007199254740991;
function isSafeInteger(value) {
  return isInteger_default(value) && value >= -MAX_SAFE_INTEGER3 && value <= MAX_SAFE_INTEGER3;
}
var isSafeInteger_default = isSafeInteger;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isUndefined.js
function isUndefined(value) {
  return value === void 0;
}
var isUndefined_default = isUndefined;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isWeakMap.js
var weakMapTag4 = "[object WeakMap]";
function isWeakMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == weakMapTag4;
}
var isWeakMap_default = isWeakMap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/isWeakSet.js
var weakSetTag = "[object WeakSet]";
function isWeakSet(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == weakSetTag;
}
var isWeakSet_default = isWeakSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/iteratee.js
var CLONE_DEEP_FLAG5 = 1;
function iteratee(func) {
  return baseIteratee_default(typeof func == "function" ? func : baseClone_default(func, CLONE_DEEP_FLAG5));
}
var iteratee_default = iteratee;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/join.js
var arrayProto2 = Array.prototype;
var nativeJoin = arrayProto2.join;
function join(array4, separator) {
  return array4 == null ? "" : nativeJoin.call(array4, separator);
}
var join_default = join;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/kebabCase.js
var kebabCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? "-" : "") + word.toLowerCase();
});
var kebabCase_default = kebabCase;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/keyBy.js
var keyBy = createAggregator_default(function(result2, value, key) {
  baseAssignValue_default(result2, key, value);
});
var keyBy_default = keyBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_strictLastIndexOf.js
function strictLastIndexOf(array4, value, fromIndex) {
  var index = fromIndex + 1;
  while (index--) {
    if (array4[index] === value) {
      return index;
    }
  }
  return index;
}
var strictLastIndexOf_default = strictLastIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lastIndexOf.js
var nativeMax12 = Math.max;
var nativeMin8 = Math.min;
function lastIndexOf(array4, value, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index = length;
  if (fromIndex !== void 0) {
    index = toInteger_default(fromIndex);
    index = index < 0 ? nativeMax12(length + index, 0) : nativeMin8(index, length - 1);
  }
  return value === value ? strictLastIndexOf_default(array4, value, index) : baseFindIndex_default(array4, baseIsNaN_default, index, true);
}
var lastIndexOf_default = lastIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lowerCase.js
var lowerCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + word.toLowerCase();
});
var lowerCase_default = lowerCase;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lowerFirst.js
var lowerFirst = createCaseFirst_default("toLowerCase");
var lowerFirst_default = lowerFirst;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseLt.js
function baseLt(value, other) {
  return value < other;
}
var baseLt_default = baseLt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lt.js
var lt = createRelationalOperation_default(baseLt_default);
var lt_default = lt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lte.js
var lte = createRelationalOperation_default(function(value, other) {
  return value <= other;
});
var lte_default = lte;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/mapKeys.js
function mapKeys(object4, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object4, function(value, key, object5) {
    baseAssignValue_default(result2, iteratee2(value, key, object5), value);
  });
  return result2;
}
var mapKeys_default = mapKeys;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/mapValues.js
function mapValues(object4, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object4, function(value, key, object5) {
    baseAssignValue_default(result2, key, iteratee2(value, key, object5));
  });
  return result2;
}
var mapValues_default = mapValues;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/matches.js
var CLONE_DEEP_FLAG6 = 1;
function matches(source) {
  return baseMatches_default(baseClone_default(source, CLONE_DEEP_FLAG6));
}
var matches_default = matches;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/matchesProperty.js
var CLONE_DEEP_FLAG7 = 1;
function matchesProperty(path, srcValue) {
  return baseMatchesProperty_default(path, baseClone_default(srcValue, CLONE_DEEP_FLAG7));
}
var matchesProperty_default = matchesProperty;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseExtremum.js
function baseExtremum(array4, iteratee2, comparator) {
  var index = -1, length = array4.length;
  while (++index < length) {
    var value = array4[index], current = iteratee2(value);
    if (current != null && (computed190 === void 0 ? current === current && !isSymbol_default(current) : comparator(current, computed190))) {
      var computed190 = current, result2 = value;
    }
  }
  return result2;
}
var baseExtremum_default = baseExtremum;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/max.js
function max(array4) {
  return array4 && array4.length ? baseExtremum_default(array4, identity_default, baseGt_default) : void 0;
}
var max_default = max;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/maxBy.js
function maxBy(array4, iteratee2) {
  return array4 && array4.length ? baseExtremum_default(array4, baseIteratee_default(iteratee2, 2), baseGt_default) : void 0;
}
var maxBy_default = maxBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSum.js
function baseSum(array4, iteratee2) {
  var result2, index = -1, length = array4.length;
  while (++index < length) {
    var current = iteratee2(array4[index]);
    if (current !== void 0) {
      result2 = result2 === void 0 ? current : result2 + current;
    }
  }
  return result2;
}
var baseSum_default = baseSum;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseMean.js
var NAN3 = 0 / 0;
function baseMean(array4, iteratee2) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseSum_default(array4, iteratee2) / length : NAN3;
}
var baseMean_default = baseMean;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/mean.js
function mean(array4) {
  return baseMean_default(array4, identity_default);
}
var mean_default = mean;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/meanBy.js
function meanBy(array4, iteratee2) {
  return baseMean_default(array4, baseIteratee_default(iteratee2, 2));
}
var meanBy_default = meanBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/merge.js
var merge = createAssigner_default(function(object4, source, srcIndex) {
  baseMerge_default(object4, source, srcIndex);
});
var merge_default = merge;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/method.js
var method = baseRest_default(function(path, args) {
  return function(object4) {
    return baseInvoke_default(object4, path, args);
  };
});
var method_default = method;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/methodOf.js
var methodOf = baseRest_default(function(object4, args) {
  return function(path) {
    return baseInvoke_default(object4, path, args);
  };
});
var methodOf_default = methodOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/min.js
function min(array4) {
  return array4 && array4.length ? baseExtremum_default(array4, identity_default, baseLt_default) : void 0;
}
var min_default = min;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/minBy.js
function minBy(array4, iteratee2) {
  return array4 && array4.length ? baseExtremum_default(array4, baseIteratee_default(iteratee2, 2), baseLt_default) : void 0;
}
var minBy_default = minBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/mixin.js
function mixin(object4, source, options) {
  var props = keys_default(source), methodNames = baseFunctions_default(source, props);
  var chain2 = !(isObject_default(options) && "chain" in options) || !!options.chain, isFunc = isFunction_default(object4);
  arrayEach_default(methodNames, function(methodName) {
    var func = source[methodName];
    object4[methodName] = func;
    if (isFunc) {
      object4.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain2 || chainAll) {
          var result2 = object4(this.__wrapped__), actions = result2.__actions__ = copyArray_default(this.__actions__);
          actions.push({ "func": func, "args": arguments, "thisArg": object4 });
          result2.__chain__ = chainAll;
          return result2;
        }
        return func.apply(object4, arrayPush_default([this.value()], arguments));
      };
    }
  });
  return object4;
}
var mixin_default = mixin;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/multiply.js
var multiply = createMathOperation_default(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);
var multiply_default = multiply;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/negate.js
var FUNC_ERROR_TEXT9 = "Expected a function";
function negate(predicate) {
  if (typeof predicate != "function") {
    throw new TypeError(FUNC_ERROR_TEXT9);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return !predicate.call(this);
      case 1:
        return !predicate.call(this, args[0]);
      case 2:
        return !predicate.call(this, args[0], args[1]);
      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}
var negate_default = negate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_iteratorToArray.js
function iteratorToArray(iterator) {
  var data, result2 = [];
  while (!(data = iterator.next()).done) {
    result2.push(data.value);
  }
  return result2;
}
var iteratorToArray_default = iteratorToArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toArray.js
var mapTag9 = "[object Map]";
var setTag9 = "[object Set]";
var symIterator = Symbol_default ? Symbol_default.iterator : void 0;
function toArray(value) {
  if (!value) {
    return [];
  }
  if (isArrayLike_default(value)) {
    return isString_default(value) ? stringToArray_default(value) : copyArray_default(value);
  }
  if (symIterator && value[symIterator]) {
    return iteratorToArray_default(value[symIterator]());
  }
  var tag = getTag_default(value), func = tag == mapTag9 ? mapToArray_default : tag == setTag9 ? setToArray_default : values_default;
  return func(value);
}
var toArray_default = toArray;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/next.js
function wrapperNext() {
  if (this.__values__ === void 0) {
    this.__values__ = toArray_default(this.value());
  }
  var done = this.__index__ >= this.__values__.length, value = done ? void 0 : this.__values__[this.__index__++];
  return { "done": done, "value": value };
}
var next_default = wrapperNext;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseNth.js
function baseNth(array4, n) {
  var length = array4.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return isIndex_default(n, length) ? array4[n] : void 0;
}
var baseNth_default = baseNth;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/nth.js
function nth(array4, n) {
  return array4 && array4.length ? baseNth_default(array4, toInteger_default(n)) : void 0;
}
var nth_default = nth;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/nthArg.js
function nthArg(n) {
  n = toInteger_default(n);
  return baseRest_default(function(args) {
    return baseNth_default(args, n);
  });
}
var nthArg_default = nthArg;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseUnset.js
function baseUnset(object4, path) {
  path = castPath_default(path, object4);
  object4 = parent_default(object4, path);
  return object4 == null || delete object4[toKey_default(last_default(path))];
}
var baseUnset_default = baseUnset;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_customOmitClone.js
function customOmitClone(value) {
  return isPlainObject_default(value) ? void 0 : value;
}
var customOmitClone_default = customOmitClone;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/omit.js
var CLONE_DEEP_FLAG8 = 1;
var CLONE_FLAT_FLAG2 = 2;
var CLONE_SYMBOLS_FLAG6 = 4;
var omit = flatRest_default(function(object4, paths) {
  var result2 = {};
  if (object4 == null) {
    return result2;
  }
  var isDeep = false;
  paths = arrayMap_default(paths, function(path) {
    path = castPath_default(path, object4);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject_default(object4, getAllKeysIn_default(object4), result2);
  if (isDeep) {
    result2 = baseClone_default(result2, CLONE_DEEP_FLAG8 | CLONE_FLAT_FLAG2 | CLONE_SYMBOLS_FLAG6, customOmitClone_default);
  }
  var length = paths.length;
  while (length--) {
    baseUnset_default(result2, paths[length]);
  }
  return result2;
});
var omit_default = omit;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSet.js
function baseSet(object4, path, value, customizer) {
  if (!isObject_default(object4)) {
    return object4;
  }
  path = castPath_default(path, object4);
  var index = -1, length = path.length, lastIndex = length - 1, nested = object4;
  while (nested != null && ++index < length) {
    var key = toKey_default(path[index]), newValue = value;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object4;
    }
    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject_default(objValue) ? objValue : isIndex_default(path[index + 1]) ? [] : {};
      }
    }
    assignValue_default(nested, key, newValue);
    nested = nested[key];
  }
  return object4;
}
var baseSet_default = baseSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_basePickBy.js
function basePickBy(object4, paths, predicate) {
  var index = -1, length = paths.length, result2 = {};
  while (++index < length) {
    var path = paths[index], value = baseGet_default(object4, path);
    if (predicate(value, path)) {
      baseSet_default(result2, castPath_default(path, object4), value);
    }
  }
  return result2;
}
var basePickBy_default = basePickBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pickBy.js
function pickBy(object4, predicate) {
  if (object4 == null) {
    return {};
  }
  var props = arrayMap_default(getAllKeysIn_default(object4), function(prop) {
    return [prop];
  });
  predicate = baseIteratee_default(predicate);
  return basePickBy_default(object4, props, function(value, path) {
    return predicate(value, path[0]);
  });
}
var pickBy_default = pickBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/omitBy.js
function omitBy(object4, predicate) {
  return pickBy_default(object4, negate_default(baseIteratee_default(predicate)));
}
var omitBy_default = omitBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/once.js
function once(func) {
  return before_default(2, func);
}
var once_default = once;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSortBy.js
function baseSortBy(array4, comparer) {
  var length = array4.length;
  array4.sort(comparer);
  while (length--) {
    array4[length] = array4[length].value;
  }
  return array4;
}
var baseSortBy_default = baseSortBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_compareAscending.js
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol_default(value);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol_default(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var compareAscending_default = compareAscending;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_compareMultiple.js
function compareMultiple(object4, other, orders) {
  var index = -1, objCriteria = object4.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
  while (++index < length) {
    var result2 = compareAscending_default(objCriteria[index], othCriteria[index]);
    if (result2) {
      if (index >= ordersLength) {
        return result2;
      }
      var order = orders[index];
      return result2 * (order == "desc" ? -1 : 1);
    }
  }
  return object4.index - other.index;
}
var compareMultiple_default = compareMultiple;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseOrderBy.js
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap_default(iteratees, function(iteratee2) {
      if (isArray_default(iteratee2)) {
        return function(value) {
          return baseGet_default(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
        };
      }
      return iteratee2;
    });
  } else {
    iteratees = [identity_default];
  }
  var index = -1;
  iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
  var result2 = baseMap_default(collection, function(value, key, collection2) {
    var criteria = arrayMap_default(iteratees, function(iteratee2) {
      return iteratee2(value);
    });
    return { "criteria": criteria, "index": ++index, "value": value };
  });
  return baseSortBy_default(result2, function(object4, other) {
    return compareMultiple_default(object4, other, orders);
  });
}
var baseOrderBy_default = baseOrderBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/orderBy.js
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_default(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? void 0 : orders;
  if (!isArray_default(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return baseOrderBy_default(collection, iteratees, orders);
}
var orderBy_default = orderBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createOver.js
function createOver(arrayFunc) {
  return flatRest_default(function(iteratees) {
    iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
    return baseRest_default(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee2) {
        return apply_default(iteratee2, thisArg, args);
      });
    });
  });
}
var createOver_default = createOver;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/over.js
var over = createOver_default(arrayMap_default);
var over_default = over;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_castRest.js
var castRest = baseRest_default;
var castRest_default = castRest;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/overArgs.js
var nativeMin9 = Math.min;
var overArgs = castRest_default(function(func, transforms) {
  transforms = transforms.length == 1 && isArray_default(transforms[0]) ? arrayMap_default(transforms[0], baseUnary_default(baseIteratee_default)) : arrayMap_default(baseFlatten_default(transforms, 1), baseUnary_default(baseIteratee_default));
  var funcsLength = transforms.length;
  return baseRest_default(function(args) {
    var index = -1, length = nativeMin9(args.length, funcsLength);
    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }
    return apply_default(func, this, args);
  });
});
var overArgs_default = overArgs;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/overEvery.js
var overEvery = createOver_default(arrayEvery_default);
var overEvery_default = overEvery;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/overSome.js
var overSome = createOver_default(arraySome_default);
var overSome_default = overSome;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseRepeat.js
var MAX_SAFE_INTEGER4 = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat(string3, n) {
  var result2 = "";
  if (!string3 || n < 1 || n > MAX_SAFE_INTEGER4) {
    return result2;
  }
  do {
    if (n % 2) {
      result2 += string3;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string3 += string3;
    }
  } while (n);
  return result2;
}
var baseRepeat_default = baseRepeat;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_asciiSize.js
var asciiSize = baseProperty_default("length");
var asciiSize_default = asciiSize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_unicodeSize.js
var rsAstralRange4 = "\\ud800-\\udfff";
var rsComboMarksRange5 = "\\u0300-\\u036f";
var reComboHalfMarksRange5 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange5 = "\\u20d0-\\u20ff";
var rsComboRange5 = rsComboMarksRange5 + reComboHalfMarksRange5 + rsComboSymbolsRange5;
var rsVarRange4 = "\\ufe0e\\ufe0f";
var rsAstral2 = "[" + rsAstralRange4 + "]";
var rsCombo4 = "[" + rsComboRange5 + "]";
var rsFitz3 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier3 = "(?:" + rsCombo4 + "|" + rsFitz3 + ")";
var rsNonAstral3 = "[^" + rsAstralRange4 + "]";
var rsRegional3 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair3 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ4 = "\\u200d";
var reOptMod3 = rsModifier3 + "?";
var rsOptVar3 = "[" + rsVarRange4 + "]?";
var rsOptJoin3 = "(?:" + rsZWJ4 + "(?:" + [rsNonAstral3, rsRegional3, rsSurrPair3].join("|") + ")" + rsOptVar3 + reOptMod3 + ")*";
var rsSeq3 = rsOptVar3 + reOptMod3 + rsOptJoin3;
var rsSymbol2 = "(?:" + [rsNonAstral3 + rsCombo4 + "?", rsCombo4, rsRegional3, rsSurrPair3, rsAstral2].join("|") + ")";
var reUnicode2 = RegExp(rsFitz3 + "(?=" + rsFitz3 + ")|" + rsSymbol2 + rsSeq3, "g");
function unicodeSize(string3) {
  var result2 = reUnicode2.lastIndex = 0;
  while (reUnicode2.test(string3)) {
    ++result2;
  }
  return result2;
}
var unicodeSize_default = unicodeSize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_stringSize.js
function stringSize(string3) {
  return hasUnicode_default(string3) ? unicodeSize_default(string3) : asciiSize_default(string3);
}
var stringSize_default = stringSize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createPadding.js
var nativeCeil2 = Math.ceil;
function createPadding(length, chars) {
  chars = chars === void 0 ? " " : baseToString_default(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat_default(chars, length) : chars;
  }
  var result2 = baseRepeat_default(chars, nativeCeil2(length / stringSize_default(chars)));
  return hasUnicode_default(chars) ? castSlice_default(stringToArray_default(result2), 0, length).join("") : result2.slice(0, length);
}
var createPadding_default = createPadding;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pad.js
var nativeCeil3 = Math.ceil;
var nativeFloor2 = Math.floor;
function pad(string3, length, chars) {
  string3 = toString_default(string3);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string3) : 0;
  if (!length || strLength >= length) {
    return string3;
  }
  var mid = (length - strLength) / 2;
  return createPadding_default(nativeFloor2(mid), chars) + string3 + createPadding_default(nativeCeil3(mid), chars);
}
var pad_default = pad;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/padEnd.js
function padEnd(string3, length, chars) {
  string3 = toString_default(string3);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string3) : 0;
  return length && strLength < length ? string3 + createPadding_default(length - strLength, chars) : string3;
}
var padEnd_default = padEnd;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/padStart.js
function padStart(string3, length, chars) {
  string3 = toString_default(string3);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string3) : 0;
  return length && strLength < length ? createPadding_default(length - strLength, chars) + string3 : string3;
}
var padStart_default = padStart;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/parseInt.js
var reTrimStart2 = /^\s+/;
var nativeParseInt = root_default.parseInt;
function parseInt2(string3, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(toString_default(string3).replace(reTrimStart2, ""), radix || 0);
}
var parseInt_default = parseInt2;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/partial.js
var WRAP_PARTIAL_FLAG7 = 32;
var partial = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partial));
  return createWrap_default(func, WRAP_PARTIAL_FLAG7, void 0, partials, holders);
});
partial.placeholder = {};
var partial_default = partial;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/partialRight.js
var WRAP_PARTIAL_RIGHT_FLAG4 = 64;
var partialRight = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partialRight));
  return createWrap_default(func, WRAP_PARTIAL_RIGHT_FLAG4, void 0, partials, holders);
});
partialRight.placeholder = {};
var partialRight_default = partialRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/partition.js
var partition = createAggregator_default(function(result2, value, key) {
  result2[key ? 0 : 1].push(value);
}, function() {
  return [[], []];
});
var partition_default = partition;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_basePick.js
function basePick(object4, paths) {
  return basePickBy_default(object4, paths, function(value, path) {
    return hasIn_default(object4, path);
  });
}
var basePick_default = basePick;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pick.js
var pick = flatRest_default(function(object4, paths) {
  return object4 == null ? {} : basePick_default(object4, paths);
});
var pick_default = pick;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/plant.js
function wrapperPlant(value) {
  var result2, parent2 = this;
  while (parent2 instanceof baseLodash_default) {
    var clone2 = wrapperClone_default(parent2);
    clone2.__index__ = 0;
    clone2.__values__ = void 0;
    if (result2) {
      previous.__wrapped__ = clone2;
    } else {
      result2 = clone2;
    }
    var previous = clone2;
    parent2 = parent2.__wrapped__;
  }
  previous.__wrapped__ = value;
  return result2;
}
var plant_default = wrapperPlant;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/propertyOf.js
function propertyOf(object4) {
  return function(path) {
    return object4 == null ? void 0 : baseGet_default(object4, path);
  };
}
var propertyOf_default = propertyOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseIndexOfWith.js
function baseIndexOfWith(array4, value, fromIndex, comparator) {
  var index = fromIndex - 1, length = array4.length;
  while (++index < length) {
    if (comparator(array4[index], value)) {
      return index;
    }
  }
  return -1;
}
var baseIndexOfWith_default = baseIndexOfWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_basePullAll.js
var arrayProto3 = Array.prototype;
var splice2 = arrayProto3.splice;
function basePullAll(array4, values2, iteratee2, comparator) {
  var indexOf2 = comparator ? baseIndexOfWith_default : baseIndexOf_default, index = -1, length = values2.length, seen = array4;
  if (array4 === values2) {
    values2 = copyArray_default(values2);
  }
  if (iteratee2) {
    seen = arrayMap_default(array4, baseUnary_default(iteratee2));
  }
  while (++index < length) {
    var fromIndex = 0, value = values2[index], computed190 = iteratee2 ? iteratee2(value) : value;
    while ((fromIndex = indexOf2(seen, computed190, fromIndex, comparator)) > -1) {
      if (seen !== array4) {
        splice2.call(seen, fromIndex, 1);
      }
      splice2.call(array4, fromIndex, 1);
    }
  }
  return array4;
}
var basePullAll_default = basePullAll;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pullAll.js
function pullAll(array4, values2) {
  return array4 && array4.length && values2 && values2.length ? basePullAll_default(array4, values2) : array4;
}
var pullAll_default = pullAll;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pull.js
var pull = baseRest_default(pullAll_default);
var pull_default = pull;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pullAllBy.js
function pullAllBy(array4, values2, iteratee2) {
  return array4 && array4.length && values2 && values2.length ? basePullAll_default(array4, values2, baseIteratee_default(iteratee2, 2)) : array4;
}
var pullAllBy_default = pullAllBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pullAllWith.js
function pullAllWith(array4, values2, comparator) {
  return array4 && array4.length && values2 && values2.length ? basePullAll_default(array4, values2, void 0, comparator) : array4;
}
var pullAllWith_default = pullAllWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_basePullAt.js
var arrayProto4 = Array.prototype;
var splice3 = arrayProto4.splice;
function basePullAt(array4, indexes) {
  var length = array4 ? indexes.length : 0, lastIndex = length - 1;
  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (isIndex_default(index)) {
        splice3.call(array4, index, 1);
      } else {
        baseUnset_default(array4, index);
      }
    }
  }
  return array4;
}
var basePullAt_default = basePullAt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/pullAt.js
var pullAt = flatRest_default(function(array4, indexes) {
  var length = array4 == null ? 0 : array4.length, result2 = baseAt_default(array4, indexes);
  basePullAt_default(array4, arrayMap_default(indexes, function(index) {
    return isIndex_default(index, length) ? +index : index;
  }).sort(compareAscending_default));
  return result2;
});
var pullAt_default = pullAt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseRandom.js
var nativeFloor3 = Math.floor;
var nativeRandom = Math.random;
function baseRandom(lower, upper) {
  return lower + nativeFloor3(nativeRandom() * (upper - lower + 1));
}
var baseRandom_default = baseRandom;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/random.js
var freeParseFloat = parseFloat;
var nativeMin10 = Math.min;
var nativeRandom2 = Math.random;
function random(lower, upper, floating) {
  if (floating && typeof floating != "boolean" && isIterateeCall_default(lower, upper, floating)) {
    upper = floating = void 0;
  }
  if (floating === void 0) {
    if (typeof upper == "boolean") {
      floating = upper;
      upper = void 0;
    } else if (typeof lower == "boolean") {
      floating = lower;
      lower = void 0;
    }
  }
  if (lower === void 0 && upper === void 0) {
    lower = 0;
    upper = 1;
  } else {
    lower = toFinite_default(lower);
    if (upper === void 0) {
      upper = lower;
      lower = 0;
    } else {
      upper = toFinite_default(upper);
    }
  }
  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }
  if (floating || lower % 1 || upper % 1) {
    var rand = nativeRandom2();
    return nativeMin10(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
  }
  return baseRandom_default(lower, upper);
}
var random_default = random;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseRange.js
var nativeCeil4 = Math.ceil;
var nativeMax13 = Math.max;
function baseRange(start, end2, step, fromRight) {
  var index = -1, length = nativeMax13(nativeCeil4((end2 - start) / (step || 1)), 0), result2 = Array(length);
  while (length--) {
    result2[fromRight ? length : ++index] = start;
    start += step;
  }
  return result2;
}
var baseRange_default = baseRange;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createRange.js
function createRange(fromRight) {
  return function(start, end2, step) {
    if (step && typeof step != "number" && isIterateeCall_default(start, end2, step)) {
      end2 = step = void 0;
    }
    start = toFinite_default(start);
    if (end2 === void 0) {
      end2 = start;
      start = 0;
    } else {
      end2 = toFinite_default(end2);
    }
    step = step === void 0 ? start < end2 ? 1 : -1 : toFinite_default(step);
    return baseRange_default(start, end2, step, fromRight);
  };
}
var createRange_default = createRange;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/range.js
var range = createRange_default();
var range_default = range;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/rangeRight.js
var rangeRight = createRange_default(true);
var rangeRight_default = rangeRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/rearg.js
var WRAP_REARG_FLAG4 = 256;
var rearg = flatRest_default(function(func, indexes) {
  return createWrap_default(func, WRAP_REARG_FLAG4, void 0, void 0, void 0, indexes);
});
var rearg_default = rearg;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseReduce.js
function baseReduce(collection, iteratee2, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection2) {
    accumulator = initAccum ? (initAccum = false, value) : iteratee2(accumulator, value, index, collection2);
  });
  return accumulator;
}
var baseReduce_default = baseReduce;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/reduce.js
function reduce(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduce_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEach_default);
}
var reduce_default = reduce;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayReduceRight.js
function arrayReduceRight(array4, iteratee2, accumulator, initAccum) {
  var length = array4 == null ? 0 : array4.length;
  if (initAccum && length) {
    accumulator = array4[--length];
  }
  while (length--) {
    accumulator = iteratee2(accumulator, array4[length], length, array4);
  }
  return accumulator;
}
var arrayReduceRight_default = arrayReduceRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/reduceRight.js
function reduceRight(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduceRight_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEachRight_default);
}
var reduceRight_default = reduceRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/reject.js
function reject(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, negate_default(baseIteratee_default(predicate, 3)));
}
var reject_default = reject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/remove.js
function remove(array4, predicate) {
  var result2 = [];
  if (!(array4 && array4.length)) {
    return result2;
  }
  var index = -1, indexes = [], length = array4.length;
  predicate = baseIteratee_default(predicate, 3);
  while (++index < length) {
    var value = array4[index];
    if (predicate(value, index, array4)) {
      result2.push(value);
      indexes.push(index);
    }
  }
  basePullAt_default(array4, indexes);
  return result2;
}
var remove_default = remove;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/repeat.js
function repeat(string3, n, guard) {
  if (guard ? isIterateeCall_default(string3, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  return baseRepeat_default(toString_default(string3), n);
}
var repeat_default = repeat;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/replace.js
function replace() {
  var args = arguments, string3 = toString_default(args[0]);
  return args.length < 3 ? string3 : string3.replace(args[1], args[2]);
}
var replace_default = replace;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/rest.js
var FUNC_ERROR_TEXT10 = "Expected a function";
function rest(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT10);
  }
  start = start === void 0 ? start : toInteger_default(start);
  return baseRest_default(func, start);
}
var rest_default = rest;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/result.js
function result(object4, path, defaultValue) {
  path = castPath_default(path, object4);
  var index = -1, length = path.length;
  if (!length) {
    length = 1;
    object4 = void 0;
  }
  while (++index < length) {
    var value = object4 == null ? void 0 : object4[toKey_default(path[index])];
    if (value === void 0) {
      index = length;
      value = defaultValue;
    }
    object4 = isFunction_default(value) ? value.call(object4) : value;
  }
  return object4;
}
var result_default = result;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/reverse.js
var arrayProto5 = Array.prototype;
var nativeReverse = arrayProto5.reverse;
function reverse(array4) {
  return array4 == null ? array4 : nativeReverse.call(array4);
}
var reverse_default = reverse;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/round.js
var round = createRound_default("round");
var round_default = round;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arraySample.js
function arraySample(array4) {
  var length = array4.length;
  return length ? array4[baseRandom_default(0, length - 1)] : void 0;
}
var arraySample_default = arraySample;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSample.js
function baseSample(collection) {
  return arraySample_default(values_default(collection));
}
var baseSample_default = baseSample;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sample.js
function sample(collection) {
  var func = isArray_default(collection) ? arraySample_default : baseSample_default;
  return func(collection);
}
var sample_default = sample;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_shuffleSelf.js
function shuffleSelf(array4, size4) {
  var index = -1, length = array4.length, lastIndex = length - 1;
  size4 = size4 === void 0 ? length : size4;
  while (++index < size4) {
    var rand = baseRandom_default(index, lastIndex), value = array4[rand];
    array4[rand] = array4[index];
    array4[index] = value;
  }
  array4.length = size4;
  return array4;
}
var shuffleSelf_default = shuffleSelf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arraySampleSize.js
function arraySampleSize(array4, n) {
  return shuffleSelf_default(copyArray_default(array4), baseClamp_default(n, 0, array4.length));
}
var arraySampleSize_default = arraySampleSize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSampleSize.js
function baseSampleSize(collection, n) {
  var array4 = values_default(collection);
  return shuffleSelf_default(array4, baseClamp_default(n, 0, array4.length));
}
var baseSampleSize_default = baseSampleSize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sampleSize.js
function sampleSize(collection, n, guard) {
  if (guard ? isIterateeCall_default(collection, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  var func = isArray_default(collection) ? arraySampleSize_default : baseSampleSize_default;
  return func(collection, n);
}
var sampleSize_default = sampleSize;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/set.js
function set3(object4, path, value) {
  return object4 == null ? object4 : baseSet_default(object4, path, value);
}
var set_default = set3;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/setWith.js
function setWith(object4, path, value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object4 == null ? object4 : baseSet_default(object4, path, value, customizer);
}
var setWith_default = setWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_arrayShuffle.js
function arrayShuffle(array4) {
  return shuffleSelf_default(copyArray_default(array4));
}
var arrayShuffle_default = arrayShuffle;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseShuffle.js
function baseShuffle(collection) {
  return shuffleSelf_default(values_default(collection));
}
var baseShuffle_default = baseShuffle;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/shuffle.js
function shuffle(collection) {
  var func = isArray_default(collection) ? arrayShuffle_default : baseShuffle_default;
  return func(collection);
}
var shuffle_default = shuffle;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/size.js
var mapTag10 = "[object Map]";
var setTag10 = "[object Set]";
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike_default(collection)) {
    return isString_default(collection) ? stringSize_default(collection) : collection.length;
  }
  var tag = getTag_default(collection);
  if (tag == mapTag10 || tag == setTag10) {
    return collection.size;
  }
  return baseKeys_default(collection).length;
}
var size_default = size;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/slice.js
function slice(array4, start, end2) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  if (end2 && typeof end2 != "number" && isIterateeCall_default(array4, start, end2)) {
    start = 0;
    end2 = length;
  } else {
    start = start == null ? 0 : toInteger_default(start);
    end2 = end2 === void 0 ? length : toInteger_default(end2);
  }
  return baseSlice_default(array4, start, end2);
}
var slice_default = slice;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/snakeCase.js
var snakeCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? "_" : "") + word.toLowerCase();
});
var snakeCase_default = snakeCase;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSome.js
function baseSome(collection, predicate) {
  var result2;
  baseEach_default(collection, function(value, index, collection2) {
    result2 = predicate(value, index, collection2);
    return !result2;
  });
  return !!result2;
}
var baseSome_default = baseSome;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/some.js
function some(collection, predicate, guard) {
  var func = isArray_default(collection) ? arraySome_default : baseSome_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var some_default = some;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortBy.js
var sortBy = baseRest_default(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall_default(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall_default(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy_default(collection, baseFlatten_default(iteratees, 1), []);
});
var sortBy_default = sortBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSortedIndexBy.js
var MAX_ARRAY_LENGTH3 = 4294967295;
var MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH3 - 1;
var nativeFloor4 = Math.floor;
var nativeMin11 = Math.min;
function baseSortedIndexBy(array4, value, iteratee2, retHighest) {
  var low = 0, high = array4 == null ? 0 : array4.length;
  if (high === 0) {
    return 0;
  }
  value = iteratee2(value);
  var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol_default(value), valIsUndefined = value === void 0;
  while (low < high) {
    var mid = nativeFloor4((low + high) / 2), computed190 = iteratee2(array4[mid]), othIsDefined = computed190 !== void 0, othIsNull = computed190 === null, othIsReflexive = computed190 === computed190, othIsSymbol = isSymbol_default(computed190);
    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed190 <= value : computed190 < value;
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin11(high, MAX_ARRAY_INDEX);
}
var baseSortedIndexBy_default = baseSortedIndexBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSortedIndex.js
var MAX_ARRAY_LENGTH4 = 4294967295;
var HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH4 >>> 1;
function baseSortedIndex(array4, value, retHighest) {
  var low = 0, high = array4 == null ? low : array4.length;
  if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = low + high >>> 1, computed190 = array4[mid];
      if (computed190 !== null && !isSymbol_default(computed190) && (retHighest ? computed190 <= value : computed190 < value)) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return baseSortedIndexBy_default(array4, value, identity_default, retHighest);
}
var baseSortedIndex_default = baseSortedIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedIndex.js
function sortedIndex(array4, value) {
  return baseSortedIndex_default(array4, value);
}
var sortedIndex_default = sortedIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedIndexBy.js
function sortedIndexBy(array4, value, iteratee2) {
  return baseSortedIndexBy_default(array4, value, baseIteratee_default(iteratee2, 2));
}
var sortedIndexBy_default = sortedIndexBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedIndexOf.js
function sortedIndexOf(array4, value) {
  var length = array4 == null ? 0 : array4.length;
  if (length) {
    var index = baseSortedIndex_default(array4, value);
    if (index < length && eq_default(array4[index], value)) {
      return index;
    }
  }
  return -1;
}
var sortedIndexOf_default = sortedIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedLastIndex.js
function sortedLastIndex(array4, value) {
  return baseSortedIndex_default(array4, value, true);
}
var sortedLastIndex_default = sortedLastIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedLastIndexBy.js
function sortedLastIndexBy(array4, value, iteratee2) {
  return baseSortedIndexBy_default(array4, value, baseIteratee_default(iteratee2, 2), true);
}
var sortedLastIndexBy_default = sortedLastIndexBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedLastIndexOf.js
function sortedLastIndexOf(array4, value) {
  var length = array4 == null ? 0 : array4.length;
  if (length) {
    var index = baseSortedIndex_default(array4, value, true) - 1;
    if (eq_default(array4[index], value)) {
      return index;
    }
  }
  return -1;
}
var sortedLastIndexOf_default = sortedLastIndexOf;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseSortedUniq.js
function baseSortedUniq(array4, iteratee2) {
  var index = -1, length = array4.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array4[index], computed190 = iteratee2 ? iteratee2(value) : value;
    if (!index || !eq_default(computed190, seen)) {
      var seen = computed190;
      result2[resIndex++] = value === 0 ? 0 : value;
    }
  }
  return result2;
}
var baseSortedUniq_default = baseSortedUniq;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedUniq.js
function sortedUniq(array4) {
  return array4 && array4.length ? baseSortedUniq_default(array4) : [];
}
var sortedUniq_default = sortedUniq;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sortedUniqBy.js
function sortedUniqBy(array4, iteratee2) {
  return array4 && array4.length ? baseSortedUniq_default(array4, baseIteratee_default(iteratee2, 2)) : [];
}
var sortedUniqBy_default = sortedUniqBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/split.js
var MAX_ARRAY_LENGTH5 = 4294967295;
function split(string3, separator, limit) {
  if (limit && typeof limit != "number" && isIterateeCall_default(string3, separator, limit)) {
    separator = limit = void 0;
  }
  limit = limit === void 0 ? MAX_ARRAY_LENGTH5 : limit >>> 0;
  if (!limit) {
    return [];
  }
  string3 = toString_default(string3);
  if (string3 && (typeof separator == "string" || separator != null && !isRegExp_default(separator))) {
    separator = baseToString_default(separator);
    if (!separator && hasUnicode_default(string3)) {
      return castSlice_default(stringToArray_default(string3), 0, limit);
    }
  }
  return string3.split(separator, limit);
}
var split_default = split;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/spread.js
var FUNC_ERROR_TEXT11 = "Expected a function";
var nativeMax14 = Math.max;
function spread(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT11);
  }
  start = start == null ? 0 : nativeMax14(toInteger_default(start), 0);
  return baseRest_default(function(args) {
    var array4 = args[start], otherArgs = castSlice_default(args, 0, start);
    if (array4) {
      arrayPush_default(otherArgs, array4);
    }
    return apply_default(func, this, otherArgs);
  });
}
var spread_default = spread;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/startCase.js
var startCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + upperFirst_default(word);
});
var startCase_default = startCase;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/startsWith.js
function startsWith(string3, target2, position) {
  string3 = toString_default(string3);
  position = position == null ? 0 : baseClamp_default(toInteger_default(position), 0, string3.length);
  target2 = baseToString_default(target2);
  return string3.slice(position, position + target2.length) == target2;
}
var startsWith_default = startsWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/stubObject.js
function stubObject() {
  return {};
}
var stubObject_default = stubObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/stubString.js
function stubString() {
  return "";
}
var stubString_default = stubString;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/stubTrue.js
function stubTrue() {
  return true;
}
var stubTrue_default = stubTrue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/subtract.js
var subtract = createMathOperation_default(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);
var subtract_default = subtract;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sum.js
function sum(array4) {
  return array4 && array4.length ? baseSum_default(array4, identity_default) : 0;
}
var sum_default = sum;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/sumBy.js
function sumBy(array4, iteratee2) {
  return array4 && array4.length ? baseSum_default(array4, baseIteratee_default(iteratee2, 2)) : 0;
}
var sumBy_default = sumBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/tail.js
function tail(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseSlice_default(array4, 1, length) : [];
}
var tail_default = tail;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/take.js
function take(array4, n, guard) {
  if (!(array4 && array4.length)) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array4, 0, n < 0 ? 0 : n);
}
var take_default = take;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/takeRight.js
function takeRight(array4, n, guard) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array4, n < 0 ? 0 : n, length);
}
var takeRight_default = takeRight;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/takeRightWhile.js
function takeRightWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3), false, true) : [];
}
var takeRightWhile_default = takeRightWhile;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/takeWhile.js
function takeWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3)) : [];
}
var takeWhile_default = takeWhile;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/tap.js
function tap(value, interceptor) {
  interceptor(value);
  return value;
}
var tap_default = tap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_customDefaultsAssignIn.js
var objectProto27 = Object.prototype;
var hasOwnProperty23 = objectProto27.hasOwnProperty;
function customDefaultsAssignIn(objValue, srcValue, key, object4) {
  if (objValue === void 0 || eq_default(objValue, objectProto27[key]) && !hasOwnProperty23.call(object4, key)) {
    return srcValue;
  }
  return objValue;
}
var customDefaultsAssignIn_default = customDefaultsAssignIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_escapeStringChar.js
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar(chr) {
  return "\\" + stringEscapes[chr];
}
var escapeStringChar_default = escapeStringChar;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_reInterpolate.js
var reInterpolate = /<%=([\s\S]+?)%>/g;
var reInterpolate_default = reInterpolate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_reEscape.js
var reEscape = /<%-([\s\S]+?)%>/g;
var reEscape_default = reEscape;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_reEvaluate.js
var reEvaluate = /<%([\s\S]+?)%>/g;
var reEvaluate_default = reEvaluate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/templateSettings.js
var templateSettings = {
  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "escape": reEscape_default,
  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "evaluate": reEvaluate_default,
  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "interpolate": reInterpolate_default,
  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  "variable": "",
  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  "imports": {
    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    "_": { "escape": escape_default }
  }
};
var templateSettings_default = templateSettings;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/template.js
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto28 = Object.prototype;
var hasOwnProperty24 = objectProto28.hasOwnProperty;
function template(string3, options, guard) {
  var settings = templateSettings_default.imports._.templateSettings || templateSettings_default;
  if (guard && isIterateeCall_default(string3, options, guard)) {
    options = void 0;
  }
  string3 = toString_default(string3);
  options = assignInWith_default({}, options, settings, customDefaultsAssignIn_default);
  var imports = assignInWith_default({}, options.imports, settings.imports, customDefaultsAssignIn_default), importsKeys = keys_default(imports), importsValues = baseValues_default(imports, importsKeys);
  var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp(
    (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate_default ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
    "g"
  );
  var sourceURL = hasOwnProperty24.call(options, "sourceURL") ? "//# sourceURL=" + (options.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string3.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset2) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string3.slice(index, offset2).replace(reUnescapedString, escapeStringChar_default);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index = offset2 + match.length;
    return match;
  });
  source += "';\n";
  var variable = hasOwnProperty24.call(options, "variable") && options.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result2 = attempt_default(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result2.source = source;
  if (isError_default(result2)) {
    throw result2;
  }
  return result2;
}
var template_default = template;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/throttle.js
var FUNC_ERROR_TEXT12 = "Expected a function";
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT12);
  }
  if (isObject_default(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce_default(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_default = throttle;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/thru.js
function thru(value, interceptor) {
  return interceptor(value);
}
var thru_default = thru;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/times.js
var MAX_SAFE_INTEGER5 = 9007199254740991;
var MAX_ARRAY_LENGTH6 = 4294967295;
var nativeMin12 = Math.min;
function times(n, iteratee2) {
  n = toInteger_default(n);
  if (n < 1 || n > MAX_SAFE_INTEGER5) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH6, length = nativeMin12(n, MAX_ARRAY_LENGTH6);
  iteratee2 = castFunction_default(iteratee2);
  n -= MAX_ARRAY_LENGTH6;
  var result2 = baseTimes_default(length, iteratee2);
  while (++index < n) {
    iteratee2(index);
  }
  return result2;
}
var times_default = times;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toIterator.js
function wrapperToIterator() {
  return this;
}
var toIterator_default = wrapperToIterator;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseWrapperValue.js
function baseWrapperValue(value, actions) {
  var result2 = value;
  if (result2 instanceof LazyWrapper_default) {
    result2 = result2.value();
  }
  return arrayReduce_default(actions, function(result3, action) {
    return action.func.apply(action.thisArg, arrayPush_default([result3], action.args));
  }, result2);
}
var baseWrapperValue_default = baseWrapperValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/wrapperValue.js
function wrapperValue() {
  return baseWrapperValue_default(this.__wrapped__, this.__actions__);
}
var wrapperValue_default = wrapperValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toLower.js
function toLower(value) {
  return toString_default(value).toLowerCase();
}
var toLower_default = toLower;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toPath.js
function toPath(value) {
  if (isArray_default(value)) {
    return arrayMap_default(value, toKey_default);
  }
  return isSymbol_default(value) ? [value] : copyArray_default(stringToPath_default(toString_default(value)));
}
var toPath_default = toPath;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toSafeInteger.js
var MAX_SAFE_INTEGER6 = 9007199254740991;
function toSafeInteger(value) {
  return value ? baseClamp_default(toInteger_default(value), -MAX_SAFE_INTEGER6, MAX_SAFE_INTEGER6) : value === 0 ? value : 0;
}
var toSafeInteger_default = toSafeInteger;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/toUpper.js
function toUpper(value) {
  return toString_default(value).toUpperCase();
}
var toUpper_default = toUpper;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/transform.js
function transform(object4, iteratee2, accumulator) {
  var isArr = isArray_default(object4), isArrLike = isArr || isBuffer_default(object4) || isTypedArray_default(object4);
  iteratee2 = baseIteratee_default(iteratee2, 4);
  if (accumulator == null) {
    var Ctor = object4 && object4.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor() : [];
    } else if (isObject_default(object4)) {
      accumulator = isFunction_default(Ctor) ? baseCreate_default(getPrototype_default(object4)) : {};
    } else {
      accumulator = {};
    }
  }
  (isArrLike ? arrayEach_default : baseForOwn_default)(object4, function(value, index, object5) {
    return iteratee2(accumulator, value, index, object5);
  });
  return accumulator;
}
var transform_default = transform;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_charsEndIndex.js
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;
  while (index-- && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {
  }
  return index;
}
var charsEndIndex_default = charsEndIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_charsStartIndex.js
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1, length = strSymbols.length;
  while (++index < length && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {
  }
  return index;
}
var charsStartIndex_default = charsStartIndex;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/trim.js
function trim(string3, chars, guard) {
  string3 = toString_default(string3);
  if (string3 && (guard || chars === void 0)) {
    return baseTrim_default(string3);
  }
  if (!string3 || !(chars = baseToString_default(chars))) {
    return string3;
  }
  var strSymbols = stringToArray_default(string3), chrSymbols = stringToArray_default(chars), start = charsStartIndex_default(strSymbols, chrSymbols), end2 = charsEndIndex_default(strSymbols, chrSymbols) + 1;
  return castSlice_default(strSymbols, start, end2).join("");
}
var trim_default = trim;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/trimEnd.js
function trimEnd(string3, chars, guard) {
  string3 = toString_default(string3);
  if (string3 && (guard || chars === void 0)) {
    return string3.slice(0, trimmedEndIndex_default(string3) + 1);
  }
  if (!string3 || !(chars = baseToString_default(chars))) {
    return string3;
  }
  var strSymbols = stringToArray_default(string3), end2 = charsEndIndex_default(strSymbols, stringToArray_default(chars)) + 1;
  return castSlice_default(strSymbols, 0, end2).join("");
}
var trimEnd_default = trimEnd;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/trimStart.js
var reTrimStart3 = /^\s+/;
function trimStart(string3, chars, guard) {
  string3 = toString_default(string3);
  if (string3 && (guard || chars === void 0)) {
    return string3.replace(reTrimStart3, "");
  }
  if (!string3 || !(chars = baseToString_default(chars))) {
    return string3;
  }
  var strSymbols = stringToArray_default(string3), start = charsStartIndex_default(strSymbols, stringToArray_default(chars));
  return castSlice_default(strSymbols, start).join("");
}
var trimStart_default = trimStart;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/truncate.js
var DEFAULT_TRUNC_LENGTH = 30;
var DEFAULT_TRUNC_OMISSION = "...";
var reFlags2 = /\w*$/;
function truncate(string3, options) {
  var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
  if (isObject_default(options)) {
    var separator = "separator" in options ? options.separator : separator;
    length = "length" in options ? toInteger_default(options.length) : length;
    omission = "omission" in options ? baseToString_default(options.omission) : omission;
  }
  string3 = toString_default(string3);
  var strLength = string3.length;
  if (hasUnicode_default(string3)) {
    var strSymbols = stringToArray_default(string3);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string3;
  }
  var end2 = length - stringSize_default(omission);
  if (end2 < 1) {
    return omission;
  }
  var result2 = strSymbols ? castSlice_default(strSymbols, 0, end2).join("") : string3.slice(0, end2);
  if (separator === void 0) {
    return result2 + omission;
  }
  if (strSymbols) {
    end2 += result2.length - end2;
  }
  if (isRegExp_default(separator)) {
    if (string3.slice(end2).search(separator)) {
      var match, substring = result2;
      if (!separator.global) {
        separator = RegExp(separator.source, toString_default(reFlags2.exec(separator)) + "g");
      }
      separator.lastIndex = 0;
      while (match = separator.exec(substring)) {
        var newEnd = match.index;
      }
      result2 = result2.slice(0, newEnd === void 0 ? end2 : newEnd);
    }
  } else if (string3.indexOf(baseToString_default(separator), end2) != end2) {
    var index = result2.lastIndexOf(separator);
    if (index > -1) {
      result2 = result2.slice(0, index);
    }
  }
  return result2 + omission;
}
var truncate_default = truncate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unary.js
function unary(func) {
  return ary_default(func, 1);
}
var unary_default = unary;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_unescapeHtmlChar.js
var htmlUnescapes = {
  "&amp;": "&",
  "&lt;": "<",
  "&gt;": ">",
  "&quot;": '"',
  "&#39;": "'"
};
var unescapeHtmlChar = basePropertyOf_default(htmlUnescapes);
var unescapeHtmlChar_default = unescapeHtmlChar;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unescape.js
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;
var reHasEscapedHtml = RegExp(reEscapedHtml.source);
function unescape(string3) {
  string3 = toString_default(string3);
  return string3 && reHasEscapedHtml.test(string3) ? string3.replace(reEscapedHtml, unescapeHtmlChar_default) : string3;
}
var unescape_default = unescape;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_createSet.js
var INFINITY6 = 1 / 0;
var createSet = !(Set_default && 1 / setToArray_default(new Set_default([, -0]))[1] == INFINITY6) ? noop_default : function(values2) {
  return new Set_default(values2);
};
var createSet_default = createSet;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseUniq.js
var LARGE_ARRAY_SIZE3 = 200;
function baseUniq(array4, iteratee2, comparator) {
  var index = -1, includes2 = arrayIncludes_default, length = array4.length, isCommon = true, result2 = [], seen = result2;
  if (comparator) {
    isCommon = false;
    includes2 = arrayIncludesWith_default;
  } else if (length >= LARGE_ARRAY_SIZE3) {
    var set5 = iteratee2 ? null : createSet_default(array4);
    if (set5) {
      return setToArray_default(set5);
    }
    isCommon = false;
    includes2 = cacheHas_default;
    seen = new SetCache_default();
  } else {
    seen = iteratee2 ? [] : result2;
  }
  outer:
    while (++index < length) {
      var value = array4[index], computed190 = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed190 === computed190) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed190) {
            continue outer;
          }
        }
        if (iteratee2) {
          seen.push(computed190);
        }
        result2.push(value);
      } else if (!includes2(seen, computed190, comparator)) {
        if (seen !== result2) {
          seen.push(computed190);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseUniq_default = baseUniq;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/union.js
var union = baseRest_default(function(arrays) {
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true));
});
var union_default = union;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unionBy.js
var unionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2));
});
var unionBy_default = unionBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unionWith.js
var unionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), void 0, comparator);
});
var unionWith_default = unionWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/uniq.js
function uniq(array4) {
  return array4 && array4.length ? baseUniq_default(array4) : [];
}
var uniq_default = uniq;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/uniqBy.js
function uniqBy(array4, iteratee2) {
  return array4 && array4.length ? baseUniq_default(array4, baseIteratee_default(iteratee2, 2)) : [];
}
var uniqBy_default = uniqBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/uniqWith.js
function uniqWith(array4, comparator) {
  comparator = typeof comparator == "function" ? comparator : void 0;
  return array4 && array4.length ? baseUniq_default(array4, void 0, comparator) : [];
}
var uniqWith_default = uniqWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/uniqueId.js
var idCounter = 0;
function uniqueId(prefix) {
  var id = ++idCounter;
  return toString_default(prefix) + id;
}
var uniqueId_default = uniqueId;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unset.js
function unset(object4, path) {
  return object4 == null ? true : baseUnset_default(object4, path);
}
var unset_default = unset;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unzip.js
var nativeMax15 = Math.max;
function unzip(array4) {
  if (!(array4 && array4.length)) {
    return [];
  }
  var length = 0;
  array4 = arrayFilter_default(array4, function(group) {
    if (isArrayLikeObject_default(group)) {
      length = nativeMax15(group.length, length);
      return true;
    }
  });
  return baseTimes_default(length, function(index) {
    return arrayMap_default(array4, baseProperty_default(index));
  });
}
var unzip_default = unzip;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/unzipWith.js
function unzipWith(array4, iteratee2) {
  if (!(array4 && array4.length)) {
    return [];
  }
  var result2 = unzip_default(array4);
  if (iteratee2 == null) {
    return result2;
  }
  return arrayMap_default(result2, function(group) {
    return apply_default(iteratee2, void 0, group);
  });
}
var unzipWith_default = unzipWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseUpdate.js
function baseUpdate(object4, path, updater, customizer) {
  return baseSet_default(object4, path, updater(baseGet_default(object4, path)), customizer);
}
var baseUpdate_default = baseUpdate;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/update.js
function update(object4, path, updater) {
  return object4 == null ? object4 : baseUpdate_default(object4, path, castFunction_default(updater));
}
var update_default = update;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/updateWith.js
function updateWith(object4, path, updater, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object4 == null ? object4 : baseUpdate_default(object4, path, castFunction_default(updater), customizer);
}
var updateWith_default = updateWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/upperCase.js
var upperCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + word.toUpperCase();
});
var upperCase_default = upperCase;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/valuesIn.js
function valuesIn(object4) {
  return object4 == null ? [] : baseValues_default(object4, keysIn_default(object4));
}
var valuesIn_default = valuesIn;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/without.js
var without = baseRest_default(function(array4, values2) {
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, values2) : [];
});
var without_default = without;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/wrap.js
function wrap(value, wrapper) {
  return partial_default(castFunction_default(wrapper), value);
}
var wrap_default = wrap;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/wrapperAt.js
var wrapperAt = flatRest_default(function(paths) {
  var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object4) {
    return baseAt_default(object4, paths);
  };
  if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper_default) || !isIndex_default(start)) {
    return this.thru(interceptor);
  }
  value = value.slice(start, +start + (length ? 1 : 0));
  value.__actions__.push({
    "func": thru_default,
    "args": [interceptor],
    "thisArg": void 0
  });
  return new LodashWrapper_default(value, this.__chain__).thru(function(array4) {
    if (length && !array4.length) {
      array4.push(void 0);
    }
    return array4;
  });
});
var wrapperAt_default = wrapperAt;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/wrapperChain.js
function wrapperChain() {
  return chain_default(this);
}
var wrapperChain_default = wrapperChain;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/wrapperReverse.js
function wrapperReverse() {
  var value = this.__wrapped__;
  if (value instanceof LazyWrapper_default) {
    var wrapped = value;
    if (this.__actions__.length) {
      wrapped = new LazyWrapper_default(this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      "func": thru_default,
      "args": [reverse_default],
      "thisArg": void 0
    });
    return new LodashWrapper_default(wrapped, this.__chain__);
  }
  return this.thru(reverse_default);
}
var wrapperReverse_default = wrapperReverse;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseXor.js
function baseXor(arrays, iteratee2, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? baseUniq_default(arrays[0]) : [];
  }
  var index = -1, result2 = Array(length);
  while (++index < length) {
    var array4 = arrays[index], othIndex = -1;
    while (++othIndex < length) {
      if (othIndex != index) {
        result2[index] = baseDifference_default(result2[index] || array4, arrays[othIndex], iteratee2, comparator);
      }
    }
  }
  return baseUniq_default(baseFlatten_default(result2, 1), iteratee2, comparator);
}
var baseXor_default = baseXor;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/xor.js
var xor = baseRest_default(function(arrays) {
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default));
});
var xor_default = xor;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/xorBy.js
var xorBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), baseIteratee_default(iteratee2, 2));
});
var xorBy_default = xorBy;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/xorWith.js
var xorWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), void 0, comparator);
});
var xorWith_default = xorWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/zip.js
var zip = baseRest_default(unzip_default);
var zip_default = zip;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_baseZipObject.js
function baseZipObject(props, values2, assignFunc) {
  var index = -1, length = props.length, valsLength = values2.length, result2 = {};
  while (++index < length) {
    var value = index < valsLength ? values2[index] : void 0;
    assignFunc(result2, props[index], value);
  }
  return result2;
}
var baseZipObject_default = baseZipObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/zipObject.js
function zipObject(props, values2) {
  return baseZipObject_default(props || [], values2 || [], assignValue_default);
}
var zipObject_default = zipObject;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/zipObjectDeep.js
function zipObjectDeep(props, values2) {
  return baseZipObject_default(props || [], values2 || [], baseSet_default);
}
var zipObjectDeep_default = zipObjectDeep;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/zipWith.js
var zipWith = baseRest_default(function(arrays) {
  var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : void 0;
  iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : void 0;
  return unzipWith_default(arrays, iteratee2);
});
var zipWith_default = zipWith;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/array.default.js
var array_default_default = {
  chunk: chunk_default,
  compact: compact_default,
  concat: concat_default,
  difference: difference_default,
  differenceBy: differenceBy_default,
  differenceWith: differenceWith_default,
  drop: drop_default,
  dropRight: dropRight_default,
  dropRightWhile: dropRightWhile_default,
  dropWhile: dropWhile_default,
  fill: fill_default,
  findIndex: findIndex_default,
  findLastIndex: findLastIndex_default,
  first: head_default,
  flatten: flatten_default,
  flattenDeep: flattenDeep_default,
  flattenDepth: flattenDepth_default,
  fromPairs: fromPairs_default,
  head: head_default,
  indexOf: indexOf_default,
  initial: initial_default,
  intersection: intersection_default,
  intersectionBy: intersectionBy_default,
  intersectionWith: intersectionWith_default,
  join: join_default,
  last: last_default,
  lastIndexOf: lastIndexOf_default,
  nth: nth_default,
  pull: pull_default,
  pullAll: pullAll_default,
  pullAllBy: pullAllBy_default,
  pullAllWith: pullAllWith_default,
  pullAt: pullAt_default,
  remove: remove_default,
  reverse: reverse_default,
  slice: slice_default,
  sortedIndex: sortedIndex_default,
  sortedIndexBy: sortedIndexBy_default,
  sortedIndexOf: sortedIndexOf_default,
  sortedLastIndex: sortedLastIndex_default,
  sortedLastIndexBy: sortedLastIndexBy_default,
  sortedLastIndexOf: sortedLastIndexOf_default,
  sortedUniq: sortedUniq_default,
  sortedUniqBy: sortedUniqBy_default,
  tail: tail_default,
  take: take_default,
  takeRight: takeRight_default,
  takeRightWhile: takeRightWhile_default,
  takeWhile: takeWhile_default,
  union: union_default,
  unionBy: unionBy_default,
  unionWith: unionWith_default,
  uniq: uniq_default,
  uniqBy: uniqBy_default,
  uniqWith: uniqWith_default,
  unzip: unzip_default,
  unzipWith: unzipWith_default,
  without: without_default,
  xor: xor_default,
  xorBy: xorBy_default,
  xorWith: xorWith_default,
  zip: zip_default,
  zipObject: zipObject_default,
  zipObjectDeep: zipObjectDeep_default,
  zipWith: zipWith_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/collection.default.js
var collection_default_default = {
  countBy: countBy_default,
  each: forEach_default,
  eachRight: forEachRight_default,
  every: every_default,
  filter: filter_default,
  find: find_default,
  findLast: findLast_default,
  flatMap: flatMap_default,
  flatMapDeep: flatMapDeep_default,
  flatMapDepth: flatMapDepth_default,
  forEach: forEach_default,
  forEachRight: forEachRight_default,
  groupBy: groupBy_default,
  includes: includes_default,
  invokeMap: invokeMap_default,
  keyBy: keyBy_default,
  map: map_default,
  orderBy: orderBy_default,
  partition: partition_default,
  reduce: reduce_default,
  reduceRight: reduceRight_default,
  reject: reject_default,
  sample: sample_default,
  sampleSize: sampleSize_default,
  shuffle: shuffle_default,
  size: size_default,
  some: some_default,
  sortBy: sortBy_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/date.default.js
var date_default_default = {
  now: now_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/function.default.js
var function_default_default = {
  after: after_default,
  ary: ary_default,
  before: before_default,
  bind: bind_default,
  bindKey: bindKey_default,
  curry: curry_default,
  curryRight: curryRight_default,
  debounce: debounce_default,
  defer: defer_default,
  delay: delay_default,
  flip: flip_default,
  memoize: memoize_default,
  negate: negate_default,
  once: once_default,
  overArgs: overArgs_default,
  partial: partial_default,
  partialRight: partialRight_default,
  rearg: rearg_default,
  rest: rest_default,
  spread: spread_default,
  throttle: throttle_default,
  unary: unary_default,
  wrap: wrap_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lang.default.js
var lang_default_default = {
  castArray: castArray_default,
  clone: clone_default,
  cloneDeep: cloneDeep_default,
  cloneDeepWith: cloneDeepWith_default,
  cloneWith: cloneWith_default,
  conformsTo: conformsTo_default,
  eq: eq_default,
  gt: gt_default,
  gte: gte_default,
  isArguments: isArguments_default,
  isArray: isArray_default,
  isArrayBuffer: isArrayBuffer_default,
  isArrayLike: isArrayLike_default,
  isArrayLikeObject: isArrayLikeObject_default,
  isBoolean: isBoolean_default,
  isBuffer: isBuffer_default,
  isDate: isDate_default,
  isElement: isElement_default,
  isEmpty: isEmpty_default,
  isEqual: isEqual_default,
  isEqualWith: isEqualWith_default,
  isError: isError_default,
  isFinite: isFinite_default,
  isFunction: isFunction_default,
  isInteger: isInteger_default,
  isLength: isLength_default,
  isMap: isMap_default,
  isMatch: isMatch_default,
  isMatchWith: isMatchWith_default,
  isNaN: isNaN_default,
  isNative: isNative_default,
  isNil: isNil_default,
  isNull: isNull_default,
  isNumber: isNumber_default,
  isObject: isObject_default,
  isObjectLike: isObjectLike_default,
  isPlainObject: isPlainObject_default,
  isRegExp: isRegExp_default,
  isSafeInteger: isSafeInteger_default,
  isSet: isSet_default,
  isString: isString_default,
  isSymbol: isSymbol_default,
  isTypedArray: isTypedArray_default,
  isUndefined: isUndefined_default,
  isWeakMap: isWeakMap_default,
  isWeakSet: isWeakSet_default,
  lt: lt_default,
  lte: lte_default,
  toArray: toArray_default,
  toFinite: toFinite_default,
  toInteger: toInteger_default,
  toLength: toLength_default,
  toNumber: toNumber_default,
  toPlainObject: toPlainObject_default,
  toSafeInteger: toSafeInteger_default,
  toString: toString_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/math.default.js
var math_default_default = {
  add: add_default,
  ceil: ceil_default,
  divide: divide_default,
  floor: floor_default,
  max: max_default,
  maxBy: maxBy_default,
  mean: mean_default,
  meanBy: meanBy_default,
  min: min_default,
  minBy: minBy_default,
  multiply: multiply_default,
  round: round_default,
  subtract: subtract_default,
  sum: sum_default,
  sumBy: sumBy_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/number.default.js
var number_default_default = {
  clamp: clamp_default,
  inRange: inRange_default,
  random: random_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/object.default.js
var object_default_default = {
  assign: assign_default,
  assignIn: assignIn_default,
  assignInWith: assignInWith_default,
  assignWith: assignWith_default,
  at: at_default,
  create: create_default,
  defaults: defaults_default,
  defaultsDeep: defaultsDeep_default,
  entries: toPairs_default,
  entriesIn: toPairsIn_default,
  extend: assignIn_default,
  extendWith: assignInWith_default,
  findKey: findKey_default,
  findLastKey: findLastKey_default,
  forIn: forIn_default,
  forInRight: forInRight_default,
  forOwn: forOwn_default,
  forOwnRight: forOwnRight_default,
  functions: functions_default,
  functionsIn: functionsIn_default,
  get: get_default,
  has: has_default,
  hasIn: hasIn_default,
  invert: invert_default,
  invertBy: invertBy_default,
  invoke: invoke_default,
  keys: keys_default,
  keysIn: keysIn_default,
  mapKeys: mapKeys_default,
  mapValues: mapValues_default,
  merge: merge_default,
  mergeWith: mergeWith_default,
  omit: omit_default,
  omitBy: omitBy_default,
  pick: pick_default,
  pickBy: pickBy_default,
  result: result_default,
  set: set_default,
  setWith: setWith_default,
  toPairs: toPairs_default,
  toPairsIn: toPairsIn_default,
  transform: transform_default,
  unset: unset_default,
  update: update_default,
  updateWith: updateWith_default,
  values: values_default,
  valuesIn: valuesIn_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/seq.default.js
var seq_default_default = {
  at: wrapperAt_default,
  chain: chain_default,
  commit: commit_default,
  lodash: wrapperLodash_default,
  next: next_default,
  plant: plant_default,
  reverse: wrapperReverse_default,
  tap: tap_default,
  thru: thru_default,
  toIterator: toIterator_default,
  toJSON: wrapperValue_default,
  value: wrapperValue_default,
  valueOf: wrapperValue_default,
  wrapperChain: wrapperChain_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/string.default.js
var string_default_default = {
  camelCase: camelCase_default,
  capitalize: capitalize_default,
  deburr: deburr_default,
  endsWith: endsWith_default,
  escape: escape_default,
  escapeRegExp: escapeRegExp_default,
  kebabCase: kebabCase_default,
  lowerCase: lowerCase_default,
  lowerFirst: lowerFirst_default,
  pad: pad_default,
  padEnd: padEnd_default,
  padStart: padStart_default,
  parseInt: parseInt_default,
  repeat: repeat_default,
  replace: replace_default,
  snakeCase: snakeCase_default,
  split: split_default,
  startCase: startCase_default,
  startsWith: startsWith_default,
  template: template_default,
  templateSettings: templateSettings_default,
  toLower: toLower_default,
  toUpper: toUpper_default,
  trim: trim_default,
  trimEnd: trimEnd_default,
  trimStart: trimStart_default,
  truncate: truncate_default,
  unescape: unescape_default,
  upperCase: upperCase_default,
  upperFirst: upperFirst_default,
  words: words_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/util.default.js
var util_default_default = {
  attempt: attempt_default,
  bindAll: bindAll_default,
  cond: cond_default,
  conforms: conforms_default,
  constant: constant_default,
  defaultTo: defaultTo_default,
  flow: flow_default,
  flowRight: flowRight_default,
  identity: identity_default,
  iteratee: iteratee_default,
  matches: matches_default,
  matchesProperty: matchesProperty_default,
  method: method_default,
  methodOf: methodOf_default,
  mixin: mixin_default,
  noop: noop_default,
  nthArg: nthArg_default,
  over: over_default,
  overEvery: overEvery_default,
  overSome: overSome_default,
  property: property_default,
  propertyOf: propertyOf_default,
  range: range_default,
  rangeRight: rangeRight_default,
  stubArray: stubArray_default,
  stubFalse: stubFalse_default,
  stubObject: stubObject_default,
  stubString: stubString_default,
  stubTrue: stubTrue_default,
  times: times_default,
  toPath: toPath_default,
  uniqueId: uniqueId_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_lazyClone.js
function lazyClone() {
  var result2 = new LazyWrapper_default(this.__wrapped__);
  result2.__actions__ = copyArray_default(this.__actions__);
  result2.__dir__ = this.__dir__;
  result2.__filtered__ = this.__filtered__;
  result2.__iteratees__ = copyArray_default(this.__iteratees__);
  result2.__takeCount__ = this.__takeCount__;
  result2.__views__ = copyArray_default(this.__views__);
  return result2;
}
var lazyClone_default = lazyClone;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_lazyReverse.js
function lazyReverse() {
  if (this.__filtered__) {
    var result2 = new LazyWrapper_default(this);
    result2.__dir__ = -1;
    result2.__filtered__ = true;
  } else {
    result2 = this.clone();
    result2.__dir__ *= -1;
  }
  return result2;
}
var lazyReverse_default = lazyReverse;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_getView.js
var nativeMax16 = Math.max;
var nativeMin13 = Math.min;
function getView(start, end2, transforms) {
  var index = -1, length = transforms.length;
  while (++index < length) {
    var data = transforms[index], size4 = data.size;
    switch (data.type) {
      case "drop":
        start += size4;
        break;
      case "dropRight":
        end2 -= size4;
        break;
      case "take":
        end2 = nativeMin13(end2, start + size4);
        break;
      case "takeRight":
        start = nativeMax16(start, end2 - size4);
        break;
    }
  }
  return { "start": start, "end": end2 };
}
var getView_default = getView;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/_lazyValue.js
var LAZY_FILTER_FLAG = 1;
var LAZY_MAP_FLAG = 2;
var nativeMin14 = Math.min;
function lazyValue() {
  var array4 = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray_default(array4), isRight = dir < 0, arrLength = isArr ? array4.length : 0, view = getView_default(0, arrLength, this.__views__), start = view.start, end2 = view.end, length = end2 - start, index = isRight ? end2 : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin14(length, this.__takeCount__);
  if (!isArr || !isRight && arrLength == length && takeCount == length) {
    return baseWrapperValue_default(array4, this.__actions__);
  }
  var result2 = [];
  outer:
    while (length-- && resIndex < takeCount) {
      index += dir;
      var iterIndex = -1, value = array4[index];
      while (++iterIndex < iterLength) {
        var data = iteratees[iterIndex], iteratee2 = data.iteratee, type4 = data.type, computed190 = iteratee2(value);
        if (type4 == LAZY_MAP_FLAG) {
          value = computed190;
        } else if (!computed190) {
          if (type4 == LAZY_FILTER_FLAG) {
            continue outer;
          } else {
            break outer;
          }
        }
      }
      result2[resIndex++] = value;
    }
  return result2;
}
var lazyValue_default = lazyValue;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/lodash-es/lodash.default.js
var VERSION = "4.17.21";
var WRAP_BIND_KEY_FLAG7 = 2;
var LAZY_FILTER_FLAG2 = 1;
var LAZY_WHILE_FLAG = 3;
var MAX_ARRAY_LENGTH7 = 4294967295;
var arrayProto6 = Array.prototype;
var objectProto29 = Object.prototype;
var hasOwnProperty25 = objectProto29.hasOwnProperty;
var symIterator2 = Symbol_default ? Symbol_default.iterator : void 0;
var nativeMax17 = Math.max;
var nativeMin15 = Math.min;
var mixin2 = function(func) {
  return function(object4, source, options) {
    if (options == null) {
      var isObj = isObject_default(source), props = isObj && keys_default(source), methodNames = props && props.length && baseFunctions_default(source, props);
      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object4;
        object4 = this;
      }
    }
    return func(object4, source, options);
  };
}(mixin_default);
wrapperLodash_default.after = function_default_default.after;
wrapperLodash_default.ary = function_default_default.ary;
wrapperLodash_default.assign = object_default_default.assign;
wrapperLodash_default.assignIn = object_default_default.assignIn;
wrapperLodash_default.assignInWith = object_default_default.assignInWith;
wrapperLodash_default.assignWith = object_default_default.assignWith;
wrapperLodash_default.at = object_default_default.at;
wrapperLodash_default.before = function_default_default.before;
wrapperLodash_default.bind = function_default_default.bind;
wrapperLodash_default.bindAll = util_default_default.bindAll;
wrapperLodash_default.bindKey = function_default_default.bindKey;
wrapperLodash_default.castArray = lang_default_default.castArray;
wrapperLodash_default.chain = seq_default_default.chain;
wrapperLodash_default.chunk = array_default_default.chunk;
wrapperLodash_default.compact = array_default_default.compact;
wrapperLodash_default.concat = array_default_default.concat;
wrapperLodash_default.cond = util_default_default.cond;
wrapperLodash_default.conforms = util_default_default.conforms;
wrapperLodash_default.constant = util_default_default.constant;
wrapperLodash_default.countBy = collection_default_default.countBy;
wrapperLodash_default.create = object_default_default.create;
wrapperLodash_default.curry = function_default_default.curry;
wrapperLodash_default.curryRight = function_default_default.curryRight;
wrapperLodash_default.debounce = function_default_default.debounce;
wrapperLodash_default.defaults = object_default_default.defaults;
wrapperLodash_default.defaultsDeep = object_default_default.defaultsDeep;
wrapperLodash_default.defer = function_default_default.defer;
wrapperLodash_default.delay = function_default_default.delay;
wrapperLodash_default.difference = array_default_default.difference;
wrapperLodash_default.differenceBy = array_default_default.differenceBy;
wrapperLodash_default.differenceWith = array_default_default.differenceWith;
wrapperLodash_default.drop = array_default_default.drop;
wrapperLodash_default.dropRight = array_default_default.dropRight;
wrapperLodash_default.dropRightWhile = array_default_default.dropRightWhile;
wrapperLodash_default.dropWhile = array_default_default.dropWhile;
wrapperLodash_default.fill = array_default_default.fill;
wrapperLodash_default.filter = collection_default_default.filter;
wrapperLodash_default.flatMap = collection_default_default.flatMap;
wrapperLodash_default.flatMapDeep = collection_default_default.flatMapDeep;
wrapperLodash_default.flatMapDepth = collection_default_default.flatMapDepth;
wrapperLodash_default.flatten = array_default_default.flatten;
wrapperLodash_default.flattenDeep = array_default_default.flattenDeep;
wrapperLodash_default.flattenDepth = array_default_default.flattenDepth;
wrapperLodash_default.flip = function_default_default.flip;
wrapperLodash_default.flow = util_default_default.flow;
wrapperLodash_default.flowRight = util_default_default.flowRight;
wrapperLodash_default.fromPairs = array_default_default.fromPairs;
wrapperLodash_default.functions = object_default_default.functions;
wrapperLodash_default.functionsIn = object_default_default.functionsIn;
wrapperLodash_default.groupBy = collection_default_default.groupBy;
wrapperLodash_default.initial = array_default_default.initial;
wrapperLodash_default.intersection = array_default_default.intersection;
wrapperLodash_default.intersectionBy = array_default_default.intersectionBy;
wrapperLodash_default.intersectionWith = array_default_default.intersectionWith;
wrapperLodash_default.invert = object_default_default.invert;
wrapperLodash_default.invertBy = object_default_default.invertBy;
wrapperLodash_default.invokeMap = collection_default_default.invokeMap;
wrapperLodash_default.iteratee = util_default_default.iteratee;
wrapperLodash_default.keyBy = collection_default_default.keyBy;
wrapperLodash_default.keys = keys_default;
wrapperLodash_default.keysIn = object_default_default.keysIn;
wrapperLodash_default.map = collection_default_default.map;
wrapperLodash_default.mapKeys = object_default_default.mapKeys;
wrapperLodash_default.mapValues = object_default_default.mapValues;
wrapperLodash_default.matches = util_default_default.matches;
wrapperLodash_default.matchesProperty = util_default_default.matchesProperty;
wrapperLodash_default.memoize = function_default_default.memoize;
wrapperLodash_default.merge = object_default_default.merge;
wrapperLodash_default.mergeWith = object_default_default.mergeWith;
wrapperLodash_default.method = util_default_default.method;
wrapperLodash_default.methodOf = util_default_default.methodOf;
wrapperLodash_default.mixin = mixin2;
wrapperLodash_default.negate = negate_default;
wrapperLodash_default.nthArg = util_default_default.nthArg;
wrapperLodash_default.omit = object_default_default.omit;
wrapperLodash_default.omitBy = object_default_default.omitBy;
wrapperLodash_default.once = function_default_default.once;
wrapperLodash_default.orderBy = collection_default_default.orderBy;
wrapperLodash_default.over = util_default_default.over;
wrapperLodash_default.overArgs = function_default_default.overArgs;
wrapperLodash_default.overEvery = util_default_default.overEvery;
wrapperLodash_default.overSome = util_default_default.overSome;
wrapperLodash_default.partial = function_default_default.partial;
wrapperLodash_default.partialRight = function_default_default.partialRight;
wrapperLodash_default.partition = collection_default_default.partition;
wrapperLodash_default.pick = object_default_default.pick;
wrapperLodash_default.pickBy = object_default_default.pickBy;
wrapperLodash_default.property = util_default_default.property;
wrapperLodash_default.propertyOf = util_default_default.propertyOf;
wrapperLodash_default.pull = array_default_default.pull;
wrapperLodash_default.pullAll = array_default_default.pullAll;
wrapperLodash_default.pullAllBy = array_default_default.pullAllBy;
wrapperLodash_default.pullAllWith = array_default_default.pullAllWith;
wrapperLodash_default.pullAt = array_default_default.pullAt;
wrapperLodash_default.range = util_default_default.range;
wrapperLodash_default.rangeRight = util_default_default.rangeRight;
wrapperLodash_default.rearg = function_default_default.rearg;
wrapperLodash_default.reject = collection_default_default.reject;
wrapperLodash_default.remove = array_default_default.remove;
wrapperLodash_default.rest = function_default_default.rest;
wrapperLodash_default.reverse = array_default_default.reverse;
wrapperLodash_default.sampleSize = collection_default_default.sampleSize;
wrapperLodash_default.set = object_default_default.set;
wrapperLodash_default.setWith = object_default_default.setWith;
wrapperLodash_default.shuffle = collection_default_default.shuffle;
wrapperLodash_default.slice = array_default_default.slice;
wrapperLodash_default.sortBy = collection_default_default.sortBy;
wrapperLodash_default.sortedUniq = array_default_default.sortedUniq;
wrapperLodash_default.sortedUniqBy = array_default_default.sortedUniqBy;
wrapperLodash_default.split = string_default_default.split;
wrapperLodash_default.spread = function_default_default.spread;
wrapperLodash_default.tail = array_default_default.tail;
wrapperLodash_default.take = array_default_default.take;
wrapperLodash_default.takeRight = array_default_default.takeRight;
wrapperLodash_default.takeRightWhile = array_default_default.takeRightWhile;
wrapperLodash_default.takeWhile = array_default_default.takeWhile;
wrapperLodash_default.tap = seq_default_default.tap;
wrapperLodash_default.throttle = function_default_default.throttle;
wrapperLodash_default.thru = thru_default;
wrapperLodash_default.toArray = lang_default_default.toArray;
wrapperLodash_default.toPairs = object_default_default.toPairs;
wrapperLodash_default.toPairsIn = object_default_default.toPairsIn;
wrapperLodash_default.toPath = util_default_default.toPath;
wrapperLodash_default.toPlainObject = lang_default_default.toPlainObject;
wrapperLodash_default.transform = object_default_default.transform;
wrapperLodash_default.unary = function_default_default.unary;
wrapperLodash_default.union = array_default_default.union;
wrapperLodash_default.unionBy = array_default_default.unionBy;
wrapperLodash_default.unionWith = array_default_default.unionWith;
wrapperLodash_default.uniq = array_default_default.uniq;
wrapperLodash_default.uniqBy = array_default_default.uniqBy;
wrapperLodash_default.uniqWith = array_default_default.uniqWith;
wrapperLodash_default.unset = object_default_default.unset;
wrapperLodash_default.unzip = array_default_default.unzip;
wrapperLodash_default.unzipWith = array_default_default.unzipWith;
wrapperLodash_default.update = object_default_default.update;
wrapperLodash_default.updateWith = object_default_default.updateWith;
wrapperLodash_default.values = object_default_default.values;
wrapperLodash_default.valuesIn = object_default_default.valuesIn;
wrapperLodash_default.without = array_default_default.without;
wrapperLodash_default.words = string_default_default.words;
wrapperLodash_default.wrap = function_default_default.wrap;
wrapperLodash_default.xor = array_default_default.xor;
wrapperLodash_default.xorBy = array_default_default.xorBy;
wrapperLodash_default.xorWith = array_default_default.xorWith;
wrapperLodash_default.zip = array_default_default.zip;
wrapperLodash_default.zipObject = array_default_default.zipObject;
wrapperLodash_default.zipObjectDeep = array_default_default.zipObjectDeep;
wrapperLodash_default.zipWith = array_default_default.zipWith;
wrapperLodash_default.entries = object_default_default.toPairs;
wrapperLodash_default.entriesIn = object_default_default.toPairsIn;
wrapperLodash_default.extend = object_default_default.assignIn;
wrapperLodash_default.extendWith = object_default_default.assignInWith;
mixin2(wrapperLodash_default, wrapperLodash_default);
wrapperLodash_default.add = math_default_default.add;
wrapperLodash_default.attempt = util_default_default.attempt;
wrapperLodash_default.camelCase = string_default_default.camelCase;
wrapperLodash_default.capitalize = string_default_default.capitalize;
wrapperLodash_default.ceil = math_default_default.ceil;
wrapperLodash_default.clamp = number_default_default.clamp;
wrapperLodash_default.clone = lang_default_default.clone;
wrapperLodash_default.cloneDeep = lang_default_default.cloneDeep;
wrapperLodash_default.cloneDeepWith = lang_default_default.cloneDeepWith;
wrapperLodash_default.cloneWith = lang_default_default.cloneWith;
wrapperLodash_default.conformsTo = lang_default_default.conformsTo;
wrapperLodash_default.deburr = string_default_default.deburr;
wrapperLodash_default.defaultTo = util_default_default.defaultTo;
wrapperLodash_default.divide = math_default_default.divide;
wrapperLodash_default.endsWith = string_default_default.endsWith;
wrapperLodash_default.eq = lang_default_default.eq;
wrapperLodash_default.escape = string_default_default.escape;
wrapperLodash_default.escapeRegExp = string_default_default.escapeRegExp;
wrapperLodash_default.every = collection_default_default.every;
wrapperLodash_default.find = collection_default_default.find;
wrapperLodash_default.findIndex = array_default_default.findIndex;
wrapperLodash_default.findKey = object_default_default.findKey;
wrapperLodash_default.findLast = collection_default_default.findLast;
wrapperLodash_default.findLastIndex = array_default_default.findLastIndex;
wrapperLodash_default.findLastKey = object_default_default.findLastKey;
wrapperLodash_default.floor = math_default_default.floor;
wrapperLodash_default.forEach = collection_default_default.forEach;
wrapperLodash_default.forEachRight = collection_default_default.forEachRight;
wrapperLodash_default.forIn = object_default_default.forIn;
wrapperLodash_default.forInRight = object_default_default.forInRight;
wrapperLodash_default.forOwn = object_default_default.forOwn;
wrapperLodash_default.forOwnRight = object_default_default.forOwnRight;
wrapperLodash_default.get = object_default_default.get;
wrapperLodash_default.gt = lang_default_default.gt;
wrapperLodash_default.gte = lang_default_default.gte;
wrapperLodash_default.has = object_default_default.has;
wrapperLodash_default.hasIn = object_default_default.hasIn;
wrapperLodash_default.head = array_default_default.head;
wrapperLodash_default.identity = identity_default;
wrapperLodash_default.includes = collection_default_default.includes;
wrapperLodash_default.indexOf = array_default_default.indexOf;
wrapperLodash_default.inRange = number_default_default.inRange;
wrapperLodash_default.invoke = object_default_default.invoke;
wrapperLodash_default.isArguments = lang_default_default.isArguments;
wrapperLodash_default.isArray = isArray_default;
wrapperLodash_default.isArrayBuffer = lang_default_default.isArrayBuffer;
wrapperLodash_default.isArrayLike = lang_default_default.isArrayLike;
wrapperLodash_default.isArrayLikeObject = lang_default_default.isArrayLikeObject;
wrapperLodash_default.isBoolean = lang_default_default.isBoolean;
wrapperLodash_default.isBuffer = lang_default_default.isBuffer;
wrapperLodash_default.isDate = lang_default_default.isDate;
wrapperLodash_default.isElement = lang_default_default.isElement;
wrapperLodash_default.isEmpty = lang_default_default.isEmpty;
wrapperLodash_default.isEqual = lang_default_default.isEqual;
wrapperLodash_default.isEqualWith = lang_default_default.isEqualWith;
wrapperLodash_default.isError = lang_default_default.isError;
wrapperLodash_default.isFinite = lang_default_default.isFinite;
wrapperLodash_default.isFunction = lang_default_default.isFunction;
wrapperLodash_default.isInteger = lang_default_default.isInteger;
wrapperLodash_default.isLength = lang_default_default.isLength;
wrapperLodash_default.isMap = lang_default_default.isMap;
wrapperLodash_default.isMatch = lang_default_default.isMatch;
wrapperLodash_default.isMatchWith = lang_default_default.isMatchWith;
wrapperLodash_default.isNaN = lang_default_default.isNaN;
wrapperLodash_default.isNative = lang_default_default.isNative;
wrapperLodash_default.isNil = lang_default_default.isNil;
wrapperLodash_default.isNull = lang_default_default.isNull;
wrapperLodash_default.isNumber = lang_default_default.isNumber;
wrapperLodash_default.isObject = isObject_default;
wrapperLodash_default.isObjectLike = lang_default_default.isObjectLike;
wrapperLodash_default.isPlainObject = lang_default_default.isPlainObject;
wrapperLodash_default.isRegExp = lang_default_default.isRegExp;
wrapperLodash_default.isSafeInteger = lang_default_default.isSafeInteger;
wrapperLodash_default.isSet = lang_default_default.isSet;
wrapperLodash_default.isString = lang_default_default.isString;
wrapperLodash_default.isSymbol = lang_default_default.isSymbol;
wrapperLodash_default.isTypedArray = lang_default_default.isTypedArray;
wrapperLodash_default.isUndefined = lang_default_default.isUndefined;
wrapperLodash_default.isWeakMap = lang_default_default.isWeakMap;
wrapperLodash_default.isWeakSet = lang_default_default.isWeakSet;
wrapperLodash_default.join = array_default_default.join;
wrapperLodash_default.kebabCase = string_default_default.kebabCase;
wrapperLodash_default.last = last_default;
wrapperLodash_default.lastIndexOf = array_default_default.lastIndexOf;
wrapperLodash_default.lowerCase = string_default_default.lowerCase;
wrapperLodash_default.lowerFirst = string_default_default.lowerFirst;
wrapperLodash_default.lt = lang_default_default.lt;
wrapperLodash_default.lte = lang_default_default.lte;
wrapperLodash_default.max = math_default_default.max;
wrapperLodash_default.maxBy = math_default_default.maxBy;
wrapperLodash_default.mean = math_default_default.mean;
wrapperLodash_default.meanBy = math_default_default.meanBy;
wrapperLodash_default.min = math_default_default.min;
wrapperLodash_default.minBy = math_default_default.minBy;
wrapperLodash_default.stubArray = util_default_default.stubArray;
wrapperLodash_default.stubFalse = util_default_default.stubFalse;
wrapperLodash_default.stubObject = util_default_default.stubObject;
wrapperLodash_default.stubString = util_default_default.stubString;
wrapperLodash_default.stubTrue = util_default_default.stubTrue;
wrapperLodash_default.multiply = math_default_default.multiply;
wrapperLodash_default.nth = array_default_default.nth;
wrapperLodash_default.noop = util_default_default.noop;
wrapperLodash_default.now = date_default_default.now;
wrapperLodash_default.pad = string_default_default.pad;
wrapperLodash_default.padEnd = string_default_default.padEnd;
wrapperLodash_default.padStart = string_default_default.padStart;
wrapperLodash_default.parseInt = string_default_default.parseInt;
wrapperLodash_default.random = number_default_default.random;
wrapperLodash_default.reduce = collection_default_default.reduce;
wrapperLodash_default.reduceRight = collection_default_default.reduceRight;
wrapperLodash_default.repeat = string_default_default.repeat;
wrapperLodash_default.replace = string_default_default.replace;
wrapperLodash_default.result = object_default_default.result;
wrapperLodash_default.round = math_default_default.round;
wrapperLodash_default.sample = collection_default_default.sample;
wrapperLodash_default.size = collection_default_default.size;
wrapperLodash_default.snakeCase = string_default_default.snakeCase;
wrapperLodash_default.some = collection_default_default.some;
wrapperLodash_default.sortedIndex = array_default_default.sortedIndex;
wrapperLodash_default.sortedIndexBy = array_default_default.sortedIndexBy;
wrapperLodash_default.sortedIndexOf = array_default_default.sortedIndexOf;
wrapperLodash_default.sortedLastIndex = array_default_default.sortedLastIndex;
wrapperLodash_default.sortedLastIndexBy = array_default_default.sortedLastIndexBy;
wrapperLodash_default.sortedLastIndexOf = array_default_default.sortedLastIndexOf;
wrapperLodash_default.startCase = string_default_default.startCase;
wrapperLodash_default.startsWith = string_default_default.startsWith;
wrapperLodash_default.subtract = math_default_default.subtract;
wrapperLodash_default.sum = math_default_default.sum;
wrapperLodash_default.sumBy = math_default_default.sumBy;
wrapperLodash_default.template = string_default_default.template;
wrapperLodash_default.times = util_default_default.times;
wrapperLodash_default.toFinite = lang_default_default.toFinite;
wrapperLodash_default.toInteger = toInteger_default;
wrapperLodash_default.toLength = lang_default_default.toLength;
wrapperLodash_default.toLower = string_default_default.toLower;
wrapperLodash_default.toNumber = lang_default_default.toNumber;
wrapperLodash_default.toSafeInteger = lang_default_default.toSafeInteger;
wrapperLodash_default.toString = lang_default_default.toString;
wrapperLodash_default.toUpper = string_default_default.toUpper;
wrapperLodash_default.trim = string_default_default.trim;
wrapperLodash_default.trimEnd = string_default_default.trimEnd;
wrapperLodash_default.trimStart = string_default_default.trimStart;
wrapperLodash_default.truncate = string_default_default.truncate;
wrapperLodash_default.unescape = string_default_default.unescape;
wrapperLodash_default.uniqueId = util_default_default.uniqueId;
wrapperLodash_default.upperCase = string_default_default.upperCase;
wrapperLodash_default.upperFirst = string_default_default.upperFirst;
wrapperLodash_default.each = collection_default_default.forEach;
wrapperLodash_default.eachRight = collection_default_default.forEachRight;
wrapperLodash_default.first = array_default_default.head;
mixin2(wrapperLodash_default, function() {
  var source = {};
  baseForOwn_default(wrapperLodash_default, function(func, methodName) {
    if (!hasOwnProperty25.call(wrapperLodash_default.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}(), { "chain": false });
wrapperLodash_default.VERSION = VERSION;
(wrapperLodash_default.templateSettings = string_default_default.templateSettings).imports._ = wrapperLodash_default;
arrayEach_default(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
  wrapperLodash_default[methodName].placeholder = wrapperLodash_default;
});
arrayEach_default(["drop", "take"], function(methodName, index) {
  LazyWrapper_default.prototype[methodName] = function(n) {
    n = n === void 0 ? 1 : nativeMax17(toInteger_default(n), 0);
    var result2 = this.__filtered__ && !index ? new LazyWrapper_default(this) : this.clone();
    if (result2.__filtered__) {
      result2.__takeCount__ = nativeMin15(n, result2.__takeCount__);
    } else {
      result2.__views__.push({
        "size": nativeMin15(n, MAX_ARRAY_LENGTH7),
        "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
      });
    }
    return result2;
  };
  LazyWrapper_default.prototype[methodName + "Right"] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});
arrayEach_default(["filter", "map", "takeWhile"], function(methodName, index) {
  var type4 = index + 1, isFilter = type4 == LAZY_FILTER_FLAG2 || type4 == LAZY_WHILE_FLAG;
  LazyWrapper_default.prototype[methodName] = function(iteratee2) {
    var result2 = this.clone();
    result2.__iteratees__.push({
      "iteratee": baseIteratee_default(iteratee2, 3),
      "type": type4
    });
    result2.__filtered__ = result2.__filtered__ || isFilter;
    return result2;
  };
});
arrayEach_default(["head", "last"], function(methodName, index) {
  var takeName = "take" + (index ? "Right" : "");
  LazyWrapper_default.prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});
arrayEach_default(["initial", "tail"], function(methodName, index) {
  var dropName = "drop" + (index ? "" : "Right");
  LazyWrapper_default.prototype[methodName] = function() {
    return this.__filtered__ ? new LazyWrapper_default(this) : this[dropName](1);
  };
});
LazyWrapper_default.prototype.compact = function() {
  return this.filter(identity_default);
};
LazyWrapper_default.prototype.find = function(predicate) {
  return this.filter(predicate).head();
};
LazyWrapper_default.prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};
LazyWrapper_default.prototype.invokeMap = baseRest_default(function(path, args) {
  if (typeof path == "function") {
    return new LazyWrapper_default(this);
  }
  return this.map(function(value) {
    return baseInvoke_default(value, path, args);
  });
});
LazyWrapper_default.prototype.reject = function(predicate) {
  return this.filter(negate_default(baseIteratee_default(predicate)));
};
LazyWrapper_default.prototype.slice = function(start, end2) {
  start = toInteger_default(start);
  var result2 = this;
  if (result2.__filtered__ && (start > 0 || end2 < 0)) {
    return new LazyWrapper_default(result2);
  }
  if (start < 0) {
    result2 = result2.takeRight(-start);
  } else if (start) {
    result2 = result2.drop(start);
  }
  if (end2 !== void 0) {
    end2 = toInteger_default(end2);
    result2 = end2 < 0 ? result2.dropRight(-end2) : result2.take(end2 - start);
  }
  return result2;
};
LazyWrapper_default.prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};
LazyWrapper_default.prototype.toArray = function() {
  return this.take(MAX_ARRAY_LENGTH7);
};
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = wrapperLodash_default[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
  if (!lodashFunc) {
    return;
  }
  wrapperLodash_default.prototype[methodName] = function() {
    var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper_default, iteratee2 = args[0], useLazy = isLazy || isArray_default(value);
    var interceptor = function(value2) {
      var result3 = lodashFunc.apply(wrapperLodash_default, arrayPush_default([value2], args));
      return isTaker && chainAll ? result3[0] : result3;
    };
    if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new LazyWrapper_default(this);
      var result2 = func.apply(value, args);
      result2.__actions__.push({ "func": thru_default, "args": [interceptor], "thisArg": void 0 });
      return new LodashWrapper_default(result2, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result2 = this.thru(interceptor);
    return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
  };
});
arrayEach_default(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
  var func = arrayProto6[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
  wrapperLodash_default.prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply(isArray_default(value) ? value : [], args);
    }
    return this[chainName](function(value2) {
      return func.apply(isArray_default(value2) ? value2 : [], args);
    });
  };
});
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var lodashFunc = wrapperLodash_default[methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + "";
    if (!hasOwnProperty25.call(realNames_default, key)) {
      realNames_default[key] = [];
    }
    realNames_default[key].push({ "name": methodName, "func": lodashFunc });
  }
});
realNames_default[createHybrid_default(void 0, WRAP_BIND_KEY_FLAG7).name] = [{
  "name": "wrapper",
  "func": void 0
}];
LazyWrapper_default.prototype.clone = lazyClone_default;
LazyWrapper_default.prototype.reverse = lazyReverse_default;
LazyWrapper_default.prototype.value = lazyValue_default;
wrapperLodash_default.prototype.at = seq_default_default.at;
wrapperLodash_default.prototype.chain = seq_default_default.wrapperChain;
wrapperLodash_default.prototype.commit = seq_default_default.commit;
wrapperLodash_default.prototype.next = seq_default_default.next;
wrapperLodash_default.prototype.plant = seq_default_default.plant;
wrapperLodash_default.prototype.reverse = seq_default_default.reverse;
wrapperLodash_default.prototype.toJSON = wrapperLodash_default.prototype.valueOf = wrapperLodash_default.prototype.value = seq_default_default.value;
wrapperLodash_default.prototype.first = wrapperLodash_default.prototype.head;
if (symIterator2) {
  wrapperLodash_default.prototype[symIterator2] = seq_default_default.toIterator;
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/types.mjs
import { isVNode } from "vue";
var isUndefined2 = (val) => val === void 0;
var isBoolean2 = (val) => typeof val === "boolean";
var isNumber3 = (val) => typeof val === "number";
var isEmpty2 = (val) => !val && val !== 0 || isArray2(val) && val.length === 0 || isObject3(val) && !Object.keys(val).length;
var isElement2 = (e) => {
  if (typeof Element === "undefined")
    return false;
  return e instanceof Element;
};
var isPropAbsent = (prop) => {
  return isNil_default(prop);
};
var isStringNumber = (val) => {
  if (!isString3(val)) {
    return false;
  }
  return !Number.isNaN(Number(val));
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/strings.mjs
import { capitalize as capitalize$1 } from "@vue/shared";
import { camelize, hyphenate, hyphenate as hyphenate2 } from "@vue/shared";
var escapeStringRegexp = (string3 = "") => string3.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
var capitalize2 = (str) => capitalize$1(str);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/objects.mjs
import { hasOwn as hasOwn2 } from "@vue/shared";
var keysOf = (arr) => Object.keys(arr);
var entriesOf = (arr) => Object.entries(arr);
var getProp = (obj, path, defaultValue) => {
  return {
    get value() {
      return get_default(obj, path, defaultValue);
    },
    set value(val) {
      set_default(obj, path, val);
    }
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/error.mjs
import { isString as isString5 } from "@vue/shared";
var ElementPlusError = class extends Error {
  constructor(m2) {
    super(m2);
    this.name = "ElementPlusError";
  }
};
function throwError(scope, m2) {
  throw new ElementPlusError(`[${scope}] ${m2}`);
}
function debugWarn(scope, message2) {
  if (true) {
    const error = isString5(scope) ? new ElementPlusError(`[${scope}] ${message2}`) : scope;
    console.warn(error);
  }
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/dom/style.mjs
import { camelize as camelize2, isObject as isObject5, isString as isString6 } from "@vue/shared";
var SCOPE = "utils/dom/style";
var classNameToArray = (cls = "") => cls.split(" ").filter((item) => !!item.trim());
var hasClass = (el, cls) => {
  if (!el || !cls)
    return false;
  if (cls.includes(" "))
    throw new Error("className should not contain space.");
  return el.classList.contains(cls);
};
var addClass = (el, cls) => {
  if (!el || !cls.trim())
    return;
  el.classList.add(...classNameToArray(cls));
};
var removeClass = (el, cls) => {
  if (!el || !cls.trim())
    return;
  el.classList.remove(...classNameToArray(cls));
};
var getStyle = (element, styleName) => {
  var _a2;
  if (!isClient || !element || !styleName)
    return "";
  let key = camelize2(styleName);
  if (key === "float")
    key = "cssFloat";
  try {
    const style = element.style[key];
    if (style)
      return style;
    const computed190 = (_a2 = document.defaultView) == null ? void 0 : _a2.getComputedStyle(element, "");
    return computed190 ? computed190[key] : "";
  } catch (e) {
    return element.style[key];
  }
};
function addUnit(value, defaultUnit = "px") {
  if (!value)
    return "";
  if (isNumber3(value) || isStringNumber(value)) {
    return `${value}${defaultUnit}`;
  } else if (isString6(value)) {
    return value;
  }
  debugWarn(SCOPE, "binding value must be a string or number");
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/dom/scroll.mjs
var isScroll = (el, isVertical) => {
  if (!isClient)
    return false;
  const key = {
    undefined: "overflow",
    true: "overflow-y",
    false: "overflow-x"
  }[String(isVertical)];
  const overflow = getStyle(el, key);
  return ["scroll", "auto", "overlay"].some((s2) => overflow.includes(s2));
};
var getScrollContainer = (el, isVertical) => {
  if (!isClient)
    return;
  let parent2 = el;
  while (parent2) {
    if ([window, document, document.documentElement].includes(parent2))
      return window;
    if (isScroll(parent2, isVertical))
      return parent2;
    parent2 = parent2.parentNode;
  }
  return parent2;
};
var scrollBarWidth;
var getScrollBarWidth = (namespace) => {
  var _a2;
  if (!isClient)
    return 0;
  if (scrollBarWidth !== void 0)
    return scrollBarWidth;
  const outer = document.createElement("div");
  outer.className = `${namespace}-scrollbar__wrap`;
  outer.style.visibility = "hidden";
  outer.style.width = "100px";
  outer.style.position = "absolute";
  outer.style.top = "-9999px";
  document.body.appendChild(outer);
  const widthNoScroll = outer.offsetWidth;
  outer.style.overflow = "scroll";
  const inner = document.createElement("div");
  inner.style.width = "100%";
  outer.appendChild(inner);
  const widthWithScroll = inner.offsetWidth;
  (_a2 = outer.parentNode) == null ? void 0 : _a2.removeChild(outer);
  scrollBarWidth = widthNoScroll - widthWithScroll;
  return scrollBarWidth;
};
function scrollIntoView(container, selected) {
  if (!isClient)
    return;
  if (!selected) {
    container.scrollTop = 0;
    return;
  }
  const offsetParents = [];
  let pointer = selected.offsetParent;
  while (pointer !== null && container !== pointer && container.contains(pointer)) {
    offsetParents.push(pointer);
    pointer = pointer.offsetParent;
  }
  const top = selected.offsetTop + offsetParents.reduce((prev, curr) => prev + curr.offsetTop, 0);
  const bottom = top + selected.offsetHeight;
  const viewRectTop = container.scrollTop;
  const viewRectBottom = viewRectTop + container.clientHeight;
  if (top < viewRectTop) {
    container.scrollTop = top;
  } else if (bottom > viewRectBottom) {
    container.scrollTop = bottom - container.clientHeight;
  }
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/global-node.mjs
var globalNodes = [];
var target = !isClient ? void 0 : document.body;
function createGlobalNode(id) {
  const el = document.createElement("div");
  if (id !== void 0) {
    el.setAttribute("id", id);
  }
  target.appendChild(el);
  globalNodes.push(el);
  return el;
}
function removeGlobalNode(el) {
  globalNodes.splice(globalNodes.indexOf(el), 1);
  el.remove();
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/props/runtime.mjs
import { warn } from "vue";
import { isObject as isObject6, hasOwn as hasOwn3 } from "@vue/shared";
var epPropKey = "__epPropKey";
var definePropType = (val) => val;
var isEpProp = (val) => isObject6(val) && !!val[epPropKey];
var buildProp = (prop, key) => {
  if (!isObject6(prop) || isEpProp(prop))
    return prop;
  const { values: values2, required: required4, default: defaultValue, type: type4, validator } = prop;
  const _validator = values2 || validator ? (val) => {
    let valid = false;
    let allowedValues = [];
    if (values2) {
      allowedValues = Array.from(values2);
      if (hasOwn3(prop, "default")) {
        allowedValues.push(defaultValue);
      }
      valid || (valid = allowedValues.includes(val));
    }
    if (validator)
      valid || (valid = validator(val));
    if (!valid && allowedValues.length > 0) {
      const allowValuesText = [...new Set(allowedValues)].map((value) => JSON.stringify(value)).join(", ");
      warn(`Invalid prop: validation failed${key ? ` for prop "${key}"` : ""}. Expected one of [${allowValuesText}], got value ${JSON.stringify(val)}.`);
    }
    return valid;
  } : void 0;
  const epProp = {
    type: type4,
    required: !!required4,
    validator: _validator,
    [epPropKey]: true
  };
  if (hasOwn3(prop, "default"))
    epProp.default = defaultValue;
  return epProp;
};
var buildProps = (props) => fromPairs_default(Object.entries(props).map(([key, option]) => [
  key,
  buildProp(option, key)
]));

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/icon.mjs
var iconPropType = definePropType([
  String,
  Object,
  Function
]);
var CloseComponents = {
  Close: close_default
};
var TypeComponents = {
  Close: close_default,
  SuccessFilled: success_filled_default,
  InfoFilled: info_filled_default,
  WarningFilled: warning_filled_default,
  CircleCloseFilled: circle_close_filled_default
};
var TypeComponentsMap = {
  success: success_filled_default,
  warning: warning_filled_default,
  error: circle_close_filled_default,
  info: info_filled_default
};
var ValidateComponentsMap = {
  validating: loading_default,
  success: circle_check_default,
  error: circle_close_default
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/install.mjs
import { NOOP } from "@vue/shared";
var withInstall = (main, extra) => {
  ;
  main.install = (app) => {
    for (const comp of [main, ...Object.values(extra != null ? extra : {})]) {
      app.component(comp.name, comp);
    }
  };
  if (extra) {
    for (const [key, comp] of Object.entries(extra)) {
      ;
      main[key] = comp;
    }
  }
  return main;
};
var withInstallFunction = (fn2, name) => {
  ;
  fn2.install = (app) => {
    ;
    fn2._context = app._context;
    app.config.globalProperties[name] = fn2;
  };
  return fn2;
};
var withInstallDirective = (directive, name) => {
  ;
  directive.install = (app) => {
    app.directive(name, directive);
  };
  return directive;
};
var withNoopInstall = (component2) => {
  ;
  component2.install = NOOP;
  return component2;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/refs.mjs
import { isFunction as isFunction4 } from "@vue/shared";
var composeRefs = (...refs) => {
  return (el) => {
    refs.forEach((ref153) => {
      if (isFunction4(ref153)) {
        ref153(el);
      } else {
        ref153.value = el;
      }
    });
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/constants/aria.mjs
var EVENT_CODE = {
  tab: "Tab",
  enter: "Enter",
  space: "Space",
  left: "ArrowLeft",
  up: "ArrowUp",
  right: "ArrowRight",
  down: "ArrowDown",
  esc: "Escape",
  delete: "Delete",
  backspace: "Backspace",
  numpadEnter: "NumpadEnter",
  pageUp: "PageUp",
  pageDown: "PageDown",
  home: "Home",
  end: "End"
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/constants/date.mjs
var datePickTypes = [
  "year",
  "month",
  "date",
  "dates",
  "week",
  "datetime",
  "datetimerange",
  "daterange",
  "monthrange"
];
var WEEK_DAYS = [
  "sun",
  "mon",
  "tue",
  "wed",
  "thu",
  "fri",
  "sat"
];

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/constants/event.mjs
var UPDATE_MODEL_EVENT = "update:modelValue";
var CHANGE_EVENT = "change";
var INPUT_EVENT = "input";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/constants/key.mjs
var INSTALLED_KEY = Symbol("INSTALLED_KEY");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/constants/size.mjs
var componentSizes = ["", "default", "small", "large"];
var componentSizeMap = {
  large: 40,
  default: 32,
  small: 24
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/size.mjs
var getComponentSize = (size4) => {
  return componentSizeMap[size4 || "default"];
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/validator.mjs
var isValidComponentSize = (val) => ["", ...componentSizes].includes(val);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/vue/vnode.mjs
import { isVNode as isVNode2, Fragment, Text, Comment, openBlock, createBlock, createCommentVNode } from "vue";
import { hasOwn as hasOwn4, camelize as camelize3, isArray as isArray4 } from "@vue/shared";
var SCOPE2 = "utils/vue/vnode";
var PatchFlags = ((PatchFlags2) => {
  PatchFlags2[PatchFlags2["TEXT"] = 1] = "TEXT";
  PatchFlags2[PatchFlags2["CLASS"] = 2] = "CLASS";
  PatchFlags2[PatchFlags2["STYLE"] = 4] = "STYLE";
  PatchFlags2[PatchFlags2["PROPS"] = 8] = "PROPS";
  PatchFlags2[PatchFlags2["FULL_PROPS"] = 16] = "FULL_PROPS";
  PatchFlags2[PatchFlags2["HYDRATE_EVENTS"] = 32] = "HYDRATE_EVENTS";
  PatchFlags2[PatchFlags2["STABLE_FRAGMENT"] = 64] = "STABLE_FRAGMENT";
  PatchFlags2[PatchFlags2["KEYED_FRAGMENT"] = 128] = "KEYED_FRAGMENT";
  PatchFlags2[PatchFlags2["UNKEYED_FRAGMENT"] = 256] = "UNKEYED_FRAGMENT";
  PatchFlags2[PatchFlags2["NEED_PATCH"] = 512] = "NEED_PATCH";
  PatchFlags2[PatchFlags2["DYNAMIC_SLOTS"] = 1024] = "DYNAMIC_SLOTS";
  PatchFlags2[PatchFlags2["HOISTED"] = -1] = "HOISTED";
  PatchFlags2[PatchFlags2["BAIL"] = -2] = "BAIL";
  return PatchFlags2;
})(PatchFlags || {});
function isFragment(node) {
  return isVNode2(node) && node.type === Fragment;
}
function isComment(node) {
  return isVNode2(node) && node.type === Comment;
}
function isValidElementNode(node) {
  return isVNode2(node) && !isFragment(node) && !isComment(node);
}
var getNormalizedProps = (node) => {
  if (!isVNode2(node)) {
    debugWarn(SCOPE2, "[getNormalizedProps] must be a VNode");
    return {};
  }
  const raw = node.props || {};
  const type4 = (isVNode2(node.type) ? node.type.props : void 0) || {};
  const props = {};
  Object.keys(type4).forEach((key) => {
    if (hasOwn4(type4[key], "default")) {
      props[key] = type4[key].default;
    }
  });
  Object.keys(raw).forEach((key) => {
    props[camelize3(key)] = raw[key];
  });
  return props;
};
var ensureOnlyChild = (children) => {
  if (!isArray4(children) || children.length > 1) {
    throw new Error("expect to receive a single Vue element child");
  }
  return children[0];
};
var flattedChildren = (children) => {
  const vNodes = isArray4(children) ? children : [children];
  const result2 = [];
  vNodes.forEach((child) => {
    var _a2;
    if (isArray4(child)) {
      result2.push(...flattedChildren(child));
    } else if (isVNode2(child) && isArray4(child.children)) {
      result2.push(...flattedChildren(child.children));
    } else {
      result2.push(child);
      if (isVNode2(child) && ((_a2 = child.component) == null ? void 0 : _a2.subTree)) {
        result2.push(...flattedChildren(child.component.subTree));
      }
    }
  });
  return result2;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/arrays.mjs
var unique = (arr) => [...new Set(arr)];
var castArray2 = (arr) => {
  if (!arr && arr !== 0)
    return [];
  return Array.isArray(arr) ? arr : [arr];
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/functions.mjs
import { NOOP as NOOP2 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/i18n.mjs
var isKorean = (text) => /([\uAC00-\uD7AF\u3130-\u318F])+/gi.test(text);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/raf.mjs
var rAF = (fn2) => isClient ? window.requestAnimationFrame(fn2) : setTimeout(fn2, 16);
var cAF = (handle) => isClient ? window.cancelAnimationFrame(handle) : clearTimeout(handle);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/rand.mjs
var generateId = () => Math.floor(Math.random() * 1e4);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/typescript.mjs
var mutable = (val) => val;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/utils/index.mjs
import { NOOP as NOOP3, camelize as camelize4, hasOwn as hasOwn5, hyphenate as hyphenate3, isArray as isArray5, isDate as isDate3, isFunction as isFunction5, isObject as isObject7, isPromise as isPromise2, isString as isString7, isSymbol as isSymbol3, hyphenate as hyphenate4 } from "@vue/shared";
import { isVNode as isVNode3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/src/config-provider.mjs
import { defineComponent, watch as watch11, renderSlot } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/src/hooks/use-global-config.mjs
import { ref as ref11, getCurrentInstance as getCurrentInstance8, inject as inject8, computed as computed14, unref as unref13, provide as provide3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-attrs/index.mjs
import { computed as computed3, getCurrentInstance as getCurrentInstance3 } from "vue";
var DEFAULT_EXCLUDE_KEYS = ["class", "style"];
var LISTENER_PREFIX = /^on[A-Z]/;
var useAttrs = (params = {}) => {
  const { excludeListeners = false, excludeKeys } = params;
  const allExcludeKeys = computed3(() => {
    return ((excludeKeys == null ? void 0 : excludeKeys.value) || []).concat(DEFAULT_EXCLUDE_KEYS);
  });
  const instance = getCurrentInstance3();
  if (!instance) {
    debugWarn("use-attrs", "getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function");
    return computed3(() => ({}));
  }
  return computed3(() => {
    var _a2;
    return fromPairs_default(Object.entries((_a2 = instance.proxy) == null ? void 0 : _a2.$attrs).filter(([key]) => !allExcludeKeys.value.includes(key) && !(excludeListeners && LISTENER_PREFIX.test(key))));
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-deprecated/index.mjs
import { watch as watch3, unref as unref3 } from "vue";
var useDeprecated = ({ from, replacement, scope, version: version4, ref: ref153, type: type4 = "API" }, condition) => {
  watch3(() => unref3(condition), (val) => {
    if (val) {
      debugWarn(scope, `[${type4}] ${from} is about to be deprecated in version ${version4}, please use ${replacement} instead.
For more detail, please visit: ${ref153}
`);
    }
  }, {
    immediate: true
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-draggable/index.mjs
import { onMounted as onMounted3, watchEffect as watchEffect3, onBeforeUnmount as onBeforeUnmount2 } from "vue";
var useDraggable = (targetRef, dragRef, draggable2) => {
  let transform2 = {
    offsetX: 0,
    offsetY: 0
  };
  const onMousedown = (e) => {
    const downX = e.clientX;
    const downY = e.clientY;
    const { offsetX, offsetY } = transform2;
    const targetRect = targetRef.value.getBoundingClientRect();
    const targetLeft = targetRect.left;
    const targetTop = targetRect.top;
    const targetWidth = targetRect.width;
    const targetHeight = targetRect.height;
    const clientWidth = document.documentElement.clientWidth;
    const clientHeight = document.documentElement.clientHeight;
    const minLeft = -targetLeft + offsetX;
    const minTop = -targetTop + offsetY;
    const maxLeft = clientWidth - targetLeft - targetWidth + offsetX;
    const maxTop = clientHeight - targetTop - targetHeight + offsetY;
    const onMousemove = (e2) => {
      const moveX = Math.min(Math.max(offsetX + e2.clientX - downX, minLeft), maxLeft);
      const moveY = Math.min(Math.max(offsetY + e2.clientY - downY, minTop), maxTop);
      transform2 = {
        offsetX: moveX,
        offsetY: moveY
      };
      targetRef.value.style.transform = `translate(${addUnit(moveX)}, ${addUnit(moveY)})`;
    };
    const onMouseup = () => {
      document.removeEventListener("mousemove", onMousemove);
      document.removeEventListener("mouseup", onMouseup);
    };
    document.addEventListener("mousemove", onMousemove);
    document.addEventListener("mouseup", onMouseup);
  };
  const onDraggable = () => {
    if (dragRef.value && targetRef.value) {
      dragRef.value.addEventListener("mousedown", onMousedown);
    }
  };
  const offDraggable = () => {
    if (dragRef.value && targetRef.value) {
      dragRef.value.removeEventListener("mousedown", onMousedown);
    }
  };
  onMounted3(() => {
    watchEffect3(() => {
      if (draggable2.value) {
        onDraggable();
      } else {
        offDraggable();
      }
    });
  });
  onBeforeUnmount2(() => {
    offDraggable();
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-focus/index.mjs
var useFocus = (el) => {
  return {
    focus: () => {
      var _a2, _b;
      (_b = (_a2 = el.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
    }
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-locale/index.mjs
import { unref as unref4, computed as computed4, isRef as isRef3, ref as ref3, inject as inject3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/locale/lang/en.mjs
var English = {
  name: "en",
  el: {
    colorpicker: {
      confirm: "OK",
      clear: "Clear",
      defaultLabel: "color picker",
      description: "current color is {color}. press enter to select a new color."
    },
    datepicker: {
      now: "Now",
      today: "Today",
      cancel: "Cancel",
      clear: "Clear",
      confirm: "OK",
      dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
      monthTablePrompt: "Use the arrow keys and enter to select the month",
      yearTablePrompt: "Use the arrow keys and enter to select the year",
      selectedDate: "Selected date",
      selectDate: "Select date",
      selectTime: "Select time",
      startDate: "Start Date",
      startTime: "Start Time",
      endDate: "End Date",
      endTime: "End Time",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "January",
      month2: "February",
      month3: "March",
      month4: "April",
      month5: "May",
      month6: "June",
      month7: "July",
      month8: "August",
      month9: "September",
      month10: "October",
      month11: "November",
      month12: "December",
      week: "week",
      weeks: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat"
      },
      weeksFull: {
        sun: "Sunday",
        mon: "Monday",
        tue: "Tuesday",
        wed: "Wednesday",
        thu: "Thursday",
        fri: "Friday",
        sat: "Saturday"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    inputNumber: {
      decrease: "decrease number",
      increase: "increase number"
    },
    select: {
      loading: "Loading",
      noMatch: "No matching data",
      noData: "No data",
      placeholder: "Select"
    },
    dropdown: {
      toggleDropdown: "Toggle Dropdown"
    },
    cascader: {
      noMatch: "No matching data",
      loading: "Loading",
      placeholder: "Select",
      noData: "No data"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
    },
    dialog: {
      close: "Close this dialog"
    },
    drawer: {
      close: "Close this dialog"
    },
    messagebox: {
      title: "Message",
      confirm: "OK",
      cancel: "Cancel",
      error: "Illegal input",
      close: "Close this dialog"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Delete",
      preview: "Preview",
      continue: "Continue"
    },
    slider: {
      defaultLabel: "slider between {min} and {max}",
      defaultRangeStartLabel: "pick start value",
      defaultRangeEndLabel: "pick end value"
    },
    table: {
      emptyText: "No Data",
      confirmFilter: "Confirm",
      resetFilter: "Reset",
      clearFilter: "All",
      sumText: "Sum"
    },
    tree: {
      emptyText: "No Data"
    },
    transfer: {
      noMatch: "No matching data",
      noData: "No data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-locale/index.mjs
var buildTranslator = (locale) => (path, option) => translate(path, option, unref4(locale));
var translate = (path, option, locale) => get_default(locale, path, path).replace(/\{(\w+)\}/g, (_2, key) => {
  var _a2;
  return `${(_a2 = option == null ? void 0 : option[key]) != null ? _a2 : `{${key}}`}`;
});
var buildLocaleContext = (locale) => {
  const lang = computed4(() => unref4(locale).name);
  const localeRef = isRef3(locale) ? locale : ref3(locale);
  return {
    lang,
    locale: localeRef,
    t: buildTranslator(locale)
  };
};
var localeContextKey = Symbol("localeContextKey");
var useLocale = (localeOverrides) => {
  const locale = localeOverrides || inject3(localeContextKey, ref3());
  return buildLocaleContext(computed4(() => locale.value || English));
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-lockscreen/index.mjs
import { isRef as isRef5, watch as watch4, onScopeDispose as onScopeDispose2 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js
import { extend, isArray as isArray6, isMap as isMap2, isIntegerKey, hasOwn as hasOwn6, isSymbol as isSymbol4, isObject as isObject8, hasChanged, makeMap, capitalize as capitalize3, toRawType, def, isFunction as isFunction6, NOOP as NOOP4 } from "@vue/shared";
function warn2(msg, ...args) {
  console.warn(`[Vue warn] ${msg}`, ...args);
}
var activeEffectScope;
function recordEffectScope(effect, scope = activeEffectScope) {
  if (scope && scope.active) {
    scope.effects.push(effect);
  }
}
var createDep = (effects) => {
  const dep = new Set(effects);
  dep.w = 0;
  dep.n = 0;
  return dep;
};
var wasTracked = (dep) => (dep.w & trackOpBit) > 0;
var newTracked = (dep) => (dep.n & trackOpBit) > 0;
var initDepMarkers = ({ deps }) => {
  if (deps.length) {
    for (let i = 0; i < deps.length; i++) {
      deps[i].w |= trackOpBit;
    }
  }
};
var finalizeDepMarkers = (effect) => {
  const { deps } = effect;
  if (deps.length) {
    let ptr = 0;
    for (let i = 0; i < deps.length; i++) {
      const dep = deps[i];
      if (wasTracked(dep) && !newTracked(dep)) {
        dep.delete(effect);
      } else {
        deps[ptr++] = dep;
      }
      dep.w &= ~trackOpBit;
      dep.n &= ~trackOpBit;
    }
    deps.length = ptr;
  }
};
var targetMap = /* @__PURE__ */ new WeakMap();
var effectTrackDepth = 0;
var trackOpBit = 1;
var maxMarkerBits = 30;
var activeEffect;
var ITERATE_KEY = Symbol(true ? "iterate" : "");
var MAP_KEY_ITERATE_KEY = Symbol(true ? "Map key iterate" : "");
var ReactiveEffect = class {
  constructor(fn2, scheduler = null, scope) {
    this.fn = fn2;
    this.scheduler = scheduler;
    this.active = true;
    this.deps = [];
    this.parent = void 0;
    recordEffectScope(this, scope);
  }
  run() {
    if (!this.active) {
      return this.fn();
    }
    let parent2 = activeEffect;
    let lastShouldTrack = shouldTrack;
    while (parent2) {
      if (parent2 === this) {
        return;
      }
      parent2 = parent2.parent;
    }
    try {
      this.parent = activeEffect;
      activeEffect = this;
      shouldTrack = true;
      trackOpBit = 1 << ++effectTrackDepth;
      if (effectTrackDepth <= maxMarkerBits) {
        initDepMarkers(this);
      } else {
        cleanupEffect(this);
      }
      return this.fn();
    } finally {
      if (effectTrackDepth <= maxMarkerBits) {
        finalizeDepMarkers(this);
      }
      trackOpBit = 1 << --effectTrackDepth;
      activeEffect = this.parent;
      shouldTrack = lastShouldTrack;
      this.parent = void 0;
      if (this.deferStop) {
        this.stop();
      }
    }
  }
  stop() {
    if (activeEffect === this) {
      this.deferStop = true;
    } else if (this.active) {
      cleanupEffect(this);
      if (this.onStop) {
        this.onStop();
      }
      this.active = false;
    }
  }
};
function cleanupEffect(effect2) {
  const { deps } = effect2;
  if (deps.length) {
    for (let i = 0; i < deps.length; i++) {
      deps[i].delete(effect2);
    }
    deps.length = 0;
  }
}
var shouldTrack = true;
var trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack);
  shouldTrack = false;
}
function resetTracking() {
  const last2 = trackStack.pop();
  shouldTrack = last2 === void 0 ? true : last2;
}
function track(target2, type4, key) {
  if (shouldTrack && activeEffect) {
    let depsMap = targetMap.get(target2);
    if (!depsMap) {
      targetMap.set(target2, depsMap = /* @__PURE__ */ new Map());
    }
    let dep = depsMap.get(key);
    if (!dep) {
      depsMap.set(key, dep = createDep());
    }
    const eventInfo = true ? { effect: activeEffect, target: target2, type: type4, key } : void 0;
    trackEffects(dep, eventInfo);
  }
}
function trackEffects(dep, debuggerEventExtraInfo) {
  let shouldTrack2 = false;
  if (effectTrackDepth <= maxMarkerBits) {
    if (!newTracked(dep)) {
      dep.n |= trackOpBit;
      shouldTrack2 = !wasTracked(dep);
    }
  } else {
    shouldTrack2 = !dep.has(activeEffect);
  }
  if (shouldTrack2) {
    dep.add(activeEffect);
    activeEffect.deps.push(dep);
    if (activeEffect.onTrack) {
      activeEffect.onTrack(
        extend(
          {
            effect: activeEffect
          },
          debuggerEventExtraInfo
        )
      );
    }
  }
}
function trigger(target2, type4, key, newValue, oldValue, oldTarget) {
  const depsMap = targetMap.get(target2);
  if (!depsMap) {
    return;
  }
  let deps = [];
  if (type4 === "clear") {
    deps = [...depsMap.values()];
  } else if (key === "length" && isArray6(target2)) {
    const newLength = Number(newValue);
    depsMap.forEach((dep, key2) => {
      if (key2 === "length" || key2 >= newLength) {
        deps.push(dep);
      }
    });
  } else {
    if (key !== void 0) {
      deps.push(depsMap.get(key));
    }
    switch (type4) {
      case "add":
        if (!isArray6(target2)) {
          deps.push(depsMap.get(ITERATE_KEY));
          if (isMap2(target2)) {
            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));
          }
        } else if (isIntegerKey(key)) {
          deps.push(depsMap.get("length"));
        }
        break;
      case "delete":
        if (!isArray6(target2)) {
          deps.push(depsMap.get(ITERATE_KEY));
          if (isMap2(target2)) {
            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));
          }
        }
        break;
      case "set":
        if (isMap2(target2)) {
          deps.push(depsMap.get(ITERATE_KEY));
        }
        break;
    }
  }
  const eventInfo = true ? { target: target2, type: type4, key, newValue, oldValue, oldTarget } : void 0;
  if (deps.length === 1) {
    if (deps[0]) {
      if (true) {
        triggerEffects(deps[0], eventInfo);
      } else {
        triggerEffects(deps[0]);
      }
    }
  } else {
    const effects = [];
    for (const dep of deps) {
      if (dep) {
        effects.push(...dep);
      }
    }
    if (true) {
      triggerEffects(createDep(effects), eventInfo);
    } else {
      triggerEffects(createDep(effects));
    }
  }
}
function triggerEffects(dep, debuggerEventExtraInfo) {
  const effects = isArray6(dep) ? dep : [...dep];
  for (const effect2 of effects) {
    if (effect2.computed) {
      triggerEffect(effect2, debuggerEventExtraInfo);
    }
  }
  for (const effect2 of effects) {
    if (!effect2.computed) {
      triggerEffect(effect2, debuggerEventExtraInfo);
    }
  }
}
function triggerEffect(effect2, debuggerEventExtraInfo) {
  if (effect2 !== activeEffect || effect2.allowRecurse) {
    if (effect2.onTrigger) {
      effect2.onTrigger(extend({ effect: effect2 }, debuggerEventExtraInfo));
    }
    if (effect2.scheduler) {
      effect2.scheduler();
    } else {
      effect2.run();
    }
  }
}
var isNonTrackableKeys = makeMap(`__proto__,__v_isRef,__isVue`);
var builtInSymbols = new Set(
  Object.getOwnPropertyNames(Symbol).filter((key) => key !== "arguments" && key !== "caller").map((key) => Symbol[key]).filter(isSymbol4)
);
var get$1 = createGetter();
var shallowGet = createGetter(false, true);
var readonlyGet = createGetter(true);
var shallowReadonlyGet = createGetter(true, true);
var arrayInstrumentations = createArrayInstrumentations();
function createArrayInstrumentations() {
  const instrumentations = {};
  ["includes", "indexOf", "lastIndexOf"].forEach((key) => {
    instrumentations[key] = function(...args) {
      const arr = toRaw(this);
      for (let i = 0, l2 = this.length; i < l2; i++) {
        track(arr, "get", i + "");
      }
      const res = arr[key](...args);
      if (res === -1 || res === false) {
        return arr[key](...args.map(toRaw));
      } else {
        return res;
      }
    };
  });
  ["push", "pop", "shift", "unshift", "splice"].forEach((key) => {
    instrumentations[key] = function(...args) {
      pauseTracking();
      const res = toRaw(this)[key].apply(this, args);
      resetTracking();
      return res;
    };
  });
  return instrumentations;
}
function hasOwnProperty26(key) {
  const obj = toRaw(this);
  track(obj, "has", key);
  return obj.hasOwnProperty(key);
}
function createGetter(isReadonly22 = false, shallow = false) {
  return function get22(target2, key, receiver) {
    if (key === "__v_isReactive") {
      return !isReadonly22;
    } else if (key === "__v_isReadonly") {
      return isReadonly22;
    } else if (key === "__v_isShallow") {
      return shallow;
    } else if (key === "__v_raw" && receiver === (isReadonly22 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target2)) {
      return target2;
    }
    const targetIsArray = isArray6(target2);
    if (!isReadonly22) {
      if (targetIsArray && hasOwn6(arrayInstrumentations, key)) {
        return Reflect.get(arrayInstrumentations, key, receiver);
      }
      if (key === "hasOwnProperty") {
        return hasOwnProperty26;
      }
    }
    const res = Reflect.get(target2, key, receiver);
    if (isSymbol4(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {
      return res;
    }
    if (!isReadonly22) {
      track(target2, "get", key);
    }
    if (shallow) {
      return res;
    }
    if (isRef4(res)) {
      return targetIsArray && isIntegerKey(key) ? res : res.value;
    }
    if (isObject8(res)) {
      return isReadonly22 ? readonly3(res) : reactive3(res);
    }
    return res;
  };
}
var set$1 = createSetter();
var shallowSet = createSetter(true);
function createSetter(shallow = false) {
  return function set22(target2, key, value, receiver) {
    let oldValue = target2[key];
    if (isReadonly2(oldValue) && isRef4(oldValue) && !isRef4(value)) {
      return false;
    }
    if (!shallow) {
      if (!isShallow(value) && !isReadonly2(value)) {
        oldValue = toRaw(oldValue);
        value = toRaw(value);
      }
      if (!isArray6(target2) && isRef4(oldValue) && !isRef4(value)) {
        oldValue.value = value;
        return true;
      }
    }
    const hadKey = isArray6(target2) && isIntegerKey(key) ? Number(key) < target2.length : hasOwn6(target2, key);
    const result2 = Reflect.set(target2, key, value, receiver);
    if (target2 === toRaw(receiver)) {
      if (!hadKey) {
        trigger(target2, "add", key, value);
      } else if (hasChanged(value, oldValue)) {
        trigger(target2, "set", key, value, oldValue);
      }
    }
    return result2;
  };
}
function deleteProperty(target2, key) {
  const hadKey = hasOwn6(target2, key);
  const oldValue = target2[key];
  const result2 = Reflect.deleteProperty(target2, key);
  if (result2 && hadKey) {
    trigger(target2, "delete", key, void 0, oldValue);
  }
  return result2;
}
function has$1(target2, key) {
  const result2 = Reflect.has(target2, key);
  if (!isSymbol4(key) || !builtInSymbols.has(key)) {
    track(target2, "has", key);
  }
  return result2;
}
function ownKeys(target2) {
  track(target2, "iterate", isArray6(target2) ? "length" : ITERATE_KEY);
  return Reflect.ownKeys(target2);
}
var mutableHandlers = {
  get: get$1,
  set: set$1,
  deleteProperty,
  has: has$1,
  ownKeys
};
var readonlyHandlers = {
  get: readonlyGet,
  set(target2, key) {
    if (true) {
      warn2(
        `Set operation on key "${String(key)}" failed: target is readonly.`,
        target2
      );
    }
    return true;
  },
  deleteProperty(target2, key) {
    if (true) {
      warn2(
        `Delete operation on key "${String(key)}" failed: target is readonly.`,
        target2
      );
    }
    return true;
  }
};
var shallowReactiveHandlers = extend(
  {},
  mutableHandlers,
  {
    get: shallowGet,
    set: shallowSet
  }
);
var shallowReadonlyHandlers = extend(
  {},
  readonlyHandlers,
  {
    get: shallowReadonlyGet
  }
);
var toShallow = (value) => value;
var getProto = (v2) => Reflect.getPrototypeOf(v2);
function get2(target2, key, isReadonly3 = false, isShallow2 = false) {
  target2 = target2["__v_raw"];
  const rawTarget = toRaw(target2);
  const rawKey = toRaw(key);
  if (!isReadonly3) {
    if (key !== rawKey) {
      track(rawTarget, "get", key);
    }
    track(rawTarget, "get", rawKey);
  }
  const { has: has22 } = getProto(rawTarget);
  const wrap2 = isShallow2 ? toShallow : isReadonly3 ? toReadonly : toReactive;
  if (has22.call(rawTarget, key)) {
    return wrap2(target2.get(key));
  } else if (has22.call(rawTarget, rawKey)) {
    return wrap2(target2.get(rawKey));
  } else if (target2 !== rawTarget) {
    target2.get(key);
  }
}
function has2(key, isReadonly3 = false) {
  const target2 = this["__v_raw"];
  const rawTarget = toRaw(target2);
  const rawKey = toRaw(key);
  if (!isReadonly3) {
    if (key !== rawKey) {
      track(rawTarget, "has", key);
    }
    track(rawTarget, "has", rawKey);
  }
  return key === rawKey ? target2.has(key) : target2.has(key) || target2.has(rawKey);
}
function size2(target2, isReadonly3 = false) {
  target2 = target2["__v_raw"];
  !isReadonly3 && track(toRaw(target2), "iterate", ITERATE_KEY);
  return Reflect.get(target2, "size", target2);
}
function add2(value) {
  value = toRaw(value);
  const target2 = toRaw(this);
  const proto = getProto(target2);
  const hadKey = proto.has.call(target2, value);
  if (!hadKey) {
    target2.add(value);
    trigger(target2, "add", value, value);
  }
  return this;
}
function set4(key, value) {
  value = toRaw(value);
  const target2 = toRaw(this);
  const { has: has22, get: get22 } = getProto(target2);
  let hadKey = has22.call(target2, key);
  if (!hadKey) {
    key = toRaw(key);
    hadKey = has22.call(target2, key);
  } else if (true) {
    checkIdentityKeys(target2, has22, key);
  }
  const oldValue = get22.call(target2, key);
  target2.set(key, value);
  if (!hadKey) {
    trigger(target2, "add", key, value);
  } else if (hasChanged(value, oldValue)) {
    trigger(target2, "set", key, value, oldValue);
  }
  return this;
}
function deleteEntry(key) {
  const target2 = toRaw(this);
  const { has: has22, get: get22 } = getProto(target2);
  let hadKey = has22.call(target2, key);
  if (!hadKey) {
    key = toRaw(key);
    hadKey = has22.call(target2, key);
  } else if (true) {
    checkIdentityKeys(target2, has22, key);
  }
  const oldValue = get22 ? get22.call(target2, key) : void 0;
  const result2 = target2.delete(key);
  if (hadKey) {
    trigger(target2, "delete", key, void 0, oldValue);
  }
  return result2;
}
function clear() {
  const target2 = toRaw(this);
  const hadItems = target2.size !== 0;
  const oldTarget = true ? isMap2(target2) ? new Map(target2) : new Set(target2) : void 0;
  const result2 = target2.clear();
  if (hadItems) {
    trigger(target2, "clear", void 0, void 0, oldTarget);
  }
  return result2;
}
function createForEach(isReadonly3, isShallow2) {
  return function forEach2(callback, thisArg) {
    const observed = this;
    const target2 = observed["__v_raw"];
    const rawTarget = toRaw(target2);
    const wrap2 = isShallow2 ? toShallow : isReadonly3 ? toReadonly : toReactive;
    !isReadonly3 && track(rawTarget, "iterate", ITERATE_KEY);
    return target2.forEach((value, key) => {
      return callback.call(thisArg, wrap2(value), wrap2(key), observed);
    });
  };
}
function createIterableMethod(method5, isReadonly3, isShallow2) {
  return function(...args) {
    const target2 = this["__v_raw"];
    const rawTarget = toRaw(target2);
    const targetIsMap = isMap2(rawTarget);
    const isPair = method5 === "entries" || method5 === Symbol.iterator && targetIsMap;
    const isKeyOnly = method5 === "keys" && targetIsMap;
    const innerIterator = target2[method5](...args);
    const wrap2 = isShallow2 ? toShallow : isReadonly3 ? toReadonly : toReactive;
    !isReadonly3 && track(
      rawTarget,
      "iterate",
      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    );
    return {
      // iterator protocol
      next() {
        const { value, done } = innerIterator.next();
        return done ? { value, done } : {
          value: isPair ? [wrap2(value[0]), wrap2(value[1])] : wrap2(value),
          done
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(type4) {
  return function(...args) {
    if (true) {
      const key = args[0] ? `on key "${args[0]}" ` : ``;
      console.warn(
        `${capitalize3(type4)} operation ${key}failed: target is readonly.`,
        toRaw(this)
      );
    }
    return type4 === "delete" ? false : this;
  };
}
function createInstrumentations() {
  const mutableInstrumentations2 = {
    get(key) {
      return get2(this, key);
    },
    get size() {
      return size2(this);
    },
    has: has2,
    add: add2,
    set: set4,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, false)
  };
  const shallowInstrumentations2 = {
    get(key) {
      return get2(this, key, false, true);
    },
    get size() {
      return size2(this);
    },
    has: has2,
    add: add2,
    set: set4,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, true)
  };
  const readonlyInstrumentations2 = {
    get(key) {
      return get2(this, key, true);
    },
    get size() {
      return size2(this, true);
    },
    has(key) {
      return has2.call(this, key, true);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(true, false)
  };
  const shallowReadonlyInstrumentations2 = {
    get(key) {
      return get2(this, key, true, true);
    },
    get size() {
      return size2(this, true);
    },
    has(key) {
      return has2.call(this, key, true);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(true, true)
  };
  const iteratorMethods = ["keys", "values", "entries", Symbol.iterator];
  iteratorMethods.forEach((method5) => {
    mutableInstrumentations2[method5] = createIterableMethod(
      method5,
      false,
      false
    );
    readonlyInstrumentations2[method5] = createIterableMethod(
      method5,
      true,
      false
    );
    shallowInstrumentations2[method5] = createIterableMethod(
      method5,
      false,
      true
    );
    shallowReadonlyInstrumentations2[method5] = createIterableMethod(
      method5,
      true,
      true
    );
  });
  return [
    mutableInstrumentations2,
    readonlyInstrumentations2,
    shallowInstrumentations2,
    shallowReadonlyInstrumentations2
  ];
}
var [
  mutableInstrumentations,
  readonlyInstrumentations,
  shallowInstrumentations,
  shallowReadonlyInstrumentations
] = createInstrumentations();
function createInstrumentationGetter(isReadonly3, shallow) {
  const instrumentations = shallow ? isReadonly3 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly3 ? readonlyInstrumentations : mutableInstrumentations;
  return (target2, key, receiver) => {
    if (key === "__v_isReactive") {
      return !isReadonly3;
    } else if (key === "__v_isReadonly") {
      return isReadonly3;
    } else if (key === "__v_raw") {
      return target2;
    }
    return Reflect.get(
      hasOwn6(instrumentations, key) && key in target2 ? instrumentations : target2,
      key,
      receiver
    );
  };
}
var mutableCollectionHandlers = {
  get: createInstrumentationGetter(false, false)
};
var shallowCollectionHandlers = {
  get: createInstrumentationGetter(false, true)
};
var readonlyCollectionHandlers = {
  get: createInstrumentationGetter(true, false)
};
var shallowReadonlyCollectionHandlers = {
  get: createInstrumentationGetter(true, true)
};
function checkIdentityKeys(target2, has22, key) {
  const rawKey = toRaw(key);
  if (rawKey !== key && has22.call(target2, rawKey)) {
    const type4 = toRawType(target2);
    console.warn(
      `Reactive ${type4} contains both the raw and reactive versions of the same object${type4 === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`
    );
  }
}
var reactiveMap = /* @__PURE__ */ new WeakMap();
var shallowReactiveMap = /* @__PURE__ */ new WeakMap();
var readonlyMap = /* @__PURE__ */ new WeakMap();
var shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(rawType) {
  switch (rawType) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(value) {
  return value["__v_skip"] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));
}
function reactive3(target2) {
  if (isReadonly2(target2)) {
    return target2;
  }
  return createReactiveObject(
    target2,
    false,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function readonly3(target2) {
  return createReactiveObject(
    target2,
    true,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function createReactiveObject(target2, isReadonly22, baseHandlers, collectionHandlers, proxyMap) {
  if (!isObject8(target2)) {
    if (true) {
      console.warn(`value cannot be made reactive: ${String(target2)}`);
    }
    return target2;
  }
  if (target2["__v_raw"] && !(isReadonly22 && target2["__v_isReactive"])) {
    return target2;
  }
  const existingProxy = proxyMap.get(target2);
  if (existingProxy) {
    return existingProxy;
  }
  const targetType = getTargetType(target2);
  if (targetType === 0) {
    return target2;
  }
  const proxy = new Proxy(
    target2,
    targetType === 2 ? collectionHandlers : baseHandlers
  );
  proxyMap.set(target2, proxy);
  return proxy;
}
function isReadonly2(value) {
  return !!(value && value["__v_isReadonly"]);
}
function isShallow(value) {
  return !!(value && value["__v_isShallow"]);
}
function toRaw(observed) {
  const raw = observed && observed["__v_raw"];
  return raw ? toRaw(raw) : observed;
}
var toReactive = (value) => isObject8(value) ? reactive3(value) : value;
var toReadonly = (value) => isObject8(value) ? readonly3(value) : value;
function trackRefValue(ref210) {
  if (shouldTrack && activeEffect) {
    ref210 = toRaw(ref210);
    if (true) {
      trackEffects(ref210.dep || (ref210.dep = createDep()), {
        target: ref210,
        type: "get",
        key: "value"
      });
    } else {
      trackEffects(ref210.dep || (ref210.dep = createDep()));
    }
  }
}
function triggerRefValue(ref210, newVal) {
  ref210 = toRaw(ref210);
  const dep = ref210.dep;
  if (dep) {
    if (true) {
      triggerEffects(dep, {
        target: ref210,
        type: "set",
        key: "value",
        newValue: newVal
      });
    } else {
      triggerEffects(dep);
    }
  }
}
function isRef4(r) {
  return !!(r && r.__v_isRef === true);
}
var ComputedRefImpl = class {
  constructor(getter, _setter, isReadonly3, isSSR) {
    this._setter = _setter;
    this.dep = void 0;
    this.__v_isRef = true;
    this["__v_isReadonly"] = false;
    this._dirty = true;
    this.effect = new ReactiveEffect(getter, () => {
      if (!this._dirty) {
        this._dirty = true;
        triggerRefValue(this);
      }
    });
    this.effect.computed = this;
    this.effect.active = this._cacheable = !isSSR;
    this["__v_isReadonly"] = isReadonly3;
  }
  get value() {
    const self2 = toRaw(this);
    trackRefValue(self2);
    if (self2._dirty || !self2._cacheable) {
      self2._dirty = false;
      self2._value = self2.effect.run();
    }
    return self2._value;
  }
  set value(newValue) {
    this._setter(newValue);
  }
};
function computed5(getterOrOptions, debugOptions, isSSR = false) {
  let getter;
  let setter;
  const onlyGetter = isFunction6(getterOrOptions);
  if (onlyGetter) {
    getter = getterOrOptions;
    setter = true ? () => {
      console.warn("Write operation failed: computed value is readonly");
    } : NOOP4;
  } else {
    getter = getterOrOptions.get;
    setter = getterOrOptions.set;
  }
  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);
  if (debugOptions && !isSSR) {
    cRef.effect.onTrack = debugOptions.onTrack;
    cRef.effect.onTrigger = debugOptions.onTrigger;
  }
  return cRef;
}
var tick = Promise.resolve();

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-namespace/index.mjs
import { inject as inject4, ref as ref4, computed as computed6, unref as unref5 } from "vue";
var defaultNamespace = "el";
var statePrefix = "is-";
var _bem = (namespace, block, blockSuffix, element, modifier) => {
  let cls = `${namespace}-${block}`;
  if (blockSuffix) {
    cls += `-${blockSuffix}`;
  }
  if (element) {
    cls += `__${element}`;
  }
  if (modifier) {
    cls += `--${modifier}`;
  }
  return cls;
};
var namespaceContextKey = Symbol("namespaceContextKey");
var useGetDerivedNamespace = (namespaceOverrides) => {
  const derivedNamespace = namespaceOverrides || inject4(namespaceContextKey, ref4(defaultNamespace));
  const namespace = computed6(() => {
    return unref5(derivedNamespace) || defaultNamespace;
  });
  return namespace;
};
var useNamespace = (block, namespaceOverrides) => {
  const namespace = useGetDerivedNamespace(namespaceOverrides);
  const b2 = (blockSuffix = "") => _bem(namespace.value, block, blockSuffix, "", "");
  const e = (element) => element ? _bem(namespace.value, block, "", element, "") : "";
  const m2 = (modifier) => modifier ? _bem(namespace.value, block, "", "", modifier) : "";
  const be2 = (blockSuffix, element) => blockSuffix && element ? _bem(namespace.value, block, blockSuffix, element, "") : "";
  const em = (element, modifier) => element && modifier ? _bem(namespace.value, block, "", element, modifier) : "";
  const bm = (blockSuffix, modifier) => blockSuffix && modifier ? _bem(namespace.value, block, blockSuffix, "", modifier) : "";
  const bem = (blockSuffix, element, modifier) => blockSuffix && element && modifier ? _bem(namespace.value, block, blockSuffix, element, modifier) : "";
  const is = (name, ...args) => {
    const state = args.length >= 1 ? args[0] : true;
    return name && state ? `${statePrefix}${name}` : "";
  };
  const cssVar = (object4) => {
    const styles = {};
    for (const key in object4) {
      if (object4[key]) {
        styles[`--${namespace.value}-${key}`] = object4[key];
      }
    }
    return styles;
  };
  const cssVarBlock = (object4) => {
    const styles = {};
    for (const key in object4) {
      if (object4[key]) {
        styles[`--${namespace.value}-${block}-${key}`] = object4[key];
      }
    }
    return styles;
  };
  const cssVarName = (name) => `--${namespace.value}-${name}`;
  const cssVarBlockName = (name) => `--${namespace.value}-${block}-${name}`;
  return {
    namespace,
    b: b2,
    e,
    m: m2,
    be: be2,
    em,
    bm,
    bem,
    is,
    cssVar,
    cssVarName,
    cssVarBlock,
    cssVarBlockName
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-lockscreen/index.mjs
var useLockscreen = (trigger2, options = {}) => {
  if (!isRef5(trigger2)) {
    throwError("[useLockscreen]", "You need to pass a ref param to this function");
  }
  const ns = options.ns || useNamespace("popup");
  const hiddenCls = computed5(() => ns.bm("parent", "hidden"));
  if (!isClient || hasClass(document.body, hiddenCls.value)) {
    return;
  }
  let scrollBarWidth2 = 0;
  let withoutHiddenClass = false;
  let bodyWidth = "0";
  const cleanup = () => {
    setTimeout(() => {
      removeClass(document == null ? void 0 : document.body, hiddenCls.value);
      if (withoutHiddenClass && document) {
        document.body.style.width = bodyWidth;
      }
    }, 200);
  };
  watch4(trigger2, (val) => {
    if (!val) {
      cleanup();
      return;
    }
    withoutHiddenClass = !hasClass(document.body, hiddenCls.value);
    if (withoutHiddenClass) {
      bodyWidth = document.body.style.width;
    }
    scrollBarWidth2 = getScrollBarWidth(ns.namespace.value);
    const bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;
    const bodyOverflowY = getStyle(document.body, "overflowY");
    if (scrollBarWidth2 > 0 && (bodyHasOverflow || bodyOverflowY === "scroll") && withoutHiddenClass) {
      document.body.style.width = `calc(100% - ${scrollBarWidth2}px)`;
    }
    addClass(document.body, hiddenCls.value);
  });
  onScopeDispose2(() => cleanup());
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-modal/index.mjs
import { watch as watch5 } from "vue";
var modalStack = [];
var closeModal = (e) => {
  if (modalStack.length === 0)
    return;
  if (e.code === EVENT_CODE.esc) {
    e.stopPropagation();
    const topModal = modalStack[modalStack.length - 1];
    topModal.handleClose();
  }
};
var useModal = (instance, visibleRef) => {
  watch5(visibleRef, (val) => {
    if (val) {
      modalStack.push(instance);
    } else {
      modalStack.splice(modalStack.indexOf(instance), 1);
    }
  });
};
if (isClient)
  useEventListener(document, "keydown", closeModal);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-model-toggle/index.mjs
import { getCurrentInstance as getCurrentInstance4, computed as computed7, watch as watch6, onMounted as onMounted4 } from "vue";
import { isFunction as isFunction7 } from "@vue/shared";
var _prop = buildProp({
  type: definePropType(Boolean),
  default: null
});
var _event = buildProp({
  type: definePropType(Function)
});
var createModelToggleComposable = (name) => {
  const updateEventKey = `update:${name}`;
  const updateEventKeyRaw2 = `onUpdate:${name}`;
  const useModelToggleEmits2 = [updateEventKey];
  const useModelToggleProps2 = {
    [name]: _prop,
    [updateEventKeyRaw2]: _event
  };
  const useModelToggle2 = ({
    indicator,
    toggleReason,
    shouldHideWhenRouteChanges,
    shouldProceed,
    onShow,
    onHide
  }) => {
    const instance = getCurrentInstance4();
    const { emit } = instance;
    const props = instance.props;
    const hasUpdateHandler = computed7(() => isFunction7(props[updateEventKeyRaw2]));
    const isModelBindingAbsent = computed7(() => props[name] === null);
    const doShow = (event) => {
      if (indicator.value === true) {
        return;
      }
      indicator.value = true;
      if (toggleReason) {
        toggleReason.value = event;
      }
      if (isFunction7(onShow)) {
        onShow(event);
      }
    };
    const doHide = (event) => {
      if (indicator.value === false) {
        return;
      }
      indicator.value = false;
      if (toggleReason) {
        toggleReason.value = event;
      }
      if (isFunction7(onHide)) {
        onHide(event);
      }
    };
    const show = (event) => {
      if (props.disabled === true || isFunction7(shouldProceed) && !shouldProceed())
        return;
      const shouldEmit = hasUpdateHandler.value && isClient;
      if (shouldEmit) {
        emit(updateEventKey, true);
      }
      if (isModelBindingAbsent.value || !shouldEmit) {
        doShow(event);
      }
    };
    const hide2 = (event) => {
      if (props.disabled === true || !isClient)
        return;
      const shouldEmit = hasUpdateHandler.value && isClient;
      if (shouldEmit) {
        emit(updateEventKey, false);
      }
      if (isModelBindingAbsent.value || !shouldEmit) {
        doHide(event);
      }
    };
    const onChange = (val) => {
      if (!isBoolean2(val))
        return;
      if (props.disabled && val) {
        if (hasUpdateHandler.value) {
          emit(updateEventKey, false);
        }
      } else if (indicator.value !== val) {
        if (val) {
          doShow();
        } else {
          doHide();
        }
      }
    };
    const toggle = () => {
      if (indicator.value) {
        hide2();
      } else {
        show();
      }
    };
    watch6(() => props[name], onChange);
    if (shouldHideWhenRouteChanges && instance.appContext.config.globalProperties.$route !== void 0) {
      watch6(() => ({
        ...instance.proxy.$route
      }), () => {
        if (shouldHideWhenRouteChanges.value && indicator.value) {
          hide2();
        }
      });
    }
    onMounted4(() => {
      onChange(props[name]);
    });
    return {
      hide: hide2,
      show,
      toggle,
      hasUpdateHandler
    };
  };
  return {
    useModelToggle: useModelToggle2,
    useModelToggleProps: useModelToggleProps2,
    useModelToggleEmits: useModelToggleEmits2
  };
};
var { useModelToggle, useModelToggleProps, useModelToggleEmits } = createModelToggleComposable("modelValue");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-prevent-global/index.mjs
import { watch as watch7 } from "vue";
var usePreventGlobal = (indicator, evt, cb) => {
  const prevent = (e) => {
    if (cb(e))
      e.stopImmediatePropagation();
  };
  let stop = void 0;
  watch7(() => indicator.value, (val) => {
    if (val) {
      stop = useEventListener(document, evt, prevent, true);
    } else {
      stop == null ? void 0 : stop();
    }
  }, { immediate: true });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-prop/index.mjs
import { getCurrentInstance as getCurrentInstance5, computed as computed8 } from "vue";
var useProp = (name) => {
  const vm = getCurrentInstance5();
  return computed8(() => {
    var _a2, _b;
    return (_b = (_a2 = vm == null ? void 0 : vm.proxy) == null ? void 0 : _a2.$props) == null ? void 0 : _b[name];
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-popper/index.mjs
import { computed as computed9, unref as unref6, shallowRef as shallowRef3, ref as ref5, watch as watch8, onBeforeUnmount as onBeforeUnmount3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@popperjs/core/dist/index.mjs
var E = "top";
var R = "bottom";
var W = "right";
var P = "left";
var me = "auto";
var G = [E, R, W, P];
var U = "start";
var J = "end";
var Xe = "clippingParents";
var je = "viewport";
var K = "popper";
var Ye = "reference";
var De = G.reduce(function(t, e) {
  return t.concat([e + "-" + U, e + "-" + J]);
}, []);
var Ee = [].concat(G, [me]).reduce(function(t, e) {
  return t.concat([e, e + "-" + U, e + "-" + J]);
}, []);
var Ge = "beforeRead";
var Je = "read";
var Ke = "afterRead";
var Qe = "beforeMain";
var Ze = "main";
var et = "afterMain";
var tt = "beforeWrite";
var nt = "write";
var rt = "afterWrite";
var ot = [Ge, Je, Ke, Qe, Ze, et, tt, nt, rt];
function C(t) {
  return t ? (t.nodeName || "").toLowerCase() : null;
}
function H(t) {
  if (t == null)
    return window;
  if (t.toString() !== "[object Window]") {
    var e = t.ownerDocument;
    return e && e.defaultView || window;
  }
  return t;
}
function Q(t) {
  var e = H(t).Element;
  return t instanceof e || t instanceof Element;
}
function B(t) {
  var e = H(t).HTMLElement;
  return t instanceof e || t instanceof HTMLElement;
}
function Pe(t) {
  if (typeof ShadowRoot == "undefined")
    return false;
  var e = H(t).ShadowRoot;
  return t instanceof e || t instanceof ShadowRoot;
}
function Mt(t) {
  var e = t.state;
  Object.keys(e.elements).forEach(function(n) {
    var r = e.styles[n] || {}, o2 = e.attributes[n] || {}, i = e.elements[n];
    !B(i) || !C(i) || (Object.assign(i.style, r), Object.keys(o2).forEach(function(a2) {
      var s2 = o2[a2];
      s2 === false ? i.removeAttribute(a2) : i.setAttribute(a2, s2 === true ? "" : s2);
    }));
  });
}
function Rt(t) {
  var e = t.state, n = { popper: { position: e.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
  return Object.assign(e.elements.popper.style, n.popper), e.styles = n, e.elements.arrow && Object.assign(e.elements.arrow.style, n.arrow), function() {
    Object.keys(e.elements).forEach(function(r) {
      var o2 = e.elements[r], i = e.attributes[r] || {}, a2 = Object.keys(e.styles.hasOwnProperty(r) ? e.styles[r] : n[r]), s2 = a2.reduce(function(f2, c2) {
        return f2[c2] = "", f2;
      }, {});
      !B(o2) || !C(o2) || (Object.assign(o2.style, s2), Object.keys(i).forEach(function(f2) {
        o2.removeAttribute(f2);
      }));
    });
  };
}
var Ae = { name: "applyStyles", enabled: true, phase: "write", fn: Mt, effect: Rt, requires: ["computeStyles"] };
function q(t) {
  return t.split("-")[0];
}
var X = Math.max;
var ve = Math.min;
var Z = Math.round;
function ee(t, e) {
  e === void 0 && (e = false);
  var n = t.getBoundingClientRect(), r = 1, o2 = 1;
  if (B(t) && e) {
    var i = t.offsetHeight, a2 = t.offsetWidth;
    a2 > 0 && (r = Z(n.width) / a2 || 1), i > 0 && (o2 = Z(n.height) / i || 1);
  }
  return { width: n.width / r, height: n.height / o2, top: n.top / o2, right: n.right / r, bottom: n.bottom / o2, left: n.left / r, x: n.left / r, y: n.top / o2 };
}
function ke(t) {
  var e = ee(t), n = t.offsetWidth, r = t.offsetHeight;
  return Math.abs(e.width - n) <= 1 && (n = e.width), Math.abs(e.height - r) <= 1 && (r = e.height), { x: t.offsetLeft, y: t.offsetTop, width: n, height: r };
}
function it(t, e) {
  var n = e.getRootNode && e.getRootNode();
  if (t.contains(e))
    return true;
  if (n && Pe(n)) {
    var r = e;
    do {
      if (r && t.isSameNode(r))
        return true;
      r = r.parentNode || r.host;
    } while (r);
  }
  return false;
}
function N(t) {
  return H(t).getComputedStyle(t);
}
function Wt(t) {
  return ["table", "td", "th"].indexOf(C(t)) >= 0;
}
function I(t) {
  return ((Q(t) ? t.ownerDocument : t.document) || window.document).documentElement;
}
function ge(t) {
  return C(t) === "html" ? t : t.assignedSlot || t.parentNode || (Pe(t) ? t.host : null) || I(t);
}
function at2(t) {
  return !B(t) || N(t).position === "fixed" ? null : t.offsetParent;
}
function Bt(t) {
  var e = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1, n = navigator.userAgent.indexOf("Trident") !== -1;
  if (n && B(t)) {
    var r = N(t);
    if (r.position === "fixed")
      return null;
  }
  var o2 = ge(t);
  for (Pe(o2) && (o2 = o2.host); B(o2) && ["html", "body"].indexOf(C(o2)) < 0; ) {
    var i = N(o2);
    if (i.transform !== "none" || i.perspective !== "none" || i.contain === "paint" || ["transform", "perspective"].indexOf(i.willChange) !== -1 || e && i.willChange === "filter" || e && i.filter && i.filter !== "none")
      return o2;
    o2 = o2.parentNode;
  }
  return null;
}
function se(t) {
  for (var e = H(t), n = at2(t); n && Wt(n) && N(n).position === "static"; )
    n = at2(n);
  return n && (C(n) === "html" || C(n) === "body" && N(n).position === "static") ? e : n || Bt(t) || e;
}
function Le(t) {
  return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y";
}
function fe(t, e, n) {
  return X(t, ve(e, n));
}
function St(t, e, n) {
  var r = fe(t, e, n);
  return r > n ? n : r;
}
function st() {
  return { top: 0, right: 0, bottom: 0, left: 0 };
}
function ft(t) {
  return Object.assign({}, st(), t);
}
function ct(t, e) {
  return e.reduce(function(n, r) {
    return n[r] = t, n;
  }, {});
}
var Tt = function(t, e) {
  return t = typeof t == "function" ? t(Object.assign({}, e.rects, { placement: e.placement })) : t, ft(typeof t != "number" ? t : ct(t, G));
};
function Ht(t) {
  var e, n = t.state, r = t.name, o2 = t.options, i = n.elements.arrow, a2 = n.modifiersData.popperOffsets, s2 = q(n.placement), f2 = Le(s2), c2 = [P, W].indexOf(s2) >= 0, u2 = c2 ? "height" : "width";
  if (!(!i || !a2)) {
    var m2 = Tt(o2.padding, n), v2 = ke(i), l2 = f2 === "y" ? E : P, h30 = f2 === "y" ? R : W, p2 = n.rects.reference[u2] + n.rects.reference[f2] - a2[f2] - n.rects.popper[u2], g = a2[f2] - n.rects.reference[f2], x2 = se(i), y = x2 ? f2 === "y" ? x2.clientHeight || 0 : x2.clientWidth || 0 : 0, $ = p2 / 2 - g / 2, d2 = m2[l2], b2 = y - v2[u2] - m2[h30], w2 = y / 2 - v2[u2] / 2 + $, O2 = fe(d2, w2, b2), j = f2;
    n.modifiersData[r] = (e = {}, e[j] = O2, e.centerOffset = O2 - w2, e);
  }
}
function Ct(t) {
  var e = t.state, n = t.options, r = n.element, o2 = r === void 0 ? "[data-popper-arrow]" : r;
  o2 != null && (typeof o2 == "string" && (o2 = e.elements.popper.querySelector(o2), !o2) || !it(e.elements.popper, o2) || (e.elements.arrow = o2));
}
var pt = { name: "arrow", enabled: true, phase: "main", fn: Ht, effect: Ct, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] };
function te(t) {
  return t.split("-")[1];
}
var qt = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
function Vt(t) {
  var e = t.x, n = t.y, r = window, o2 = r.devicePixelRatio || 1;
  return { x: Z(e * o2) / o2 || 0, y: Z(n * o2) / o2 || 0 };
}
function ut(t) {
  var e, n = t.popper, r = t.popperRect, o2 = t.placement, i = t.variation, a2 = t.offsets, s2 = t.position, f2 = t.gpuAcceleration, c2 = t.adaptive, u2 = t.roundOffsets, m2 = t.isFixed, v2 = a2.x, l2 = v2 === void 0 ? 0 : v2, h30 = a2.y, p2 = h30 === void 0 ? 0 : h30, g = typeof u2 == "function" ? u2({ x: l2, y: p2 }) : { x: l2, y: p2 };
  l2 = g.x, p2 = g.y;
  var x2 = a2.hasOwnProperty("x"), y = a2.hasOwnProperty("y"), $ = P, d2 = E, b2 = window;
  if (c2) {
    var w2 = se(n), O2 = "clientHeight", j = "clientWidth";
    if (w2 === H(n) && (w2 = I(n), N(w2).position !== "static" && s2 === "absolute" && (O2 = "scrollHeight", j = "scrollWidth")), w2 = w2, o2 === E || (o2 === P || o2 === W) && i === J) {
      d2 = R;
      var A2 = m2 && w2 === b2 && b2.visualViewport ? b2.visualViewport.height : w2[O2];
      p2 -= A2 - r.height, p2 *= f2 ? 1 : -1;
    }
    if (o2 === P || (o2 === E || o2 === R) && i === J) {
      $ = W;
      var k = m2 && w2 === b2 && b2.visualViewport ? b2.visualViewport.width : w2[j];
      l2 -= k - r.width, l2 *= f2 ? 1 : -1;
    }
  }
  var D2 = Object.assign({ position: s2 }, c2 && qt), S2 = u2 === true ? Vt({ x: l2, y: p2 }) : { x: l2, y: p2 };
  if (l2 = S2.x, p2 = S2.y, f2) {
    var L;
    return Object.assign({}, D2, (L = {}, L[d2] = y ? "0" : "", L[$] = x2 ? "0" : "", L.transform = (b2.devicePixelRatio || 1) <= 1 ? "translate(" + l2 + "px, " + p2 + "px)" : "translate3d(" + l2 + "px, " + p2 + "px, 0)", L));
  }
  return Object.assign({}, D2, (e = {}, e[d2] = y ? p2 + "px" : "", e[$] = x2 ? l2 + "px" : "", e.transform = "", e));
}
function Nt(t) {
  var e = t.state, n = t.options, r = n.gpuAcceleration, o2 = r === void 0 ? true : r, i = n.adaptive, a2 = i === void 0 ? true : i, s2 = n.roundOffsets, f2 = s2 === void 0 ? true : s2, c2 = { placement: q(e.placement), variation: te(e.placement), popper: e.elements.popper, popperRect: e.rects.popper, gpuAcceleration: o2, isFixed: e.options.strategy === "fixed" };
  e.modifiersData.popperOffsets != null && (e.styles.popper = Object.assign({}, e.styles.popper, ut(Object.assign({}, c2, { offsets: e.modifiersData.popperOffsets, position: e.options.strategy, adaptive: a2, roundOffsets: f2 })))), e.modifiersData.arrow != null && (e.styles.arrow = Object.assign({}, e.styles.arrow, ut(Object.assign({}, c2, { offsets: e.modifiersData.arrow, position: "absolute", adaptive: false, roundOffsets: f2 })))), e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-placement": e.placement });
}
var Me = { name: "computeStyles", enabled: true, phase: "beforeWrite", fn: Nt, data: {} };
var ye = { passive: true };
function It(t) {
  var e = t.state, n = t.instance, r = t.options, o2 = r.scroll, i = o2 === void 0 ? true : o2, a2 = r.resize, s2 = a2 === void 0 ? true : a2, f2 = H(e.elements.popper), c2 = [].concat(e.scrollParents.reference, e.scrollParents.popper);
  return i && c2.forEach(function(u2) {
    u2.addEventListener("scroll", n.update, ye);
  }), s2 && f2.addEventListener("resize", n.update, ye), function() {
    i && c2.forEach(function(u2) {
      u2.removeEventListener("scroll", n.update, ye);
    }), s2 && f2.removeEventListener("resize", n.update, ye);
  };
}
var Re = { name: "eventListeners", enabled: true, phase: "write", fn: function() {
}, effect: It, data: {} };
var _t = { left: "right", right: "left", bottom: "top", top: "bottom" };
function be(t) {
  return t.replace(/left|right|bottom|top/g, function(e) {
    return _t[e];
  });
}
var zt = { start: "end", end: "start" };
function lt2(t) {
  return t.replace(/start|end/g, function(e) {
    return zt[e];
  });
}
function We(t) {
  var e = H(t), n = e.pageXOffset, r = e.pageYOffset;
  return { scrollLeft: n, scrollTop: r };
}
function Be(t) {
  return ee(I(t)).left + We(t).scrollLeft;
}
function Ft(t) {
  var e = H(t), n = I(t), r = e.visualViewport, o2 = n.clientWidth, i = n.clientHeight, a2 = 0, s2 = 0;
  return r && (o2 = r.width, i = r.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (a2 = r.offsetLeft, s2 = r.offsetTop)), { width: o2, height: i, x: a2 + Be(t), y: s2 };
}
function Ut(t) {
  var e, n = I(t), r = We(t), o2 = (e = t.ownerDocument) == null ? void 0 : e.body, i = X(n.scrollWidth, n.clientWidth, o2 ? o2.scrollWidth : 0, o2 ? o2.clientWidth : 0), a2 = X(n.scrollHeight, n.clientHeight, o2 ? o2.scrollHeight : 0, o2 ? o2.clientHeight : 0), s2 = -r.scrollLeft + Be(t), f2 = -r.scrollTop;
  return N(o2 || n).direction === "rtl" && (s2 += X(n.clientWidth, o2 ? o2.clientWidth : 0) - i), { width: i, height: a2, x: s2, y: f2 };
}
function Se(t) {
  var e = N(t), n = e.overflow, r = e.overflowX, o2 = e.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o2 + r);
}
function dt(t) {
  return ["html", "body", "#document"].indexOf(C(t)) >= 0 ? t.ownerDocument.body : B(t) && Se(t) ? t : dt(ge(t));
}
function ce(t, e) {
  var n;
  e === void 0 && (e = []);
  var r = dt(t), o2 = r === ((n = t.ownerDocument) == null ? void 0 : n.body), i = H(r), a2 = o2 ? [i].concat(i.visualViewport || [], Se(r) ? r : []) : r, s2 = e.concat(a2);
  return o2 ? s2 : s2.concat(ce(ge(a2)));
}
function Te(t) {
  return Object.assign({}, t, { left: t.x, top: t.y, right: t.x + t.width, bottom: t.y + t.height });
}
function Xt(t) {
  var e = ee(t);
  return e.top = e.top + t.clientTop, e.left = e.left + t.clientLeft, e.bottom = e.top + t.clientHeight, e.right = e.left + t.clientWidth, e.width = t.clientWidth, e.height = t.clientHeight, e.x = e.left, e.y = e.top, e;
}
function ht(t, e) {
  return e === je ? Te(Ft(t)) : Q(e) ? Xt(e) : Te(Ut(I(t)));
}
function Yt(t) {
  var e = ce(ge(t)), n = ["absolute", "fixed"].indexOf(N(t).position) >= 0, r = n && B(t) ? se(t) : t;
  return Q(r) ? e.filter(function(o2) {
    return Q(o2) && it(o2, r) && C(o2) !== "body";
  }) : [];
}
function Gt(t, e, n) {
  var r = e === "clippingParents" ? Yt(t) : [].concat(e), o2 = [].concat(r, [n]), i = o2[0], a2 = o2.reduce(function(s2, f2) {
    var c2 = ht(t, f2);
    return s2.top = X(c2.top, s2.top), s2.right = ve(c2.right, s2.right), s2.bottom = ve(c2.bottom, s2.bottom), s2.left = X(c2.left, s2.left), s2;
  }, ht(t, i));
  return a2.width = a2.right - a2.left, a2.height = a2.bottom - a2.top, a2.x = a2.left, a2.y = a2.top, a2;
}
function mt(t) {
  var e = t.reference, n = t.element, r = t.placement, o2 = r ? q(r) : null, i = r ? te(r) : null, a2 = e.x + e.width / 2 - n.width / 2, s2 = e.y + e.height / 2 - n.height / 2, f2;
  switch (o2) {
    case E:
      f2 = { x: a2, y: e.y - n.height };
      break;
    case R:
      f2 = { x: a2, y: e.y + e.height };
      break;
    case W:
      f2 = { x: e.x + e.width, y: s2 };
      break;
    case P:
      f2 = { x: e.x - n.width, y: s2 };
      break;
    default:
      f2 = { x: e.x, y: e.y };
  }
  var c2 = o2 ? Le(o2) : null;
  if (c2 != null) {
    var u2 = c2 === "y" ? "height" : "width";
    switch (i) {
      case U:
        f2[c2] = f2[c2] - (e[u2] / 2 - n[u2] / 2);
        break;
      case J:
        f2[c2] = f2[c2] + (e[u2] / 2 - n[u2] / 2);
        break;
    }
  }
  return f2;
}
function ne(t, e) {
  e === void 0 && (e = {});
  var n = e, r = n.placement, o2 = r === void 0 ? t.placement : r, i = n.boundary, a2 = i === void 0 ? Xe : i, s2 = n.rootBoundary, f2 = s2 === void 0 ? je : s2, c2 = n.elementContext, u2 = c2 === void 0 ? K : c2, m2 = n.altBoundary, v2 = m2 === void 0 ? false : m2, l2 = n.padding, h30 = l2 === void 0 ? 0 : l2, p2 = ft(typeof h30 != "number" ? h30 : ct(h30, G)), g = u2 === K ? Ye : K, x2 = t.rects.popper, y = t.elements[v2 ? g : u2], $ = Gt(Q(y) ? y : y.contextElement || I(t.elements.popper), a2, f2), d2 = ee(t.elements.reference), b2 = mt({ reference: d2, element: x2, strategy: "absolute", placement: o2 }), w2 = Te(Object.assign({}, x2, b2)), O2 = u2 === K ? w2 : d2, j = { top: $.top - O2.top + p2.top, bottom: O2.bottom - $.bottom + p2.bottom, left: $.left - O2.left + p2.left, right: O2.right - $.right + p2.right }, A2 = t.modifiersData.offset;
  if (u2 === K && A2) {
    var k = A2[o2];
    Object.keys(j).forEach(function(D2) {
      var S2 = [W, R].indexOf(D2) >= 0 ? 1 : -1, L = [E, R].indexOf(D2) >= 0 ? "y" : "x";
      j[D2] += k[L] * S2;
    });
  }
  return j;
}
function Jt(t, e) {
  e === void 0 && (e = {});
  var n = e, r = n.placement, o2 = n.boundary, i = n.rootBoundary, a2 = n.padding, s2 = n.flipVariations, f2 = n.allowedAutoPlacements, c2 = f2 === void 0 ? Ee : f2, u2 = te(r), m2 = u2 ? s2 ? De : De.filter(function(h30) {
    return te(h30) === u2;
  }) : G, v2 = m2.filter(function(h30) {
    return c2.indexOf(h30) >= 0;
  });
  v2.length === 0 && (v2 = m2);
  var l2 = v2.reduce(function(h30, p2) {
    return h30[p2] = ne(t, { placement: p2, boundary: o2, rootBoundary: i, padding: a2 })[q(p2)], h30;
  }, {});
  return Object.keys(l2).sort(function(h30, p2) {
    return l2[h30] - l2[p2];
  });
}
function Kt(t) {
  if (q(t) === me)
    return [];
  var e = be(t);
  return [lt2(t), e, lt2(e)];
}
function Qt(t) {
  var e = t.state, n = t.options, r = t.name;
  if (!e.modifiersData[r]._skip) {
    for (var o2 = n.mainAxis, i = o2 === void 0 ? true : o2, a2 = n.altAxis, s2 = a2 === void 0 ? true : a2, f2 = n.fallbackPlacements, c2 = n.padding, u2 = n.boundary, m2 = n.rootBoundary, v2 = n.altBoundary, l2 = n.flipVariations, h30 = l2 === void 0 ? true : l2, p2 = n.allowedAutoPlacements, g = e.options.placement, x2 = q(g), y = x2 === g, $ = f2 || (y || !h30 ? [be(g)] : Kt(g)), d2 = [g].concat($).reduce(function(z, V) {
      return z.concat(q(V) === me ? Jt(e, { placement: V, boundary: u2, rootBoundary: m2, padding: c2, flipVariations: h30, allowedAutoPlacements: p2 }) : V);
    }, []), b2 = e.rects.reference, w2 = e.rects.popper, O2 = /* @__PURE__ */ new Map(), j = true, A2 = d2[0], k = 0; k < d2.length; k++) {
      var D2 = d2[k], S2 = q(D2), L = te(D2) === U, re = [E, R].indexOf(S2) >= 0, oe = re ? "width" : "height", M2 = ne(e, { placement: D2, boundary: u2, rootBoundary: m2, altBoundary: v2, padding: c2 }), T2 = re ? L ? W : P : L ? R : E;
      b2[oe] > w2[oe] && (T2 = be(T2));
      var pe = be(T2), _2 = [];
      if (i && _2.push(M2[S2] <= 0), s2 && _2.push(M2[T2] <= 0, M2[pe] <= 0), _2.every(function(z) {
        return z;
      })) {
        A2 = D2, j = false;
        break;
      }
      O2.set(D2, _2);
    }
    if (j)
      for (var ue = h30 ? 3 : 1, xe = function(z) {
        var V = d2.find(function(de) {
          var ae = O2.get(de);
          if (ae)
            return ae.slice(0, z).every(function(Y2) {
              return Y2;
            });
        });
        if (V)
          return A2 = V, "break";
      }, ie = ue; ie > 0; ie--) {
        var le = xe(ie);
        if (le === "break")
          break;
      }
    e.placement !== A2 && (e.modifiersData[r]._skip = true, e.placement = A2, e.reset = true);
  }
}
var vt = { name: "flip", enabled: true, phase: "main", fn: Qt, requiresIfExists: ["offset"], data: { _skip: false } };
function gt2(t, e, n) {
  return n === void 0 && (n = { x: 0, y: 0 }), { top: t.top - e.height - n.y, right: t.right - e.width + n.x, bottom: t.bottom - e.height + n.y, left: t.left - e.width - n.x };
}
function yt(t) {
  return [E, W, R, P].some(function(e) {
    return t[e] >= 0;
  });
}
function Zt(t) {
  var e = t.state, n = t.name, r = e.rects.reference, o2 = e.rects.popper, i = e.modifiersData.preventOverflow, a2 = ne(e, { elementContext: "reference" }), s2 = ne(e, { altBoundary: true }), f2 = gt2(a2, r), c2 = gt2(s2, o2, i), u2 = yt(f2), m2 = yt(c2);
  e.modifiersData[n] = { referenceClippingOffsets: f2, popperEscapeOffsets: c2, isReferenceHidden: u2, hasPopperEscaped: m2 }, e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-reference-hidden": u2, "data-popper-escaped": m2 });
}
var bt = { name: "hide", enabled: true, phase: "main", requiresIfExists: ["preventOverflow"], fn: Zt };
function en(t, e, n) {
  var r = q(t), o2 = [P, E].indexOf(r) >= 0 ? -1 : 1, i = typeof n == "function" ? n(Object.assign({}, e, { placement: t })) : n, a2 = i[0], s2 = i[1];
  return a2 = a2 || 0, s2 = (s2 || 0) * o2, [P, W].indexOf(r) >= 0 ? { x: s2, y: a2 } : { x: a2, y: s2 };
}
function tn(t) {
  var e = t.state, n = t.options, r = t.name, o2 = n.offset, i = o2 === void 0 ? [0, 0] : o2, a2 = Ee.reduce(function(u2, m2) {
    return u2[m2] = en(m2, e.rects, i), u2;
  }, {}), s2 = a2[e.placement], f2 = s2.x, c2 = s2.y;
  e.modifiersData.popperOffsets != null && (e.modifiersData.popperOffsets.x += f2, e.modifiersData.popperOffsets.y += c2), e.modifiersData[r] = a2;
}
var wt = { name: "offset", enabled: true, phase: "main", requires: ["popperOffsets"], fn: tn };
function nn(t) {
  var e = t.state, n = t.name;
  e.modifiersData[n] = mt({ reference: e.rects.reference, element: e.rects.popper, strategy: "absolute", placement: e.placement });
}
var He = { name: "popperOffsets", enabled: true, phase: "read", fn: nn, data: {} };
function rn(t) {
  return t === "x" ? "y" : "x";
}
function on(t) {
  var e = t.state, n = t.options, r = t.name, o2 = n.mainAxis, i = o2 === void 0 ? true : o2, a2 = n.altAxis, s2 = a2 === void 0 ? false : a2, f2 = n.boundary, c2 = n.rootBoundary, u2 = n.altBoundary, m2 = n.padding, v2 = n.tether, l2 = v2 === void 0 ? true : v2, h30 = n.tetherOffset, p2 = h30 === void 0 ? 0 : h30, g = ne(e, { boundary: f2, rootBoundary: c2, padding: m2, altBoundary: u2 }), x2 = q(e.placement), y = te(e.placement), $ = !y, d2 = Le(x2), b2 = rn(d2), w2 = e.modifiersData.popperOffsets, O2 = e.rects.reference, j = e.rects.popper, A2 = typeof p2 == "function" ? p2(Object.assign({}, e.rects, { placement: e.placement })) : p2, k = typeof A2 == "number" ? { mainAxis: A2, altAxis: A2 } : Object.assign({ mainAxis: 0, altAxis: 0 }, A2), D2 = e.modifiersData.offset ? e.modifiersData.offset[e.placement] : null, S2 = { x: 0, y: 0 };
  if (w2) {
    if (i) {
      var L, re = d2 === "y" ? E : P, oe = d2 === "y" ? R : W, M2 = d2 === "y" ? "height" : "width", T2 = w2[d2], pe = T2 + g[re], _2 = T2 - g[oe], ue = l2 ? -j[M2] / 2 : 0, xe = y === U ? O2[M2] : j[M2], ie = y === U ? -j[M2] : -O2[M2], le = e.elements.arrow, z = l2 && le ? ke(le) : { width: 0, height: 0 }, V = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : st(), de = V[re], ae = V[oe], Y2 = fe(0, O2[M2], z[M2]), jt = $ ? O2[M2] / 2 - ue - Y2 - de - k.mainAxis : xe - Y2 - de - k.mainAxis, Dt = $ ? -O2[M2] / 2 + ue + Y2 + ae + k.mainAxis : ie + Y2 + ae + k.mainAxis, Oe = e.elements.arrow && se(e.elements.arrow), Et = Oe ? d2 === "y" ? Oe.clientTop || 0 : Oe.clientLeft || 0 : 0, Ce = (L = D2 == null ? void 0 : D2[d2]) != null ? L : 0, Pt = T2 + jt - Ce - Et, At = T2 + Dt - Ce, qe = fe(l2 ? ve(pe, Pt) : pe, T2, l2 ? X(_2, At) : _2);
      w2[d2] = qe, S2[d2] = qe - T2;
    }
    if (s2) {
      var Ve, kt = d2 === "x" ? E : P, Lt = d2 === "x" ? R : W, F2 = w2[b2], he = b2 === "y" ? "height" : "width", Ne = F2 + g[kt], Ie = F2 - g[Lt], $e = [E, P].indexOf(x2) !== -1, _e = (Ve = D2 == null ? void 0 : D2[b2]) != null ? Ve : 0, ze = $e ? Ne : F2 - O2[he] - j[he] - _e + k.altAxis, Fe = $e ? F2 + O2[he] + j[he] - _e - k.altAxis : Ie, Ue = l2 && $e ? St(ze, F2, Fe) : fe(l2 ? ze : Ne, F2, l2 ? Fe : Ie);
      w2[b2] = Ue, S2[b2] = Ue - F2;
    }
    e.modifiersData[r] = S2;
  }
}
var xt = { name: "preventOverflow", enabled: true, phase: "main", fn: on, requiresIfExists: ["offset"] };
function an(t) {
  return { scrollLeft: t.scrollLeft, scrollTop: t.scrollTop };
}
function sn(t) {
  return t === H(t) || !B(t) ? We(t) : an(t);
}
function fn(t) {
  var e = t.getBoundingClientRect(), n = Z(e.width) / t.offsetWidth || 1, r = Z(e.height) / t.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function cn(t, e, n) {
  n === void 0 && (n = false);
  var r = B(e), o2 = B(e) && fn(e), i = I(e), a2 = ee(t, o2), s2 = { scrollLeft: 0, scrollTop: 0 }, f2 = { x: 0, y: 0 };
  return (r || !r && !n) && ((C(e) !== "body" || Se(i)) && (s2 = sn(e)), B(e) ? (f2 = ee(e, true), f2.x += e.clientLeft, f2.y += e.clientTop) : i && (f2.x = Be(i))), { x: a2.left + s2.scrollLeft - f2.x, y: a2.top + s2.scrollTop - f2.y, width: a2.width, height: a2.height };
}
function pn(t) {
  var e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  t.forEach(function(i) {
    e.set(i.name, i);
  });
  function o2(i) {
    n.add(i.name);
    var a2 = [].concat(i.requires || [], i.requiresIfExists || []);
    a2.forEach(function(s2) {
      if (!n.has(s2)) {
        var f2 = e.get(s2);
        f2 && o2(f2);
      }
    }), r.push(i);
  }
  return t.forEach(function(i) {
    n.has(i.name) || o2(i);
  }), r;
}
function un(t) {
  var e = pn(t);
  return ot.reduce(function(n, r) {
    return n.concat(e.filter(function(o2) {
      return o2.phase === r;
    }));
  }, []);
}
function ln(t) {
  var e;
  return function() {
    return e || (e = new Promise(function(n) {
      Promise.resolve().then(function() {
        e = void 0, n(t());
      });
    })), e;
  };
}
function dn(t) {
  var e = t.reduce(function(n, r) {
    var o2 = n[r.name];
    return n[r.name] = o2 ? Object.assign({}, o2, r, { options: Object.assign({}, o2.options, r.options), data: Object.assign({}, o2.data, r.data) }) : r, n;
  }, {});
  return Object.keys(e).map(function(n) {
    return e[n];
  });
}
var Ot = { placement: "bottom", modifiers: [], strategy: "absolute" };
function $t() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return !e.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function we(t) {
  t === void 0 && (t = {});
  var e = t, n = e.defaultModifiers, r = n === void 0 ? [] : n, o2 = e.defaultOptions, i = o2 === void 0 ? Ot : o2;
  return function(a2, s2, f2) {
    f2 === void 0 && (f2 = i);
    var c2 = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, Ot, i), modifiersData: {}, elements: { reference: a2, popper: s2 }, attributes: {}, styles: {} }, u2 = [], m2 = false, v2 = { state: c2, setOptions: function(p2) {
      var g = typeof p2 == "function" ? p2(c2.options) : p2;
      h30(), c2.options = Object.assign({}, i, c2.options, g), c2.scrollParents = { reference: Q(a2) ? ce(a2) : a2.contextElement ? ce(a2.contextElement) : [], popper: ce(s2) };
      var x2 = un(dn([].concat(r, c2.options.modifiers)));
      return c2.orderedModifiers = x2.filter(function(y) {
        return y.enabled;
      }), l2(), v2.update();
    }, forceUpdate: function() {
      if (!m2) {
        var p2 = c2.elements, g = p2.reference, x2 = p2.popper;
        if ($t(g, x2)) {
          c2.rects = { reference: cn(g, se(x2), c2.options.strategy === "fixed"), popper: ke(x2) }, c2.reset = false, c2.placement = c2.options.placement, c2.orderedModifiers.forEach(function(j) {
            return c2.modifiersData[j.name] = Object.assign({}, j.data);
          });
          for (var y = 0; y < c2.orderedModifiers.length; y++) {
            if (c2.reset === true) {
              c2.reset = false, y = -1;
              continue;
            }
            var $ = c2.orderedModifiers[y], d2 = $.fn, b2 = $.options, w2 = b2 === void 0 ? {} : b2, O2 = $.name;
            typeof d2 == "function" && (c2 = d2({ state: c2, options: w2, name: O2, instance: v2 }) || c2);
          }
        }
      }
    }, update: ln(function() {
      return new Promise(function(p2) {
        v2.forceUpdate(), p2(c2);
      });
    }), destroy: function() {
      h30(), m2 = true;
    } };
    if (!$t(a2, s2))
      return v2;
    v2.setOptions(f2).then(function(p2) {
      !m2 && f2.onFirstUpdate && f2.onFirstUpdate(p2);
    });
    function l2() {
      c2.orderedModifiers.forEach(function(p2) {
        var g = p2.name, x2 = p2.options, y = x2 === void 0 ? {} : x2, $ = p2.effect;
        if (typeof $ == "function") {
          var d2 = $({ state: c2, name: g, instance: v2, options: y }), b2 = function() {
          };
          u2.push(d2 || b2);
        }
      });
    }
    function h30() {
      u2.forEach(function(p2) {
        return p2();
      }), u2 = [];
    }
    return v2;
  };
}
var hn = we();
var mn = [Re, He, Me, Ae];
var vn = we({ defaultModifiers: mn });
var gn = [Re, He, Me, Ae, wt, vt, xt, pt, bt];
var yn = we({ defaultModifiers: gn });

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-popper/index.mjs
var usePopper = (referenceElementRef, popperElementRef, opts = {}) => {
  const stateUpdater = {
    name: "updateState",
    enabled: true,
    phase: "write",
    fn: ({ state }) => {
      const derivedState = deriveState(state);
      Object.assign(states.value, derivedState);
    },
    requires: ["computeStyles"]
  };
  const options = computed9(() => {
    const { onFirstUpdate, placement, strategy, modifiers } = unref6(opts);
    return {
      onFirstUpdate,
      placement: placement || "bottom",
      strategy: strategy || "absolute",
      modifiers: [
        ...modifiers || [],
        stateUpdater,
        { name: "applyStyles", enabled: false }
      ]
    };
  });
  const instanceRef = shallowRef3();
  const states = ref5({
    styles: {
      popper: {
        position: unref6(options).strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  });
  const destroy = () => {
    if (!instanceRef.value)
      return;
    instanceRef.value.destroy();
    instanceRef.value = void 0;
  };
  watch8(options, (newOptions) => {
    const instance = unref6(instanceRef);
    if (instance) {
      instance.setOptions(newOptions);
    }
  }, {
    deep: true
  });
  watch8([referenceElementRef, popperElementRef], ([referenceElement, popperElement]) => {
    destroy();
    if (!referenceElement || !popperElement)
      return;
    instanceRef.value = yn(referenceElement, popperElement, unref6(options));
  });
  onBeforeUnmount3(() => {
    destroy();
  });
  return {
    state: computed9(() => {
      var _a2;
      return { ...((_a2 = unref6(instanceRef)) == null ? void 0 : _a2.state) || {} };
    }),
    styles: computed9(() => unref6(states).styles),
    attributes: computed9(() => unref6(states).attributes),
    update: () => {
      var _a2;
      return (_a2 = unref6(instanceRef)) == null ? void 0 : _a2.update();
    },
    forceUpdate: () => {
      var _a2;
      return (_a2 = unref6(instanceRef)) == null ? void 0 : _a2.forceUpdate();
    },
    instanceRef: computed9(() => unref6(instanceRef))
  };
};
function deriveState(state) {
  const elements = Object.keys(state.elements);
  const styles = fromPairs_default(elements.map((element) => [element, state.styles[element] || {}]));
  const attributes2 = fromPairs_default(elements.map((element) => [element, state.attributes[element]]));
  return {
    styles,
    attributes: attributes2
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-same-target/index.mjs
import { NOOP as NOOP5 } from "@vue/shared";
var useSameTarget = (handleClick) => {
  if (!handleClick) {
    return { onClick: NOOP5, onMousedown: NOOP5, onMouseup: NOOP5 };
  }
  let mousedownTarget = false;
  let mouseupTarget = false;
  const onClick = (e) => {
    if (mousedownTarget && mouseupTarget) {
      handleClick(e);
    }
    mousedownTarget = mouseupTarget = false;
  };
  const onMousedown = (e) => {
    mousedownTarget = e.target === e.currentTarget;
  };
  const onMouseup = (e) => {
    mouseupTarget = e.target === e.currentTarget;
  };
  return { onClick, onMousedown, onMouseup };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-teleport/index.mjs
import { ref as ref6, h, Teleport, onUnmounted as onUnmounted2 } from "vue";
import { NOOP as NOOP6 } from "@vue/shared";
var useTeleport = (contentRenderer, appendToBody) => {
  const isTeleportVisible = ref6(false);
  if (!isClient) {
    return {
      isTeleportVisible,
      showTeleport: NOOP6,
      hideTeleport: NOOP6,
      renderTeleport: NOOP6
    };
  }
  let $el = null;
  const showTeleport = () => {
    isTeleportVisible.value = true;
    if ($el !== null)
      return;
    $el = createGlobalNode();
  };
  const hideTeleport = () => {
    isTeleportVisible.value = false;
    if ($el !== null) {
      removeGlobalNode($el);
      $el = null;
    }
  };
  const renderTeleport = () => {
    return appendToBody.value !== true ? contentRenderer() : isTeleportVisible.value ? [h(Teleport, { to: $el }, contentRenderer())] : void 0;
  };
  onUnmounted2(hideTeleport);
  return {
    isTeleportVisible,
    showTeleport,
    hideTeleport,
    renderTeleport
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-throttle-render/index.mjs
import { ref as ref7, onMounted as onMounted5, watch as watch9 } from "vue";
var useThrottleRender = (loading, throttle2 = 0) => {
  if (throttle2 === 0)
    return loading;
  const throttled = ref7(false);
  let timeoutHandle = 0;
  const dispatchThrottling = () => {
    if (timeoutHandle) {
      clearTimeout(timeoutHandle);
    }
    timeoutHandle = window.setTimeout(() => {
      throttled.value = loading.value;
    }, throttle2);
  };
  onMounted5(dispatchThrottling);
  watch9(() => loading.value, (val) => {
    if (val) {
      dispatchThrottling();
    } else {
      throttled.value = val;
    }
  });
  return throttled;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-timeout/index.mjs
function useTimeout() {
  let timeoutHandle;
  const registerTimeout = (fn2, delay2) => {
    cancelTimeout();
    timeoutHandle = window.setTimeout(fn2, delay2);
  };
  const cancelTimeout = () => window.clearTimeout(timeoutHandle);
  tryOnScopeDispose(() => cancelTimeout());
  return {
    registerTimeout,
    cancelTimeout
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-transition-fallthrough/index.mjs
import { getCurrentInstance as getCurrentInstance6 } from "vue";
var AFTER_APPEAR = "after-appear";
var AFTER_ENTER = "after-enter";
var AFTER_LEAVE = "after-leave";
var APPEAR = "appear";
var APPEAR_CANCELLED = "appear-cancelled";
var BEFORE_ENTER = "before-enter";
var BEFORE_LEAVE = "before-leave";
var ENTER = "enter";
var ENTER_CANCELLED = "enter-cancelled";
var LEAVE = "leave";
var LEAVE_CANCELLED = "leave-cancelled";
var useTransitionFallthroughEmits = [
  AFTER_APPEAR,
  AFTER_ENTER,
  AFTER_LEAVE,
  APPEAR,
  APPEAR_CANCELLED,
  BEFORE_ENTER,
  BEFORE_LEAVE,
  ENTER,
  ENTER_CANCELLED,
  LEAVE,
  LEAVE_CANCELLED
];
var useTransitionFallthrough = () => {
  const { emit } = getCurrentInstance6();
  return {
    onAfterAppear: () => {
      emit(AFTER_APPEAR);
    },
    onAfterEnter: () => {
      emit(AFTER_ENTER);
    },
    onAfterLeave: () => {
      emit(AFTER_LEAVE);
    },
    onAppearCancelled: () => {
      emit(APPEAR_CANCELLED);
    },
    onBeforeEnter: () => {
      emit(BEFORE_ENTER);
    },
    onBeforeLeave: () => {
      emit(BEFORE_LEAVE);
    },
    onEnter: () => {
      emit(ENTER);
    },
    onEnterCancelled: () => {
      emit(ENTER_CANCELLED);
    },
    onLeave: () => {
      emit(LEAVE);
    },
    onLeaveCancelled: () => {
      emit(LEAVE_CANCELLED);
    }
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-id/index.mjs
import { getCurrentInstance as getCurrentInstance7, inject as inject5, computed as computed10, unref as unref7 } from "vue";
var defaultIdInjection = {
  prefix: Math.floor(Math.random() * 1e4),
  current: 0
};
var ID_INJECTION_KEY = Symbol("elIdInjection");
var useIdInjection = () => {
  return getCurrentInstance7() ? inject5(ID_INJECTION_KEY, defaultIdInjection) : defaultIdInjection;
};
var useId = (deterministicId) => {
  const idInjection = useIdInjection();
  if (!isClient && idInjection === defaultIdInjection) {
    debugWarn("IdInjection", `Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed
usage: app.provide(ID_INJECTION_KEY, {
  prefix: number,
  current: number,
})`);
  }
  const namespace = useGetDerivedNamespace();
  const idRef = computed10(() => unref7(deterministicId) || `${namespace.value}-id-${idInjection.prefix}-${idInjection.current++}`);
  return idRef;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-escape-keydown/index.mjs
import { onMounted as onMounted6, onBeforeUnmount as onBeforeUnmount4 } from "vue";
var registeredEscapeHandlers = [];
var cachedHandler = (e) => {
  const event = e;
  if (event.key === EVENT_CODE.esc) {
    registeredEscapeHandlers.forEach((registeredHandler) => registeredHandler(event));
  }
};
var useEscapeKeydown = (handler) => {
  onMounted6(() => {
    if (registeredEscapeHandlers.length === 0) {
      document.addEventListener("keydown", cachedHandler);
    }
    if (isClient)
      registeredEscapeHandlers.push(handler);
  });
  onBeforeUnmount4(() => {
    registeredEscapeHandlers = registeredEscapeHandlers.filter((registeredHandler) => registeredHandler !== handler);
    if (registeredEscapeHandlers.length === 0) {
      if (isClient)
        document.removeEventListener("keydown", cachedHandler);
    }
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-popper-container/index.mjs
import { computed as computed11, onBeforeMount as onBeforeMount2 } from "vue";
var cachedContainer;
var usePopperContainerId = () => {
  const namespace = useGetDerivedNamespace();
  const idInjection = useIdInjection();
  const id = computed11(() => {
    return `${namespace.value}-popper-container-${idInjection.prefix}`;
  });
  const selector = computed11(() => `#${id.value}`);
  return {
    id,
    selector
  };
};
var createContainer = (id) => {
  const container = document.createElement("div");
  container.id = id;
  document.body.appendChild(container);
  return container;
};
var usePopperContainer = () => {
  const { id, selector } = usePopperContainerId();
  onBeforeMount2(() => {
    if (!isClient)
      return;
    if (!cachedContainer && !document.body.querySelector(selector.value)) {
      cachedContainer = createContainer(id.value);
    }
  });
  return {
    id,
    selector
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-intermediate-render/index.mjs
import { watch as watch10, unref as unref8, nextTick as nextTick3 } from "vue";
var useDelayedRender = ({
  indicator,
  intermediateIndicator,
  shouldSetIntermediate = () => true,
  beforeShow,
  afterShow,
  afterHide,
  beforeHide
}) => {
  watch10(() => unref8(indicator), (val) => {
    if (val) {
      beforeShow == null ? void 0 : beforeShow();
      nextTick3(() => {
        if (!unref8(indicator))
          return;
        if (shouldSetIntermediate("show")) {
          intermediateIndicator.value = true;
        }
      });
    } else {
      beforeHide == null ? void 0 : beforeHide();
      nextTick3(() => {
        if (unref8(indicator))
          return;
        if (shouldSetIntermediate("hide")) {
          intermediateIndicator.value = false;
        }
      });
    }
  });
  watch10(() => intermediateIndicator.value, (val) => {
    if (val) {
      afterShow == null ? void 0 : afterShow();
    } else {
      afterHide == null ? void 0 : afterHide();
    }
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-delayed-toggle/index.mjs
import { unref as unref9 } from "vue";
var useDelayedToggleProps = buildProps({
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  }
});
var useDelayedToggle = ({
  showAfter,
  hideAfter,
  autoClose,
  open,
  close: close2
}) => {
  const { registerTimeout } = useTimeout();
  const {
    registerTimeout: registerTimeoutForAutoClose,
    cancelTimeout: cancelTimeoutForAutoClose
  } = useTimeout();
  const onOpen = (event) => {
    registerTimeout(() => {
      open(event);
      const _autoClose = unref9(autoClose);
      if (isNumber3(_autoClose) && _autoClose > 0) {
        registerTimeoutForAutoClose(() => {
          close2(event);
        }, _autoClose);
      }
    }, unref9(showAfter));
  };
  const onClose = (event) => {
    cancelTimeoutForAutoClose();
    registerTimeout(() => {
      close2(event);
    }, unref9(hideAfter));
  };
  return {
    onOpen,
    onClose
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-forward-ref/index.mjs
import { provide as provide2 } from "vue";
var FORWARD_REF_INJECTION_KEY = Symbol("elForwardRef");
var useForwardRef = (forwardRef) => {
  const setForwardRef = (el) => {
    forwardRef.value = el;
  };
  provide2(FORWARD_REF_INJECTION_KEY, {
    setForwardRef
  });
};
var useForwardRefDirective = (setForwardRef) => {
  return {
    mounted(el) {
      setForwardRef(el);
    },
    updated(el) {
      setForwardRef(el);
    },
    unmounted() {
      setForwardRef(null);
    }
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-z-index/index.mjs
import { ref as ref8, inject as inject6, computed as computed12, unref as unref10 } from "vue";
var zIndex = ref8(0);
var defaultInitialZIndex = 2e3;
var zIndexContextKey = Symbol("zIndexContextKey");
var useZIndex = (zIndexOverrides) => {
  const zIndexInjection = zIndexOverrides || inject6(zIndexContextKey, void 0);
  const initialZIndex = computed12(() => {
    const zIndexFromInjection = unref10(zIndexInjection);
    return isNumber3(zIndexFromInjection) ? zIndexFromInjection : defaultInitialZIndex;
  });
  const currentZIndex = computed12(() => initialZIndex.value + zIndex.value);
  const nextZIndex = () => {
    zIndex.value++;
    return currentZIndex.value;
  };
  return {
    initialZIndex,
    currentZIndex,
    nextZIndex
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-floating/index.mjs
import { isRef as isRef6, ref as ref9, unref as unref11, onMounted as onMounted7, watchEffect as watchEffect4 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  const commonAlign = reference[length] / 2 - floating[length] / 2;
  const side = getSide(placement);
  const isVertical = mainAxis === "x";
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x: x2,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn: fn2
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn2({
      x: x2,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x2 = nextX != null ? nextX : x2;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x: x2,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x: x2,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getSideObjectFromPadding(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
var min2 = Math.min;
var max2 = Math.max;
function within(min$1, value, max$1) {
  return max2(min$1, min2(value, max$1));
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      x: x2,
      y,
      placement,
      rects,
      platform: platform2,
      elements
    } = state;
    const {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = getSideObjectFromPadding(padding);
    const coords = {
      x: x2,
      y
    };
    const axis = getMainAxisFromPlacement(placement);
    const length = getLengthFromAxis(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = min2(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = min2(paddingObject[maxProp], largestPossiblePadding);
    const min$1 = minPadding;
    const max5 = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset2 = within(min$1, center, max5);
    const shouldAddOffset = getAlignment(placement) != null && center != offset2 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max5 - center : 0;
    return {
      [axis]: coords[axis] - alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2 + alignmentOffset
      }
    };
  }
});
var sides = ["top", "right", "bottom", "left"];
var allPlacements = sides.reduce((acc, side) => acc.concat(side, side + "-start", side + "-end"), []);
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getMainAxisFromPlacement(placement) === "x";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      const {
        x: x2,
        y
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      return {
        x: x2 + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return node instanceof getWindow(node).ShadowRoot || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const safari = isSafari();
  const css = getComputedStyle$1(element);
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !safari && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !safari && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function isSafari() {
  if (typeof CSS === "undefined" || !CSS.supports)
    return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
var min3 = Math.min;
var max3 = Math.max;
var round2 = Math.round;
var createCoords = (v2) => ({
  x: v2,
  y: v2
});
function getCssDimensions(element) {
  const css = getComputedStyle$1(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round2(width) !== offsetWidth || round2(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function isElement3(value) {
  return value instanceof getWindow(value).Element;
}
function unwrapElement(element) {
  return !isElement3(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x2 = ($ ? round2(rect.width) : rect.width) / width;
  let y = ($ ? round2(rect.height) : rect.height) / height;
  if (!x2 || !Number.isFinite(x2)) {
    x2 = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x: x2,
    y
  };
}
var noOffsets = createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow(element);
  if (!isSafari() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement3(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x2 = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement3(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentIFrame = win.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle(currentIFrame);
      const left2 = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x2 *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x2 += left2;
      y += top;
      currentIFrame = getWindow(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x: x2,
    y
  });
}
function getNodeScroll(element) {
  if (isElement3(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max3(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max3(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x2 = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle$1(body).direction === "rtl") {
    x2 += max3(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result2 = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result2) ? result2.host : result2;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list) {
  var _node$ownerDocument;
  if (list === void 0) {
    list = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x2 = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isSafari();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x2 = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left2 = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x2 = left2 * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement3(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement3(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle$1(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache2) {
  const cachedResult = cache2.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result2 = getOverflowAncestors(element).filter((el) => isElement3(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle$1(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement3(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle$1(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result2 = result2.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache2.set(element, result2);
  return result2;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max3(rect.top, accRect.top);
    accRect.right = min3(rect.right, accRect.right);
    accRect.bottom = min3(rect.bottom, accRect.bottom);
    accRect.left = max3(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle$1(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function getOffsetParent(element, polyfill) {
  const window2 = getWindow(element);
  if (!isHTMLElement(element)) {
    return window2;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
var getElementRects = async function(_ref) {
  let {
    reference,
    floating,
    strategy
  } = _ref;
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
    floating: {
      x: 0,
      y: 0,
      ...await getDimensionsFn(floating)
    }
  };
};
function isRTL(element) {
  return getComputedStyle(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement: isElement3,
  isRTL
};
var computePosition2 = (reference, floating, options) => {
  const cache2 = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache2
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-floating/index.mjs
var useFloatingProps = buildProps({});
var unrefReference = (elRef) => {
  if (!isClient)
    return;
  if (!elRef)
    return elRef;
  const unrefEl = unrefElement(elRef);
  if (unrefEl)
    return unrefEl;
  return isRef6(elRef) ? unrefEl : elRef;
};
var getPositionDataWithUnit = (record, key) => {
  const value = record == null ? void 0 : record[key];
  return isNil_default(value) ? "" : `${value}px`;
};
var useFloating = ({
  middleware,
  placement,
  strategy
}) => {
  const referenceRef = ref9();
  const contentRef = ref9();
  const x2 = ref9();
  const y = ref9();
  const middlewareData = ref9({});
  const states = {
    x: x2,
    y,
    placement,
    strategy,
    middlewareData
  };
  const update2 = async () => {
    if (!isClient)
      return;
    const referenceEl = unrefReference(referenceRef);
    const contentEl = unrefElement(contentRef);
    if (!referenceEl || !contentEl)
      return;
    const data = await computePosition2(referenceEl, contentEl, {
      placement: unref11(placement),
      strategy: unref11(strategy),
      middleware: unref11(middleware)
    });
    keysOf(states).forEach((key) => {
      states[key].value = data[key];
    });
  };
  onMounted7(() => {
    watchEffect4(() => {
      update2();
    });
  });
  return {
    ...states,
    update: update2,
    referenceRef,
    contentRef
  };
};
var arrowMiddleware = ({
  arrowRef,
  padding
}) => {
  return {
    name: "arrow",
    options: {
      element: arrowRef,
      padding
    },
    fn(args) {
      const arrowEl = unref11(arrowRef);
      if (!arrowEl)
        return {};
      return arrow({
        element: arrowEl,
        padding
      }).fn(args);
    }
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-cursor/index.mjs
import { ref as ref10 } from "vue";
function useCursor(input) {
  const selectionRef = ref10();
  function recordCursor() {
    if (input.value == void 0)
      return;
    const { selectionStart, selectionEnd, value } = input.value;
    if (selectionStart == null || selectionEnd == null)
      return;
    const beforeTxt = value.slice(0, Math.max(0, selectionStart));
    const afterTxt = value.slice(Math.max(0, selectionEnd));
    selectionRef.value = {
      selectionStart,
      selectionEnd,
      value,
      beforeTxt,
      afterTxt
    };
  }
  function setCursor() {
    if (input.value == void 0 || selectionRef.value == void 0)
      return;
    const { value } = input.value;
    const { beforeTxt, afterTxt, selectionStart } = selectionRef.value;
    if (beforeTxt == void 0 || afterTxt == void 0 || selectionStart == void 0)
      return;
    let startPos = value.length;
    if (value.endsWith(afterTxt)) {
      startPos = value.length - afterTxt.length;
    } else if (value.startsWith(beforeTxt)) {
      startPos = beforeTxt.length;
    } else {
      const beforeLastChar = beforeTxt[selectionStart - 1];
      const newIndex = value.indexOf(beforeLastChar, selectionStart - 1);
      if (newIndex !== -1) {
        startPos = newIndex + 1;
      }
    }
    input.value.setSelectionRange(startPos, startPos);
  }
  return [recordCursor, setCursor];
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-ordered-children/index.mjs
import { isVNode as isVNode4, shallowRef as shallowRef4 } from "vue";
var getOrderedChildren = (vm, childComponentName, children) => {
  const nodes = flattedChildren(vm.subTree).filter((n) => {
    var _a2;
    return isVNode4(n) && ((_a2 = n.type) == null ? void 0 : _a2.name) === childComponentName && !!n.component;
  });
  const uids = nodes.map((n) => n.component.uid);
  return uids.map((uid2) => children[uid2]).filter((p2) => !!p2);
};
var useOrderedChildren = (vm, childComponentName) => {
  const children = {};
  const orderedChildren = shallowRef4([]);
  const addChild = (child) => {
    children[child.uid] = child;
    orderedChildren.value = getOrderedChildren(vm, childComponentName, children);
  };
  const removeChild = (uid2) => {
    delete children[uid2];
    orderedChildren.value = orderedChildren.value.filter((children2) => children2.uid !== uid2);
  };
  return {
    children: orderedChildren,
    addChild,
    removeChild
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/hooks/use-size/index.mjs
import { inject as inject7, computed as computed13, unref as unref12 } from "vue";
var useSizeProp = buildProp({
  type: String,
  values: componentSizes,
  required: false
});
var useSizeProps = {
  size: useSizeProp
};
var SIZE_INJECTION_KEY = Symbol("size");
var useGlobalSize = () => {
  const injectedSize = inject7(SIZE_INJECTION_KEY, {});
  return computed13(() => {
    return unref12(injectedSize.size) || "";
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/src/constants.mjs
var configProviderContextKey = Symbol();

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/src/hooks/use-global-config.mjs
var globalConfig = ref11();
function useGlobalConfig(key, defaultValue = void 0) {
  const config = getCurrentInstance8() ? inject8(configProviderContextKey, globalConfig) : globalConfig;
  if (key) {
    return computed14(() => {
      var _a2, _b;
      return (_b = (_a2 = config.value) == null ? void 0 : _a2[key]) != null ? _b : defaultValue;
    });
  } else {
    return config;
  }
}
function useGlobalComponentSettings(block, sizeFallback) {
  const config = useGlobalConfig();
  const ns = useNamespace(block, computed14(() => {
    var _a2;
    return ((_a2 = config.value) == null ? void 0 : _a2.namespace) || defaultNamespace;
  }));
  const locale = useLocale(computed14(() => {
    var _a2;
    return (_a2 = config.value) == null ? void 0 : _a2.locale;
  }));
  const zIndex2 = useZIndex(computed14(() => {
    var _a2;
    return ((_a2 = config.value) == null ? void 0 : _a2.zIndex) || defaultInitialZIndex;
  }));
  const size4 = computed14(() => {
    var _a2;
    return unref13(sizeFallback) || ((_a2 = config.value) == null ? void 0 : _a2.size) || "";
  });
  provideGlobalConfig(computed14(() => unref13(config) || {}));
  return {
    ns,
    locale,
    zIndex: zIndex2,
    size: size4
  };
}
var provideGlobalConfig = (config, app, global2 = false) => {
  var _a2;
  const inSetup = !!getCurrentInstance8();
  const oldConfig = inSetup ? useGlobalConfig() : void 0;
  const provideFn = (_a2 = app == null ? void 0 : app.provide) != null ? _a2 : inSetup ? provide3 : void 0;
  if (!provideFn) {
    debugWarn("provideGlobalConfig", "provideGlobalConfig() can only be used inside setup().");
    return;
  }
  const context = computed14(() => {
    const cfg = unref13(config);
    if (!(oldConfig == null ? void 0 : oldConfig.value))
      return cfg;
    return mergeConfig(oldConfig.value, cfg);
  });
  provideFn(configProviderContextKey, context);
  provideFn(localeContextKey, computed14(() => context.value.locale));
  provideFn(namespaceContextKey, computed14(() => context.value.namespace));
  provideFn(zIndexContextKey, computed14(() => context.value.zIndex));
  provideFn(SIZE_INJECTION_KEY, {
    size: computed14(() => context.value.size || "")
  });
  if (global2 || !globalConfig.value) {
    globalConfig.value = context.value;
  }
  return context;
};
var mergeConfig = (a2, b2) => {
  var _a2;
  const keys3 = [.../* @__PURE__ */ new Set([...keysOf(a2), ...keysOf(b2)])];
  const obj = {};
  for (const key of keys3) {
    obj[key] = (_a2 = b2[key]) != null ? _a2 : a2[key];
  }
  return obj;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/src/config-provider-props.mjs
var configProviderProps = buildProps({
  a11y: {
    type: Boolean,
    default: true
  },
  locale: {
    type: definePropType(Object)
  },
  size: useSizeProp,
  button: {
    type: definePropType(Object)
  },
  experimentalFeatures: {
    type: definePropType(Object)
  },
  keyboardNavigation: {
    type: Boolean,
    default: true
  },
  message: {
    type: definePropType(Object)
  },
  zIndex: Number,
  namespace: {
    type: String,
    default: "el"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/src/config-provider.mjs
var messageConfig = {};
var ConfigProvider = defineComponent({
  name: "ElConfigProvider",
  props: configProviderProps,
  setup(props, { slots }) {
    watch11(() => props.message, (val) => {
      Object.assign(messageConfig, val != null ? val : {});
    }, { immediate: true, deep: true });
    const config = provideGlobalConfig(props);
    return () => renderSlot(slots, "default", { config: config == null ? void 0 : config.value });
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/config-provider/index.mjs
var ElConfigProvider = withInstall(ConfigProvider);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/version.mjs
var version2 = "2.3.7";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/make-installer.mjs
var makeInstaller = (components = []) => {
  const install4 = (app, options) => {
    if (app[INSTALLED_KEY])
      return;
    app[INSTALLED_KEY] = true;
    components.forEach((c2) => app.use(c2));
    if (options)
      provideGlobalConfig(options, app, true);
  };
  return {
    version: version2,
    install: install4
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/affix/src/affix2.mjs
import { defineComponent as defineComponent2, shallowRef as shallowRef5, ref as ref12, computed as computed15, watch as watch12, onMounted as onMounted8, watchEffect as watchEffect5, openBlock as openBlock2, createElementBlock, normalizeClass, unref as unref14, normalizeStyle, createElementVNode, renderSlot as renderSlot2 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/affix/src/affix.mjs
var affixProps = buildProps({
  zIndex: {
    type: definePropType([Number, String]),
    default: 100
  },
  target: {
    type: String,
    default: ""
  },
  offset: {
    type: Number,
    default: 0
  },
  position: {
    type: String,
    values: ["top", "bottom"],
    default: "top"
  }
});
var affixEmits = {
  scroll: ({ scrollTop, fixed }) => isNumber3(scrollTop) && isBoolean2(fixed),
  [CHANGE_EVENT]: (fixed) => isBoolean2(fixed)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/_virtual/plugin-vue_export-helper.mjs
var _export_sfc = (sfc, props) => {
  const target2 = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target2[key] = val;
  }
  return target2;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/affix/src/affix2.mjs
var COMPONENT_NAME = "ElAffix";
var __default__ = defineComponent2({
  name: COMPONENT_NAME
});
var _sfc_main = defineComponent2({
  ...__default__,
  props: affixProps,
  emits: affixEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const ns = useNamespace("affix");
    const target2 = shallowRef5();
    const root2 = shallowRef5();
    const scrollContainer = shallowRef5();
    const { height: windowHeight } = useWindowSize();
    const {
      height: rootHeight,
      width: rootWidth,
      top: rootTop,
      bottom: rootBottom,
      update: updateRoot
    } = useElementBounding(root2, { windowScroll: false });
    const targetRect = useElementBounding(target2);
    const fixed = ref12(false);
    const scrollTop = ref12(0);
    const transform2 = ref12(0);
    const rootStyle = computed15(() => {
      return {
        height: fixed.value ? `${rootHeight.value}px` : "",
        width: fixed.value ? `${rootWidth.value}px` : ""
      };
    });
    const affixStyle = computed15(() => {
      if (!fixed.value)
        return {};
      const offset2 = props.offset ? addUnit(props.offset) : 0;
      return {
        height: `${rootHeight.value}px`,
        width: `${rootWidth.value}px`,
        top: props.position === "top" ? offset2 : "",
        bottom: props.position === "bottom" ? offset2 : "",
        transform: transform2.value ? `translateY(${transform2.value}px)` : "",
        zIndex: props.zIndex
      };
    });
    const update2 = () => {
      if (!scrollContainer.value)
        return;
      scrollTop.value = scrollContainer.value instanceof Window ? document.documentElement.scrollTop : scrollContainer.value.scrollTop || 0;
      if (props.position === "top") {
        if (props.target) {
          const difference2 = targetRect.bottom.value - props.offset - rootHeight.value;
          fixed.value = props.offset > rootTop.value && targetRect.bottom.value > 0;
          transform2.value = difference2 < 0 ? difference2 : 0;
        } else {
          fixed.value = props.offset > rootTop.value;
        }
      } else if (props.target) {
        const difference2 = windowHeight.value - targetRect.top.value - props.offset - rootHeight.value;
        fixed.value = windowHeight.value - props.offset < rootBottom.value && windowHeight.value > targetRect.top.value;
        transform2.value = difference2 < 0 ? -difference2 : 0;
      } else {
        fixed.value = windowHeight.value - props.offset < rootBottom.value;
      }
    };
    const handleScroll2 = () => {
      updateRoot();
      emit("scroll", {
        scrollTop: scrollTop.value,
        fixed: fixed.value
      });
    };
    watch12(fixed, (val) => emit("change", val));
    onMounted8(() => {
      var _a2;
      if (props.target) {
        target2.value = (_a2 = document.querySelector(props.target)) != null ? _a2 : void 0;
        if (!target2.value)
          throwError(COMPONENT_NAME, `Target is not existed: ${props.target}`);
      } else {
        target2.value = document.documentElement;
      }
      scrollContainer.value = getScrollContainer(root2.value, true);
      updateRoot();
    });
    useEventListener(scrollContainer, "scroll", handleScroll2);
    watchEffect5(update2);
    expose({
      update: update2,
      updateRoot
    });
    return (_ctx, _cache) => {
      return openBlock2(), createElementBlock("div", {
        ref_key: "root",
        ref: root2,
        class: normalizeClass(unref14(ns).b()),
        style: normalizeStyle(unref14(rootStyle))
      }, [
        createElementVNode("div", {
          class: normalizeClass({ [unref14(ns).m("fixed")]: fixed.value }),
          style: normalizeStyle(unref14(affixStyle))
        }, [
          renderSlot2(_ctx.$slots, "default")
        ], 6)
      ], 6);
    };
  }
});
var Affix = _export_sfc(_sfc_main, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/affix/src/affix.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/affix/index.mjs
var ElAffix = withInstall(Affix);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/alert/src/alert2.mjs
import { defineComponent as defineComponent4, useSlots, ref as ref13, computed as computed17, openBlock as openBlock4, createBlock as createBlock2, Transition, unref as unref16, withCtx, withDirectives, createElementVNode as createElementVNode2, normalizeClass as normalizeClass2, resolveDynamicComponent, createCommentVNode as createCommentVNode2, createElementBlock as createElementBlock3, renderSlot as renderSlot4, createTextVNode, toDisplayString, Fragment as Fragment2, createVNode, vShow } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/icon/src/icon2.mjs
import { defineComponent as defineComponent3, computed as computed16, openBlock as openBlock3, createElementBlock as createElementBlock2, mergeProps, unref as unref15, renderSlot as renderSlot3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/icon/src/icon.mjs
var iconProps = buildProps({
  size: {
    type: definePropType([Number, String])
  },
  color: {
    type: String
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/icon/src/icon2.mjs
var __default__2 = defineComponent3({
  name: "ElIcon",
  inheritAttrs: false
});
var _sfc_main2 = defineComponent3({
  ...__default__2,
  props: iconProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("icon");
    const style = computed16(() => {
      const { size: size4, color } = props;
      if (!size4 && !color)
        return {};
      return {
        fontSize: isUndefined2(size4) ? void 0 : addUnit(size4),
        "--color": color
      };
    });
    return (_ctx, _cache) => {
      return openBlock3(), createElementBlock2("i", mergeProps({
        class: unref15(ns).b(),
        style: unref15(style)
      }, _ctx.$attrs), [
        renderSlot3(_ctx.$slots, "default")
      ], 16);
    };
  }
});
var Icon = _export_sfc(_sfc_main2, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/icon/src/icon.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/icon/index.mjs
var ElIcon = withInstall(Icon);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/alert/src/alert.mjs
var alertEffects = ["light", "dark"];
var alertProps = buildProps({
  title: {
    type: String,
    default: ""
  },
  description: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    values: keysOf(TypeComponentsMap),
    default: "info"
  },
  closable: {
    type: Boolean,
    default: true
  },
  closeText: {
    type: String,
    default: ""
  },
  showIcon: Boolean,
  center: Boolean,
  effect: {
    type: String,
    values: alertEffects,
    default: "light"
  }
});
var alertEmits = {
  close: (evt) => evt instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/alert/src/alert2.mjs
var __default__3 = defineComponent4({
  name: "ElAlert"
});
var _sfc_main3 = defineComponent4({
  ...__default__3,
  props: alertProps,
  emits: alertEmits,
  setup(__props, { emit }) {
    const props = __props;
    const { Close } = TypeComponents;
    const slots = useSlots();
    const ns = useNamespace("alert");
    const visible = ref13(true);
    const iconComponent = computed17(() => TypeComponentsMap[props.type]);
    const iconClass = computed17(() => [
      ns.e("icon"),
      { [ns.is("big")]: !!props.description || !!slots.default }
    ]);
    const isBoldTitle = computed17(() => {
      return { [ns.is("bold")]: props.description || slots.default };
    });
    const close2 = (evt) => {
      visible.value = false;
      emit("close", evt);
    };
    return (_ctx, _cache) => {
      return openBlock4(), createBlock2(Transition, {
        name: unref16(ns).b("fade"),
        persisted: ""
      }, {
        default: withCtx(() => [
          withDirectives(createElementVNode2("div", {
            class: normalizeClass2([unref16(ns).b(), unref16(ns).m(_ctx.type), unref16(ns).is("center", _ctx.center), unref16(ns).is(_ctx.effect)]),
            role: "alert"
          }, [
            _ctx.showIcon && unref16(iconComponent) ? (openBlock4(), createBlock2(unref16(ElIcon), {
              key: 0,
              class: normalizeClass2(unref16(iconClass))
            }, {
              default: withCtx(() => [
                (openBlock4(), createBlock2(resolveDynamicComponent(unref16(iconComponent))))
              ]),
              _: 1
            }, 8, ["class"])) : createCommentVNode2("v-if", true),
            createElementVNode2("div", {
              class: normalizeClass2(unref16(ns).e("content"))
            }, [
              _ctx.title || _ctx.$slots.title ? (openBlock4(), createElementBlock3("span", {
                key: 0,
                class: normalizeClass2([unref16(ns).e("title"), unref16(isBoldTitle)])
              }, [
                renderSlot4(_ctx.$slots, "title", {}, () => [
                  createTextVNode(toDisplayString(_ctx.title), 1)
                ])
              ], 2)) : createCommentVNode2("v-if", true),
              _ctx.$slots.default || _ctx.description ? (openBlock4(), createElementBlock3("p", {
                key: 1,
                class: normalizeClass2(unref16(ns).e("description"))
              }, [
                renderSlot4(_ctx.$slots, "default", {}, () => [
                  createTextVNode(toDisplayString(_ctx.description), 1)
                ])
              ], 2)) : createCommentVNode2("v-if", true),
              _ctx.closable ? (openBlock4(), createElementBlock3(Fragment2, { key: 2 }, [
                _ctx.closeText ? (openBlock4(), createElementBlock3("div", {
                  key: 0,
                  class: normalizeClass2([unref16(ns).e("close-btn"), unref16(ns).is("customed")]),
                  onClick: close2
                }, toDisplayString(_ctx.closeText), 3)) : (openBlock4(), createBlock2(unref16(ElIcon), {
                  key: 1,
                  class: normalizeClass2(unref16(ns).e("close-btn")),
                  onClick: close2
                }, {
                  default: withCtx(() => [
                    createVNode(unref16(Close))
                  ]),
                  _: 1
                }, 8, ["class"]))
              ], 64)) : createCommentVNode2("v-if", true)
            ], 2)
          ], 2), [
            [vShow, visible.value]
          ])
        ]),
        _: 3
      }, 8, ["name"]);
    };
  }
});
var Alert = _export_sfc(_sfc_main3, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/alert/src/alert.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/alert/index.mjs
var ElAlert = withInstall(Alert);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/autocomplete/src/autocomplete2.mjs
import { defineComponent as defineComponent21, useAttrs as useAttrs$1, ref as ref33, computed as computed33, nextTick as nextTick9, onMounted as onMounted19, openBlock as openBlock17, createBlock as createBlock11, unref as unref33, withCtx as withCtx11, createElementVNode as createElementVNode7, normalizeClass as normalizeClass10, normalizeStyle as normalizeStyle7, createVNode as createVNode10, createElementBlock as createElementBlock12, Fragment as Fragment7, renderList, renderSlot as renderSlot16, createTextVNode as createTextVNode3, toDisplayString as toDisplayString5, mergeProps as mergeProps6, withKeys, withModifiers as withModifiers2, createSlots } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input/src/input2.mjs
import { defineComponent as defineComponent8, useAttrs as useAttrs2, useSlots as useSlots3, computed as computed24, shallowRef as shallowRef6, ref as ref19, nextTick as nextTick6, watch as watch17, onMounted as onMounted12, toRef as toRef3, withDirectives as withDirectives2, openBlock as openBlock7, createElementBlock as createElementBlock6, mergeProps as mergeProps2, unref as unref20, createCommentVNode as createCommentVNode4, Fragment as Fragment4, normalizeClass as normalizeClass5, renderSlot as renderSlot7, createElementVNode as createElementVNode4, createBlock as createBlock4, withCtx as withCtx3, resolveDynamicComponent as resolveDynamicComponent3, withModifiers, createVNode as createVNode4, toDisplayString as toDisplayString3, normalizeStyle as normalizeStyle3, vShow as vShow2 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form2.mjs
import { defineComponent as defineComponent5, computed as computed21, watch as watch14, provide as provide4, reactive as reactive4, toRefs as toRefs2, openBlock as openBlock5, createElementBlock as createElementBlock4, normalizeClass as normalizeClass3, unref as unref18, renderSlot as renderSlot5 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/hooks/use-form-common-props.mjs
import { ref as ref14, inject as inject9, computed as computed18, unref as unref17 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/constants.mjs
var formContextKey = Symbol("formContextKey");
var formItemContextKey = Symbol("formItemContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/hooks/use-form-common-props.mjs
var useFormSize = (fallback, ignore = {}) => {
  const emptyRef = ref14(void 0);
  const size4 = ignore.prop ? emptyRef : useProp("size");
  const globalConfig2 = ignore.global ? emptyRef : useGlobalSize();
  const form = ignore.form ? { size: void 0 } : inject9(formContextKey, void 0);
  const formItem = ignore.formItem ? { size: void 0 } : inject9(formItemContextKey, void 0);
  return computed18(() => size4.value || unref17(fallback) || (formItem == null ? void 0 : formItem.size) || (form == null ? void 0 : form.size) || globalConfig2.value || "");
};
var useFormDisabled = (fallback) => {
  const disabled = useProp("disabled");
  const form = inject9(formContextKey, void 0);
  return computed18(() => disabled.value || unref17(fallback) || (form == null ? void 0 : form.disabled) || false);
};
var useSize = useFormSize;
var useDisabled = useFormDisabled;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/hooks/use-form-item.mjs
import { inject as inject10, ref as ref15, computed as computed19, onMounted as onMounted9, watch as watch13, toRef as toRef2, onUnmounted as onUnmounted3 } from "vue";
var useFormItem = () => {
  const form = inject10(formContextKey, void 0);
  const formItem = inject10(formItemContextKey, void 0);
  return {
    form,
    formItem
  };
};
var useFormItemInputId = (props, {
  formItemContext,
  disableIdGeneration,
  disableIdManagement
}) => {
  if (!disableIdGeneration) {
    disableIdGeneration = ref15(false);
  }
  if (!disableIdManagement) {
    disableIdManagement = ref15(false);
  }
  const inputId = ref15();
  let idUnwatch = void 0;
  const isLabeledByFormItem = computed19(() => {
    var _a2;
    return !!(!props.label && formItemContext && formItemContext.inputIds && ((_a2 = formItemContext.inputIds) == null ? void 0 : _a2.length) <= 1);
  });
  onMounted9(() => {
    idUnwatch = watch13([toRef2(props, "id"), disableIdGeneration], ([id, disableIdGeneration2]) => {
      const newId = id != null ? id : !disableIdGeneration2 ? useId().value : void 0;
      if (newId !== inputId.value) {
        if (formItemContext == null ? void 0 : formItemContext.removeInputId) {
          inputId.value && formItemContext.removeInputId(inputId.value);
          if (!(disableIdManagement == null ? void 0 : disableIdManagement.value) && !disableIdGeneration2 && newId) {
            formItemContext.addInputId(newId);
          }
        }
        inputId.value = newId;
      }
    }, { immediate: true });
  });
  onUnmounted3(() => {
    idUnwatch && idUnwatch();
    if (formItemContext == null ? void 0 : formItemContext.removeInputId) {
      inputId.value && formItemContext.removeInputId(inputId.value);
    }
  });
  return {
    isLabeledByFormItem,
    inputId
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form.mjs
import { isArray as isArray7, isString as isString8 } from "@vue/shared";
var formMetaProps = buildProps({
  size: {
    type: String,
    values: componentSizes
  },
  disabled: Boolean
});
var formProps = buildProps({
  ...formMetaProps,
  model: Object,
  rules: {
    type: definePropType(Object)
  },
  labelPosition: {
    type: String,
    values: ["left", "right", "top"],
    default: "right"
  },
  requireAsteriskPosition: {
    type: String,
    values: ["left", "right"],
    default: "left"
  },
  labelWidth: {
    type: [String, Number],
    default: ""
  },
  labelSuffix: {
    type: String,
    default: ""
  },
  inline: Boolean,
  inlineMessage: Boolean,
  statusIcon: Boolean,
  showMessage: {
    type: Boolean,
    default: true
  },
  validateOnRuleChange: {
    type: Boolean,
    default: true
  },
  hideRequiredAsterisk: Boolean,
  scrollToError: Boolean,
  scrollIntoViewOptions: {
    type: [Object, Boolean]
  }
});
var formEmits = {
  validate: (prop, isValid, message2) => (isArray7(prop) || isString8(prop)) && isBoolean2(isValid) && isString8(message2)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/utils.mjs
import { ref as ref16, computed as computed20 } from "vue";
var SCOPE3 = "ElForm";
function useFormLabelWidth() {
  const potentialLabelWidthArr = ref16([]);
  const autoLabelWidth = computed20(() => {
    if (!potentialLabelWidthArr.value.length)
      return "0";
    const max5 = Math.max(...potentialLabelWidthArr.value);
    return max5 ? `${max5}px` : "";
  });
  function getLabelWidthIndex(width) {
    const index = potentialLabelWidthArr.value.indexOf(width);
    if (index === -1 && autoLabelWidth.value === "0") {
      debugWarn(SCOPE3, `unexpected width ${width}`);
    }
    return index;
  }
  function registerLabelWidth(val, oldVal) {
    if (val && oldVal) {
      const index = getLabelWidthIndex(oldVal);
      potentialLabelWidthArr.value.splice(index, 1, val);
    } else if (val) {
      potentialLabelWidthArr.value.push(val);
    }
  }
  function deregisterLabelWidth(val) {
    const index = getLabelWidthIndex(val);
    if (index > -1) {
      potentialLabelWidthArr.value.splice(index, 1);
    }
  }
  return {
    autoLabelWidth,
    registerLabelWidth,
    deregisterLabelWidth
  };
}
var filterFields = (fields, props) => {
  const normalized = castArray_default(props);
  return normalized.length > 0 ? fields.filter((field) => field.prop && normalized.includes(field.prop)) : fields;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form2.mjs
import { isFunction as isFunction8 } from "@vue/shared";
var COMPONENT_NAME2 = "ElForm";
var __default__4 = defineComponent5({
  name: COMPONENT_NAME2
});
var _sfc_main4 = defineComponent5({
  ...__default__4,
  props: formProps,
  emits: formEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const fields = [];
    const formSize = useFormSize();
    const ns = useNamespace("form");
    const formClasses = computed21(() => {
      const { labelPosition, inline: inline2 } = props;
      return [
        ns.b(),
        ns.m(formSize.value || "default"),
        {
          [ns.m(`label-${labelPosition}`)]: labelPosition,
          [ns.m("inline")]: inline2
        }
      ];
    });
    const addField = (field) => {
      fields.push(field);
    };
    const removeField = (field) => {
      if (field.prop) {
        fields.splice(fields.indexOf(field), 1);
      }
    };
    const resetFields = (properties = []) => {
      if (!props.model) {
        debugWarn(COMPONENT_NAME2, "model is required for resetFields to work.");
        return;
      }
      filterFields(fields, properties).forEach((field) => field.resetField());
    };
    const clearValidate = (props2 = []) => {
      filterFields(fields, props2).forEach((field) => field.clearValidate());
    };
    const isValidatable = computed21(() => {
      const hasModel = !!props.model;
      if (!hasModel) {
        debugWarn(COMPONENT_NAME2, "model is required for validate to work.");
      }
      return hasModel;
    });
    const obtainValidateFields = (props2) => {
      if (fields.length === 0)
        return [];
      const filteredFields = filterFields(fields, props2);
      if (!filteredFields.length) {
        debugWarn(COMPONENT_NAME2, "please pass correct props!");
        return [];
      }
      return filteredFields;
    };
    const validate = async (callback) => validateField(void 0, callback);
    const doValidateField = async (props2 = []) => {
      if (!isValidatable.value)
        return false;
      const fields2 = obtainValidateFields(props2);
      if (fields2.length === 0)
        return true;
      let validationErrors = {};
      for (const field of fields2) {
        try {
          await field.validate("");
        } catch (fields3) {
          validationErrors = {
            ...validationErrors,
            ...fields3
          };
        }
      }
      if (Object.keys(validationErrors).length === 0)
        return true;
      return Promise.reject(validationErrors);
    };
    const validateField = async (modelProps = [], callback) => {
      const shouldThrow = !isFunction8(callback);
      try {
        const result2 = await doValidateField(modelProps);
        if (result2 === true) {
          callback == null ? void 0 : callback(result2);
        }
        return result2;
      } catch (e) {
        if (e instanceof Error)
          throw e;
        const invalidFields = e;
        if (props.scrollToError) {
          scrollToField(Object.keys(invalidFields)[0]);
        }
        callback == null ? void 0 : callback(false, invalidFields);
        return shouldThrow && Promise.reject(invalidFields);
      }
    };
    const scrollToField = (prop) => {
      var _a2;
      const field = filterFields(fields, prop)[0];
      if (field) {
        (_a2 = field.$el) == null ? void 0 : _a2.scrollIntoView(props.scrollIntoViewOptions);
      }
    };
    watch14(() => props.rules, () => {
      if (props.validateOnRuleChange) {
        validate().catch((err) => debugWarn(err));
      }
    }, { deep: true });
    provide4(formContextKey, reactive4({
      ...toRefs2(props),
      emit,
      resetFields,
      clearValidate,
      validateField,
      addField,
      removeField,
      ...useFormLabelWidth()
    }));
    expose({
      validate,
      validateField,
      resetFields,
      clearValidate,
      scrollToField
    });
    return (_ctx, _cache) => {
      return openBlock5(), createElementBlock4("form", {
        class: normalizeClass3(unref18(formClasses))
      }, [
        renderSlot5(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var Form = _export_sfc(_sfc_main4, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/form/src/form.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form-item2.mjs
import { defineComponent as defineComponent7, useSlots as useSlots2, inject as inject12, ref as ref18, computed as computed23, nextTick as nextTick5, watch as watch16, reactive as reactive5, toRefs as toRefs3, provide as provide5, onMounted as onMounted11, onBeforeUnmount as onBeforeUnmount6, openBlock as openBlock6, createElementBlock as createElementBlock5, normalizeClass as normalizeClass4, unref as unref19, createVNode as createVNode3, withCtx as withCtx2, createBlock as createBlock3, resolveDynamicComponent as resolveDynamicComponent2, normalizeStyle as normalizeStyle2, renderSlot as renderSlot6, createTextVNode as createTextVNode2, toDisplayString as toDisplayString2, createCommentVNode as createCommentVNode3, createElementVNode as createElementVNode3, TransitionGroup } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/async-validator/dist-web/index.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target2) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target2[key] = source[key];
        }
      }
    }
    return target2;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o2) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf(o2);
}
function _setPrototypeOf(o2, p2) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf(o2, p2);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a2 = [null];
      a2.push.apply(a2, args2);
      var Constructor = Function.bind.apply(Parent2, a2);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeFunction(fn2) {
  return Function.toString.call(fn2).indexOf("[native code]") !== -1;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}
var formatRegExp = /%[sdj%]/g;
var warning = function warning2() {
};
if (typeof process !== "undefined" && process.env && true && typeof window !== "undefined" && typeof document !== "undefined") {
  warning = function warning3(type4, errors) {
    if (typeof console !== "undefined" && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING === "undefined") {
      if (errors.every(function(e) {
        return typeof e === "string";
      })) {
        console.warn(type4, errors);
      }
    }
  };
}
function convertFieldsError(errors) {
  if (!errors || !errors.length)
    return null;
  var fields = {};
  errors.forEach(function(error) {
    var field = error.field;
    fields[field] = fields[field] || [];
    fields[field].push(error);
  });
  return fields;
}
function format(template2) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  var i = 0;
  var len = args.length;
  if (typeof template2 === "function") {
    return template2.apply(null, args);
  }
  if (typeof template2 === "string") {
    var str = template2.replace(formatRegExp, function(x2) {
      if (x2 === "%%") {
        return "%";
      }
      if (i >= len) {
        return x2;
      }
      switch (x2) {
        case "%s":
          return String(args[i++]);
        case "%d":
          return Number(args[i++]);
        case "%j":
          try {
            return JSON.stringify(args[i++]);
          } catch (_2) {
            return "[Circular]";
          }
          break;
        default:
          return x2;
      }
    });
    return str;
  }
  return template2;
}
function isNativeStringType(type4) {
  return type4 === "string" || type4 === "url" || type4 === "hex" || type4 === "email" || type4 === "date" || type4 === "pattern";
}
function isEmptyValue(value, type4) {
  if (value === void 0 || value === null) {
    return true;
  }
  if (type4 === "array" && Array.isArray(value) && !value.length) {
    return true;
  }
  if (isNativeStringType(type4) && typeof value === "string" && !value) {
    return true;
  }
  return false;
}
function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total2 = 0;
  var arrLength = arr.length;
  function count(errors) {
    results.push.apply(results, errors || []);
    total2++;
    if (total2 === arrLength) {
      callback(results);
    }
  }
  arr.forEach(function(a2) {
    func(a2, count);
  });
}
function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;
  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index;
    index = index + 1;
    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }
  next([]);
}
function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function(k) {
    ret.push.apply(ret, objArr[k] || []);
  });
  return ret;
}
var AsyncValidationError = function(_Error) {
  _inheritsLoose(AsyncValidationError2, _Error);
  function AsyncValidationError2(errors, fields) {
    var _this;
    _this = _Error.call(this, "Async Validation Error") || this;
    _this.errors = errors;
    _this.fields = fields;
    return _this;
  }
  return AsyncValidationError2;
}(_wrapNativeSuper(Error));
function asyncMap(objArr, option, func, callback, source) {
  if (option.first) {
    var _pending = new Promise(function(resolve, reject2) {
      var next = function next2(errors) {
        callback(errors);
        return errors.length ? reject2(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve(source);
      };
      var flattenArr = flattenObjArr(objArr);
      asyncSerialArray(flattenArr, func, next);
    });
    _pending["catch"](function(e) {
      return e;
    });
    return _pending;
  }
  var firstFields = option.firstFields === true ? Object.keys(objArr) : option.firstFields || [];
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total2 = 0;
  var results = [];
  var pending = new Promise(function(resolve, reject2) {
    var next = function next2(errors) {
      results.push.apply(results, errors);
      total2++;
      if (total2 === objArrLength) {
        callback(results);
        return results.length ? reject2(new AsyncValidationError(results, convertFieldsError(results))) : resolve(source);
      }
    };
    if (!objArrKeys.length) {
      callback(results);
      resolve(source);
    }
    objArrKeys.forEach(function(key) {
      var arr = objArr[key];
      if (firstFields.indexOf(key) !== -1) {
        asyncSerialArray(arr, func, next);
      } else {
        asyncParallelArray(arr, func, next);
      }
    });
  });
  pending["catch"](function(e) {
    return e;
  });
  return pending;
}
function isErrorObj(obj) {
  return !!(obj && obj.message !== void 0);
}
function getValue2(value, path) {
  var v2 = value;
  for (var i = 0; i < path.length; i++) {
    if (v2 == void 0) {
      return v2;
    }
    v2 = v2[path[i]];
  }
  return v2;
}
function complementError(rule, source) {
  return function(oe) {
    var fieldValue;
    if (rule.fullFields) {
      fieldValue = getValue2(source, rule.fullFields);
    } else {
      fieldValue = source[oe.field || rule.fullField];
    }
    if (isErrorObj(oe)) {
      oe.field = oe.field || rule.fullField;
      oe.fieldValue = fieldValue;
      return oe;
    }
    return {
      message: typeof oe === "function" ? oe() : oe,
      fieldValue,
      field: oe.field || rule.fullField
    };
  };
}
function deepMerge(target2, source) {
  if (source) {
    for (var s2 in source) {
      if (source.hasOwnProperty(s2)) {
        var value = source[s2];
        if (typeof value === "object" && typeof target2[s2] === "object") {
          target2[s2] = _extends({}, target2[s2], value);
        } else {
          target2[s2] = value;
        }
      }
    }
  }
  return target2;
}
var required$1 = function required(rule, value, source, errors, options, type4) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type4 || rule.type))) {
    errors.push(format(options.messages.required, rule.fullField));
  }
};
var whitespace = function whitespace2(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === "") {
    errors.push(format(options.messages.whitespace, rule.fullField));
  }
};
var urlReg;
var getUrlRegex = function() {
  if (urlReg) {
    return urlReg;
  }
  var word = "[a-fA-F\\d:]";
  var b2 = function b3(options) {
    return options && options.includeBoundaries ? "(?:(?<=\\s|^)(?=" + word + ")|(?<=" + word + ")(?=\\s|$))" : "";
  };
  var v4 = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}";
  var v6seg = "[a-fA-F\\d]{1,4}";
  var v6 = ("\n(?:\n(?:" + v6seg + ":){7}(?:" + v6seg + "|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:" + v6seg + ":){6}(?:" + v4 + "|:" + v6seg + "|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:" + v6seg + ":){5}(?::" + v4 + "|(?::" + v6seg + "){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:" + v6seg + ":){4}(?:(?::" + v6seg + "){0,1}:" + v4 + "|(?::" + v6seg + "){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:" + v6seg + ":){3}(?:(?::" + v6seg + "){0,2}:" + v4 + "|(?::" + v6seg + "){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:" + v6seg + ":){2}(?:(?::" + v6seg + "){0,3}:" + v4 + "|(?::" + v6seg + "){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:" + v6seg + ":){1}(?:(?::" + v6seg + "){0,4}:" + v4 + "|(?::" + v6seg + "){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::" + v6seg + "){0,5}:" + v4 + "|(?::" + v6seg + "){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n").replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim();
  var v46Exact = new RegExp("(?:^" + v4 + "$)|(?:^" + v6 + "$)");
  var v4exact = new RegExp("^" + v4 + "$");
  var v6exact = new RegExp("^" + v6 + "$");
  var ip = function ip2(options) {
    return options && options.exact ? v46Exact : new RegExp("(?:" + b2(options) + v4 + b2(options) + ")|(?:" + b2(options) + v6 + b2(options) + ")", "g");
  };
  ip.v4 = function(options) {
    return options && options.exact ? v4exact : new RegExp("" + b2(options) + v4 + b2(options), "g");
  };
  ip.v6 = function(options) {
    return options && options.exact ? v6exact : new RegExp("" + b2(options) + v6 + b2(options), "g");
  };
  var protocol = "(?:(?:[a-z]+:)?//)";
  var auth = "(?:\\S+(?::\\S*)?@)?";
  var ipv4 = ip.v4().source;
  var ipv6 = ip.v6().source;
  var host = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)";
  var domain = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*";
  var tld = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))";
  var port = "(?::\\d{2,5})?";
  var path = '(?:[/?#][^\\s"]*)?';
  var regex = "(?:" + protocol + "|www\\.)" + auth + "(?:localhost|" + ipv4 + "|" + ipv6 + "|" + host + domain + tld + ")" + port + path;
  urlReg = new RegExp("(?:^" + regex + "$)", "i");
  return urlReg;
};
var pattern$2 = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
  // url: new RegExp(
  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$',
  //   'i',
  // ),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};
var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  "float": function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === "function" && typeof value.getMonth === "function" && typeof value.getYear === "function" && !isNaN(value.getTime());
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === "number";
  },
  object: function object(value) {
    return typeof value === "object" && !types.array(value);
  },
  method: function method2(value) {
    return typeof value === "function";
  },
  email: function email(value) {
    return typeof value === "string" && value.length <= 320 && !!value.match(pattern$2.email);
  },
  url: function url(value) {
    return typeof value === "string" && value.length <= 2048 && !!value.match(getUrlRegex());
  },
  hex: function hex(value) {
    return typeof value === "string" && !!value.match(pattern$2.hex);
  }
};
var type$1 = function type(rule, value, source, errors, options) {
  if (rule.required && value === void 0) {
    required$1(rule, value, source, errors, options);
    return;
  }
  var custom = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
    }
  } else if (ruleType && typeof value !== rule.type) {
    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
};
var range2 = function range3(rule, value, source, errors, options) {
  var len = typeof rule.len === "number";
  var min5 = typeof rule.min === "number";
  var max5 = typeof rule.max === "number";
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === "number";
  var str = typeof value === "string";
  var arr = Array.isArray(value);
  if (num) {
    key = "number";
  } else if (str) {
    key = "string";
  } else if (arr) {
    key = "array";
  }
  if (!key) {
    return false;
  }
  if (arr) {
    val = value.length;
  }
  if (str) {
    val = value.replace(spRegexp, "_").length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min5 && !max5 && val < rule.min) {
    errors.push(format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max5 && !min5 && val > rule.max) {
    errors.push(format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min5 && max5 && (val < rule.min || val > rule.max)) {
    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
};
var ENUM$1 = "enum";
var enumerable$1 = function enumerable(rule, value, source, errors, options) {
  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];
  if (rule[ENUM$1].indexOf(value) === -1) {
    errors.push(format(options.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(", ")));
  }
};
var pattern$1 = function pattern(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === "string") {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
};
var rules = {
  required: required$1,
  whitespace,
  type: type$1,
  range: range2,
  "enum": enumerable$1,
  pattern: pattern$1
};
var string = function string2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, "string");
    if (!isEmptyValue(value, "string")) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
      rules.pattern(rule, value, source, errors, options);
      if (rule.whitespace === true) {
        rules.whitespace(rule, value, source, errors, options);
      }
    }
  }
  callback(errors);
};
var method3 = function method4(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var number2 = function number3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (value === "") {
      value = void 0;
    }
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var _boolean = function _boolean2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var regexp2 = function regexp3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value)) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var integer2 = function integer3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var floatFn = function floatFn2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var array2 = function array3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((value === void 0 || value === null) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, "array");
    if (value !== void 0 && value !== null) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var object2 = function object3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var ENUM = "enum";
var enumerable2 = function enumerable3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules[ENUM](rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var pattern2 = function pattern3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value, "string")) {
      rules.pattern(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var date2 = function date3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, "date") && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value, "date")) {
      var dateObject;
      if (value instanceof Date) {
        dateObject = value;
      } else {
        dateObject = new Date(value);
      }
      rules.type(rule, dateObject, source, errors, options);
      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }
  callback(errors);
};
var required2 = function required3(rule, value, callback, source, options) {
  var errors = [];
  var type4 = Array.isArray(value) ? "array" : typeof value;
  rules.required(rule, value, source, errors, options, type4);
  callback(errors);
};
var type2 = function type3(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, ruleType) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, ruleType);
    if (!isEmptyValue(value, ruleType)) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var any = function any2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
  }
  callback(errors);
};
var validators = {
  string,
  method: method3,
  number: number2,
  "boolean": _boolean,
  regexp: regexp2,
  integer: integer2,
  "float": floatFn,
  array: array2,
  object: object2,
  "enum": enumerable2,
  pattern: pattern2,
  date: date2,
  url: type2,
  hex: type2,
  email: type2,
  required: required2,
  any
};
function newMessages() {
  return {
    "default": "Validation error on field %s",
    required: "%s is required",
    "enum": "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      "boolean": "%s is not a %s",
      integer: "%s is not an %s",
      "float": "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function clone2() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}
var messages = newMessages();
var Schema = function() {
  function Schema2(descriptor) {
    this.rules = null;
    this._messages = messages;
    this.define(descriptor);
  }
  var _proto = Schema2.prototype;
  _proto.define = function define2(rules2) {
    var _this = this;
    if (!rules2) {
      throw new Error("Cannot configure a schema with no rules");
    }
    if (typeof rules2 !== "object" || Array.isArray(rules2)) {
      throw new Error("Rules must be an object");
    }
    this.rules = {};
    Object.keys(rules2).forEach(function(name) {
      var item = rules2[name];
      _this.rules[name] = Array.isArray(item) ? item : [item];
    });
  };
  _proto.messages = function messages2(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  };
  _proto.validate = function validate(source_, o2, oc) {
    var _this2 = this;
    if (o2 === void 0) {
      o2 = {};
    }
    if (oc === void 0) {
      oc = function oc2() {
      };
    }
    var source = source_;
    var options = o2;
    var callback = oc;
    if (typeof options === "function") {
      callback = options;
      options = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback(null, source);
      }
      return Promise.resolve(source);
    }
    function complete(results) {
      var errors = [];
      var fields = {};
      function add3(e) {
        if (Array.isArray(e)) {
          var _errors;
          errors = (_errors = errors).concat.apply(_errors, e);
        } else {
          errors.push(e);
        }
      }
      for (var i = 0; i < results.length; i++) {
        add3(results[i]);
      }
      if (!errors.length) {
        callback(null, source);
      } else {
        fields = convertFieldsError(errors);
        callback(errors, fields);
      }
    }
    if (options.messages) {
      var messages$1 = this.messages();
      if (messages$1 === messages) {
        messages$1 = newMessages();
      }
      deepMerge(messages$1, options.messages);
      options.messages = messages$1;
    } else {
      options.messages = this.messages();
    }
    var series = {};
    var keys3 = options.keys || Object.keys(this.rules);
    keys3.forEach(function(z) {
      var arr = _this2.rules[z];
      var value = source[z];
      arr.forEach(function(r) {
        var rule = r;
        if (typeof rule.transform === "function") {
          if (source === source_) {
            source = _extends({}, source);
          }
          value = source[z] = rule.transform(value);
        }
        if (typeof rule === "function") {
          rule = {
            validator: rule
          };
        } else {
          rule = _extends({}, rule);
        }
        rule.validator = _this2.getValidationMethod(rule);
        if (!rule.validator) {
          return;
        }
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this2.getType(rule);
        series[z] = series[z] || [];
        series[z].push({
          rule,
          value,
          source,
          field: z
        });
      });
    });
    var errorFields = {};
    return asyncMap(series, options, function(data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === "object" || rule.type === "array") && (typeof rule.fields === "object" || typeof rule.defaultField === "object");
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullField(key, schema) {
        return _extends({}, schema, {
          fullField: rule.fullField + "." + key,
          fullFields: rule.fullFields ? [].concat(rule.fullFields, [key]) : [key]
        });
      }
      function cb(e) {
        if (e === void 0) {
          e = [];
        }
        var errorList = Array.isArray(e) ? e : [e];
        if (!options.suppressWarning && errorList.length) {
          Schema2.warning("async-validator:", errorList);
        }
        if (errorList.length && rule.message !== void 0) {
          errorList = [].concat(rule.message);
        }
        var filledErrors = errorList.map(complementError(rule, source));
        if (options.first && filledErrors.length) {
          errorFields[rule.field] = 1;
          return doIt(filledErrors);
        }
        if (!deep) {
          doIt(filledErrors);
        } else {
          if (rule.required && !data.value) {
            if (rule.message !== void 0) {
              filledErrors = [].concat(rule.message).map(complementError(rule, source));
            } else if (options.error) {
              filledErrors = [options.error(rule, format(options.messages.required, rule.field))];
            }
            return doIt(filledErrors);
          }
          var fieldsSchema = {};
          if (rule.defaultField) {
            Object.keys(data.value).map(function(key) {
              fieldsSchema[key] = rule.defaultField;
            });
          }
          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);
          var paredFieldsSchema = {};
          Object.keys(fieldsSchema).forEach(function(field) {
            var fieldSchema = fieldsSchema[field];
            var fieldSchemaList = Array.isArray(fieldSchema) ? fieldSchema : [fieldSchema];
            paredFieldsSchema[field] = fieldSchemaList.map(addFullField.bind(null, field));
          });
          var schema = new Schema2(paredFieldsSchema);
          schema.messages(options.messages);
          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }
          schema.validate(data.value, data.rule.options || options, function(errs) {
            var finalErrors = [];
            if (filledErrors && filledErrors.length) {
              finalErrors.push.apply(finalErrors, filledErrors);
            }
            if (errs && errs.length) {
              finalErrors.push.apply(finalErrors, errs);
            }
            doIt(finalErrors.length ? finalErrors : null);
          });
        }
      }
      var res;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data.value, cb, data.source, options);
      } else if (rule.validator) {
        try {
          res = rule.validator(rule, data.value, cb, data.source, options);
        } catch (error) {
          console.error == null ? void 0 : console.error(error);
          if (!options.suppressValidatorError) {
            setTimeout(function() {
              throw error;
            }, 0);
          }
          cb(error.message);
        }
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(typeof rule.message === "function" ? rule.message(rule.fullField || rule.field) : rule.message || (rule.fullField || rule.field) + " fails");
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function() {
          return cb();
        }, function(e) {
          return cb(e);
        });
      }
    }, function(results) {
      complete(results);
    }, source);
  };
  _proto.getType = function getType(rule) {
    if (rule.type === void 0 && rule.pattern instanceof RegExp) {
      rule.type = "pattern";
    }
    if (typeof rule.validator !== "function" && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format("Unknown rule type %s", rule.type));
    }
    return rule.type || "string";
  };
  _proto.getValidationMethod = function getValidationMethod(rule) {
    if (typeof rule.validator === "function") {
      return rule.validator;
    }
    var keys3 = Object.keys(rule);
    var messageIndex = keys3.indexOf("message");
    if (messageIndex !== -1) {
      keys3.splice(messageIndex, 1);
    }
    if (keys3.length === 1 && keys3[0] === "required") {
      return validators.required;
    }
    return validators[this.getType(rule)] || void 0;
  };
  return Schema2;
}();
Schema.register = function register(type4, validator) {
  if (typeof validator !== "function") {
    throw new Error("Cannot register a validator by type, validator is not a function");
  }
  validators[type4] = validator;
};
Schema.warning = warning;
Schema.messages = messages;
Schema.validators = validators;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form-item.mjs
var formItemValidateStates = [
  "",
  "error",
  "validating",
  "success"
];
var formItemProps = buildProps({
  label: String,
  labelWidth: {
    type: [String, Number],
    default: ""
  },
  prop: {
    type: definePropType([String, Array])
  },
  required: {
    type: Boolean,
    default: void 0
  },
  rules: {
    type: definePropType([Object, Array])
  },
  error: String,
  validateStatus: {
    type: String,
    values: formItemValidateStates
  },
  for: String,
  inlineMessage: {
    type: [String, Boolean],
    default: ""
  },
  showMessage: {
    type: Boolean,
    default: true
  },
  size: {
    type: String,
    values: componentSizes
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form-label-wrap.mjs
import { defineComponent as defineComponent6, inject as inject11, ref as ref17, nextTick as nextTick4, onMounted as onMounted10, onBeforeUnmount as onBeforeUnmount5, onUpdated as onUpdated2, watch as watch15, computed as computed22, createVNode as createVNode2, Fragment as Fragment3 } from "vue";
var COMPONENT_NAME3 = "ElLabelWrap";
var FormLabelWrap = defineComponent6({
  name: COMPONENT_NAME3,
  props: {
    isAutoWidth: Boolean,
    updateAll: Boolean
  },
  setup(props, {
    slots
  }) {
    const formContext = inject11(formContextKey, void 0);
    const formItemContext = inject11(formItemContextKey);
    if (!formItemContext)
      throwError(COMPONENT_NAME3, "usage: <el-form-item><label-wrap /></el-form-item>");
    const ns = useNamespace("form");
    const el = ref17();
    const computedWidth = ref17(0);
    const getLabelWidth = () => {
      var _a2;
      if ((_a2 = el.value) == null ? void 0 : _a2.firstElementChild) {
        const width = window.getComputedStyle(el.value.firstElementChild).width;
        return Math.ceil(Number.parseFloat(width));
      } else {
        return 0;
      }
    };
    const updateLabelWidth = (action = "update") => {
      nextTick4(() => {
        if (slots.default && props.isAutoWidth) {
          if (action === "update") {
            computedWidth.value = getLabelWidth();
          } else if (action === "remove") {
            formContext == null ? void 0 : formContext.deregisterLabelWidth(computedWidth.value);
          }
        }
      });
    };
    const updateLabelWidthFn = () => updateLabelWidth("update");
    onMounted10(() => {
      updateLabelWidthFn();
    });
    onBeforeUnmount5(() => {
      updateLabelWidth("remove");
    });
    onUpdated2(() => updateLabelWidthFn());
    watch15(computedWidth, (val, oldVal) => {
      if (props.updateAll) {
        formContext == null ? void 0 : formContext.registerLabelWidth(val, oldVal);
      }
    });
    useResizeObserver(computed22(() => {
      var _a2, _b;
      return (_b = (_a2 = el.value) == null ? void 0 : _a2.firstElementChild) != null ? _b : null;
    }), updateLabelWidthFn);
    return () => {
      var _a2, _b;
      if (!slots)
        return null;
      const {
        isAutoWidth
      } = props;
      if (isAutoWidth) {
        const autoLabelWidth = formContext == null ? void 0 : formContext.autoLabelWidth;
        const hasLabel = formItemContext == null ? void 0 : formItemContext.hasLabel;
        const style = {};
        if (hasLabel && autoLabelWidth && autoLabelWidth !== "auto") {
          const marginWidth = Math.max(0, Number.parseInt(autoLabelWidth, 10) - computedWidth.value);
          const marginPosition = formContext.labelPosition === "left" ? "marginRight" : "marginLeft";
          if (marginWidth) {
            style[marginPosition] = `${marginWidth}px`;
          }
        }
        return createVNode2("div", {
          "ref": el,
          "class": [ns.be("item", "label-wrap")],
          "style": style
        }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]);
      } else {
        return createVNode2(Fragment3, {
          "ref": el
        }, [(_b = slots.default) == null ? void 0 : _b.call(slots)]);
      }
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/src/form-item2.mjs
import { isString as isString9, isFunction as isFunction9 } from "@vue/shared";
var _hoisted_1 = ["role", "aria-labelledby"];
var __default__5 = defineComponent7({
  name: "ElFormItem"
});
var _sfc_main5 = defineComponent7({
  ...__default__5,
  props: formItemProps,
  setup(__props, { expose }) {
    const props = __props;
    const slots = useSlots2();
    const formContext = inject12(formContextKey, void 0);
    const parentFormItemContext = inject12(formItemContextKey, void 0);
    const _size = useFormSize(void 0, { formItem: false });
    const ns = useNamespace("form-item");
    const labelId = useId().value;
    const inputIds = ref18([]);
    const validateState = ref18("");
    const validateStateDebounced = refDebounced(validateState, 100);
    const validateMessage = ref18("");
    const formItemRef = ref18();
    let initialValue = void 0;
    let isResettingField = false;
    const labelStyle = computed23(() => {
      if ((formContext == null ? void 0 : formContext.labelPosition) === "top") {
        return {};
      }
      const labelWidth = addUnit(props.labelWidth || (formContext == null ? void 0 : formContext.labelWidth) || "");
      if (labelWidth)
        return { width: labelWidth };
      return {};
    });
    const contentStyle = computed23(() => {
      if ((formContext == null ? void 0 : formContext.labelPosition) === "top" || (formContext == null ? void 0 : formContext.inline)) {
        return {};
      }
      if (!props.label && !props.labelWidth && isNested) {
        return {};
      }
      const labelWidth = addUnit(props.labelWidth || (formContext == null ? void 0 : formContext.labelWidth) || "");
      if (!props.label && !slots.label) {
        return { marginLeft: labelWidth };
      }
      return {};
    });
    const formItemClasses = computed23(() => [
      ns.b(),
      ns.m(_size.value),
      ns.is("error", validateState.value === "error"),
      ns.is("validating", validateState.value === "validating"),
      ns.is("success", validateState.value === "success"),
      ns.is("required", isRequired.value || props.required),
      ns.is("no-asterisk", formContext == null ? void 0 : formContext.hideRequiredAsterisk),
      (formContext == null ? void 0 : formContext.requireAsteriskPosition) === "right" ? "asterisk-right" : "asterisk-left",
      { [ns.m("feedback")]: formContext == null ? void 0 : formContext.statusIcon }
    ]);
    const _inlineMessage = computed23(() => isBoolean2(props.inlineMessage) ? props.inlineMessage : (formContext == null ? void 0 : formContext.inlineMessage) || false);
    const validateClasses = computed23(() => [
      ns.e("error"),
      { [ns.em("error", "inline")]: _inlineMessage.value }
    ]);
    const propString = computed23(() => {
      if (!props.prop)
        return "";
      return isString9(props.prop) ? props.prop : props.prop.join(".");
    });
    const hasLabel = computed23(() => {
      return !!(props.label || slots.label);
    });
    const labelFor = computed23(() => {
      return props.for || inputIds.value.length === 1 ? inputIds.value[0] : void 0;
    });
    const isGroup = computed23(() => {
      return !labelFor.value && hasLabel.value;
    });
    const isNested = !!parentFormItemContext;
    const fieldValue = computed23(() => {
      const model = formContext == null ? void 0 : formContext.model;
      if (!model || !props.prop) {
        return;
      }
      return getProp(model, props.prop).value;
    });
    const normalizedRules = computed23(() => {
      const { required: required4 } = props;
      const rules2 = [];
      if (props.rules) {
        rules2.push(...castArray_default(props.rules));
      }
      const formRules = formContext == null ? void 0 : formContext.rules;
      if (formRules && props.prop) {
        const _rules = getProp(formRules, props.prop).value;
        if (_rules) {
          rules2.push(...castArray_default(_rules));
        }
      }
      if (required4 !== void 0) {
        const requiredRules = rules2.map((rule, i) => [rule, i]).filter(([rule]) => Object.keys(rule).includes("required"));
        if (requiredRules.length > 0) {
          for (const [rule, i] of requiredRules) {
            if (rule.required === required4)
              continue;
            rules2[i] = { ...rule, required: required4 };
          }
        } else {
          rules2.push({ required: required4 });
        }
      }
      return rules2;
    });
    const validateEnabled = computed23(() => normalizedRules.value.length > 0);
    const getFilteredRule = (trigger2) => {
      const rules2 = normalizedRules.value;
      return rules2.filter((rule) => {
        if (!rule.trigger || !trigger2)
          return true;
        if (Array.isArray(rule.trigger)) {
          return rule.trigger.includes(trigger2);
        } else {
          return rule.trigger === trigger2;
        }
      }).map(({ trigger: trigger22, ...rule }) => rule);
    };
    const isRequired = computed23(() => normalizedRules.value.some((rule) => rule.required));
    const shouldShowError = computed23(() => {
      var _a2;
      return validateStateDebounced.value === "error" && props.showMessage && ((_a2 = formContext == null ? void 0 : formContext.showMessage) != null ? _a2 : true);
    });
    const currentLabel = computed23(() => `${props.label || ""}${(formContext == null ? void 0 : formContext.labelSuffix) || ""}`);
    const setValidationState = (state) => {
      validateState.value = state;
    };
    const onValidationFailed = (error) => {
      var _a2, _b;
      const { errors, fields } = error;
      if (!errors || !fields) {
        console.error(error);
      }
      setValidationState("error");
      validateMessage.value = errors ? (_b = (_a2 = errors == null ? void 0 : errors[0]) == null ? void 0 : _a2.message) != null ? _b : `${props.prop} is required` : "";
      formContext == null ? void 0 : formContext.emit("validate", props.prop, false, validateMessage.value);
    };
    const onValidationSucceeded = () => {
      setValidationState("success");
      formContext == null ? void 0 : formContext.emit("validate", props.prop, true, "");
    };
    const doValidate = async (rules2) => {
      const modelName = propString.value;
      const validator = new Schema({
        [modelName]: rules2
      });
      return validator.validate({ [modelName]: fieldValue.value }, { firstFields: true }).then(() => {
        onValidationSucceeded();
        return true;
      }).catch((err) => {
        onValidationFailed(err);
        return Promise.reject(err);
      });
    };
    const validate = async (trigger2, callback) => {
      if (isResettingField || !props.prop) {
        return false;
      }
      const hasCallback = isFunction9(callback);
      if (!validateEnabled.value) {
        callback == null ? void 0 : callback(false);
        return false;
      }
      const rules2 = getFilteredRule(trigger2);
      if (rules2.length === 0) {
        callback == null ? void 0 : callback(true);
        return true;
      }
      setValidationState("validating");
      return doValidate(rules2).then(() => {
        callback == null ? void 0 : callback(true);
        return true;
      }).catch((err) => {
        const { fields } = err;
        callback == null ? void 0 : callback(false, fields);
        return hasCallback ? false : Promise.reject(fields);
      });
    };
    const clearValidate = () => {
      setValidationState("");
      validateMessage.value = "";
      isResettingField = false;
    };
    const resetField = async () => {
      const model = formContext == null ? void 0 : formContext.model;
      if (!model || !props.prop)
        return;
      const computedValue = getProp(model, props.prop);
      isResettingField = true;
      computedValue.value = clone_default(initialValue);
      await nextTick5();
      clearValidate();
      isResettingField = false;
    };
    const addInputId = (id) => {
      if (!inputIds.value.includes(id)) {
        inputIds.value.push(id);
      }
    };
    const removeInputId = (id) => {
      inputIds.value = inputIds.value.filter((listId) => listId !== id);
    };
    watch16(() => props.error, (val) => {
      validateMessage.value = val || "";
      setValidationState(val ? "error" : "");
    }, { immediate: true });
    watch16(() => props.validateStatus, (val) => setValidationState(val || ""));
    const context = reactive5({
      ...toRefs3(props),
      $el: formItemRef,
      size: _size,
      validateState,
      labelId,
      inputIds,
      isGroup,
      hasLabel,
      addInputId,
      removeInputId,
      resetField,
      clearValidate,
      validate
    });
    provide5(formItemContextKey, context);
    onMounted11(() => {
      if (props.prop) {
        formContext == null ? void 0 : formContext.addField(context);
        initialValue = clone_default(fieldValue.value);
      }
    });
    onBeforeUnmount6(() => {
      formContext == null ? void 0 : formContext.removeField(context);
    });
    expose({
      size: _size,
      validateMessage,
      validateState,
      validate,
      clearValidate,
      resetField
    });
    return (_ctx, _cache) => {
      var _a2;
      return openBlock6(), createElementBlock5("div", {
        ref_key: "formItemRef",
        ref: formItemRef,
        class: normalizeClass4(unref19(formItemClasses)),
        role: unref19(isGroup) ? "group" : void 0,
        "aria-labelledby": unref19(isGroup) ? unref19(labelId) : void 0
      }, [
        createVNode3(unref19(FormLabelWrap), {
          "is-auto-width": unref19(labelStyle).width === "auto",
          "update-all": ((_a2 = unref19(formContext)) == null ? void 0 : _a2.labelWidth) === "auto"
        }, {
          default: withCtx2(() => [
            unref19(hasLabel) ? (openBlock6(), createBlock3(resolveDynamicComponent2(unref19(labelFor) ? "label" : "div"), {
              key: 0,
              id: unref19(labelId),
              for: unref19(labelFor),
              class: normalizeClass4(unref19(ns).e("label")),
              style: normalizeStyle2(unref19(labelStyle))
            }, {
              default: withCtx2(() => [
                renderSlot6(_ctx.$slots, "label", { label: unref19(currentLabel) }, () => [
                  createTextVNode2(toDisplayString2(unref19(currentLabel)), 1)
                ])
              ]),
              _: 3
            }, 8, ["id", "for", "class", "style"])) : createCommentVNode3("v-if", true)
          ]),
          _: 3
        }, 8, ["is-auto-width", "update-all"]),
        createElementVNode3("div", {
          class: normalizeClass4(unref19(ns).e("content")),
          style: normalizeStyle2(unref19(contentStyle))
        }, [
          renderSlot6(_ctx.$slots, "default"),
          createVNode3(TransitionGroup, {
            name: `${unref19(ns).namespace.value}-zoom-in-top`
          }, {
            default: withCtx2(() => [
              unref19(shouldShowError) ? renderSlot6(_ctx.$slots, "error", {
                key: 0,
                error: validateMessage.value
              }, () => [
                createElementVNode3("div", {
                  class: normalizeClass4(unref19(validateClasses))
                }, toDisplayString2(validateMessage.value), 3)
              ]) : createCommentVNode3("v-if", true)
            ]),
            _: 3
          }, 8, ["name"])
        ], 6)
      ], 10, _hoisted_1);
    };
  }
});
var FormItem = _export_sfc(_sfc_main5, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/form/src/form-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/form/index.mjs
var ElForm = withInstall(Form, {
  FormItem
});
var ElFormItem = withNoopInstall(FormItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input/src/utils.mjs
var hiddenTextarea = void 0;
var HIDDEN_STYLE = `
  height:0 !important;
  visibility:hidden !important;
  ${isFirefox() ? "" : "overflow:hidden !important;"}
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
`;
var CONTEXT_STYLE = [
  "letter-spacing",
  "line-height",
  "padding-top",
  "padding-bottom",
  "font-family",
  "font-weight",
  "font-size",
  "text-rendering",
  "text-transform",
  "width",
  "text-indent",
  "padding-left",
  "padding-right",
  "border-width",
  "box-sizing"
];
function calculateNodeStyling(targetElement) {
  const style = window.getComputedStyle(targetElement);
  const boxSizing = style.getPropertyValue("box-sizing");
  const paddingSize = Number.parseFloat(style.getPropertyValue("padding-bottom")) + Number.parseFloat(style.getPropertyValue("padding-top"));
  const borderSize = Number.parseFloat(style.getPropertyValue("border-bottom-width")) + Number.parseFloat(style.getPropertyValue("border-top-width"));
  const contextStyle = CONTEXT_STYLE.map((name) => `${name}:${style.getPropertyValue(name)}`).join(";");
  return { contextStyle, paddingSize, borderSize, boxSizing };
}
function calcTextareaHeight(targetElement, minRows = 1, maxRows) {
  var _a2;
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    document.body.appendChild(hiddenTextarea);
  }
  const { paddingSize, borderSize, boxSizing, contextStyle } = calculateNodeStyling(targetElement);
  hiddenTextarea.setAttribute("style", `${contextStyle};${HIDDEN_STYLE}`);
  hiddenTextarea.value = targetElement.value || targetElement.placeholder || "";
  let height = hiddenTextarea.scrollHeight;
  const result2 = {};
  if (boxSizing === "border-box") {
    height = height + borderSize;
  } else if (boxSizing === "content-box") {
    height = height - paddingSize;
  }
  hiddenTextarea.value = "";
  const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;
  if (isNumber3(minRows)) {
    let minHeight = singleRowHeight * minRows;
    if (boxSizing === "border-box") {
      minHeight = minHeight + paddingSize + borderSize;
    }
    height = Math.max(minHeight, height);
    result2.minHeight = `${minHeight}px`;
  }
  if (isNumber3(maxRows)) {
    let maxHeight = singleRowHeight * maxRows;
    if (boxSizing === "border-box") {
      maxHeight = maxHeight + paddingSize + borderSize;
    }
    height = Math.min(maxHeight, height);
  }
  result2.height = `${height}px`;
  (_a2 = hiddenTextarea.parentNode) == null ? void 0 : _a2.removeChild(hiddenTextarea);
  hiddenTextarea = void 0;
  return result2;
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input/src/input.mjs
import { isString as isString10 } from "@vue/shared";
var inputProps = buildProps({
  id: {
    type: String,
    default: void 0
  },
  size: useSizeProp,
  disabled: Boolean,
  modelValue: {
    type: definePropType([
      String,
      Number,
      Object
    ]),
    default: ""
  },
  type: {
    type: String,
    default: "text"
  },
  resize: {
    type: String,
    values: ["none", "both", "horizontal", "vertical"]
  },
  autosize: {
    type: definePropType([Boolean, Object]),
    default: false
  },
  autocomplete: {
    type: String,
    default: "off"
  },
  formatter: {
    type: Function
  },
  parser: {
    type: Function
  },
  placeholder: {
    type: String
  },
  form: {
    type: String
  },
  readonly: {
    type: Boolean,
    default: false
  },
  clearable: {
    type: Boolean,
    default: false
  },
  showPassword: {
    type: Boolean,
    default: false
  },
  showWordLimit: {
    type: Boolean,
    default: false
  },
  suffixIcon: {
    type: iconPropType
  },
  prefixIcon: {
    type: iconPropType
  },
  containerRole: {
    type: String,
    default: void 0
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  validateEvent: {
    type: Boolean,
    default: true
  },
  inputStyle: {
    type: definePropType([Object, Array, String]),
    default: () => mutable({})
  }
});
var inputEmits = {
  [UPDATE_MODEL_EVENT]: (value) => isString10(value),
  input: (value) => isString10(value),
  change: (value) => isString10(value),
  focus: (evt) => evt instanceof FocusEvent,
  blur: (evt) => evt instanceof FocusEvent,
  clear: () => true,
  mouseleave: (evt) => evt instanceof MouseEvent,
  mouseenter: (evt) => evt instanceof MouseEvent,
  keydown: (evt) => evt instanceof Event,
  compositionstart: (evt) => evt instanceof CompositionEvent,
  compositionupdate: (evt) => evt instanceof CompositionEvent,
  compositionend: (evt) => evt instanceof CompositionEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input/src/input2.mjs
import { isObject as isObject9, NOOP as NOOP7 } from "@vue/shared";
var _hoisted_12 = ["role"];
var _hoisted_2 = ["id", "type", "disabled", "formatter", "parser", "readonly", "autocomplete", "tabindex", "aria-label", "placeholder", "form"];
var _hoisted_3 = ["id", "tabindex", "disabled", "readonly", "autocomplete", "aria-label", "placeholder", "form"];
var __default__6 = defineComponent8({
  name: "ElInput",
  inheritAttrs: false
});
var _sfc_main6 = defineComponent8({
  ...__default__6,
  props: inputProps,
  emits: inputEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const rawAttrs = useAttrs2();
    const slots = useSlots3();
    const containerAttrs = computed24(() => {
      const comboBoxAttrs = {};
      if (props.containerRole === "combobox") {
        comboBoxAttrs["aria-haspopup"] = rawAttrs["aria-haspopup"];
        comboBoxAttrs["aria-owns"] = rawAttrs["aria-owns"];
        comboBoxAttrs["aria-expanded"] = rawAttrs["aria-expanded"];
      }
      return comboBoxAttrs;
    });
    const containerKls = computed24(() => [
      props.type === "textarea" ? nsTextarea.b() : nsInput.b(),
      nsInput.m(inputSize.value),
      nsInput.is("disabled", inputDisabled.value),
      nsInput.is("exceed", inputExceed.value),
      {
        [nsInput.b("group")]: slots.prepend || slots.append,
        [nsInput.bm("group", "append")]: slots.append,
        [nsInput.bm("group", "prepend")]: slots.prepend,
        [nsInput.m("prefix")]: slots.prefix || props.prefixIcon,
        [nsInput.m("suffix")]: slots.suffix || props.suffixIcon || props.clearable || props.showPassword,
        [nsInput.bm("suffix", "password-clear")]: showClear.value && showPwdVisible.value
      },
      rawAttrs.class
    ]);
    const wrapperKls = computed24(() => [
      nsInput.e("wrapper"),
      nsInput.is("focus", focused.value)
    ]);
    const attrs = useAttrs({
      excludeKeys: computed24(() => {
        return Object.keys(containerAttrs.value);
      })
    });
    const { form, formItem } = useFormItem();
    const { inputId } = useFormItemInputId(props, {
      formItemContext: formItem
    });
    const inputSize = useFormSize();
    const inputDisabled = useFormDisabled();
    const nsInput = useNamespace("input");
    const nsTextarea = useNamespace("textarea");
    const input = shallowRef6();
    const textarea = shallowRef6();
    const focused = ref19(false);
    const hovering = ref19(false);
    const isComposing = ref19(false);
    const passwordVisible = ref19(false);
    const countStyle = ref19();
    const textareaCalcStyle = shallowRef6(props.inputStyle);
    const _ref = computed24(() => input.value || textarea.value);
    const needStatusIcon = computed24(() => {
      var _a2;
      return (_a2 = form == null ? void 0 : form.statusIcon) != null ? _a2 : false;
    });
    const validateState = computed24(() => (formItem == null ? void 0 : formItem.validateState) || "");
    const validateIcon = computed24(() => validateState.value && ValidateComponentsMap[validateState.value]);
    const passwordIcon = computed24(() => passwordVisible.value ? view_default : hide_default);
    const containerStyle = computed24(() => [
      rawAttrs.style,
      props.inputStyle
    ]);
    const textareaStyle = computed24(() => [
      props.inputStyle,
      textareaCalcStyle.value,
      { resize: props.resize }
    ]);
    const nativeInputValue = computed24(() => isNil_default(props.modelValue) ? "" : String(props.modelValue));
    const showClear = computed24(() => props.clearable && !inputDisabled.value && !props.readonly && !!nativeInputValue.value && (focused.value || hovering.value));
    const showPwdVisible = computed24(() => props.showPassword && !inputDisabled.value && !props.readonly && !!nativeInputValue.value && (!!nativeInputValue.value || focused.value));
    const isWordLimitVisible = computed24(() => props.showWordLimit && !!attrs.value.maxlength && (props.type === "text" || props.type === "textarea") && !inputDisabled.value && !props.readonly && !props.showPassword);
    const textLength = computed24(() => nativeInputValue.value.length);
    const inputExceed = computed24(() => !!isWordLimitVisible.value && textLength.value > Number(attrs.value.maxlength));
    const suffixVisible = computed24(() => !!slots.suffix || !!props.suffixIcon || showClear.value || props.showPassword || isWordLimitVisible.value || !!validateState.value && needStatusIcon.value);
    const [recordCursor, setCursor] = useCursor(input);
    useResizeObserver(textarea, (entries) => {
      onceInitSizeTextarea();
      if (!isWordLimitVisible.value || props.resize !== "both")
        return;
      const entry = entries[0];
      const { width } = entry.contentRect;
      countStyle.value = {
        right: `calc(100% - ${width + 15 + 6}px)`
      };
    });
    const resizeTextarea = () => {
      const { type: type4, autosize } = props;
      if (!isClient || type4 !== "textarea" || !textarea.value)
        return;
      if (autosize) {
        const minRows = isObject9(autosize) ? autosize.minRows : void 0;
        const maxRows = isObject9(autosize) ? autosize.maxRows : void 0;
        const textareaStyle2 = calcTextareaHeight(textarea.value, minRows, maxRows);
        textareaCalcStyle.value = {
          overflowY: "hidden",
          ...textareaStyle2
        };
        nextTick6(() => {
          textarea.value.offsetHeight;
          textareaCalcStyle.value = textareaStyle2;
        });
      } else {
        textareaCalcStyle.value = {
          minHeight: calcTextareaHeight(textarea.value).minHeight
        };
      }
    };
    const createOnceInitResize = (resizeTextarea2) => {
      let isInit = false;
      return () => {
        var _a2;
        if (isInit || !props.autosize)
          return;
        const isElHidden = ((_a2 = textarea.value) == null ? void 0 : _a2.offsetParent) === null;
        if (!isElHidden) {
          resizeTextarea2();
          isInit = true;
        }
      };
    };
    const onceInitSizeTextarea = createOnceInitResize(resizeTextarea);
    const setNativeInputValue = () => {
      const input2 = _ref.value;
      const formatterValue = props.formatter ? props.formatter(nativeInputValue.value) : nativeInputValue.value;
      if (!input2 || input2.value === formatterValue)
        return;
      input2.value = formatterValue;
    };
    const handleInput = async (event) => {
      recordCursor();
      let { value } = event.target;
      if (props.formatter) {
        value = props.parser ? props.parser(value) : value;
      }
      if (isComposing.value)
        return;
      if (value === nativeInputValue.value) {
        setNativeInputValue();
        return;
      }
      emit(UPDATE_MODEL_EVENT, value);
      emit("input", value);
      await nextTick6();
      setNativeInputValue();
      setCursor();
    };
    const handleChange = (event) => {
      emit("change", event.target.value);
    };
    const handleCompositionStart = (event) => {
      emit("compositionstart", event);
      isComposing.value = true;
    };
    const handleCompositionUpdate = (event) => {
      var _a2;
      emit("compositionupdate", event);
      const text = (_a2 = event.target) == null ? void 0 : _a2.value;
      const lastCharacter = text[text.length - 1] || "";
      isComposing.value = !isKorean(lastCharacter);
    };
    const handleCompositionEnd = (event) => {
      emit("compositionend", event);
      if (isComposing.value) {
        isComposing.value = false;
        handleInput(event);
      }
    };
    const handlePasswordVisible = () => {
      passwordVisible.value = !passwordVisible.value;
      focus();
    };
    const focus = async () => {
      var _a2;
      await nextTick6();
      (_a2 = _ref.value) == null ? void 0 : _a2.focus();
    };
    const blur = () => {
      var _a2;
      return (_a2 = _ref.value) == null ? void 0 : _a2.blur();
    };
    const handleFocus = (event) => {
      focused.value = true;
      emit("focus", event);
    };
    const handleBlur = (event) => {
      var _a2;
      focused.value = false;
      emit("blur", event);
      if (props.validateEvent) {
        (_a2 = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a2.call(formItem, "blur").catch((err) => debugWarn(err));
      }
    };
    const handleMouseLeave = (evt) => {
      hovering.value = false;
      emit("mouseleave", evt);
    };
    const handleMouseEnter = (evt) => {
      hovering.value = true;
      emit("mouseenter", evt);
    };
    const handleKeydown = (evt) => {
      emit("keydown", evt);
    };
    const select = () => {
      var _a2;
      (_a2 = _ref.value) == null ? void 0 : _a2.select();
    };
    const clear2 = () => {
      emit(UPDATE_MODEL_EVENT, "");
      emit("change", "");
      emit("clear");
      emit("input", "");
    };
    watch17(() => props.modelValue, () => {
      var _a2;
      nextTick6(() => resizeTextarea());
      if (props.validateEvent) {
        (_a2 = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a2.call(formItem, "change").catch((err) => debugWarn(err));
      }
    });
    watch17(nativeInputValue, () => setNativeInputValue());
    watch17(() => props.type, async () => {
      await nextTick6();
      setNativeInputValue();
      resizeTextarea();
    });
    onMounted12(() => {
      if (!props.formatter && props.parser) {
        debugWarn("ElInput", "If you set the parser, you also need to set the formatter.");
      }
      setNativeInputValue();
      nextTick6(resizeTextarea);
    });
    expose({
      input,
      textarea,
      ref: _ref,
      textareaStyle,
      autosize: toRef3(props, "autosize"),
      focus,
      blur,
      select,
      clear: clear2,
      resizeTextarea
    });
    return (_ctx, _cache) => {
      return withDirectives2((openBlock7(), createElementBlock6("div", mergeProps2(unref20(containerAttrs), {
        class: unref20(containerKls),
        style: unref20(containerStyle),
        role: _ctx.containerRole,
        onMouseenter: handleMouseEnter,
        onMouseleave: handleMouseLeave
      }), [
        createCommentVNode4(" input "),
        _ctx.type !== "textarea" ? (openBlock7(), createElementBlock6(Fragment4, { key: 0 }, [
          createCommentVNode4(" prepend slot "),
          _ctx.$slots.prepend ? (openBlock7(), createElementBlock6("div", {
            key: 0,
            class: normalizeClass5(unref20(nsInput).be("group", "prepend"))
          }, [
            renderSlot7(_ctx.$slots, "prepend")
          ], 2)) : createCommentVNode4("v-if", true),
          createElementVNode4("div", {
            class: normalizeClass5(unref20(wrapperKls))
          }, [
            createCommentVNode4(" prefix slot "),
            _ctx.$slots.prefix || _ctx.prefixIcon ? (openBlock7(), createElementBlock6("span", {
              key: 0,
              class: normalizeClass5(unref20(nsInput).e("prefix"))
            }, [
              createElementVNode4("span", {
                class: normalizeClass5(unref20(nsInput).e("prefix-inner")),
                onClick: focus
              }, [
                renderSlot7(_ctx.$slots, "prefix"),
                _ctx.prefixIcon ? (openBlock7(), createBlock4(unref20(ElIcon), {
                  key: 0,
                  class: normalizeClass5(unref20(nsInput).e("icon"))
                }, {
                  default: withCtx3(() => [
                    (openBlock7(), createBlock4(resolveDynamicComponent3(_ctx.prefixIcon)))
                  ]),
                  _: 1
                }, 8, ["class"])) : createCommentVNode4("v-if", true)
              ], 2)
            ], 2)) : createCommentVNode4("v-if", true),
            createElementVNode4("input", mergeProps2({
              id: unref20(inputId),
              ref_key: "input",
              ref: input,
              class: unref20(nsInput).e("inner")
            }, unref20(attrs), {
              type: _ctx.showPassword ? passwordVisible.value ? "text" : "password" : _ctx.type,
              disabled: unref20(inputDisabled),
              formatter: _ctx.formatter,
              parser: _ctx.parser,
              readonly: _ctx.readonly,
              autocomplete: _ctx.autocomplete,
              tabindex: _ctx.tabindex,
              "aria-label": _ctx.label,
              placeholder: _ctx.placeholder,
              style: _ctx.inputStyle,
              form: props.form,
              onCompositionstart: handleCompositionStart,
              onCompositionupdate: handleCompositionUpdate,
              onCompositionend: handleCompositionEnd,
              onInput: handleInput,
              onFocus: handleFocus,
              onBlur: handleBlur,
              onChange: handleChange,
              onKeydown: handleKeydown
            }), null, 16, _hoisted_2),
            createCommentVNode4(" suffix slot "),
            unref20(suffixVisible) ? (openBlock7(), createElementBlock6("span", {
              key: 1,
              class: normalizeClass5(unref20(nsInput).e("suffix"))
            }, [
              createElementVNode4("span", {
                class: normalizeClass5(unref20(nsInput).e("suffix-inner")),
                onClick: focus
              }, [
                !unref20(showClear) || !unref20(showPwdVisible) || !unref20(isWordLimitVisible) ? (openBlock7(), createElementBlock6(Fragment4, { key: 0 }, [
                  renderSlot7(_ctx.$slots, "suffix"),
                  _ctx.suffixIcon ? (openBlock7(), createBlock4(unref20(ElIcon), {
                    key: 0,
                    class: normalizeClass5(unref20(nsInput).e("icon"))
                  }, {
                    default: withCtx3(() => [
                      (openBlock7(), createBlock4(resolveDynamicComponent3(_ctx.suffixIcon)))
                    ]),
                    _: 1
                  }, 8, ["class"])) : createCommentVNode4("v-if", true)
                ], 64)) : createCommentVNode4("v-if", true),
                unref20(showClear) ? (openBlock7(), createBlock4(unref20(ElIcon), {
                  key: 1,
                  class: normalizeClass5([unref20(nsInput).e("icon"), unref20(nsInput).e("clear")]),
                  onMousedown: withModifiers(unref20(NOOP7), ["prevent"]),
                  onClick: clear2
                }, {
                  default: withCtx3(() => [
                    createVNode4(unref20(circle_close_default))
                  ]),
                  _: 1
                }, 8, ["class", "onMousedown"])) : createCommentVNode4("v-if", true),
                unref20(showPwdVisible) ? (openBlock7(), createBlock4(unref20(ElIcon), {
                  key: 2,
                  class: normalizeClass5([unref20(nsInput).e("icon"), unref20(nsInput).e("password")]),
                  onClick: handlePasswordVisible
                }, {
                  default: withCtx3(() => [
                    (openBlock7(), createBlock4(resolveDynamicComponent3(unref20(passwordIcon))))
                  ]),
                  _: 1
                }, 8, ["class"])) : createCommentVNode4("v-if", true),
                unref20(isWordLimitVisible) ? (openBlock7(), createElementBlock6("span", {
                  key: 3,
                  class: normalizeClass5(unref20(nsInput).e("count"))
                }, [
                  createElementVNode4("span", {
                    class: normalizeClass5(unref20(nsInput).e("count-inner"))
                  }, toDisplayString3(unref20(textLength)) + " / " + toDisplayString3(unref20(attrs).maxlength), 3)
                ], 2)) : createCommentVNode4("v-if", true),
                unref20(validateState) && unref20(validateIcon) && unref20(needStatusIcon) ? (openBlock7(), createBlock4(unref20(ElIcon), {
                  key: 4,
                  class: normalizeClass5([
                    unref20(nsInput).e("icon"),
                    unref20(nsInput).e("validateIcon"),
                    unref20(nsInput).is("loading", unref20(validateState) === "validating")
                  ])
                }, {
                  default: withCtx3(() => [
                    (openBlock7(), createBlock4(resolveDynamicComponent3(unref20(validateIcon))))
                  ]),
                  _: 1
                }, 8, ["class"])) : createCommentVNode4("v-if", true)
              ], 2)
            ], 2)) : createCommentVNode4("v-if", true)
          ], 2),
          createCommentVNode4(" append slot "),
          _ctx.$slots.append ? (openBlock7(), createElementBlock6("div", {
            key: 1,
            class: normalizeClass5(unref20(nsInput).be("group", "append"))
          }, [
            renderSlot7(_ctx.$slots, "append")
          ], 2)) : createCommentVNode4("v-if", true)
        ], 64)) : (openBlock7(), createElementBlock6(Fragment4, { key: 1 }, [
          createCommentVNode4(" textarea "),
          createElementVNode4("textarea", mergeProps2({
            id: unref20(inputId),
            ref_key: "textarea",
            ref: textarea,
            class: unref20(nsTextarea).e("inner")
          }, unref20(attrs), {
            tabindex: _ctx.tabindex,
            disabled: unref20(inputDisabled),
            readonly: _ctx.readonly,
            autocomplete: _ctx.autocomplete,
            style: unref20(textareaStyle),
            "aria-label": _ctx.label,
            placeholder: _ctx.placeholder,
            form: props.form,
            onCompositionstart: handleCompositionStart,
            onCompositionupdate: handleCompositionUpdate,
            onCompositionend: handleCompositionEnd,
            onInput: handleInput,
            onFocus: handleFocus,
            onBlur: handleBlur,
            onChange: handleChange,
            onKeydown: handleKeydown
          }), null, 16, _hoisted_3),
          unref20(isWordLimitVisible) ? (openBlock7(), createElementBlock6("span", {
            key: 0,
            style: normalizeStyle3(countStyle.value),
            class: normalizeClass5(unref20(nsInput).e("count"))
          }, toDisplayString3(unref20(textLength)) + " / " + toDisplayString3(unref20(attrs).maxlength), 7)) : createCommentVNode4("v-if", true)
        ], 64))
      ], 16, _hoisted_12)), [
        [vShow2, _ctx.type !== "hidden"]
      ]);
    };
  }
});
var Input = _export_sfc(_sfc_main6, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/input/src/input.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input/index.mjs
var ElInput = withInstall(Input);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/scrollbar.mjs
import { defineComponent as defineComponent11, ref as ref22, computed as computed26, watch as watch18, nextTick as nextTick7, provide as provide6, reactive as reactive6, onMounted as onMounted13, onUpdated as onUpdated3, openBlock as openBlock10, createElementBlock as createElementBlock8, normalizeClass as normalizeClass7, unref as unref22, createElementVNode as createElementVNode6, normalizeStyle as normalizeStyle5, createBlock as createBlock6, resolveDynamicComponent as resolveDynamicComponent4, withCtx as withCtx5, renderSlot as renderSlot8, createCommentVNode as createCommentVNode5 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/util.mjs
var GAP = 4;
var BAR_MAP = {
  vertical: {
    offset: "offsetHeight",
    scroll: "scrollTop",
    scrollSize: "scrollHeight",
    size: "height",
    key: "vertical",
    axis: "Y",
    client: "clientY",
    direction: "top"
  },
  horizontal: {
    offset: "offsetWidth",
    scroll: "scrollLeft",
    scrollSize: "scrollWidth",
    size: "width",
    key: "horizontal",
    axis: "X",
    client: "clientX",
    direction: "left"
  }
};
var renderThumbStyle = ({
  move,
  size: size4,
  bar
}) => ({
  [bar.size]: size4,
  transform: `translate${bar.axis}(${move}%)`
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/bar2.mjs
import { defineComponent as defineComponent10, ref as ref21, openBlock as openBlock9, createElementBlock as createElementBlock7, Fragment as Fragment5, createVNode as createVNode5 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/thumb2.mjs
import { defineComponent as defineComponent9, inject as inject13, ref as ref20, computed as computed25, onBeforeUnmount as onBeforeUnmount7, toRef as toRef4, openBlock as openBlock8, createBlock as createBlock5, Transition as Transition2, unref as unref21, withCtx as withCtx4, withDirectives as withDirectives3, createElementVNode as createElementVNode5, normalizeClass as normalizeClass6, normalizeStyle as normalizeStyle4, vShow as vShow3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/constants.mjs
var scrollbarContextKey = Symbol("scrollbarContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/thumb.mjs
var thumbProps = buildProps({
  vertical: Boolean,
  size: String,
  move: Number,
  ratio: {
    type: Number,
    required: true
  },
  always: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/thumb2.mjs
var COMPONENT_NAME4 = "Thumb";
var _sfc_main7 = defineComponent9({
  __name: "thumb",
  props: thumbProps,
  setup(__props) {
    const props = __props;
    const scrollbar = inject13(scrollbarContextKey);
    const ns = useNamespace("scrollbar");
    if (!scrollbar)
      throwError(COMPONENT_NAME4, "can not inject scrollbar context");
    const instance = ref20();
    const thumb = ref20();
    const thumbState = ref20({});
    const visible = ref20(false);
    let cursorDown = false;
    let cursorLeave = false;
    let originalOnSelectStart = isClient ? document.onselectstart : null;
    const bar = computed25(() => BAR_MAP[props.vertical ? "vertical" : "horizontal"]);
    const thumbStyle = computed25(() => renderThumbStyle({
      size: props.size,
      move: props.move,
      bar: bar.value
    }));
    const offsetRatio = computed25(() => instance.value[bar.value.offset] ** 2 / scrollbar.wrapElement[bar.value.scrollSize] / props.ratio / thumb.value[bar.value.offset]);
    const clickThumbHandler = (e) => {
      var _a2;
      e.stopPropagation();
      if (e.ctrlKey || [1, 2].includes(e.button))
        return;
      (_a2 = window.getSelection()) == null ? void 0 : _a2.removeAllRanges();
      startDrag(e);
      const el = e.currentTarget;
      if (!el)
        return;
      thumbState.value[bar.value.axis] = el[bar.value.offset] - (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction]);
    };
    const clickTrackHandler = (e) => {
      if (!thumb.value || !instance.value || !scrollbar.wrapElement)
        return;
      const offset2 = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);
      const thumbHalf = thumb.value[bar.value.offset] / 2;
      const thumbPositionPercentage = (offset2 - thumbHalf) * 100 * offsetRatio.value / instance.value[bar.value.offset];
      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;
    };
    const startDrag = (e) => {
      e.stopImmediatePropagation();
      cursorDown = true;
      document.addEventListener("mousemove", mouseMoveDocumentHandler);
      document.addEventListener("mouseup", mouseUpDocumentHandler);
      originalOnSelectStart = document.onselectstart;
      document.onselectstart = () => false;
    };
    const mouseMoveDocumentHandler = (e) => {
      if (!instance.value || !thumb.value)
        return;
      if (cursorDown === false)
        return;
      const prevPage = thumbState.value[bar.value.axis];
      if (!prevPage)
        return;
      const offset2 = (instance.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;
      const thumbClickPosition = thumb.value[bar.value.offset] - prevPage;
      const thumbPositionPercentage = (offset2 - thumbClickPosition) * 100 * offsetRatio.value / instance.value[bar.value.offset];
      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;
    };
    const mouseUpDocumentHandler = () => {
      cursorDown = false;
      thumbState.value[bar.value.axis] = 0;
      document.removeEventListener("mousemove", mouseMoveDocumentHandler);
      document.removeEventListener("mouseup", mouseUpDocumentHandler);
      restoreOnselectstart();
      if (cursorLeave)
        visible.value = false;
    };
    const mouseMoveScrollbarHandler = () => {
      cursorLeave = false;
      visible.value = !!props.size;
    };
    const mouseLeaveScrollbarHandler = () => {
      cursorLeave = true;
      visible.value = cursorDown;
    };
    onBeforeUnmount7(() => {
      restoreOnselectstart();
      document.removeEventListener("mouseup", mouseUpDocumentHandler);
    });
    const restoreOnselectstart = () => {
      if (document.onselectstart !== originalOnSelectStart)
        document.onselectstart = originalOnSelectStart;
    };
    useEventListener(toRef4(scrollbar, "scrollbarElement"), "mousemove", mouseMoveScrollbarHandler);
    useEventListener(toRef4(scrollbar, "scrollbarElement"), "mouseleave", mouseLeaveScrollbarHandler);
    return (_ctx, _cache) => {
      return openBlock8(), createBlock5(Transition2, {
        name: unref21(ns).b("fade"),
        persisted: ""
      }, {
        default: withCtx4(() => [
          withDirectives3(createElementVNode5("div", {
            ref_key: "instance",
            ref: instance,
            class: normalizeClass6([unref21(ns).e("bar"), unref21(ns).is(unref21(bar).key)]),
            onMousedown: clickTrackHandler
          }, [
            createElementVNode5("div", {
              ref_key: "thumb",
              ref: thumb,
              class: normalizeClass6(unref21(ns).e("thumb")),
              style: normalizeStyle4(unref21(thumbStyle)),
              onMousedown: clickThumbHandler
            }, null, 38)
          ], 34), [
            [vShow3, _ctx.always || visible.value]
          ])
        ]),
        _: 1
      }, 8, ["name"]);
    };
  }
});
var Thumb = _export_sfc(_sfc_main7, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/thumb.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/bar.mjs
var barProps = buildProps({
  always: {
    type: Boolean,
    default: true
  },
  width: String,
  height: String,
  ratioX: {
    type: Number,
    default: 1
  },
  ratioY: {
    type: Number,
    default: 1
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/bar2.mjs
var _sfc_main8 = defineComponent10({
  __name: "bar",
  props: barProps,
  setup(__props, { expose }) {
    const props = __props;
    const moveX = ref21(0);
    const moveY = ref21(0);
    const handleScroll2 = (wrap2) => {
      if (wrap2) {
        const offsetHeight = wrap2.offsetHeight - GAP;
        const offsetWidth = wrap2.offsetWidth - GAP;
        moveY.value = wrap2.scrollTop * 100 / offsetHeight * props.ratioY;
        moveX.value = wrap2.scrollLeft * 100 / offsetWidth * props.ratioX;
      }
    };
    expose({
      handleScroll: handleScroll2
    });
    return (_ctx, _cache) => {
      return openBlock9(), createElementBlock7(Fragment5, null, [
        createVNode5(Thumb, {
          move: moveX.value,
          ratio: _ctx.ratioX,
          size: _ctx.width,
          always: _ctx.always
        }, null, 8, ["move", "ratio", "size", "always"]),
        createVNode5(Thumb, {
          move: moveY.value,
          ratio: _ctx.ratioY,
          size: _ctx.height,
          vertical: "",
          always: _ctx.always
        }, null, 8, ["move", "ratio", "size", "always"])
      ], 64);
    };
  }
});
var Bar = _export_sfc(_sfc_main8, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/bar.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/scrollbar2.mjs
var scrollbarProps = buildProps({
  height: {
    type: [String, Number],
    default: ""
  },
  maxHeight: {
    type: [String, Number],
    default: ""
  },
  native: {
    type: Boolean,
    default: false
  },
  wrapStyle: {
    type: definePropType([String, Object, Array]),
    default: ""
  },
  wrapClass: {
    type: [String, Array],
    default: ""
  },
  viewClass: {
    type: [String, Array],
    default: ""
  },
  viewStyle: {
    type: [String, Array, Object],
    default: ""
  },
  noresize: Boolean,
  tag: {
    type: String,
    default: "div"
  },
  always: Boolean,
  minSize: {
    type: Number,
    default: 20
  }
});
var scrollbarEmits = {
  scroll: ({
    scrollTop,
    scrollLeft
  }) => [scrollTop, scrollLeft].every(isNumber3)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/src/scrollbar.mjs
import { isObject as isObject10 } from "@vue/shared";
var COMPONENT_NAME5 = "ElScrollbar";
var __default__7 = defineComponent11({
  name: COMPONENT_NAME5
});
var _sfc_main9 = defineComponent11({
  ...__default__7,
  props: scrollbarProps,
  emits: scrollbarEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const ns = useNamespace("scrollbar");
    let stopResizeObserver = void 0;
    let stopResizeListener = void 0;
    const scrollbarRef = ref22();
    const wrapRef = ref22();
    const resizeRef = ref22();
    const sizeWidth = ref22("0");
    const sizeHeight = ref22("0");
    const barRef = ref22();
    const ratioY = ref22(1);
    const ratioX = ref22(1);
    const style = computed26(() => {
      const style2 = {};
      if (props.height)
        style2.height = addUnit(props.height);
      if (props.maxHeight)
        style2.maxHeight = addUnit(props.maxHeight);
      return [props.wrapStyle, style2];
    });
    const wrapKls = computed26(() => {
      return [
        props.wrapClass,
        ns.e("wrap"),
        { [ns.em("wrap", "hidden-default")]: !props.native }
      ];
    });
    const resizeKls = computed26(() => {
      return [ns.e("view"), props.viewClass];
    });
    const handleScroll2 = () => {
      var _a2;
      if (wrapRef.value) {
        (_a2 = barRef.value) == null ? void 0 : _a2.handleScroll(wrapRef.value);
        emit("scroll", {
          scrollTop: wrapRef.value.scrollTop,
          scrollLeft: wrapRef.value.scrollLeft
        });
      }
    };
    function scrollTo(arg1, arg2) {
      if (isObject10(arg1)) {
        wrapRef.value.scrollTo(arg1);
      } else if (isNumber3(arg1) && isNumber3(arg2)) {
        wrapRef.value.scrollTo(arg1, arg2);
      }
    }
    const setScrollTop = (value) => {
      if (!isNumber3(value)) {
        debugWarn(COMPONENT_NAME5, "value must be a number");
        return;
      }
      wrapRef.value.scrollTop = value;
    };
    const setScrollLeft = (value) => {
      if (!isNumber3(value)) {
        debugWarn(COMPONENT_NAME5, "value must be a number");
        return;
      }
      wrapRef.value.scrollLeft = value;
    };
    const update2 = () => {
      if (!wrapRef.value)
        return;
      const offsetHeight = wrapRef.value.offsetHeight - GAP;
      const offsetWidth = wrapRef.value.offsetWidth - GAP;
      const originalHeight = offsetHeight ** 2 / wrapRef.value.scrollHeight;
      const originalWidth = offsetWidth ** 2 / wrapRef.value.scrollWidth;
      const height = Math.max(originalHeight, props.minSize);
      const width = Math.max(originalWidth, props.minSize);
      ratioY.value = originalHeight / (offsetHeight - originalHeight) / (height / (offsetHeight - height));
      ratioX.value = originalWidth / (offsetWidth - originalWidth) / (width / (offsetWidth - width));
      sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : "";
      sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : "";
    };
    watch18(() => props.noresize, (noresize) => {
      if (noresize) {
        stopResizeObserver == null ? void 0 : stopResizeObserver();
        stopResizeListener == null ? void 0 : stopResizeListener();
      } else {
        ;
        ({ stop: stopResizeObserver } = useResizeObserver(resizeRef, update2));
        stopResizeListener = useEventListener("resize", update2);
      }
    }, { immediate: true });
    watch18(() => [props.maxHeight, props.height], () => {
      if (!props.native)
        nextTick7(() => {
          var _a2;
          update2();
          if (wrapRef.value) {
            (_a2 = barRef.value) == null ? void 0 : _a2.handleScroll(wrapRef.value);
          }
        });
    });
    provide6(scrollbarContextKey, reactive6({
      scrollbarElement: scrollbarRef,
      wrapElement: wrapRef
    }));
    onMounted13(() => {
      if (!props.native)
        nextTick7(() => {
          update2();
        });
    });
    onUpdated3(() => update2());
    expose({
      wrapRef,
      update: update2,
      scrollTo,
      setScrollTop,
      setScrollLeft,
      handleScroll: handleScroll2
    });
    return (_ctx, _cache) => {
      return openBlock10(), createElementBlock8("div", {
        ref_key: "scrollbarRef",
        ref: scrollbarRef,
        class: normalizeClass7(unref22(ns).b())
      }, [
        createElementVNode6("div", {
          ref_key: "wrapRef",
          ref: wrapRef,
          class: normalizeClass7(unref22(wrapKls)),
          style: normalizeStyle5(unref22(style)),
          onScroll: handleScroll2
        }, [
          (openBlock10(), createBlock6(resolveDynamicComponent4(_ctx.tag), {
            ref_key: "resizeRef",
            ref: resizeRef,
            class: normalizeClass7(unref22(resizeKls)),
            style: normalizeStyle5(_ctx.viewStyle)
          }, {
            default: withCtx5(() => [
              renderSlot8(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["class", "style"]))
        ], 38),
        !_ctx.native ? (openBlock10(), createBlock6(Bar, {
          key: 0,
          ref_key: "barRef",
          ref: barRef,
          height: sizeHeight.value,
          width: sizeWidth.value,
          always: _ctx.always,
          "ratio-x": ratioX.value,
          "ratio-y": ratioY.value
        }, null, 8, ["height", "width", "always", "ratio-x", "ratio-y"])) : createCommentVNode5("v-if", true)
      ], 2);
    };
  }
});
var Scrollbar = _export_sfc(_sfc_main9, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/scrollbar.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/scrollbar/index.mjs
var ElScrollbar = withInstall(Scrollbar);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/tooltip2.mjs
import { defineComponent as defineComponent20, ref as ref32, unref as unref32, toRef as toRef6, computed as computed32, provide as provide10, readonly as readonly4, watch as watch25, onDeactivated, openBlock as openBlock16, createBlock as createBlock10, withCtx as withCtx10, createVNode as createVNode9, renderSlot as renderSlot15, createCommentVNode as createCommentVNode8, createElementBlock as createElementBlock11, toDisplayString as toDisplayString4 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/popper2.mjs
import { defineComponent as defineComponent12, ref as ref23, computed as computed27, provide as provide7, renderSlot as renderSlot9 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/constants.mjs
var POPPER_INJECTION_KEY = Symbol("popper");
var POPPER_CONTENT_INJECTION_KEY = Symbol("popperContent");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/popper.mjs
var Effect = {
  LIGHT: "light",
  DARK: "dark"
};
var roleTypes = [
  "dialog",
  "grid",
  "group",
  "listbox",
  "menu",
  "navigation",
  "tooltip",
  "tree"
];
var popperProps = buildProps({
  role: {
    type: String,
    values: roleTypes,
    default: "tooltip"
  }
});
var usePopperProps = popperProps;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/popper2.mjs
var __default__8 = defineComponent12({
  name: "ElPopper",
  inheritAttrs: false
});
var _sfc_main10 = defineComponent12({
  ...__default__8,
  props: popperProps,
  setup(__props, { expose }) {
    const props = __props;
    const triggerRef2 = ref23();
    const popperInstanceRef = ref23();
    const contentRef = ref23();
    const referenceRef = ref23();
    const role = computed27(() => props.role);
    const popperProvides = {
      triggerRef: triggerRef2,
      popperInstanceRef,
      contentRef,
      referenceRef,
      role
    };
    expose(popperProvides);
    provide7(POPPER_INJECTION_KEY, popperProvides);
    return (_ctx, _cache) => {
      return renderSlot9(_ctx.$slots, "default");
    };
  }
});
var Popper = _export_sfc(_sfc_main10, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/popper.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/arrow2.mjs
import { defineComponent as defineComponent13, inject as inject14, watch as watch19, onBeforeUnmount as onBeforeUnmount8, openBlock as openBlock11, createElementBlock as createElementBlock9, normalizeClass as normalizeClass8, unref as unref23, normalizeStyle as normalizeStyle6 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/arrow.mjs
var popperArrowProps = buildProps({
  arrowOffset: {
    type: Number,
    default: 5
  }
});
var usePopperArrowProps = popperArrowProps;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/arrow2.mjs
var __default__9 = defineComponent13({
  name: "ElPopperArrow",
  inheritAttrs: false
});
var _sfc_main11 = defineComponent13({
  ...__default__9,
  props: popperArrowProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = useNamespace("popper");
    const { arrowOffset, arrowRef, arrowStyle } = inject14(POPPER_CONTENT_INJECTION_KEY, void 0);
    watch19(() => props.arrowOffset, (val) => {
      arrowOffset.value = val;
    });
    onBeforeUnmount8(() => {
      arrowRef.value = void 0;
    });
    expose({
      arrowRef
    });
    return (_ctx, _cache) => {
      return openBlock11(), createElementBlock9("span", {
        ref_key: "arrowRef",
        ref: arrowRef,
        class: normalizeClass8(unref23(ns).e("arrow")),
        style: normalizeStyle6(unref23(arrowStyle)),
        "data-popper-arrow": ""
      }, null, 6);
    };
  }
});
var ElPopperArrow = _export_sfc(_sfc_main11, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/arrow.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/trigger2.mjs
import { defineComponent as defineComponent15, inject as inject16, computed as computed28, onMounted as onMounted14, watch as watch20, onBeforeUnmount as onBeforeUnmount9, openBlock as openBlock12, createBlock as createBlock7, unref as unref24, mergeProps as mergeProps3, withCtx as withCtx6, renderSlot as renderSlot10, createCommentVNode as createCommentVNode6 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slot/src/only-child.mjs
import { defineComponent as defineComponent14, inject as inject15, withDirectives as withDirectives4, cloneVNode, Fragment as Fragment6, createVNode as createVNode6, Text as Text2, Comment as Comment2 } from "vue";
import { NOOP as NOOP8, isObject as isObject11 } from "@vue/shared";
var NAME = "ElOnlyChild";
var OnlyChild = defineComponent14({
  name: NAME,
  setup(_2, {
    slots,
    attrs
  }) {
    var _a2;
    const forwardRefInjection = inject15(FORWARD_REF_INJECTION_KEY);
    const forwardRefDirective = useForwardRefDirective((_a2 = forwardRefInjection == null ? void 0 : forwardRefInjection.setForwardRef) != null ? _a2 : NOOP8);
    return () => {
      var _a22;
      const defaultSlot = (_a22 = slots.default) == null ? void 0 : _a22.call(slots, attrs);
      if (!defaultSlot)
        return null;
      if (defaultSlot.length > 1) {
        debugWarn(NAME, "requires exact only one valid child.");
        return null;
      }
      const firstLegitNode = findFirstLegitChild(defaultSlot);
      if (!firstLegitNode) {
        debugWarn(NAME, "no valid child node found");
        return null;
      }
      return withDirectives4(cloneVNode(firstLegitNode, attrs), [[forwardRefDirective]]);
    };
  }
});
function findFirstLegitChild(node) {
  if (!node)
    return null;
  const children = node;
  for (const child of children) {
    if (isObject11(child)) {
      switch (child.type) {
        case Comment2:
          continue;
        case Text2:
        case "svg":
          return wrapTextContent(child);
        case Fragment6:
          return findFirstLegitChild(child.children);
        default:
          return child;
      }
    }
    return wrapTextContent(child);
  }
  return null;
}
function wrapTextContent(s2) {
  const ns = useNamespace("only-child");
  return createVNode6("span", {
    "class": ns.e("content")
  }, [s2]);
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/trigger.mjs
var popperTriggerProps = buildProps({
  virtualRef: {
    type: definePropType(Object)
  },
  virtualTriggering: Boolean,
  onMouseenter: {
    type: definePropType(Function)
  },
  onMouseleave: {
    type: definePropType(Function)
  },
  onClick: {
    type: definePropType(Function)
  },
  onKeydown: {
    type: definePropType(Function)
  },
  onFocus: {
    type: definePropType(Function)
  },
  onBlur: {
    type: definePropType(Function)
  },
  onContextmenu: {
    type: definePropType(Function)
  },
  id: String,
  open: Boolean
});
var usePopperTriggerProps = popperTriggerProps;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/trigger2.mjs
var __default__10 = defineComponent15({
  name: "ElPopperTrigger",
  inheritAttrs: false
});
var _sfc_main12 = defineComponent15({
  ...__default__10,
  props: popperTriggerProps,
  setup(__props, { expose }) {
    const props = __props;
    const { role, triggerRef: triggerRef2 } = inject16(POPPER_INJECTION_KEY, void 0);
    useForwardRef(triggerRef2);
    const ariaControls = computed28(() => {
      return ariaHaspopup.value ? props.id : void 0;
    });
    const ariaDescribedby = computed28(() => {
      if (role && role.value === "tooltip") {
        return props.open && props.id ? props.id : void 0;
      }
      return void 0;
    });
    const ariaHaspopup = computed28(() => {
      if (role && role.value !== "tooltip") {
        return role.value;
      }
      return void 0;
    });
    const ariaExpanded = computed28(() => {
      return ariaHaspopup.value ? `${props.open}` : void 0;
    });
    let virtualTriggerAriaStopWatch = void 0;
    onMounted14(() => {
      watch20(() => props.virtualRef, (virtualEl) => {
        if (virtualEl) {
          triggerRef2.value = unrefElement(virtualEl);
        }
      }, {
        immediate: true
      });
      watch20(triggerRef2, (el, prevEl) => {
        virtualTriggerAriaStopWatch == null ? void 0 : virtualTriggerAriaStopWatch();
        virtualTriggerAriaStopWatch = void 0;
        if (isElement2(el)) {
          ;
          [
            "onMouseenter",
            "onMouseleave",
            "onClick",
            "onKeydown",
            "onFocus",
            "onBlur",
            "onContextmenu"
          ].forEach((eventName) => {
            var _a2;
            const handler = props[eventName];
            if (handler) {
              ;
              el.addEventListener(eventName.slice(2).toLowerCase(), handler);
              (_a2 = prevEl == null ? void 0 : prevEl.removeEventListener) == null ? void 0 : _a2.call(prevEl, eventName.slice(2).toLowerCase(), handler);
            }
          });
          virtualTriggerAriaStopWatch = watch20([ariaControls, ariaDescribedby, ariaHaspopup, ariaExpanded], (watches) => {
            ;
            [
              "aria-controls",
              "aria-describedby",
              "aria-haspopup",
              "aria-expanded"
            ].forEach((key, idx) => {
              isNil_default(watches[idx]) ? el.removeAttribute(key) : el.setAttribute(key, watches[idx]);
            });
          }, { immediate: true });
        }
        if (isElement2(prevEl)) {
          ;
          [
            "aria-controls",
            "aria-describedby",
            "aria-haspopup",
            "aria-expanded"
          ].forEach((key) => prevEl.removeAttribute(key));
        }
      }, {
        immediate: true
      });
    });
    onBeforeUnmount9(() => {
      virtualTriggerAriaStopWatch == null ? void 0 : virtualTriggerAriaStopWatch();
      virtualTriggerAriaStopWatch = void 0;
    });
    expose({
      triggerRef: triggerRef2
    });
    return (_ctx, _cache) => {
      return !_ctx.virtualTriggering ? (openBlock12(), createBlock7(unref24(OnlyChild), mergeProps3({ key: 0 }, _ctx.$attrs, {
        "aria-controls": unref24(ariaControls),
        "aria-describedby": unref24(ariaDescribedby),
        "aria-expanded": unref24(ariaExpanded),
        "aria-haspopup": unref24(ariaHaspopup)
      }), {
        default: withCtx6(() => [
          renderSlot10(_ctx.$slots, "default")
        ]),
        _: 3
      }, 16, ["aria-controls", "aria-describedby", "aria-expanded", "aria-haspopup"])) : createCommentVNode6("v-if", true);
    };
  }
});
var ElPopperTrigger = _export_sfc(_sfc_main12, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/trigger.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/content2.mjs
import { defineComponent as defineComponent17, inject as inject18, ref as ref29, provide as provide9, onMounted as onMounted18, watch as watch23, unref as unref28, onBeforeUnmount as onBeforeUnmount12, openBlock as openBlock13, createElementBlock as createElementBlock10, mergeProps as mergeProps4, createVNode as createVNode7, withCtx as withCtx7, renderSlot as renderSlot12 } from "vue";
import { NOOP as NOOP9 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/focus-trap/src/focus-trap.mjs
import { defineComponent as defineComponent16, ref as ref25, provide as provide8, watch as watch21, unref as unref25, nextTick as nextTick8, onMounted as onMounted16, onBeforeUnmount as onBeforeUnmount11, renderSlot as renderSlot11 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/focus-trap/src/utils.mjs
import { ref as ref24, onMounted as onMounted15, onBeforeUnmount as onBeforeUnmount10 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/focus-trap/src/tokens.mjs
var FOCUS_AFTER_TRAPPED = "focus-trap.focus-after-trapped";
var FOCUS_AFTER_RELEASED = "focus-trap.focus-after-released";
var FOCUSOUT_PREVENTED = "focus-trap.focusout-prevented";
var FOCUS_AFTER_TRAPPED_OPTS = {
  cancelable: true,
  bubbles: false
};
var FOCUSOUT_PREVENTED_OPTS = {
  cancelable: true,
  bubbles: false
};
var ON_TRAP_FOCUS_EVT = "focusAfterTrapped";
var ON_RELEASE_FOCUS_EVT = "focusAfterReleased";
var FOCUS_TRAP_INJECTION_KEY = Symbol("elFocusTrap");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/focus-trap/src/utils.mjs
var focusReason = ref24();
var lastUserFocusTimestamp = ref24(0);
var lastAutomatedFocusTimestamp = ref24(0);
var focusReasonUserCount = 0;
var obtainAllFocusableElements2 = (element) => {
  const nodes = [];
  const walker = document.createTreeWalker(element, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 || node === document.activeElement ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
};
var getVisibleElement = (elements, container) => {
  for (const element of elements) {
    if (!isHidden(element, container))
      return element;
  }
};
var isHidden = (element, container) => {
  if (false)
    return false;
  if (getComputedStyle(element).visibility === "hidden")
    return true;
  while (element) {
    if (container && element === container)
      return false;
    if (getComputedStyle(element).display === "none")
      return true;
    element = element.parentElement;
  }
  return false;
};
var getEdges = (container) => {
  const focusable = obtainAllFocusableElements2(container);
  const first = getVisibleElement(focusable, container);
  const last2 = getVisibleElement(focusable.reverse(), container);
  return [first, last2];
};
var isSelectable = (element) => {
  return element instanceof HTMLInputElement && "select" in element;
};
var tryFocus = (element, shouldSelect) => {
  if (element && element.focus) {
    const prevFocusedElement = document.activeElement;
    element.focus({ preventScroll: true });
    lastAutomatedFocusTimestamp.value = window.performance.now();
    if (element !== prevFocusedElement && isSelectable(element) && shouldSelect) {
      element.select();
    }
  }
};
function removeFromStack(list, item) {
  const copy = [...list];
  const idx = list.indexOf(item);
  if (idx !== -1) {
    copy.splice(idx, 1);
  }
  return copy;
}
var createFocusableStack = () => {
  let stack = [];
  const push = (layer) => {
    const currentLayer = stack[0];
    if (currentLayer && layer !== currentLayer) {
      currentLayer.pause();
    }
    stack = removeFromStack(stack, layer);
    stack.unshift(layer);
  };
  const remove2 = (layer) => {
    var _a2, _b;
    stack = removeFromStack(stack, layer);
    (_b = (_a2 = stack[0]) == null ? void 0 : _a2.resume) == null ? void 0 : _b.call(_a2);
  };
  return {
    push,
    remove: remove2
  };
};
var focusFirstDescendant = (elements, shouldSelect = false) => {
  const prevFocusedElement = document.activeElement;
  for (const element of elements) {
    tryFocus(element, shouldSelect);
    if (document.activeElement !== prevFocusedElement)
      return;
  }
};
var focusableStack = createFocusableStack();
var isFocusCausedByUserEvent = () => {
  return lastUserFocusTimestamp.value > lastAutomatedFocusTimestamp.value;
};
var notifyFocusReasonPointer = () => {
  focusReason.value = "pointer";
  lastUserFocusTimestamp.value = window.performance.now();
};
var notifyFocusReasonKeydown = () => {
  focusReason.value = "keyboard";
  lastUserFocusTimestamp.value = window.performance.now();
};
var useFocusReason = () => {
  onMounted15(() => {
    if (focusReasonUserCount === 0) {
      document.addEventListener("mousedown", notifyFocusReasonPointer);
      document.addEventListener("touchstart", notifyFocusReasonPointer);
      document.addEventListener("keydown", notifyFocusReasonKeydown);
    }
    focusReasonUserCount++;
  });
  onBeforeUnmount10(() => {
    focusReasonUserCount--;
    if (focusReasonUserCount <= 0) {
      document.removeEventListener("mousedown", notifyFocusReasonPointer);
      document.removeEventListener("touchstart", notifyFocusReasonPointer);
      document.removeEventListener("keydown", notifyFocusReasonKeydown);
    }
  });
  return {
    focusReason,
    lastUserFocusTimestamp,
    lastAutomatedFocusTimestamp
  };
};
var createFocusOutPreventedEvent = (detail) => {
  return new CustomEvent(FOCUSOUT_PREVENTED, {
    ...FOCUSOUT_PREVENTED_OPTS,
    detail
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/focus-trap/src/focus-trap.mjs
import { isString as isString11 } from "@vue/shared";
var _sfc_main13 = defineComponent16({
  name: "ElFocusTrap",
  inheritAttrs: false,
  props: {
    loop: Boolean,
    trapped: Boolean,
    focusTrapEl: Object,
    focusStartEl: {
      type: [Object, String],
      default: "first"
    }
  },
  emits: [
    ON_TRAP_FOCUS_EVT,
    ON_RELEASE_FOCUS_EVT,
    "focusin",
    "focusout",
    "focusout-prevented",
    "release-requested"
  ],
  setup(props, { emit }) {
    const forwardRef = ref25();
    let lastFocusBeforeTrapped;
    let lastFocusAfterTrapped;
    const { focusReason: focusReason2 } = useFocusReason();
    useEscapeKeydown((event) => {
      if (props.trapped && !focusLayer.paused) {
        emit("release-requested", event);
      }
    });
    const focusLayer = {
      paused: false,
      pause() {
        this.paused = true;
      },
      resume() {
        this.paused = false;
      }
    };
    const onKeydown = (e) => {
      if (!props.loop && !props.trapped)
        return;
      if (focusLayer.paused)
        return;
      const { key, altKey, ctrlKey, metaKey, currentTarget, shiftKey } = e;
      const { loop } = props;
      const isTabbing = key === EVENT_CODE.tab && !altKey && !ctrlKey && !metaKey;
      const currentFocusingEl = document.activeElement;
      if (isTabbing && currentFocusingEl) {
        const container = currentTarget;
        const [first, last2] = getEdges(container);
        const isTabbable = first && last2;
        if (!isTabbable) {
          if (currentFocusingEl === container) {
            const focusoutPreventedEvent = createFocusOutPreventedEvent({
              focusReason: focusReason2.value
            });
            emit("focusout-prevented", focusoutPreventedEvent);
            if (!focusoutPreventedEvent.defaultPrevented) {
              e.preventDefault();
            }
          }
        } else {
          if (!shiftKey && currentFocusingEl === last2) {
            const focusoutPreventedEvent = createFocusOutPreventedEvent({
              focusReason: focusReason2.value
            });
            emit("focusout-prevented", focusoutPreventedEvent);
            if (!focusoutPreventedEvent.defaultPrevented) {
              e.preventDefault();
              if (loop)
                tryFocus(first, true);
            }
          } else if (shiftKey && [first, container].includes(currentFocusingEl)) {
            const focusoutPreventedEvent = createFocusOutPreventedEvent({
              focusReason: focusReason2.value
            });
            emit("focusout-prevented", focusoutPreventedEvent);
            if (!focusoutPreventedEvent.defaultPrevented) {
              e.preventDefault();
              if (loop)
                tryFocus(last2, true);
            }
          }
        }
      }
    };
    provide8(FOCUS_TRAP_INJECTION_KEY, {
      focusTrapRef: forwardRef,
      onKeydown
    });
    watch21(() => props.focusTrapEl, (focusTrapEl) => {
      if (focusTrapEl) {
        forwardRef.value = focusTrapEl;
      }
    }, { immediate: true });
    watch21([forwardRef], ([forwardRef2], [oldForwardRef]) => {
      if (forwardRef2) {
        forwardRef2.addEventListener("keydown", onKeydown);
        forwardRef2.addEventListener("focusin", onFocusIn);
        forwardRef2.addEventListener("focusout", onFocusOut);
      }
      if (oldForwardRef) {
        oldForwardRef.removeEventListener("keydown", onKeydown);
        oldForwardRef.removeEventListener("focusin", onFocusIn);
        oldForwardRef.removeEventListener("focusout", onFocusOut);
      }
    });
    const trapOnFocus = (e) => {
      emit(ON_TRAP_FOCUS_EVT, e);
    };
    const releaseOnFocus = (e) => emit(ON_RELEASE_FOCUS_EVT, e);
    const onFocusIn = (e) => {
      const trapContainer = unref25(forwardRef);
      if (!trapContainer)
        return;
      const target2 = e.target;
      const relatedTarget = e.relatedTarget;
      const isFocusedInTrap = target2 && trapContainer.contains(target2);
      if (!props.trapped) {
        const isPrevFocusedInTrap = relatedTarget && trapContainer.contains(relatedTarget);
        if (!isPrevFocusedInTrap) {
          lastFocusBeforeTrapped = relatedTarget;
        }
      }
      if (isFocusedInTrap)
        emit("focusin", e);
      if (focusLayer.paused)
        return;
      if (props.trapped) {
        if (isFocusedInTrap) {
          lastFocusAfterTrapped = target2;
        } else {
          tryFocus(lastFocusAfterTrapped, true);
        }
      }
    };
    const onFocusOut = (e) => {
      const trapContainer = unref25(forwardRef);
      if (focusLayer.paused || !trapContainer)
        return;
      if (props.trapped) {
        const relatedTarget = e.relatedTarget;
        if (!isNil_default(relatedTarget) && !trapContainer.contains(relatedTarget)) {
          setTimeout(() => {
            if (!focusLayer.paused && props.trapped) {
              const focusoutPreventedEvent = createFocusOutPreventedEvent({
                focusReason: focusReason2.value
              });
              emit("focusout-prevented", focusoutPreventedEvent);
              if (!focusoutPreventedEvent.defaultPrevented) {
                tryFocus(lastFocusAfterTrapped, true);
              }
            }
          }, 0);
        }
      } else {
        const target2 = e.target;
        const isFocusedInTrap = target2 && trapContainer.contains(target2);
        if (!isFocusedInTrap)
          emit("focusout", e);
      }
    };
    async function startTrap() {
      await nextTick8();
      const trapContainer = unref25(forwardRef);
      if (trapContainer) {
        focusableStack.push(focusLayer);
        const prevFocusedElement = trapContainer.contains(document.activeElement) ? lastFocusBeforeTrapped : document.activeElement;
        lastFocusBeforeTrapped = prevFocusedElement;
        const isPrevFocusContained = trapContainer.contains(prevFocusedElement);
        if (!isPrevFocusContained) {
          const focusEvent = new Event(FOCUS_AFTER_TRAPPED, FOCUS_AFTER_TRAPPED_OPTS);
          trapContainer.addEventListener(FOCUS_AFTER_TRAPPED, trapOnFocus);
          trapContainer.dispatchEvent(focusEvent);
          if (!focusEvent.defaultPrevented) {
            nextTick8(() => {
              let focusStartEl = props.focusStartEl;
              if (!isString11(focusStartEl)) {
                tryFocus(focusStartEl);
                if (document.activeElement !== focusStartEl) {
                  focusStartEl = "first";
                }
              }
              if (focusStartEl === "first") {
                focusFirstDescendant(obtainAllFocusableElements2(trapContainer), true);
              }
              if (document.activeElement === prevFocusedElement || focusStartEl === "container") {
                tryFocus(trapContainer);
              }
            });
          }
        }
      }
    }
    function stopTrap() {
      const trapContainer = unref25(forwardRef);
      if (trapContainer) {
        trapContainer.removeEventListener(FOCUS_AFTER_TRAPPED, trapOnFocus);
        const releasedEvent = new CustomEvent(FOCUS_AFTER_RELEASED, {
          ...FOCUS_AFTER_TRAPPED_OPTS,
          detail: {
            focusReason: focusReason2.value
          }
        });
        trapContainer.addEventListener(FOCUS_AFTER_RELEASED, releaseOnFocus);
        trapContainer.dispatchEvent(releasedEvent);
        if (!releasedEvent.defaultPrevented && (focusReason2.value == "keyboard" || !isFocusCausedByUserEvent() || trapContainer.contains(document.activeElement))) {
          tryFocus(lastFocusBeforeTrapped != null ? lastFocusBeforeTrapped : document.body);
        }
        trapContainer.removeEventListener(FOCUS_AFTER_RELEASED, trapOnFocus);
        focusableStack.remove(focusLayer);
      }
    }
    onMounted16(() => {
      if (props.trapped) {
        startTrap();
      }
      watch21(() => props.trapped, (trapped) => {
        if (trapped) {
          startTrap();
        } else {
          stopTrap();
        }
      });
    });
    onBeforeUnmount11(() => {
      if (props.trapped) {
        stopTrap();
      }
    });
    return {
      onKeydown
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return renderSlot11(_ctx.$slots, "default", { handleKeydown: _ctx.onKeydown });
}
var ElFocusTrap = _export_sfc(_sfc_main13, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/focus-trap/src/focus-trap.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/content.mjs
var POSITIONING_STRATEGIES = ["fixed", "absolute"];
var popperCoreConfigProps = buildProps({
  boundariesPadding: {
    type: Number,
    default: 0
  },
  fallbackPlacements: {
    type: definePropType(Array),
    default: void 0
  },
  gpuAcceleration: {
    type: Boolean,
    default: true
  },
  offset: {
    type: Number,
    default: 12
  },
  placement: {
    type: String,
    values: Ee,
    default: "bottom"
  },
  popperOptions: {
    type: definePropType(Object),
    default: () => ({})
  },
  strategy: {
    type: String,
    values: POSITIONING_STRATEGIES,
    default: "absolute"
  }
});
var popperContentProps = buildProps({
  ...popperCoreConfigProps,
  id: String,
  style: {
    type: definePropType([String, Array, Object])
  },
  className: {
    type: definePropType([String, Array, Object])
  },
  effect: {
    type: String,
    default: "dark"
  },
  visible: Boolean,
  enterable: {
    type: Boolean,
    default: true
  },
  pure: Boolean,
  focusOnShow: {
    type: Boolean,
    default: false
  },
  trapping: {
    type: Boolean,
    default: false
  },
  popperClass: {
    type: definePropType([String, Array, Object])
  },
  popperStyle: {
    type: definePropType([String, Array, Object])
  },
  referenceEl: {
    type: definePropType(Object)
  },
  triggerTargetEl: {
    type: definePropType(Object)
  },
  stopPopperMouseEvent: {
    type: Boolean,
    default: true
  },
  ariaLabel: {
    type: String,
    default: void 0
  },
  virtualTriggering: Boolean,
  zIndex: Number
});
var popperContentEmits = {
  mouseenter: (evt) => evt instanceof MouseEvent,
  mouseleave: (evt) => evt instanceof MouseEvent,
  focus: () => true,
  blur: () => true,
  close: () => true
};
var usePopperCoreConfigProps = popperCoreConfigProps;
var usePopperContentProps = popperContentProps;
var usePopperContentEmits = popperContentEmits;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/composables/use-content.mjs
import { inject as inject17, ref as ref26, computed as computed29, unref as unref26, watch as watch22, onMounted as onMounted17 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/utils.mjs
var buildPopperOptions = (props, modifiers = []) => {
  const { placement, strategy, popperOptions } = props;
  const options = {
    placement,
    strategy,
    ...popperOptions,
    modifiers: [...genModifiers(props), ...modifiers]
  };
  deriveExtraModifiers(options, popperOptions == null ? void 0 : popperOptions.modifiers);
  return options;
};
var unwrapMeasurableEl = ($el) => {
  if (!isClient)
    return;
  return unrefElement($el);
};
function genModifiers(options) {
  const { offset: offset2, gpuAcceleration, fallbackPlacements } = options;
  return [
    {
      name: "offset",
      options: {
        offset: [0, offset2 != null ? offset2 : 12]
      }
    },
    {
      name: "preventOverflow",
      options: {
        padding: {
          top: 2,
          bottom: 2,
          left: 5,
          right: 5
        }
      }
    },
    {
      name: "flip",
      options: {
        padding: 5,
        fallbackPlacements
      }
    },
    {
      name: "computeStyles",
      options: {
        gpuAcceleration
      }
    }
  ];
}
function deriveExtraModifiers(options, modifiers) {
  if (modifiers) {
    options.modifiers = [...options.modifiers, ...modifiers != null ? modifiers : []];
  }
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/composables/use-content.mjs
var DEFAULT_ARROW_OFFSET = 0;
var usePopperContent = (props) => {
  const { popperInstanceRef, contentRef, triggerRef: triggerRef2, role } = inject17(POPPER_INJECTION_KEY, void 0);
  const arrowRef = ref26();
  const arrowOffset = ref26();
  const eventListenerModifier = computed29(() => {
    return {
      name: "eventListeners",
      enabled: !!props.visible
    };
  });
  const arrowModifier = computed29(() => {
    var _a2;
    const arrowEl = unref26(arrowRef);
    const offset2 = (_a2 = unref26(arrowOffset)) != null ? _a2 : DEFAULT_ARROW_OFFSET;
    return {
      name: "arrow",
      enabled: !isUndefined_default(arrowEl),
      options: {
        element: arrowEl,
        padding: offset2
      }
    };
  });
  const options = computed29(() => {
    return {
      onFirstUpdate: () => {
        update2();
      },
      ...buildPopperOptions(props, [
        unref26(arrowModifier),
        unref26(eventListenerModifier)
      ])
    };
  });
  const computedReference = computed29(() => unwrapMeasurableEl(props.referenceEl) || unref26(triggerRef2));
  const { attributes: attributes2, state, styles, update: update2, forceUpdate, instanceRef } = usePopper(computedReference, contentRef, options);
  watch22(instanceRef, (instance) => popperInstanceRef.value = instance);
  onMounted17(() => {
    watch22(() => {
      var _a2;
      return (_a2 = unref26(computedReference)) == null ? void 0 : _a2.getBoundingClientRect();
    }, () => {
      update2();
    });
  });
  return {
    attributes: attributes2,
    arrowRef,
    contentRef,
    instanceRef,
    state,
    styles,
    role,
    forceUpdate,
    update: update2
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/composables/use-content-dom.mjs
import { computed as computed30, unref as unref27, ref as ref27 } from "vue";
var usePopperContentDOM = (props, {
  attributes: attributes2,
  styles,
  role
}) => {
  const { nextZIndex } = useZIndex();
  const ns = useNamespace("popper");
  const contentAttrs = computed30(() => unref27(attributes2).popper);
  const contentZIndex = ref27(props.zIndex || nextZIndex());
  const contentClass = computed30(() => [
    ns.b(),
    ns.is("pure", props.pure),
    ns.is(props.effect),
    props.popperClass
  ]);
  const contentStyle = computed30(() => {
    return [
      { zIndex: unref27(contentZIndex) },
      unref27(styles).popper,
      props.popperStyle || {}
    ];
  });
  const ariaModal = computed30(() => role.value === "dialog" ? "false" : void 0);
  const arrowStyle = computed30(() => unref27(styles).arrow || {});
  const updateZIndex = () => {
    contentZIndex.value = props.zIndex || nextZIndex();
  };
  return {
    ariaModal,
    arrowStyle,
    contentAttrs,
    contentClass,
    contentStyle,
    contentZIndex,
    updateZIndex
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/composables/use-focus-trap.mjs
import { ref as ref28 } from "vue";
var usePopperContentFocusTrap = (props, emit) => {
  const trapped = ref28(false);
  const focusStartRef = ref28();
  const onFocusAfterTrapped = () => {
    emit("focus");
  };
  const onFocusAfterReleased = (event) => {
    var _a2;
    if (((_a2 = event.detail) == null ? void 0 : _a2.focusReason) !== "pointer") {
      focusStartRef.value = "first";
      emit("blur");
    }
  };
  const onFocusInTrap = (event) => {
    if (props.visible && !trapped.value) {
      if (event.target) {
        focusStartRef.value = event.target;
      }
      trapped.value = true;
    }
  };
  const onFocusoutPrevented = (event) => {
    if (!props.trapping) {
      if (event.detail.focusReason === "pointer") {
        event.preventDefault();
      }
      trapped.value = false;
    }
  };
  const onReleaseRequested = () => {
    trapped.value = false;
    emit("close");
  };
  return {
    focusStartRef,
    trapped,
    onFocusAfterReleased,
    onFocusAfterTrapped,
    onFocusInTrap,
    onFocusoutPrevented,
    onReleaseRequested
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/src/content2.mjs
var __default__11 = defineComponent17({
  name: "ElPopperContent"
});
var _sfc_main14 = defineComponent17({
  ...__default__11,
  props: popperContentProps,
  emits: popperContentEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const {
      focusStartRef,
      trapped,
      onFocusAfterReleased,
      onFocusAfterTrapped,
      onFocusInTrap,
      onFocusoutPrevented,
      onReleaseRequested
    } = usePopperContentFocusTrap(props, emit);
    const { attributes: attributes2, arrowRef, contentRef, styles, instanceRef, role, update: update2 } = usePopperContent(props);
    const {
      ariaModal,
      arrowStyle,
      contentAttrs,
      contentClass,
      contentStyle,
      updateZIndex
    } = usePopperContentDOM(props, {
      styles,
      attributes: attributes2,
      role
    });
    const formItemContext = inject18(formItemContextKey, void 0);
    const arrowOffset = ref29();
    provide9(POPPER_CONTENT_INJECTION_KEY, {
      arrowStyle,
      arrowRef,
      arrowOffset
    });
    if (formItemContext && (formItemContext.addInputId || formItemContext.removeInputId)) {
      provide9(formItemContextKey, {
        ...formItemContext,
        addInputId: NOOP9,
        removeInputId: NOOP9
      });
    }
    let triggerTargetAriaStopWatch = void 0;
    const updatePopper = (shouldUpdateZIndex = true) => {
      update2();
      shouldUpdateZIndex && updateZIndex();
    };
    const togglePopperAlive = () => {
      updatePopper(false);
      if (props.visible && props.focusOnShow) {
        trapped.value = true;
      } else if (props.visible === false) {
        trapped.value = false;
      }
    };
    onMounted18(() => {
      watch23(() => props.triggerTargetEl, (triggerTargetEl, prevTriggerTargetEl) => {
        triggerTargetAriaStopWatch == null ? void 0 : triggerTargetAriaStopWatch();
        triggerTargetAriaStopWatch = void 0;
        const el = unref28(triggerTargetEl || contentRef.value);
        const prevEl = unref28(prevTriggerTargetEl || contentRef.value);
        if (isElement2(el)) {
          triggerTargetAriaStopWatch = watch23([role, () => props.ariaLabel, ariaModal, () => props.id], (watches) => {
            ;
            ["role", "aria-label", "aria-modal", "id"].forEach((key, idx) => {
              isNil_default(watches[idx]) ? el.removeAttribute(key) : el.setAttribute(key, watches[idx]);
            });
          }, { immediate: true });
        }
        if (prevEl !== el && isElement2(prevEl)) {
          ;
          ["role", "aria-label", "aria-modal", "id"].forEach((key) => {
            prevEl.removeAttribute(key);
          });
        }
      }, { immediate: true });
      watch23(() => props.visible, togglePopperAlive, { immediate: true });
    });
    onBeforeUnmount12(() => {
      triggerTargetAriaStopWatch == null ? void 0 : triggerTargetAriaStopWatch();
      triggerTargetAriaStopWatch = void 0;
    });
    expose({
      popperContentRef: contentRef,
      popperInstanceRef: instanceRef,
      updatePopper,
      contentStyle
    });
    return (_ctx, _cache) => {
      return openBlock13(), createElementBlock10("div", mergeProps4({
        ref_key: "contentRef",
        ref: contentRef
      }, unref28(contentAttrs), {
        style: unref28(contentStyle),
        class: unref28(contentClass),
        tabindex: "-1",
        onMouseenter: _cache[0] || (_cache[0] = (e) => _ctx.$emit("mouseenter", e)),
        onMouseleave: _cache[1] || (_cache[1] = (e) => _ctx.$emit("mouseleave", e))
      }), [
        createVNode7(unref28(ElFocusTrap), {
          trapped: unref28(trapped),
          "trap-on-focus-in": true,
          "focus-trap-el": unref28(contentRef),
          "focus-start-el": unref28(focusStartRef),
          onFocusAfterTrapped: unref28(onFocusAfterTrapped),
          onFocusAfterReleased: unref28(onFocusAfterReleased),
          onFocusin: unref28(onFocusInTrap),
          onFocusoutPrevented: unref28(onFocusoutPrevented),
          onReleaseRequested: unref28(onReleaseRequested)
        }, {
          default: withCtx7(() => [
            renderSlot12(_ctx.$slots, "default")
          ]),
          _: 3
        }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusin", "onFocusoutPrevented", "onReleaseRequested"])
      ], 16);
    };
  }
});
var ElPopperContent = _export_sfc(_sfc_main14, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/content.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popper/index.mjs
var ElPopper = withInstall(Popper);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/constants.mjs
var TOOLTIP_INJECTION_KEY = Symbol("elTooltip");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/content.mjs
var useTooltipContentProps = buildProps({
  ...useDelayedToggleProps,
  ...popperContentProps,
  appendTo: {
    type: definePropType([String, Object])
  },
  content: {
    type: String,
    default: ""
  },
  rawContent: {
    type: Boolean,
    default: false
  },
  persistent: Boolean,
  ariaLabel: String,
  visible: {
    type: definePropType(Boolean),
    default: null
  },
  transition: String,
  teleported: {
    type: Boolean,
    default: true
  },
  disabled: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/trigger.mjs
var useTooltipTriggerProps = buildProps({
  ...popperTriggerProps,
  disabled: Boolean,
  trigger: {
    type: definePropType([String, Array]),
    default: "hover"
  },
  triggerKeys: {
    type: definePropType(Array),
    default: () => [EVENT_CODE.enter, EVENT_CODE.space]
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/tooltip.mjs
var {
  useModelToggleProps: useTooltipModelToggleProps,
  useModelToggleEmits: useTooltipModelToggleEmits,
  useModelToggle: useTooltipModelToggle
} = createModelToggleComposable("visible");
var useTooltipProps = buildProps({
  ...popperProps,
  ...useTooltipModelToggleProps,
  ...useTooltipContentProps,
  ...useTooltipTriggerProps,
  ...popperArrowProps,
  showArrow: {
    type: Boolean,
    default: true
  }
});
var tooltipEmits = [
  ...useTooltipModelToggleEmits,
  "before-show",
  "before-hide",
  "show",
  "hide",
  "open",
  "close"
];

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/trigger2.mjs
import { defineComponent as defineComponent18, inject as inject19, ref as ref30, unref as unref30, toRef as toRef5, openBlock as openBlock14, createBlock as createBlock8, normalizeClass as normalizeClass9, withCtx as withCtx8, renderSlot as renderSlot13 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/utils.mjs
import { unref as unref29 } from "vue";
import { isArray as isArray8 } from "@vue/shared";
var isTriggerType = (trigger2, type4) => {
  if (isArray8(trigger2)) {
    return trigger2.includes(type4);
  }
  return trigger2 === type4;
};
var whenTrigger = (trigger2, type4, handler) => {
  return (e) => {
    isTriggerType(unref29(trigger2), type4) && handler(e);
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/trigger2.mjs
var __default__12 = defineComponent18({
  name: "ElTooltipTrigger"
});
var _sfc_main15 = defineComponent18({
  ...__default__12,
  props: useTooltipTriggerProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = useNamespace("tooltip");
    const { controlled, id, open, onOpen, onClose, onToggle } = inject19(TOOLTIP_INJECTION_KEY, void 0);
    const triggerRef2 = ref30(null);
    const stopWhenControlledOrDisabled = () => {
      if (unref30(controlled) || props.disabled) {
        return true;
      }
    };
    const trigger2 = toRef5(props, "trigger");
    const onMouseenter = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger2, "hover", onOpen));
    const onMouseleave = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger2, "hover", onClose));
    const onClick = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger2, "click", (e) => {
      if (e.button === 0) {
        onToggle(e);
      }
    }));
    const onFocus = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger2, "focus", onOpen));
    const onBlur = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger2, "focus", onClose));
    const onContextMenu = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger2, "contextmenu", (e) => {
      e.preventDefault();
      onToggle(e);
    }));
    const onKeydown = composeEventHandlers(stopWhenControlledOrDisabled, (e) => {
      const { code } = e;
      if (props.triggerKeys.includes(code)) {
        e.preventDefault();
        onToggle(e);
      }
    });
    expose({
      triggerRef: triggerRef2
    });
    return (_ctx, _cache) => {
      return openBlock14(), createBlock8(unref30(ElPopperTrigger), {
        id: unref30(id),
        "virtual-ref": _ctx.virtualRef,
        open: unref30(open),
        "virtual-triggering": _ctx.virtualTriggering,
        class: normalizeClass9(unref30(ns).e("trigger")),
        onBlur: unref30(onBlur),
        onClick: unref30(onClick),
        onContextmenu: unref30(onContextMenu),
        onFocus: unref30(onFocus),
        onMouseenter: unref30(onMouseenter),
        onMouseleave: unref30(onMouseleave),
        onKeydown: unref30(onKeydown)
      }, {
        default: withCtx8(() => [
          renderSlot13(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "virtual-ref", "open", "virtual-triggering", "class", "onBlur", "onClick", "onContextmenu", "onFocus", "onMouseenter", "onMouseleave", "onKeydown"]);
    };
  }
});
var ElTooltipTrigger = _export_sfc(_sfc_main15, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/trigger.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/content2.mjs
import { defineComponent as defineComponent19, ref as ref31, inject as inject20, computed as computed31, onBeforeUnmount as onBeforeUnmount13, unref as unref31, watch as watch24, openBlock as openBlock15, createBlock as createBlock9, Teleport as Teleport2, createVNode as createVNode8, Transition as Transition3, withCtx as withCtx9, withDirectives as withDirectives5, mergeProps as mergeProps5, renderSlot as renderSlot14, createCommentVNode as createCommentVNode7, vShow as vShow4 } from "vue";
var __default__13 = defineComponent19({
  name: "ElTooltipContent",
  inheritAttrs: false
});
var _sfc_main16 = defineComponent19({
  ...__default__13,
  props: useTooltipContentProps,
  setup(__props, { expose }) {
    const props = __props;
    const { selector } = usePopperContainerId();
    const ns = useNamespace("tooltip");
    const contentRef = ref31(null);
    const destroyed = ref31(false);
    const {
      controlled,
      id,
      open,
      trigger: trigger2,
      onClose,
      onOpen,
      onShow,
      onHide,
      onBeforeShow,
      onBeforeHide
    } = inject20(TOOLTIP_INJECTION_KEY, void 0);
    const transitionClass = computed31(() => {
      return props.transition || `${ns.namespace.value}-fade-in-linear`;
    });
    const persistentRef = computed31(() => {
      if (false) {
        return true;
      }
      return props.persistent;
    });
    onBeforeUnmount13(() => {
      destroyed.value = true;
    });
    const shouldRender = computed31(() => {
      return unref31(persistentRef) ? true : unref31(open);
    });
    const shouldShow = computed31(() => {
      return props.disabled ? false : unref31(open);
    });
    const appendTo = computed31(() => {
      return props.appendTo || selector.value;
    });
    const contentStyle = computed31(() => {
      var _a2;
      return (_a2 = props.style) != null ? _a2 : {};
    });
    const ariaHidden = computed31(() => !unref31(open));
    const onTransitionLeave = () => {
      onHide();
    };
    const stopWhenControlled = () => {
      if (unref31(controlled))
        return true;
    };
    const onContentEnter = composeEventHandlers(stopWhenControlled, () => {
      if (props.enterable && unref31(trigger2) === "hover") {
        onOpen();
      }
    });
    const onContentLeave = composeEventHandlers(stopWhenControlled, () => {
      if (unref31(trigger2) === "hover") {
        onClose();
      }
    });
    const onBeforeEnter = () => {
      var _a2, _b;
      (_b = (_a2 = contentRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
      onBeforeShow == null ? void 0 : onBeforeShow();
    };
    const onBeforeLeave = () => {
      onBeforeHide == null ? void 0 : onBeforeHide();
    };
    const onAfterShow = () => {
      onShow();
      stopHandle = onClickOutside(computed31(() => {
        var _a2;
        return (_a2 = contentRef.value) == null ? void 0 : _a2.popperContentRef;
      }), () => {
        if (unref31(controlled))
          return;
        const $trigger = unref31(trigger2);
        if ($trigger !== "hover") {
          onClose();
        }
      });
    };
    const onBlur = () => {
      if (!props.virtualTriggering) {
        onClose();
      }
    };
    let stopHandle;
    watch24(() => unref31(open), (val) => {
      if (!val) {
        stopHandle == null ? void 0 : stopHandle();
      }
    }, {
      flush: "post"
    });
    watch24(() => props.content, () => {
      var _a2, _b;
      (_b = (_a2 = contentRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
    });
    expose({
      contentRef
    });
    return (_ctx, _cache) => {
      return openBlock15(), createBlock9(Teleport2, {
        disabled: !_ctx.teleported,
        to: unref31(appendTo)
      }, [
        createVNode8(Transition3, {
          name: unref31(transitionClass),
          onAfterLeave: onTransitionLeave,
          onBeforeEnter,
          onAfterEnter: onAfterShow,
          onBeforeLeave
        }, {
          default: withCtx9(() => [
            unref31(shouldRender) ? withDirectives5((openBlock15(), createBlock9(unref31(ElPopperContent), mergeProps5({
              key: 0,
              id: unref31(id),
              ref_key: "contentRef",
              ref: contentRef
            }, _ctx.$attrs, {
              "aria-label": _ctx.ariaLabel,
              "aria-hidden": unref31(ariaHidden),
              "boundaries-padding": _ctx.boundariesPadding,
              "fallback-placements": _ctx.fallbackPlacements,
              "gpu-acceleration": _ctx.gpuAcceleration,
              offset: _ctx.offset,
              placement: _ctx.placement,
              "popper-options": _ctx.popperOptions,
              strategy: _ctx.strategy,
              effect: _ctx.effect,
              enterable: _ctx.enterable,
              pure: _ctx.pure,
              "popper-class": _ctx.popperClass,
              "popper-style": [_ctx.popperStyle, unref31(contentStyle)],
              "reference-el": _ctx.referenceEl,
              "trigger-target-el": _ctx.triggerTargetEl,
              visible: unref31(shouldShow),
              "z-index": _ctx.zIndex,
              onMouseenter: unref31(onContentEnter),
              onMouseleave: unref31(onContentLeave),
              onBlur,
              onClose: unref31(onClose)
            }), {
              default: withCtx9(() => [
                !destroyed.value ? renderSlot14(_ctx.$slots, "default", { key: 0 }) : createCommentVNode7("v-if", true)
              ]),
              _: 3
            }, 16, ["id", "aria-label", "aria-hidden", "boundaries-padding", "fallback-placements", "gpu-acceleration", "offset", "placement", "popper-options", "strategy", "effect", "enterable", "pure", "popper-class", "popper-style", "reference-el", "trigger-target-el", "visible", "z-index", "onMouseenter", "onMouseleave", "onClose"])), [
              [vShow4, unref31(shouldShow)]
            ]) : createCommentVNode7("v-if", true)
          ]),
          _: 3
        }, 8, ["name"])
      ], 8, ["disabled", "to"]);
    };
  }
});
var ElTooltipContent = _export_sfc(_sfc_main16, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/content.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/src/tooltip2.mjs
var _hoisted_13 = ["innerHTML"];
var _hoisted_22 = { key: 1 };
var __default__14 = defineComponent20({
  name: "ElTooltip"
});
var _sfc_main17 = defineComponent20({
  ...__default__14,
  props: useTooltipProps,
  emits: tooltipEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    usePopperContainer();
    const id = useId();
    const popperRef = ref32();
    const contentRef = ref32();
    const updatePopper = () => {
      var _a2;
      const popperComponent = unref32(popperRef);
      if (popperComponent) {
        (_a2 = popperComponent.popperInstanceRef) == null ? void 0 : _a2.update();
      }
    };
    const open = ref32(false);
    const toggleReason = ref32();
    const { show, hide: hide2, hasUpdateHandler } = useTooltipModelToggle({
      indicator: open,
      toggleReason
    });
    const { onOpen, onClose } = useDelayedToggle({
      showAfter: toRef6(props, "showAfter"),
      hideAfter: toRef6(props, "hideAfter"),
      autoClose: toRef6(props, "autoClose"),
      open: show,
      close: hide2
    });
    const controlled = computed32(() => isBoolean2(props.visible) && !hasUpdateHandler.value);
    provide10(TOOLTIP_INJECTION_KEY, {
      controlled,
      id,
      open: readonly4(open),
      trigger: toRef6(props, "trigger"),
      onOpen: (event) => {
        onOpen(event);
      },
      onClose: (event) => {
        onClose(event);
      },
      onToggle: (event) => {
        if (unref32(open)) {
          onClose(event);
        } else {
          onOpen(event);
        }
      },
      onShow: () => {
        emit("show", toggleReason.value);
      },
      onHide: () => {
        emit("hide", toggleReason.value);
      },
      onBeforeShow: () => {
        emit("before-show", toggleReason.value);
      },
      onBeforeHide: () => {
        emit("before-hide", toggleReason.value);
      },
      updatePopper
    });
    watch25(() => props.disabled, (disabled) => {
      if (disabled && open.value) {
        open.value = false;
      }
    });
    const isFocusInsideContent = () => {
      var _a2, _b;
      const popperContent = (_b = (_a2 = contentRef.value) == null ? void 0 : _a2.contentRef) == null ? void 0 : _b.popperContentRef;
      return popperContent && popperContent.contains(document.activeElement);
    };
    onDeactivated(() => open.value && hide2());
    expose({
      popperRef,
      contentRef,
      isFocusInsideContent,
      updatePopper,
      onOpen,
      onClose,
      hide: hide2
    });
    return (_ctx, _cache) => {
      return openBlock16(), createBlock10(unref32(ElPopper), {
        ref_key: "popperRef",
        ref: popperRef,
        role: _ctx.role
      }, {
        default: withCtx10(() => [
          createVNode9(ElTooltipTrigger, {
            disabled: _ctx.disabled,
            trigger: _ctx.trigger,
            "trigger-keys": _ctx.triggerKeys,
            "virtual-ref": _ctx.virtualRef,
            "virtual-triggering": _ctx.virtualTriggering
          }, {
            default: withCtx10(() => [
              _ctx.$slots.default ? renderSlot15(_ctx.$slots, "default", { key: 0 }) : createCommentVNode8("v-if", true)
            ]),
            _: 3
          }, 8, ["disabled", "trigger", "trigger-keys", "virtual-ref", "virtual-triggering"]),
          createVNode9(ElTooltipContent, {
            ref_key: "contentRef",
            ref: contentRef,
            "aria-label": _ctx.ariaLabel,
            "boundaries-padding": _ctx.boundariesPadding,
            content: _ctx.content,
            disabled: _ctx.disabled,
            effect: _ctx.effect,
            enterable: _ctx.enterable,
            "fallback-placements": _ctx.fallbackPlacements,
            "hide-after": _ctx.hideAfter,
            "gpu-acceleration": _ctx.gpuAcceleration,
            offset: _ctx.offset,
            persistent: _ctx.persistent,
            "popper-class": _ctx.popperClass,
            "popper-style": _ctx.popperStyle,
            placement: _ctx.placement,
            "popper-options": _ctx.popperOptions,
            pure: _ctx.pure,
            "raw-content": _ctx.rawContent,
            "reference-el": _ctx.referenceEl,
            "trigger-target-el": _ctx.triggerTargetEl,
            "show-after": _ctx.showAfter,
            strategy: _ctx.strategy,
            teleported: _ctx.teleported,
            transition: _ctx.transition,
            "virtual-triggering": _ctx.virtualTriggering,
            "z-index": _ctx.zIndex,
            "append-to": _ctx.appendTo
          }, {
            default: withCtx10(() => [
              renderSlot15(_ctx.$slots, "content", {}, () => [
                _ctx.rawContent ? (openBlock16(), createElementBlock11("span", {
                  key: 0,
                  innerHTML: _ctx.content
                }, null, 8, _hoisted_13)) : (openBlock16(), createElementBlock11("span", _hoisted_22, toDisplayString4(_ctx.content), 1))
              ]),
              _ctx.showArrow ? (openBlock16(), createBlock10(unref32(ElPopperArrow), {
                key: 0,
                "arrow-offset": _ctx.arrowOffset
              }, null, 8, ["arrow-offset"])) : createCommentVNode8("v-if", true)
            ]),
            _: 3
          }, 8, ["aria-label", "boundaries-padding", "content", "disabled", "effect", "enterable", "fallback-placements", "hide-after", "gpu-acceleration", "offset", "persistent", "popper-class", "popper-style", "placement", "popper-options", "pure", "raw-content", "reference-el", "trigger-target-el", "show-after", "strategy", "teleported", "transition", "virtual-triggering", "z-index", "append-to"])
        ]),
        _: 3
      }, 8, ["role"]);
    };
  }
});
var Tooltip = _export_sfc(_sfc_main17, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/tooltip.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip/index.mjs
var ElTooltip = withInstall(Tooltip);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/autocomplete/src/autocomplete.mjs
import { NOOP as NOOP10, isString as isString12, isObject as isObject12 } from "@vue/shared";
var autocompleteProps = buildProps({
  valueKey: {
    type: String,
    default: "value"
  },
  modelValue: {
    type: [String, Number],
    default: ""
  },
  debounce: {
    type: Number,
    default: 300
  },
  placement: {
    type: definePropType(String),
    values: [
      "top",
      "top-start",
      "top-end",
      "bottom",
      "bottom-start",
      "bottom-end"
    ],
    default: "bottom-start"
  },
  fetchSuggestions: {
    type: definePropType([Function, Array]),
    default: NOOP10
  },
  popperClass: {
    type: String,
    default: ""
  },
  triggerOnFocus: {
    type: Boolean,
    default: true
  },
  selectWhenUnmatched: {
    type: Boolean,
    default: false
  },
  hideLoading: {
    type: Boolean,
    default: false
  },
  label: {
    type: String
  },
  teleported: useTooltipContentProps.teleported,
  highlightFirstItem: {
    type: Boolean,
    default: false
  },
  fitInputWidth: {
    type: Boolean,
    default: false
  },
  clearable: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  name: String
});
var autocompleteEmits = {
  [UPDATE_MODEL_EVENT]: (value) => isString12(value),
  [INPUT_EVENT]: (value) => isString12(value),
  [CHANGE_EVENT]: (value) => isString12(value),
  focus: (evt) => evt instanceof FocusEvent,
  blur: (evt) => evt instanceof FocusEvent,
  clear: () => true,
  select: (item) => isObject12(item)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/autocomplete/src/autocomplete2.mjs
import { isArray as isArray9 } from "@vue/shared";
var _hoisted_14 = ["aria-expanded", "aria-owns"];
var _hoisted_23 = { key: 0 };
var _hoisted_32 = ["id", "aria-selected", "onClick"];
var COMPONENT_NAME6 = "ElAutocomplete";
var __default__15 = defineComponent21({
  name: COMPONENT_NAME6,
  inheritAttrs: false
});
var _sfc_main18 = defineComponent21({
  ...__default__15,
  props: autocompleteProps,
  emits: autocompleteEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const attrs = useAttrs();
    const rawAttrs = useAttrs$1();
    const disabled = useFormDisabled();
    const ns = useNamespace("autocomplete");
    const inputRef = ref33();
    const regionRef = ref33();
    const popperRef = ref33();
    const listboxRef = ref33();
    let readonly6 = false;
    let ignoreFocusEvent2 = false;
    const suggestions = ref33([]);
    const highlightedIndex = ref33(-1);
    const dropdownWidth = ref33("");
    const activated = ref33(false);
    const suggestionDisabled = ref33(false);
    const loading = ref33(false);
    const listboxId = computed33(() => ns.b(String(generateId())));
    const styles = computed33(() => rawAttrs.style);
    const suggestionVisible = computed33(() => {
      const isValidData = suggestions.value.length > 0;
      return (isValidData || loading.value) && activated.value;
    });
    const suggestionLoading = computed33(() => !props.hideLoading && loading.value);
    const refInput = computed33(() => {
      if (inputRef.value) {
        return Array.from(inputRef.value.$el.querySelectorAll("input"));
      }
      return [];
    });
    const onSuggestionShow = async () => {
      await nextTick9();
      if (suggestionVisible.value) {
        dropdownWidth.value = `${inputRef.value.$el.offsetWidth}px`;
      }
    };
    const onHide = () => {
      highlightedIndex.value = -1;
    };
    const getData2 = async (queryString) => {
      if (suggestionDisabled.value)
        return;
      const cb = (suggestionList) => {
        loading.value = false;
        if (suggestionDisabled.value)
          return;
        if (isArray9(suggestionList)) {
          suggestions.value = suggestionList;
          highlightedIndex.value = props.highlightFirstItem ? 0 : -1;
        } else {
          throwError(COMPONENT_NAME6, "autocomplete suggestions must be an array");
        }
      };
      loading.value = true;
      if (isArray9(props.fetchSuggestions)) {
        cb(props.fetchSuggestions);
      } else {
        const result2 = await props.fetchSuggestions(queryString, cb);
        if (isArray9(result2))
          cb(result2);
      }
    };
    const debouncedGetData = debounce_default(getData2, props.debounce);
    const handleInput = (value) => {
      const valuePresented = !!value;
      emit(INPUT_EVENT, value);
      emit(UPDATE_MODEL_EVENT, value);
      suggestionDisabled.value = false;
      activated.value || (activated.value = valuePresented);
      if (!props.triggerOnFocus && !value) {
        suggestionDisabled.value = true;
        suggestions.value = [];
        return;
      }
      debouncedGetData(value);
    };
    const handleMouseDown = (event) => {
      var _a2;
      if (disabled.value)
        return;
      if (((_a2 = event.target) == null ? void 0 : _a2.tagName) !== "INPUT" || refInput.value.includes(document.activeElement)) {
        activated.value = true;
      }
    };
    const handleChange = (value) => {
      emit(CHANGE_EVENT, value);
    };
    const handleFocus = (evt) => {
      if (!ignoreFocusEvent2) {
        activated.value = true;
        emit("focus", evt);
        if (props.triggerOnFocus && !readonly6) {
          debouncedGetData(String(props.modelValue));
        }
      } else {
        ignoreFocusEvent2 = false;
      }
    };
    const handleBlur = (evt) => {
      setTimeout(() => {
        var _a2;
        if ((_a2 = popperRef.value) == null ? void 0 : _a2.isFocusInsideContent()) {
          ignoreFocusEvent2 = true;
          return;
        }
        activated.value && close2();
        emit("blur", evt);
      });
    };
    const handleClear = () => {
      activated.value = false;
      emit(UPDATE_MODEL_EVENT, "");
      emit("clear");
    };
    const handleKeyEnter = async () => {
      if (suggestionVisible.value && highlightedIndex.value >= 0 && highlightedIndex.value < suggestions.value.length) {
        handleSelect(suggestions.value[highlightedIndex.value]);
      } else if (props.selectWhenUnmatched) {
        emit("select", { value: props.modelValue });
        suggestions.value = [];
        highlightedIndex.value = -1;
      }
    };
    const handleKeyEscape = (evt) => {
      if (suggestionVisible.value) {
        evt.preventDefault();
        evt.stopPropagation();
        close2();
      }
    };
    const close2 = () => {
      activated.value = false;
    };
    const focus = () => {
      var _a2;
      (_a2 = inputRef.value) == null ? void 0 : _a2.focus();
    };
    const blur = () => {
      var _a2;
      (_a2 = inputRef.value) == null ? void 0 : _a2.blur();
    };
    const handleSelect = async (item) => {
      emit(INPUT_EVENT, item[props.valueKey]);
      emit(UPDATE_MODEL_EVENT, item[props.valueKey]);
      emit("select", item);
      suggestions.value = [];
      highlightedIndex.value = -1;
    };
    const highlight = (index) => {
      if (!suggestionVisible.value || loading.value)
        return;
      if (index < 0) {
        highlightedIndex.value = -1;
        return;
      }
      if (index >= suggestions.value.length) {
        index = suggestions.value.length - 1;
      }
      const suggestion = regionRef.value.querySelector(`.${ns.be("suggestion", "wrap")}`);
      const suggestionList = suggestion.querySelectorAll(`.${ns.be("suggestion", "list")} li`);
      const highlightItem = suggestionList[index];
      const scrollTop = suggestion.scrollTop;
      const { offsetTop, scrollHeight } = highlightItem;
      if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {
        suggestion.scrollTop += scrollHeight;
      }
      if (offsetTop < scrollTop) {
        suggestion.scrollTop -= scrollHeight;
      }
      highlightedIndex.value = index;
      inputRef.value.ref.setAttribute("aria-activedescendant", `${listboxId.value}-item-${highlightedIndex.value}`);
    };
    onClickOutside(listboxRef, () => {
      suggestionVisible.value && close2();
    });
    onMounted19(() => {
      ;
      inputRef.value.ref.setAttribute("role", "textbox");
      inputRef.value.ref.setAttribute("aria-autocomplete", "list");
      inputRef.value.ref.setAttribute("aria-controls", "id");
      inputRef.value.ref.setAttribute("aria-activedescendant", `${listboxId.value}-item-${highlightedIndex.value}`);
      readonly6 = inputRef.value.ref.hasAttribute("readonly");
    });
    expose({
      highlightedIndex,
      activated,
      loading,
      inputRef,
      popperRef,
      suggestions,
      handleSelect,
      handleKeyEnter,
      focus,
      blur,
      close: close2,
      highlight
    });
    return (_ctx, _cache) => {
      return openBlock17(), createBlock11(unref33(ElTooltip), {
        ref_key: "popperRef",
        ref: popperRef,
        visible: unref33(suggestionVisible),
        placement: _ctx.placement,
        "fallback-placements": ["bottom-start", "top-start"],
        "popper-class": [unref33(ns).e("popper"), _ctx.popperClass],
        teleported: _ctx.teleported,
        "gpu-acceleration": false,
        pure: "",
        "manual-mode": "",
        effect: "light",
        trigger: "click",
        transition: `${unref33(ns).namespace.value}-zoom-in-top`,
        persistent: "",
        onBeforeShow: onSuggestionShow,
        onHide
      }, {
        content: withCtx11(() => [
          createElementVNode7("div", {
            ref_key: "regionRef",
            ref: regionRef,
            class: normalizeClass10([unref33(ns).b("suggestion"), unref33(ns).is("loading", unref33(suggestionLoading))]),
            style: normalizeStyle7({
              [_ctx.fitInputWidth ? "width" : "minWidth"]: dropdownWidth.value,
              outline: "none"
            }),
            role: "region"
          }, [
            createVNode10(unref33(ElScrollbar), {
              id: unref33(listboxId),
              tag: "ul",
              "wrap-class": unref33(ns).be("suggestion", "wrap"),
              "view-class": unref33(ns).be("suggestion", "list"),
              role: "listbox"
            }, {
              default: withCtx11(() => [
                unref33(suggestionLoading) ? (openBlock17(), createElementBlock12("li", _hoisted_23, [
                  createVNode10(unref33(ElIcon), {
                    class: normalizeClass10(unref33(ns).is("loading"))
                  }, {
                    default: withCtx11(() => [
                      createVNode10(unref33(loading_default))
                    ]),
                    _: 1
                  }, 8, ["class"])
                ])) : (openBlock17(true), createElementBlock12(Fragment7, { key: 1 }, renderList(suggestions.value, (item, index) => {
                  return openBlock17(), createElementBlock12("li", {
                    id: `${unref33(listboxId)}-item-${index}`,
                    key: index,
                    class: normalizeClass10({ highlighted: highlightedIndex.value === index }),
                    role: "option",
                    "aria-selected": highlightedIndex.value === index,
                    onClick: ($event) => handleSelect(item)
                  }, [
                    renderSlot16(_ctx.$slots, "default", { item }, () => [
                      createTextVNode3(toDisplayString5(item[_ctx.valueKey]), 1)
                    ])
                  ], 10, _hoisted_32);
                }), 128))
              ]),
              _: 3
            }, 8, ["id", "wrap-class", "view-class"])
          ], 6)
        ]),
        default: withCtx11(() => [
          createElementVNode7("div", {
            ref_key: "listboxRef",
            ref: listboxRef,
            class: normalizeClass10([unref33(ns).b(), _ctx.$attrs.class]),
            style: normalizeStyle7(unref33(styles)),
            role: "combobox",
            "aria-haspopup": "listbox",
            "aria-expanded": unref33(suggestionVisible),
            "aria-owns": unref33(listboxId)
          }, [
            createVNode10(unref33(ElInput), mergeProps6({
              ref_key: "inputRef",
              ref: inputRef
            }, unref33(attrs), {
              clearable: _ctx.clearable,
              disabled: unref33(disabled),
              name: _ctx.name,
              "model-value": _ctx.modelValue,
              onInput: handleInput,
              onChange: handleChange,
              onFocus: handleFocus,
              onBlur: handleBlur,
              onClear: handleClear,
              onKeydown: [
                _cache[0] || (_cache[0] = withKeys(withModifiers2(($event) => highlight(highlightedIndex.value - 1), ["prevent"]), ["up"])),
                _cache[1] || (_cache[1] = withKeys(withModifiers2(($event) => highlight(highlightedIndex.value + 1), ["prevent"]), ["down"])),
                withKeys(handleKeyEnter, ["enter"]),
                withKeys(close2, ["tab"]),
                withKeys(handleKeyEscape, ["esc"])
              ],
              onMousedown: handleMouseDown
            }), createSlots({ _: 2 }, [
              _ctx.$slots.prepend ? {
                name: "prepend",
                fn: withCtx11(() => [
                  renderSlot16(_ctx.$slots, "prepend")
                ])
              } : void 0,
              _ctx.$slots.append ? {
                name: "append",
                fn: withCtx11(() => [
                  renderSlot16(_ctx.$slots, "append")
                ])
              } : void 0,
              _ctx.$slots.prefix ? {
                name: "prefix",
                fn: withCtx11(() => [
                  renderSlot16(_ctx.$slots, "prefix")
                ])
              } : void 0,
              _ctx.$slots.suffix ? {
                name: "suffix",
                fn: withCtx11(() => [
                  renderSlot16(_ctx.$slots, "suffix")
                ])
              } : void 0
            ]), 1040, ["clearable", "disabled", "name", "model-value", "onKeydown"])
          ], 14, _hoisted_14)
        ]),
        _: 3
      }, 8, ["visible", "placement", "popper-class", "teleported", "transition"]);
    };
  }
});
var Autocomplete = _export_sfc(_sfc_main18, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/autocomplete/src/autocomplete.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/autocomplete/index.mjs
var ElAutocomplete = withInstall(Autocomplete);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/avatar/src/avatar2.mjs
import { defineComponent as defineComponent22, ref as ref34, computed as computed34, watch as watch26, openBlock as openBlock18, createElementBlock as createElementBlock13, normalizeClass as normalizeClass11, unref as unref34, normalizeStyle as normalizeStyle8, createBlock as createBlock12, withCtx as withCtx12, resolveDynamicComponent as resolveDynamicComponent5, renderSlot as renderSlot17 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/avatar/src/avatar.mjs
var avatarProps = buildProps({
  size: {
    type: [Number, String],
    values: componentSizes,
    default: "",
    validator: (val) => isNumber3(val)
  },
  shape: {
    type: String,
    values: ["circle", "square"],
    default: "circle"
  },
  icon: {
    type: iconPropType
  },
  src: {
    type: String,
    default: ""
  },
  alt: String,
  srcSet: String,
  fit: {
    type: definePropType(String),
    default: "cover"
  }
});
var avatarEmits = {
  error: (evt) => evt instanceof Event
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/avatar/src/avatar2.mjs
import { isString as isString13 } from "@vue/shared";
var _hoisted_15 = ["src", "alt", "srcset"];
var __default__16 = defineComponent22({
  name: "ElAvatar"
});
var _sfc_main19 = defineComponent22({
  ...__default__16,
  props: avatarProps,
  emits: avatarEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("avatar");
    const hasLoadError = ref34(false);
    const avatarClass = computed34(() => {
      const { size: size4, icon, shape } = props;
      const classList = [ns.b()];
      if (isString13(size4))
        classList.push(ns.m(size4));
      if (icon)
        classList.push(ns.m("icon"));
      if (shape)
        classList.push(ns.m(shape));
      return classList;
    });
    const sizeStyle = computed34(() => {
      const { size: size4 } = props;
      return isNumber3(size4) ? ns.cssVarBlock({
        size: addUnit(size4) || ""
      }) : void 0;
    });
    const fitStyle = computed34(() => ({
      objectFit: props.fit
    }));
    watch26(() => props.src, () => hasLoadError.value = false);
    function handleError(e) {
      hasLoadError.value = true;
      emit("error", e);
    }
    return (_ctx, _cache) => {
      return openBlock18(), createElementBlock13("span", {
        class: normalizeClass11(unref34(avatarClass)),
        style: normalizeStyle8(unref34(sizeStyle))
      }, [
        (_ctx.src || _ctx.srcSet) && !hasLoadError.value ? (openBlock18(), createElementBlock13("img", {
          key: 0,
          src: _ctx.src,
          alt: _ctx.alt,
          srcset: _ctx.srcSet,
          style: normalizeStyle8(unref34(fitStyle)),
          onError: handleError
        }, null, 44, _hoisted_15)) : _ctx.icon ? (openBlock18(), createBlock12(unref34(ElIcon), { key: 1 }, {
          default: withCtx12(() => [
            (openBlock18(), createBlock12(resolveDynamicComponent5(_ctx.icon)))
          ]),
          _: 1
        })) : renderSlot17(_ctx.$slots, "default", { key: 2 })
      ], 6);
    };
  }
});
var Avatar = _export_sfc(_sfc_main19, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/avatar/src/avatar.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/avatar/index.mjs
var ElAvatar = withInstall(Avatar);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/backtop/src/backtop2.mjs
import { defineComponent as defineComponent23, computed as computed35, openBlock as openBlock19, createBlock as createBlock13, Transition as Transition4, unref as unref35, withCtx as withCtx13, createElementBlock as createElementBlock14, normalizeStyle as normalizeStyle9, normalizeClass as normalizeClass12, withModifiers as withModifiers3, renderSlot as renderSlot18, createVNode as createVNode11, createCommentVNode as createCommentVNode9 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/backtop/src/backtop.mjs
var backtopProps = {
  visibilityHeight: {
    type: Number,
    default: 200
  },
  target: {
    type: String,
    default: ""
  },
  right: {
    type: Number,
    default: 40
  },
  bottom: {
    type: Number,
    default: 40
  }
};
var backtopEmits = {
  click: (evt) => evt instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/backtop/src/use-backtop.mjs
import { shallowRef as shallowRef7, ref as ref35, onMounted as onMounted20 } from "vue";
var useBackTop = (props, emit, componentName2) => {
  const el = shallowRef7();
  const container = shallowRef7();
  const visible = ref35(false);
  const handleScroll2 = () => {
    if (el.value)
      visible.value = el.value.scrollTop >= props.visibilityHeight;
  };
  const handleClick = (event) => {
    var _a2;
    (_a2 = el.value) == null ? void 0 : _a2.scrollTo({ top: 0, behavior: "smooth" });
    emit("click", event);
  };
  const handleScrollThrottled = useThrottleFn(handleScroll2, 300, true);
  useEventListener(container, "scroll", handleScrollThrottled);
  onMounted20(() => {
    var _a2;
    container.value = document;
    el.value = document.documentElement;
    if (props.target) {
      el.value = (_a2 = document.querySelector(props.target)) != null ? _a2 : void 0;
      if (!el.value) {
        throwError(componentName2, `target does not exist: ${props.target}`);
      }
      container.value = el.value;
    }
    handleScroll2();
  });
  return {
    visible,
    handleClick
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/backtop/src/backtop2.mjs
var COMPONENT_NAME7 = "ElBacktop";
var __default__17 = defineComponent23({
  name: COMPONENT_NAME7
});
var _sfc_main20 = defineComponent23({
  ...__default__17,
  props: backtopProps,
  emits: backtopEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("backtop");
    const { handleClick, visible } = useBackTop(props, emit, COMPONENT_NAME7);
    const backTopStyle = computed35(() => ({
      right: `${props.right}px`,
      bottom: `${props.bottom}px`
    }));
    return (_ctx, _cache) => {
      return openBlock19(), createBlock13(Transition4, {
        name: `${unref35(ns).namespace.value}-fade-in`
      }, {
        default: withCtx13(() => [
          unref35(visible) ? (openBlock19(), createElementBlock14("div", {
            key: 0,
            style: normalizeStyle9(unref35(backTopStyle)),
            class: normalizeClass12(unref35(ns).b()),
            onClick: _cache[0] || (_cache[0] = withModifiers3((...args) => unref35(handleClick) && unref35(handleClick)(...args), ["stop"]))
          }, [
            renderSlot18(_ctx.$slots, "default", {}, () => [
              createVNode11(unref35(ElIcon), {
                class: normalizeClass12(unref35(ns).e("icon"))
              }, {
                default: withCtx13(() => [
                  createVNode11(unref35(caret_top_default))
                ]),
                _: 1
              }, 8, ["class"])
            ])
          ], 6)) : createCommentVNode9("v-if", true)
        ]),
        _: 3
      }, 8, ["name"]);
    };
  }
});
var Backtop = _export_sfc(_sfc_main20, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/backtop/src/backtop.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/backtop/index.mjs
var ElBacktop = withInstall(Backtop);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/badge/src/badge2.mjs
import { defineComponent as defineComponent24, computed as computed36, openBlock as openBlock20, createElementBlock as createElementBlock15, normalizeClass as normalizeClass13, unref as unref36, renderSlot as renderSlot19, createVNode as createVNode12, Transition as Transition5, withCtx as withCtx14, withDirectives as withDirectives6, createElementVNode as createElementVNode8, toDisplayString as toDisplayString6, vShow as vShow5 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/badge/src/badge.mjs
var badgeProps = buildProps({
  value: {
    type: [String, Number],
    default: ""
  },
  max: {
    type: Number,
    default: 99
  },
  isDot: Boolean,
  hidden: Boolean,
  type: {
    type: String,
    values: ["primary", "success", "warning", "info", "danger"],
    default: "danger"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/badge/src/badge2.mjs
var _hoisted_16 = ["textContent"];
var __default__18 = defineComponent24({
  name: "ElBadge"
});
var _sfc_main21 = defineComponent24({
  ...__default__18,
  props: badgeProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = useNamespace("badge");
    const content = computed36(() => {
      if (props.isDot)
        return "";
      if (isNumber3(props.value) && isNumber3(props.max)) {
        return props.max < props.value ? `${props.max}+` : `${props.value}`;
      }
      return `${props.value}`;
    });
    expose({
      content
    });
    return (_ctx, _cache) => {
      return openBlock20(), createElementBlock15("div", {
        class: normalizeClass13(unref36(ns).b())
      }, [
        renderSlot19(_ctx.$slots, "default"),
        createVNode12(Transition5, {
          name: `${unref36(ns).namespace.value}-zoom-in-center`,
          persisted: ""
        }, {
          default: withCtx14(() => [
            withDirectives6(createElementVNode8("sup", {
              class: normalizeClass13([
                unref36(ns).e("content"),
                unref36(ns).em("content", _ctx.type),
                unref36(ns).is("fixed", !!_ctx.$slots.default),
                unref36(ns).is("dot", _ctx.isDot)
              ]),
              textContent: toDisplayString6(unref36(content))
            }, null, 10, _hoisted_16), [
              [vShow5, !_ctx.hidden && (unref36(content) || _ctx.isDot)]
            ])
          ]),
          _: 1
        }, 8, ["name"])
      ], 2);
    };
  }
});
var Badge = _export_sfc(_sfc_main21, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/badge/src/badge.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/badge/index.mjs
var ElBadge = withInstall(Badge);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/breadcrumb2.mjs
import { defineComponent as defineComponent25, ref as ref36, provide as provide11, onMounted as onMounted21, openBlock as openBlock21, createElementBlock as createElementBlock16, normalizeClass as normalizeClass14, unref as unref37, renderSlot as renderSlot20 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/constants.mjs
var breadcrumbKey = Symbol("breadcrumbKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/breadcrumb.mjs
var breadcrumbProps = buildProps({
  separator: {
    type: String,
    default: "/"
  },
  separatorIcon: {
    type: iconPropType
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/breadcrumb2.mjs
var __default__19 = defineComponent25({
  name: "ElBreadcrumb"
});
var _sfc_main22 = defineComponent25({
  ...__default__19,
  props: breadcrumbProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("breadcrumb");
    const breadcrumb = ref36();
    provide11(breadcrumbKey, props);
    onMounted21(() => {
      const items = breadcrumb.value.querySelectorAll(`.${ns.e("item")}`);
      if (items.length) {
        items[items.length - 1].setAttribute("aria-current", "page");
      }
    });
    return (_ctx, _cache) => {
      return openBlock21(), createElementBlock16("div", {
        ref_key: "breadcrumb",
        ref: breadcrumb,
        class: normalizeClass14(unref37(ns).b()),
        "aria-label": "Breadcrumb",
        role: "navigation"
      }, [
        renderSlot20(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var Breadcrumb = _export_sfc(_sfc_main22, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/breadcrumb/src/breadcrumb.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/breadcrumb-item2.mjs
import { defineComponent as defineComponent26, getCurrentInstance as getCurrentInstance9, inject as inject21, toRefs as toRefs4, ref as ref37, openBlock as openBlock22, createElementBlock as createElementBlock17, normalizeClass as normalizeClass15, unref as unref38, createElementVNode as createElementVNode9, renderSlot as renderSlot21, createBlock as createBlock14, withCtx as withCtx15, resolveDynamicComponent as resolveDynamicComponent6, toDisplayString as toDisplayString7 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/breadcrumb-item.mjs
var breadcrumbItemProps = buildProps({
  to: {
    type: definePropType([String, Object]),
    default: ""
  },
  replace: {
    type: Boolean,
    default: false
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/src/breadcrumb-item2.mjs
var __default__20 = defineComponent26({
  name: "ElBreadcrumbItem"
});
var _sfc_main23 = defineComponent26({
  ...__default__20,
  props: breadcrumbItemProps,
  setup(__props) {
    const props = __props;
    const instance = getCurrentInstance9();
    const breadcrumbContext = inject21(breadcrumbKey, void 0);
    const ns = useNamespace("breadcrumb");
    const { separator, separatorIcon } = toRefs4(breadcrumbContext);
    const router = instance.appContext.config.globalProperties.$router;
    const link = ref37();
    const onClick = () => {
      if (!props.to || !router)
        return;
      props.replace ? router.replace(props.to) : router.push(props.to);
    };
    return (_ctx, _cache) => {
      return openBlock22(), createElementBlock17("span", {
        class: normalizeClass15(unref38(ns).e("item"))
      }, [
        createElementVNode9("span", {
          ref_key: "link",
          ref: link,
          class: normalizeClass15([unref38(ns).e("inner"), unref38(ns).is("link", !!_ctx.to)]),
          role: "link",
          onClick
        }, [
          renderSlot21(_ctx.$slots, "default")
        ], 2),
        unref38(separatorIcon) ? (openBlock22(), createBlock14(unref38(ElIcon), {
          key: 0,
          class: normalizeClass15(unref38(ns).e("separator"))
        }, {
          default: withCtx15(() => [
            (openBlock22(), createBlock14(resolveDynamicComponent6(unref38(separatorIcon))))
          ]),
          _: 1
        }, 8, ["class"])) : (openBlock22(), createElementBlock17("span", {
          key: 1,
          class: normalizeClass15(unref38(ns).e("separator")),
          role: "presentation"
        }, toDisplayString7(unref38(separator)), 3))
      ], 2);
    };
  }
});
var BreadcrumbItem = _export_sfc(_sfc_main23, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/breadcrumb/src/breadcrumb-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/breadcrumb/index.mjs
var ElBreadcrumb = withInstall(Breadcrumb, {
  BreadcrumbItem
});
var ElBreadcrumbItem = withNoopInstall(BreadcrumbItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button2.mjs
import { defineComponent as defineComponent27, openBlock as openBlock23, createBlock as createBlock15, resolveDynamicComponent as resolveDynamicComponent7, mergeProps as mergeProps7, unref as unref39, withCtx as withCtx16, createElementBlock as createElementBlock18, Fragment as Fragment8, renderSlot as renderSlot22, normalizeClass as normalizeClass16, createCommentVNode as createCommentVNode10 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/use-button.mjs
import { computed as computed37, inject as inject22, ref as ref38, useSlots as useSlots4, Text as Text3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/constants.mjs
var buttonGroupContextKey = Symbol("buttonGroupContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/use-button.mjs
var useButton = (props, emit) => {
  useDeprecated({
    from: "type.text",
    replacement: "link",
    version: "3.0.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/button.html#button-attributes"
  }, computed37(() => props.type === "text"));
  const buttonGroupContext = inject22(buttonGroupContextKey, void 0);
  const globalConfig2 = useGlobalConfig("button");
  const { form } = useFormItem();
  const _size = useFormSize(computed37(() => buttonGroupContext == null ? void 0 : buttonGroupContext.size));
  const _disabled = useFormDisabled();
  const _ref = ref38();
  const slots = useSlots4();
  const _type = computed37(() => props.type || (buttonGroupContext == null ? void 0 : buttonGroupContext.type) || "");
  const autoInsertSpace = computed37(() => {
    var _a2, _b, _c;
    return (_c = (_b = props.autoInsertSpace) != null ? _b : (_a2 = globalConfig2.value) == null ? void 0 : _a2.autoInsertSpace) != null ? _c : false;
  });
  const _props = computed37(() => {
    if (props.tag === "button") {
      return {
        ariaDisabled: _disabled.value || props.loading,
        disabled: _disabled.value || props.loading,
        autofocus: props.autofocus,
        type: props.nativeType
      };
    }
    return {};
  });
  const shouldAddSpace = computed37(() => {
    var _a2;
    const defaultSlot = (_a2 = slots.default) == null ? void 0 : _a2.call(slots);
    if (autoInsertSpace.value && (defaultSlot == null ? void 0 : defaultSlot.length) === 1) {
      const slot = defaultSlot[0];
      if ((slot == null ? void 0 : slot.type) === Text3) {
        const text = slot.children;
        return /^\p{Unified_Ideograph}{2}$/u.test(text.trim());
      }
    }
    return false;
  });
  const handleClick = (evt) => {
    if (props.nativeType === "reset") {
      form == null ? void 0 : form.resetFields();
    }
    emit("click", evt);
  };
  return {
    _disabled,
    _size,
    _type,
    _ref,
    _props,
    shouldAddSpace,
    handleClick
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button.mjs
var buttonTypes = [
  "default",
  "primary",
  "success",
  "warning",
  "info",
  "danger",
  "text",
  ""
];
var buttonNativeTypes = ["button", "submit", "reset"];
var buttonProps = buildProps({
  size: useSizeProp,
  disabled: Boolean,
  type: {
    type: String,
    values: buttonTypes,
    default: ""
  },
  icon: {
    type: iconPropType
  },
  nativeType: {
    type: String,
    values: buttonNativeTypes,
    default: "button"
  },
  loading: Boolean,
  loadingIcon: {
    type: iconPropType,
    default: () => loading_default
  },
  plain: Boolean,
  text: Boolean,
  link: Boolean,
  bg: Boolean,
  autofocus: Boolean,
  round: Boolean,
  circle: Boolean,
  color: String,
  dark: Boolean,
  autoInsertSpace: {
    type: Boolean,
    default: void 0
  },
  tag: {
    type: definePropType([String, Object]),
    default: "button"
  }
});
var buttonEmits = {
  click: (evt) => evt instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button-custom.mjs
import { computed as computed38 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@ctrl/tinycolor/dist/module/util.js
function bound01(n, max5) {
  if (isOnePointZero(n)) {
    n = "100%";
  }
  var isPercent = isPercentage(n);
  n = max5 === 360 ? n : Math.min(max5, Math.max(0, parseFloat(n)));
  if (isPercent) {
    n = parseInt(String(n * max5), 10) / 100;
  }
  if (Math.abs(n - max5) < 1e-6) {
    return 1;
  }
  if (max5 === 360) {
    n = (n < 0 ? n % max5 + max5 : n % max5) / parseFloat(String(max5));
  } else {
    n = n % max5 / parseFloat(String(max5));
  }
  return n;
}
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}
function isOnePointZero(n) {
  return typeof n === "string" && n.indexOf(".") !== -1 && parseFloat(n) === 1;
}
function isPercentage(n) {
  return typeof n === "string" && n.indexOf("%") !== -1;
}
function boundAlpha(a2) {
  a2 = parseFloat(a2);
  if (isNaN(a2) || a2 < 0 || a2 > 1) {
    a2 = 1;
  }
  return a2;
}
function convertToPercentage(n) {
  if (n <= 1) {
    return "".concat(Number(n) * 100, "%");
  }
  return n;
}
function pad2(c2) {
  return c2.length === 1 ? "0" + c2 : String(c2);
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@ctrl/tinycolor/dist/module/conversion.js
function rgbToRgb(r, g, b2) {
  return {
    r: bound01(r, 255) * 255,
    g: bound01(g, 255) * 255,
    b: bound01(b2, 255) * 255
  };
}
function rgbToHsl(r, g, b2) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b2 = bound01(b2, 255);
  var max5 = Math.max(r, g, b2);
  var min5 = Math.min(r, g, b2);
  var h30 = 0;
  var s2 = 0;
  var l2 = (max5 + min5) / 2;
  if (max5 === min5) {
    s2 = 0;
    h30 = 0;
  } else {
    var d2 = max5 - min5;
    s2 = l2 > 0.5 ? d2 / (2 - max5 - min5) : d2 / (max5 + min5);
    switch (max5) {
      case r:
        h30 = (g - b2) / d2 + (g < b2 ? 6 : 0);
        break;
      case g:
        h30 = (b2 - r) / d2 + 2;
        break;
      case b2:
        h30 = (r - g) / d2 + 4;
        break;
      default:
        break;
    }
    h30 /= 6;
  }
  return { h: h30, s: s2, l: l2 };
}
function hue2rgb(p2, q2, t) {
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p2 + (q2 - p2) * (6 * t);
  }
  if (t < 1 / 2) {
    return q2;
  }
  if (t < 2 / 3) {
    return p2 + (q2 - p2) * (2 / 3 - t) * 6;
  }
  return p2;
}
function hslToRgb(h30, s2, l2) {
  var r;
  var g;
  var b2;
  h30 = bound01(h30, 360);
  s2 = bound01(s2, 100);
  l2 = bound01(l2, 100);
  if (s2 === 0) {
    g = l2;
    b2 = l2;
    r = l2;
  } else {
    var q2 = l2 < 0.5 ? l2 * (1 + s2) : l2 + s2 - l2 * s2;
    var p2 = 2 * l2 - q2;
    r = hue2rgb(p2, q2, h30 + 1 / 3);
    g = hue2rgb(p2, q2, h30);
    b2 = hue2rgb(p2, q2, h30 - 1 / 3);
  }
  return { r: r * 255, g: g * 255, b: b2 * 255 };
}
function rgbToHsv(r, g, b2) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b2 = bound01(b2, 255);
  var max5 = Math.max(r, g, b2);
  var min5 = Math.min(r, g, b2);
  var h30 = 0;
  var v2 = max5;
  var d2 = max5 - min5;
  var s2 = max5 === 0 ? 0 : d2 / max5;
  if (max5 === min5) {
    h30 = 0;
  } else {
    switch (max5) {
      case r:
        h30 = (g - b2) / d2 + (g < b2 ? 6 : 0);
        break;
      case g:
        h30 = (b2 - r) / d2 + 2;
        break;
      case b2:
        h30 = (r - g) / d2 + 4;
        break;
      default:
        break;
    }
    h30 /= 6;
  }
  return { h: h30, s: s2, v: v2 };
}
function hsvToRgb(h30, s2, v2) {
  h30 = bound01(h30, 360) * 6;
  s2 = bound01(s2, 100);
  v2 = bound01(v2, 100);
  var i = Math.floor(h30);
  var f2 = h30 - i;
  var p2 = v2 * (1 - s2);
  var q2 = v2 * (1 - f2 * s2);
  var t = v2 * (1 - (1 - f2) * s2);
  var mod = i % 6;
  var r = [v2, q2, p2, p2, t, v2][mod];
  var g = [t, v2, v2, q2, p2, p2][mod];
  var b2 = [p2, p2, t, v2, v2, q2][mod];
  return { r: r * 255, g: g * 255, b: b2 * 255 };
}
function rgbToHex(r, g, b2, allow3Char) {
  var hex2 = [
    pad2(Math.round(r).toString(16)),
    pad2(Math.round(g).toString(16)),
    pad2(Math.round(b2).toString(16))
  ];
  if (allow3Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1))) {
    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);
  }
  return hex2.join("");
}
function rgbaToHex(r, g, b2, a2, allow4Char) {
  var hex2 = [
    pad2(Math.round(r).toString(16)),
    pad2(Math.round(g).toString(16)),
    pad2(Math.round(b2).toString(16)),
    pad2(convertDecimalToHex(a2))
  ];
  if (allow4Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1)) && hex2[3].startsWith(hex2[3].charAt(1))) {
    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0) + hex2[3].charAt(0);
  }
  return hex2.join("");
}
function convertDecimalToHex(d2) {
  return Math.round(parseFloat(d2) * 255).toString(16);
}
function convertHexToDecimal(h30) {
  return parseIntFromHex(h30) / 255;
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
function numberInputToObject(color) {
  return {
    r: color >> 16,
    g: (color & 65280) >> 8,
    b: color & 255
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@ctrl/tinycolor/dist/module/css-color-names.js
var names = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@ctrl/tinycolor/dist/module/format-input.js
function inputToRGB(color) {
  var rgb = { r: 0, g: 0, b: 0 };
  var a2 = 1;
  var s2 = null;
  var v2 = null;
  var l2 = null;
  var ok = false;
  var format2 = false;
  if (typeof color === "string") {
    color = stringInputToObject(color);
  }
  if (typeof color === "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format2 = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s2 = convertToPercentage(color.s);
      v2 = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s2, v2);
      ok = true;
      format2 = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s2 = convertToPercentage(color.s);
      l2 = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s2, l2);
      ok = true;
      format2 = "hsl";
    }
    if (Object.prototype.hasOwnProperty.call(color, "a")) {
      a2 = color.a;
    }
  }
  a2 = boundAlpha(a2);
  return {
    ok,
    format: color.format || format2,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a: a2
  };
}
var CSS_INTEGER = "[-\\+]?\\d+%?";
var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
var CSS_UNIT = "(?:".concat(CSS_NUMBER, ")|(?:").concat(CSS_INTEGER, ")");
var PERMISSIVE_MATCH3 = "[\\s|\\(]+(".concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")\\s*\\)?");
var PERMISSIVE_MATCH4 = "[\\s|\\(]+(".concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")\\s*\\)?");
var matchers = {
  CSS_UNIT: new RegExp(CSS_UNIT),
  rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
  rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
  hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
  hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
  hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
  hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function stringInputToObject(color) {
  color = color.trim().toLowerCase();
  if (color.length === 0) {
    return false;
  }
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color === "transparent") {
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  }
  var match = matchers.rgb.exec(color);
  if (match) {
    return { r: match[1], g: match[2], b: match[3] };
  }
  match = matchers.rgba.exec(color);
  if (match) {
    return { r: match[1], g: match[2], b: match[3], a: match[4] };
  }
  match = matchers.hsl.exec(color);
  if (match) {
    return { h: match[1], s: match[2], l: match[3] };
  }
  match = matchers.hsla.exec(color);
  if (match) {
    return { h: match[1], s: match[2], l: match[3], a: match[4] };
  }
  match = matchers.hsv.exec(color);
  if (match) {
    return { h: match[1], s: match[2], v: match[3] };
  }
  match = matchers.hsva.exec(color);
  if (match) {
    return { h: match[1], s: match[2], v: match[3], a: match[4] };
  }
  match = matchers.hex8.exec(color);
  if (match) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      a: convertHexToDecimal(match[4]),
      format: named ? "name" : "hex8"
    };
  }
  match = matchers.hex6.exec(color);
  if (match) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      format: named ? "name" : "hex"
    };
  }
  match = matchers.hex4.exec(color);
  if (match) {
    return {
      r: parseIntFromHex(match[1] + match[1]),
      g: parseIntFromHex(match[2] + match[2]),
      b: parseIntFromHex(match[3] + match[3]),
      a: convertHexToDecimal(match[4] + match[4]),
      format: named ? "name" : "hex8"
    };
  }
  match = matchers.hex3.exec(color);
  if (match) {
    return {
      r: parseIntFromHex(match[1] + match[1]),
      g: parseIntFromHex(match[2] + match[2]),
      b: parseIntFromHex(match[3] + match[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function isValidCSSUnit(color) {
  return Boolean(matchers.CSS_UNIT.exec(String(color)));
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/@ctrl/tinycolor/dist/module/index.js
var TinyColor = (
  /** @class */
  function() {
    function TinyColor2(color, opts) {
      if (color === void 0) {
        color = "";
      }
      if (opts === void 0) {
        opts = {};
      }
      var _a2;
      if (color instanceof TinyColor2) {
        return color;
      }
      if (typeof color === "number") {
        color = numberInputToObject(color);
      }
      this.originalInput = color;
      var rgb = inputToRGB(color);
      this.originalInput = color;
      this.r = rgb.r;
      this.g = rgb.g;
      this.b = rgb.b;
      this.a = rgb.a;
      this.roundA = Math.round(100 * this.a) / 100;
      this.format = (_a2 = opts.format) !== null && _a2 !== void 0 ? _a2 : rgb.format;
      this.gradientType = opts.gradientType;
      if (this.r < 1) {
        this.r = Math.round(this.r);
      }
      if (this.g < 1) {
        this.g = Math.round(this.g);
      }
      if (this.b < 1) {
        this.b = Math.round(this.b);
      }
      this.isValid = rgb.ok;
    }
    TinyColor2.prototype.isDark = function() {
      return this.getBrightness() < 128;
    };
    TinyColor2.prototype.isLight = function() {
      return !this.isDark();
    };
    TinyColor2.prototype.getBrightness = function() {
      var rgb = this.toRgb();
      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
    };
    TinyColor2.prototype.getLuminance = function() {
      var rgb = this.toRgb();
      var R2;
      var G2;
      var B2;
      var RsRGB = rgb.r / 255;
      var GsRGB = rgb.g / 255;
      var BsRGB = rgb.b / 255;
      if (RsRGB <= 0.03928) {
        R2 = RsRGB / 12.92;
      } else {
        R2 = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
      }
      if (GsRGB <= 0.03928) {
        G2 = GsRGB / 12.92;
      } else {
        G2 = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
      }
      if (BsRGB <= 0.03928) {
        B2 = BsRGB / 12.92;
      } else {
        B2 = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
      }
      return 0.2126 * R2 + 0.7152 * G2 + 0.0722 * B2;
    };
    TinyColor2.prototype.getAlpha = function() {
      return this.a;
    };
    TinyColor2.prototype.setAlpha = function(alpha) {
      this.a = boundAlpha(alpha);
      this.roundA = Math.round(100 * this.a) / 100;
      return this;
    };
    TinyColor2.prototype.isMonochrome = function() {
      var s2 = this.toHsl().s;
      return s2 === 0;
    };
    TinyColor2.prototype.toHsv = function() {
      var hsv = rgbToHsv(this.r, this.g, this.b);
      return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };
    };
    TinyColor2.prototype.toHsvString = function() {
      var hsv = rgbToHsv(this.r, this.g, this.b);
      var h30 = Math.round(hsv.h * 360);
      var s2 = Math.round(hsv.s * 100);
      var v2 = Math.round(hsv.v * 100);
      return this.a === 1 ? "hsv(".concat(h30, ", ").concat(s2, "%, ").concat(v2, "%)") : "hsva(".concat(h30, ", ").concat(s2, "%, ").concat(v2, "%, ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toHsl = function() {
      var hsl = rgbToHsl(this.r, this.g, this.b);
      return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };
    };
    TinyColor2.prototype.toHslString = function() {
      var hsl = rgbToHsl(this.r, this.g, this.b);
      var h30 = Math.round(hsl.h * 360);
      var s2 = Math.round(hsl.s * 100);
      var l2 = Math.round(hsl.l * 100);
      return this.a === 1 ? "hsl(".concat(h30, ", ").concat(s2, "%, ").concat(l2, "%)") : "hsla(".concat(h30, ", ").concat(s2, "%, ").concat(l2, "%, ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toHex = function(allow3Char) {
      if (allow3Char === void 0) {
        allow3Char = false;
      }
      return rgbToHex(this.r, this.g, this.b, allow3Char);
    };
    TinyColor2.prototype.toHexString = function(allow3Char) {
      if (allow3Char === void 0) {
        allow3Char = false;
      }
      return "#" + this.toHex(allow3Char);
    };
    TinyColor2.prototype.toHex8 = function(allow4Char) {
      if (allow4Char === void 0) {
        allow4Char = false;
      }
      return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);
    };
    TinyColor2.prototype.toHex8String = function(allow4Char) {
      if (allow4Char === void 0) {
        allow4Char = false;
      }
      return "#" + this.toHex8(allow4Char);
    };
    TinyColor2.prototype.toHexShortString = function(allowShortChar) {
      if (allowShortChar === void 0) {
        allowShortChar = false;
      }
      return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);
    };
    TinyColor2.prototype.toRgb = function() {
      return {
        r: Math.round(this.r),
        g: Math.round(this.g),
        b: Math.round(this.b),
        a: this.a
      };
    };
    TinyColor2.prototype.toRgbString = function() {
      var r = Math.round(this.r);
      var g = Math.round(this.g);
      var b2 = Math.round(this.b);
      return this.a === 1 ? "rgb(".concat(r, ", ").concat(g, ", ").concat(b2, ")") : "rgba(".concat(r, ", ").concat(g, ", ").concat(b2, ", ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toPercentageRgb = function() {
      var fmt = function(x2) {
        return "".concat(Math.round(bound01(x2, 255) * 100), "%");
      };
      return {
        r: fmt(this.r),
        g: fmt(this.g),
        b: fmt(this.b),
        a: this.a
      };
    };
    TinyColor2.prototype.toPercentageRgbString = function() {
      var rnd = function(x2) {
        return Math.round(bound01(x2, 255) * 100);
      };
      return this.a === 1 ? "rgb(".concat(rnd(this.r), "%, ").concat(rnd(this.g), "%, ").concat(rnd(this.b), "%)") : "rgba(".concat(rnd(this.r), "%, ").concat(rnd(this.g), "%, ").concat(rnd(this.b), "%, ").concat(this.roundA, ")");
    };
    TinyColor2.prototype.toName = function() {
      if (this.a === 0) {
        return "transparent";
      }
      if (this.a < 1) {
        return false;
      }
      var hex2 = "#" + rgbToHex(this.r, this.g, this.b, false);
      for (var _i = 0, _a2 = Object.entries(names); _i < _a2.length; _i++) {
        var _b = _a2[_i], key = _b[0], value = _b[1];
        if (hex2 === value) {
          return key;
        }
      }
      return false;
    };
    TinyColor2.prototype.toString = function(format2) {
      var formatSet = Boolean(format2);
      format2 = format2 !== null && format2 !== void 0 ? format2 : this.format;
      var formattedString = false;
      var hasAlpha = this.a < 1 && this.a >= 0;
      var needsAlphaFormat = !formatSet && hasAlpha && (format2.startsWith("hex") || format2 === "name");
      if (needsAlphaFormat) {
        if (format2 === "name" && this.a === 0) {
          return this.toName();
        }
        return this.toRgbString();
      }
      if (format2 === "rgb") {
        formattedString = this.toRgbString();
      }
      if (format2 === "prgb") {
        formattedString = this.toPercentageRgbString();
      }
      if (format2 === "hex" || format2 === "hex6") {
        formattedString = this.toHexString();
      }
      if (format2 === "hex3") {
        formattedString = this.toHexString(true);
      }
      if (format2 === "hex4") {
        formattedString = this.toHex8String(true);
      }
      if (format2 === "hex8") {
        formattedString = this.toHex8String();
      }
      if (format2 === "name") {
        formattedString = this.toName();
      }
      if (format2 === "hsl") {
        formattedString = this.toHslString();
      }
      if (format2 === "hsv") {
        formattedString = this.toHsvString();
      }
      return formattedString || this.toHexString();
    };
    TinyColor2.prototype.toNumber = function() {
      return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    };
    TinyColor2.prototype.clone = function() {
      return new TinyColor2(this.toString());
    };
    TinyColor2.prototype.lighten = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      var hsl = this.toHsl();
      hsl.l += amount / 100;
      hsl.l = clamp01(hsl.l);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.brighten = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      var rgb = this.toRgb();
      rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
      rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
      rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
      return new TinyColor2(rgb);
    };
    TinyColor2.prototype.darken = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      var hsl = this.toHsl();
      hsl.l -= amount / 100;
      hsl.l = clamp01(hsl.l);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.tint = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      return this.mix("white", amount);
    };
    TinyColor2.prototype.shade = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      return this.mix("black", amount);
    };
    TinyColor2.prototype.desaturate = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      var hsl = this.toHsl();
      hsl.s -= amount / 100;
      hsl.s = clamp01(hsl.s);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.saturate = function(amount) {
      if (amount === void 0) {
        amount = 10;
      }
      var hsl = this.toHsl();
      hsl.s += amount / 100;
      hsl.s = clamp01(hsl.s);
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.greyscale = function() {
      return this.desaturate(100);
    };
    TinyColor2.prototype.spin = function(amount) {
      var hsl = this.toHsl();
      var hue = (hsl.h + amount) % 360;
      hsl.h = hue < 0 ? 360 + hue : hue;
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.mix = function(color, amount) {
      if (amount === void 0) {
        amount = 50;
      }
      var rgb1 = this.toRgb();
      var rgb2 = new TinyColor2(color).toRgb();
      var p2 = amount / 100;
      var rgba = {
        r: (rgb2.r - rgb1.r) * p2 + rgb1.r,
        g: (rgb2.g - rgb1.g) * p2 + rgb1.g,
        b: (rgb2.b - rgb1.b) * p2 + rgb1.b,
        a: (rgb2.a - rgb1.a) * p2 + rgb1.a
      };
      return new TinyColor2(rgba);
    };
    TinyColor2.prototype.analogous = function(results, slices) {
      if (results === void 0) {
        results = 6;
      }
      if (slices === void 0) {
        slices = 30;
      }
      var hsl = this.toHsl();
      var part = 360 / slices;
      var ret = [this];
      for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(new TinyColor2(hsl));
      }
      return ret;
    };
    TinyColor2.prototype.complement = function() {
      var hsl = this.toHsl();
      hsl.h = (hsl.h + 180) % 360;
      return new TinyColor2(hsl);
    };
    TinyColor2.prototype.monochromatic = function(results) {
      if (results === void 0) {
        results = 6;
      }
      var hsv = this.toHsv();
      var h30 = hsv.h;
      var s2 = hsv.s;
      var v2 = hsv.v;
      var res = [];
      var modification = 1 / results;
      while (results--) {
        res.push(new TinyColor2({ h: h30, s: s2, v: v2 }));
        v2 = (v2 + modification) % 1;
      }
      return res;
    };
    TinyColor2.prototype.splitcomplement = function() {
      var hsl = this.toHsl();
      var h30 = hsl.h;
      return [
        this,
        new TinyColor2({ h: (h30 + 72) % 360, s: hsl.s, l: hsl.l }),
        new TinyColor2({ h: (h30 + 216) % 360, s: hsl.s, l: hsl.l })
      ];
    };
    TinyColor2.prototype.onBackground = function(background) {
      var fg = this.toRgb();
      var bg = new TinyColor2(background).toRgb();
      var alpha = fg.a + bg.a * (1 - fg.a);
      return new TinyColor2({
        r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,
        g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,
        b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,
        a: alpha
      });
    };
    TinyColor2.prototype.triad = function() {
      return this.polyad(3);
    };
    TinyColor2.prototype.tetrad = function() {
      return this.polyad(4);
    };
    TinyColor2.prototype.polyad = function(n) {
      var hsl = this.toHsl();
      var h30 = hsl.h;
      var result2 = [this];
      var increment = 360 / n;
      for (var i = 1; i < n; i++) {
        result2.push(new TinyColor2({ h: (h30 + i * increment) % 360, s: hsl.s, l: hsl.l }));
      }
      return result2;
    };
    TinyColor2.prototype.equals = function(color) {
      return this.toRgbString() === new TinyColor2(color).toRgbString();
    };
    return TinyColor2;
  }()
);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button-custom.mjs
function darken(color, amount = 20) {
  return color.mix("#141414", amount).toString();
}
function useButtonCustomStyle(props) {
  const _disabled = useFormDisabled();
  const ns = useNamespace("button");
  return computed38(() => {
    let styles = {};
    const buttonColor = props.color;
    if (buttonColor) {
      const color = new TinyColor(buttonColor);
      const activeBgColor = props.dark ? color.tint(20).toString() : darken(color, 20);
      if (props.plain) {
        styles = ns.cssVarBlock({
          "bg-color": props.dark ? darken(color, 90) : color.tint(90).toString(),
          "text-color": buttonColor,
          "border-color": props.dark ? darken(color, 50) : color.tint(50).toString(),
          "hover-text-color": `var(${ns.cssVarName("color-white")})`,
          "hover-bg-color": buttonColor,
          "hover-border-color": buttonColor,
          "active-bg-color": activeBgColor,
          "active-text-color": `var(${ns.cssVarName("color-white")})`,
          "active-border-color": activeBgColor
        });
        if (_disabled.value) {
          styles[ns.cssVarBlockName("disabled-bg-color")] = props.dark ? darken(color, 90) : color.tint(90).toString();
          styles[ns.cssVarBlockName("disabled-text-color")] = props.dark ? darken(color, 50) : color.tint(50).toString();
          styles[ns.cssVarBlockName("disabled-border-color")] = props.dark ? darken(color, 80) : color.tint(80).toString();
        }
      } else {
        const hoverBgColor = props.dark ? darken(color, 30) : color.tint(30).toString();
        const textColor = color.isDark() ? `var(${ns.cssVarName("color-white")})` : `var(${ns.cssVarName("color-black")})`;
        styles = ns.cssVarBlock({
          "bg-color": buttonColor,
          "text-color": textColor,
          "border-color": buttonColor,
          "hover-bg-color": hoverBgColor,
          "hover-text-color": textColor,
          "hover-border-color": hoverBgColor,
          "active-bg-color": activeBgColor,
          "active-border-color": activeBgColor
        });
        if (_disabled.value) {
          const disabledButtonColor = props.dark ? darken(color, 50) : color.tint(50).toString();
          styles[ns.cssVarBlockName("disabled-bg-color")] = disabledButtonColor;
          styles[ns.cssVarBlockName("disabled-text-color")] = props.dark ? "rgba(255, 255, 255, 0.5)" : `var(${ns.cssVarName("color-white")})`;
          styles[ns.cssVarBlockName("disabled-border-color")] = disabledButtonColor;
        }
      }
    }
    return styles;
  });
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button2.mjs
var __default__21 = defineComponent27({
  name: "ElButton"
});
var _sfc_main24 = defineComponent27({
  ...__default__21,
  props: buttonProps,
  emits: buttonEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const buttonStyle = useButtonCustomStyle(props);
    const ns = useNamespace("button");
    const { _ref, _size, _type, _disabled, _props, shouldAddSpace, handleClick } = useButton(props, emit);
    expose({
      ref: _ref,
      size: _size,
      type: _type,
      disabled: _disabled,
      shouldAddSpace
    });
    return (_ctx, _cache) => {
      return openBlock23(), createBlock15(resolveDynamicComponent7(_ctx.tag), mergeProps7({
        ref_key: "_ref",
        ref: _ref
      }, unref39(_props), {
        class: [
          unref39(ns).b(),
          unref39(ns).m(unref39(_type)),
          unref39(ns).m(unref39(_size)),
          unref39(ns).is("disabled", unref39(_disabled)),
          unref39(ns).is("loading", _ctx.loading),
          unref39(ns).is("plain", _ctx.plain),
          unref39(ns).is("round", _ctx.round),
          unref39(ns).is("circle", _ctx.circle),
          unref39(ns).is("text", _ctx.text),
          unref39(ns).is("link", _ctx.link),
          unref39(ns).is("has-bg", _ctx.bg)
        ],
        style: unref39(buttonStyle),
        onClick: unref39(handleClick)
      }), {
        default: withCtx16(() => [
          _ctx.loading ? (openBlock23(), createElementBlock18(Fragment8, { key: 0 }, [
            _ctx.$slots.loading ? renderSlot22(_ctx.$slots, "loading", { key: 0 }) : (openBlock23(), createBlock15(unref39(ElIcon), {
              key: 1,
              class: normalizeClass16(unref39(ns).is("loading"))
            }, {
              default: withCtx16(() => [
                (openBlock23(), createBlock15(resolveDynamicComponent7(_ctx.loadingIcon)))
              ]),
              _: 1
            }, 8, ["class"]))
          ], 64)) : _ctx.icon || _ctx.$slots.icon ? (openBlock23(), createBlock15(unref39(ElIcon), { key: 1 }, {
            default: withCtx16(() => [
              _ctx.icon ? (openBlock23(), createBlock15(resolveDynamicComponent7(_ctx.icon), { key: 0 })) : renderSlot22(_ctx.$slots, "icon", { key: 1 })
            ]),
            _: 3
          })) : createCommentVNode10("v-if", true),
          _ctx.$slots.default ? (openBlock23(), createElementBlock18("span", {
            key: 2,
            class: normalizeClass16({ [unref39(ns).em("text", "expand")]: unref39(shouldAddSpace) })
          }, [
            renderSlot22(_ctx.$slots, "default")
          ], 2)) : createCommentVNode10("v-if", true)
        ]),
        _: 3
      }, 16, ["class", "style", "onClick"]);
    };
  }
});
var Button = _export_sfc(_sfc_main24, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/button/src/button.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button-group2.mjs
import { defineComponent as defineComponent28, provide as provide12, reactive as reactive7, toRef as toRef7, openBlock as openBlock24, createElementBlock as createElementBlock19, normalizeClass as normalizeClass17, unref as unref40, renderSlot as renderSlot23 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button-group.mjs
var buttonGroupProps = {
  size: buttonProps.size,
  type: buttonProps.type
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/src/button-group2.mjs
var __default__22 = defineComponent28({
  name: "ElButtonGroup"
});
var _sfc_main25 = defineComponent28({
  ...__default__22,
  props: buttonGroupProps,
  setup(__props) {
    const props = __props;
    provide12(buttonGroupContextKey, reactive7({
      size: toRef7(props, "size"),
      type: toRef7(props, "type")
    }));
    const ns = useNamespace("button");
    return (_ctx, _cache) => {
      return openBlock24(), createElementBlock19("div", {
        class: normalizeClass17(`${unref40(ns).b("group")}`)
      }, [
        renderSlot23(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var ButtonGroup = _export_sfc(_sfc_main25, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/button/src/button-group.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/button/index.mjs
var ElButton = withInstall(Button, {
  ButtonGroup
});
var ElButtonGroup = withNoopInstall(ButtonGroup);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/calendar2.mjs
import { defineComponent as defineComponent35, computed as computed45, openBlock as openBlock30, createElementBlock as createElementBlock25, normalizeClass as normalizeClass23, unref as unref46, createElementVNode as createElementVNode15, renderSlot as renderSlot26, toDisplayString as toDisplayString13, createVNode as createVNode17, withCtx as withCtx20, createTextVNode as createTextVNode5, createCommentVNode as createCommentVNode16, createSlots as createSlots2, normalizeProps, mergeProps as mergeProps10, Fragment as Fragment11, renderList as renderList4, createBlock as createBlock19 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/date-table2.mjs
import { defineComponent as defineComponent34, openBlock as openBlock29, createElementBlock as createElementBlock24, normalizeClass as normalizeClass22, unref as unref45, Fragment as Fragment10, renderList as renderList3, toDisplayString as toDisplayString12, createCommentVNode as createCommentVNode15, createElementVNode as createElementVNode14, renderSlot as renderSlot25 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker.mjs
var import_dayjs4 = __toESM(require_dayjs_min(), 1);
var import_customParseFormat = __toESM(require_customParseFormat(), 1);
import { defineComponent as defineComponent33, ref as ref44, provide as provide14, createVNode as createVNode16, mergeProps as mergeProps9 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/constants.mjs
var timeUnits = ["hours", "minutes", "seconds"];
var DEFAULT_FORMATS_TIME = "HH:mm:ss";
var DEFAULT_FORMATS_DATE = "YYYY-MM-DD";
var DEFAULT_FORMATS_DATEPICKER = {
  date: DEFAULT_FORMATS_DATE,
  dates: DEFAULT_FORMATS_DATE,
  week: "gggg[w]ww",
  year: "YYYY",
  month: "YYYY-MM",
  datetime: `${DEFAULT_FORMATS_DATE} ${DEFAULT_FORMATS_TIME}`,
  monthrange: "YYYY-MM",
  daterange: DEFAULT_FORMATS_DATE,
  datetimerange: `${DEFAULT_FORMATS_DATE} ${DEFAULT_FORMATS_TIME}`
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/common/picker.mjs
import { defineComponent as defineComponent29, useAttrs as useAttrs3, inject as inject23, ref as ref39, computed as computed39, watch as watch27, nextTick as nextTick10, unref as unref41, provide as provide13, openBlock as openBlock25, createBlock as createBlock16, mergeProps as mergeProps8, withCtx as withCtx17, normalizeClass as normalizeClass18, normalizeStyle as normalizeStyle10, withModifiers as withModifiers4, resolveDynamicComponent as resolveDynamicComponent8, createCommentVNode as createCommentVNode11, createElementBlock as createElementBlock20, createElementVNode as createElementVNode10, renderSlot as renderSlot24, toDisplayString as toDisplayString8 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/utils.mjs
var import_dayjs = __toESM(require_dayjs_min(), 1);
import { isDate as isDate4, isArray as isArray10 } from "@vue/shared";
var buildTimeList = (value, bound) => {
  return [
    value > 0 ? value - 1 : void 0,
    value,
    value < bound ? value + 1 : void 0
  ];
};
var rangeArr = (n) => Array.from(Array.from({ length: n }).keys());
var extractDateFormat = (format2) => {
  return format2.replace(/\W?m{1,2}|\W?ZZ/g, "").replace(/\W?h{1,2}|\W?s{1,3}|\W?a/gi, "").trim();
};
var extractTimeFormat = (format2) => {
  return format2.replace(/\W?D{1,2}|\W?Do|\W?d{1,4}|\W?M{1,4}|\W?Y{2,4}/g, "").trim();
};
var dateEquals = function(a2, b2) {
  const aIsDate = isDate4(a2);
  const bIsDate = isDate4(b2);
  if (aIsDate && bIsDate) {
    return a2.getTime() === b2.getTime();
  }
  if (!aIsDate && !bIsDate) {
    return a2 === b2;
  }
  return false;
};
var valueEquals = function(a2, b2) {
  const aIsArray = isArray10(a2);
  const bIsArray = isArray10(b2);
  if (aIsArray && bIsArray) {
    if (a2.length !== b2.length) {
      return false;
    }
    return a2.every((item, index) => dateEquals(item, b2[index]));
  }
  if (!aIsArray && !bIsArray) {
    return dateEquals(a2, b2);
  }
  return false;
};
var parseDate = function(date5, format2, lang) {
  const day = isEmpty2(format2) || format2 === "x" ? (0, import_dayjs.default)(date5).locale(lang) : (0, import_dayjs.default)(date5, format2).locale(lang);
  return day.isValid() ? day : void 0;
};
var formatter = function(date5, format2, lang) {
  if (isEmpty2(format2))
    return date5;
  if (format2 === "x")
    return +date5;
  return (0, import_dayjs.default)(date5).locale(lang).format(format2);
};
var makeList = (total2, method5) => {
  var _a2;
  const arr = [];
  const disabledArr = method5 == null ? void 0 : method5();
  for (let i = 0; i < total2; i++) {
    arr.push((_a2 = disabledArr == null ? void 0 : disabledArr.includes(i)) != null ? _a2 : false);
  }
  return arr;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/props/shared.mjs
var disabledTimeListsProps = buildProps({
  disabledHours: {
    type: definePropType(Function)
  },
  disabledMinutes: {
    type: definePropType(Function)
  },
  disabledSeconds: {
    type: definePropType(Function)
  }
});
var timePanelSharedProps = buildProps({
  visible: Boolean,
  actualVisible: {
    type: Boolean,
    default: void 0
  },
  format: {
    type: String,
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/common/props.mjs
var timePickerDefaultProps = buildProps({
  id: {
    type: definePropType([Array, String])
  },
  name: {
    type: definePropType([Array, String]),
    default: ""
  },
  popperClass: {
    type: String,
    default: ""
  },
  format: String,
  valueFormat: String,
  type: {
    type: String,
    default: ""
  },
  clearable: {
    type: Boolean,
    default: true
  },
  clearIcon: {
    type: definePropType([String, Object]),
    default: circle_close_default
  },
  editable: {
    type: Boolean,
    default: true
  },
  prefixIcon: {
    type: definePropType([String, Object]),
    default: ""
  },
  size: useSizeProp,
  readonly: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  placeholder: {
    type: String,
    default: ""
  },
  popperOptions: {
    type: definePropType(Object),
    default: () => ({})
  },
  modelValue: {
    type: definePropType([Date, Array, String, Number]),
    default: ""
  },
  rangeSeparator: {
    type: String,
    default: "-"
  },
  startPlaceholder: String,
  endPlaceholder: String,
  defaultValue: {
    type: definePropType([Date, Array])
  },
  defaultTime: {
    type: definePropType([Date, Array])
  },
  isRange: {
    type: Boolean,
    default: false
  },
  ...disabledTimeListsProps,
  disabledDate: {
    type: Function
  },
  cellClassName: {
    type: Function
  },
  shortcuts: {
    type: Array,
    default: () => []
  },
  arrowControl: {
    type: Boolean,
    default: false
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: definePropType([String, Number]),
    default: 0
  },
  validateEvent: {
    type: Boolean,
    default: true
  },
  unlinkPanels: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/common/picker.mjs
import { isArray as isArray11 } from "@vue/shared";
var _hoisted_17 = ["id", "name", "placeholder", "value", "disabled", "readonly"];
var _hoisted_24 = ["id", "name", "placeholder", "value", "disabled", "readonly"];
var __default__23 = defineComponent29({
  name: "Picker"
});
var _sfc_main26 = defineComponent29({
  ...__default__23,
  props: timePickerDefaultProps,
  emits: [
    "update:modelValue",
    "change",
    "focus",
    "blur",
    "calendar-change",
    "panel-change",
    "visible-change",
    "keydown"
  ],
  setup(__props, { expose, emit }) {
    const props = __props;
    const attrs = useAttrs3();
    const { lang } = useLocale();
    const nsDate = useNamespace("date");
    const nsInput = useNamespace("input");
    const nsRange = useNamespace("range");
    const { form, formItem } = useFormItem();
    const elPopperOptions = inject23("ElPopperOptions", {});
    const refPopper = ref39();
    const inputRef = ref39();
    const pickerVisible = ref39(false);
    const pickerActualVisible = ref39(false);
    const valueOnOpen = ref39(null);
    let hasJustTabExitedInput = false;
    let ignoreFocusEvent2 = false;
    const rangeInputKls = computed39(() => [
      nsDate.b("editor"),
      nsDate.bm("editor", props.type),
      nsInput.e("wrapper"),
      nsDate.is("disabled", pickerDisabled.value),
      nsDate.is("active", pickerVisible.value),
      nsRange.b("editor"),
      pickerSize ? nsRange.bm("editor", pickerSize.value) : "",
      attrs.class
    ]);
    const clearIconKls = computed39(() => [
      nsInput.e("icon"),
      nsRange.e("close-icon"),
      !showClose.value ? nsRange.e("close-icon--hidden") : ""
    ]);
    watch27(pickerVisible, (val) => {
      if (!val) {
        userInput.value = null;
        nextTick10(() => {
          emitChange(props.modelValue);
        });
      } else {
        nextTick10(() => {
          if (val) {
            valueOnOpen.value = props.modelValue;
          }
        });
      }
    });
    const emitChange = (val, isClear) => {
      if (isClear || !valueEquals(val, valueOnOpen.value)) {
        emit("change", val);
        props.validateEvent && (formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err)));
      }
    };
    const emitInput = (input) => {
      if (!valueEquals(props.modelValue, input)) {
        let formatted;
        if (isArray11(input)) {
          formatted = input.map((item) => formatter(item, props.valueFormat, lang.value));
        } else if (input) {
          formatted = formatter(input, props.valueFormat, lang.value);
        }
        emit("update:modelValue", input ? formatted : input, lang.value);
      }
    };
    const emitKeydown = (e) => {
      emit("keydown", e);
    };
    const refInput = computed39(() => {
      if (inputRef.value) {
        const _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;
        return Array.from(_r.querySelectorAll("input"));
      }
      return [];
    });
    const setSelectionRange = (start, end2, pos) => {
      const _inputs = refInput.value;
      if (!_inputs.length)
        return;
      if (!pos || pos === "min") {
        _inputs[0].setSelectionRange(start, end2);
        _inputs[0].focus();
      } else if (pos === "max") {
        _inputs[1].setSelectionRange(start, end2);
        _inputs[1].focus();
      }
    };
    const focusOnInputBox = () => {
      focus(true, true);
      nextTick10(() => {
        ignoreFocusEvent2 = false;
      });
    };
    const onPick = (date5 = "", visible = false) => {
      if (!visible) {
        ignoreFocusEvent2 = true;
      }
      pickerVisible.value = visible;
      let result2;
      if (isArray11(date5)) {
        result2 = date5.map((_2) => _2.toDate());
      } else {
        result2 = date5 ? date5.toDate() : date5;
      }
      userInput.value = null;
      emitInput(result2);
    };
    const onBeforeShow = () => {
      pickerActualVisible.value = true;
    };
    const onShow = () => {
      emit("visible-change", true);
    };
    const onKeydownPopperContent = (event) => {
      if ((event == null ? void 0 : event.key) === EVENT_CODE.esc) {
        focus(true, true);
      }
    };
    const onHide = () => {
      pickerActualVisible.value = false;
      pickerVisible.value = false;
      ignoreFocusEvent2 = false;
      emit("visible-change", false);
    };
    const handleOpen = () => {
      pickerVisible.value = true;
    };
    const handleClose = () => {
      pickerVisible.value = false;
    };
    const focus = (focusStartInput = true, isIgnoreFocusEvent = false) => {
      ignoreFocusEvent2 = isIgnoreFocusEvent;
      const [leftInput, rightInput] = unref41(refInput);
      let input = leftInput;
      if (!focusStartInput && isRangeInput.value) {
        input = rightInput;
      }
      if (input) {
        input.focus();
      }
    };
    const handleFocusInput = (e) => {
      if (props.readonly || pickerDisabled.value || pickerVisible.value || ignoreFocusEvent2) {
        return;
      }
      pickerVisible.value = true;
      emit("focus", e);
    };
    let currentHandleBlurDeferCallback = void 0;
    const handleBlurInput = (e) => {
      const handleBlurDefer = async () => {
        setTimeout(() => {
          var _a2;
          if (currentHandleBlurDeferCallback === handleBlurDefer) {
            if (!(((_a2 = refPopper.value) == null ? void 0 : _a2.isFocusInsideContent()) && !hasJustTabExitedInput) && refInput.value.filter((input) => {
              return input.contains(document.activeElement);
            }).length === 0) {
              handleChange();
              pickerVisible.value = false;
              emit("blur", e);
              props.validateEvent && (formItem == null ? void 0 : formItem.validate("blur").catch((err) => debugWarn(err)));
            }
            hasJustTabExitedInput = false;
          }
        }, 0);
      };
      currentHandleBlurDeferCallback = handleBlurDefer;
      handleBlurDefer();
    };
    const pickerDisabled = computed39(() => {
      return props.disabled || (form == null ? void 0 : form.disabled);
    });
    const parsedValue2 = computed39(() => {
      let dayOrDays;
      if (valueIsEmpty.value) {
        if (pickerOptions.value.getDefaultValue) {
          dayOrDays = pickerOptions.value.getDefaultValue();
        }
      } else {
        if (isArray11(props.modelValue)) {
          dayOrDays = props.modelValue.map((d2) => parseDate(d2, props.valueFormat, lang.value));
        } else {
          dayOrDays = parseDate(props.modelValue, props.valueFormat, lang.value);
        }
      }
      if (pickerOptions.value.getRangeAvailableTime) {
        const availableResult = pickerOptions.value.getRangeAvailableTime(dayOrDays);
        if (!isEqual_default(availableResult, dayOrDays)) {
          dayOrDays = availableResult;
          emitInput(isArray11(dayOrDays) ? dayOrDays.map((_2) => _2.toDate()) : dayOrDays.toDate());
        }
      }
      if (isArray11(dayOrDays) && dayOrDays.some((day) => !day)) {
        dayOrDays = [];
      }
      return dayOrDays;
    });
    const displayValue = computed39(() => {
      if (!pickerOptions.value.panelReady)
        return "";
      const formattedValue = formatDayjsToString(parsedValue2.value);
      if (isArray11(userInput.value)) {
        return [
          userInput.value[0] || formattedValue && formattedValue[0] || "",
          userInput.value[1] || formattedValue && formattedValue[1] || ""
        ];
      } else if (userInput.value !== null) {
        return userInput.value;
      }
      if (!isTimePicker.value && valueIsEmpty.value)
        return "";
      if (!pickerVisible.value && valueIsEmpty.value)
        return "";
      if (formattedValue) {
        return isDatesPicker.value ? formattedValue.join(", ") : formattedValue;
      }
      return "";
    });
    const isTimeLikePicker = computed39(() => props.type.includes("time"));
    const isTimePicker = computed39(() => props.type.startsWith("time"));
    const isDatesPicker = computed39(() => props.type === "dates");
    const triggerIcon = computed39(() => props.prefixIcon || (isTimeLikePicker.value ? clock_default : calendar_default));
    const showClose = ref39(false);
    const onClearIconClick = (event) => {
      if (props.readonly || pickerDisabled.value)
        return;
      if (showClose.value) {
        event.stopPropagation();
        focusOnInputBox();
        emitInput(null);
        emitChange(null, true);
        showClose.value = false;
        pickerVisible.value = false;
        pickerOptions.value.handleClear && pickerOptions.value.handleClear();
      }
    };
    const valueIsEmpty = computed39(() => {
      const { modelValue } = props;
      return !modelValue || isArray11(modelValue) && !modelValue.filter(Boolean).length;
    });
    const onMouseDownInput = async (event) => {
      var _a2;
      if (props.readonly || pickerDisabled.value)
        return;
      if (((_a2 = event.target) == null ? void 0 : _a2.tagName) !== "INPUT" || refInput.value.includes(document.activeElement)) {
        pickerVisible.value = true;
      }
    };
    const onMouseEnter = () => {
      if (props.readonly || pickerDisabled.value)
        return;
      if (!valueIsEmpty.value && props.clearable) {
        showClose.value = true;
      }
    };
    const onMouseLeave = () => {
      showClose.value = false;
    };
    const onTouchStartInput = (event) => {
      var _a2;
      if (props.readonly || pickerDisabled.value)
        return;
      if (((_a2 = event.touches[0].target) == null ? void 0 : _a2.tagName) !== "INPUT" || refInput.value.includes(document.activeElement)) {
        pickerVisible.value = true;
      }
    };
    const isRangeInput = computed39(() => {
      return props.type.includes("range");
    });
    const pickerSize = useFormSize();
    const popperEl = computed39(() => {
      var _a2, _b;
      return (_b = (_a2 = unref41(refPopper)) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.contentRef;
    });
    const actualInputRef = computed39(() => {
      var _a2;
      if (unref41(isRangeInput)) {
        return unref41(inputRef);
      }
      return (_a2 = unref41(inputRef)) == null ? void 0 : _a2.$el;
    });
    onClickOutside(actualInputRef, (e) => {
      const unrefedPopperEl = unref41(popperEl);
      const inputEl = unref41(actualInputRef);
      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl))
        return;
      pickerVisible.value = false;
    });
    const userInput = ref39(null);
    const handleChange = () => {
      if (userInput.value) {
        const value = parseUserInputToDayjs(displayValue.value);
        if (value) {
          if (isValidValue3(value)) {
            emitInput(isArray11(value) ? value.map((_2) => _2.toDate()) : value.toDate());
            userInput.value = null;
          }
        }
      }
      if (userInput.value === "") {
        emitInput(null);
        emitChange(null);
        userInput.value = null;
      }
    };
    const parseUserInputToDayjs = (value) => {
      if (!value)
        return null;
      return pickerOptions.value.parseUserInput(value);
    };
    const formatDayjsToString = (value) => {
      if (!value)
        return null;
      return pickerOptions.value.formatToString(value);
    };
    const isValidValue3 = (value) => {
      return pickerOptions.value.isValidValue(value);
    };
    const handleKeydownInput = async (event) => {
      if (props.readonly || pickerDisabled.value)
        return;
      const { code } = event;
      emitKeydown(event);
      if (code === EVENT_CODE.esc) {
        if (pickerVisible.value === true) {
          pickerVisible.value = false;
          event.preventDefault();
          event.stopPropagation();
        }
        return;
      }
      if (code === EVENT_CODE.down) {
        if (pickerOptions.value.handleFocusPicker) {
          event.preventDefault();
          event.stopPropagation();
        }
        if (pickerVisible.value === false) {
          pickerVisible.value = true;
          await nextTick10();
        }
        if (pickerOptions.value.handleFocusPicker) {
          pickerOptions.value.handleFocusPicker();
          return;
        }
      }
      if (code === EVENT_CODE.tab) {
        hasJustTabExitedInput = true;
        return;
      }
      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {
        if (userInput.value === null || userInput.value === "" || isValidValue3(parseUserInputToDayjs(displayValue.value))) {
          handleChange();
          pickerVisible.value = false;
        }
        event.stopPropagation();
        return;
      }
      if (userInput.value) {
        event.stopPropagation();
        return;
      }
      if (pickerOptions.value.handleKeydownInput) {
        pickerOptions.value.handleKeydownInput(event);
      }
    };
    const onUserInput = (e) => {
      userInput.value = e;
      if (!pickerVisible.value) {
        pickerVisible.value = true;
      }
    };
    const handleStartInput = (event) => {
      const target2 = event.target;
      if (userInput.value) {
        userInput.value = [target2.value, userInput.value[1]];
      } else {
        userInput.value = [target2.value, null];
      }
    };
    const handleEndInput = (event) => {
      const target2 = event.target;
      if (userInput.value) {
        userInput.value = [userInput.value[0], target2.value];
      } else {
        userInput.value = [null, target2.value];
      }
    };
    const handleStartChange = () => {
      var _a2;
      const values2 = userInput.value;
      const value = parseUserInputToDayjs(values2 && values2[0]);
      const parsedVal = unref41(parsedValue2);
      if (value && value.isValid()) {
        userInput.value = [
          formatDayjsToString(value),
          ((_a2 = displayValue.value) == null ? void 0 : _a2[1]) || null
        ];
        const newValue = [value, parsedVal && (parsedVal[1] || null)];
        if (isValidValue3(newValue)) {
          emitInput(newValue);
          userInput.value = null;
        }
      }
    };
    const handleEndChange = () => {
      var _a2;
      const values2 = unref41(userInput);
      const value = parseUserInputToDayjs(values2 && values2[1]);
      const parsedVal = unref41(parsedValue2);
      if (value && value.isValid()) {
        userInput.value = [
          ((_a2 = unref41(displayValue)) == null ? void 0 : _a2[0]) || null,
          formatDayjsToString(value)
        ];
        const newValue = [parsedVal && parsedVal[0], value];
        if (isValidValue3(newValue)) {
          emitInput(newValue);
          userInput.value = null;
        }
      }
    };
    const pickerOptions = ref39({});
    const onSetPickerOption = (e) => {
      pickerOptions.value[e[0]] = e[1];
      pickerOptions.value.panelReady = true;
    };
    const onCalendarChange = (e) => {
      emit("calendar-change", e);
    };
    const onPanelChange = (value, mode, view) => {
      emit("panel-change", value, mode, view);
    };
    provide13("EP_PICKER_BASE", {
      props
    });
    expose({
      focus,
      handleFocusInput,
      handleBlurInput,
      handleOpen,
      handleClose,
      onPick
    });
    return (_ctx, _cache) => {
      return openBlock25(), createBlock16(unref41(ElTooltip), mergeProps8({
        ref_key: "refPopper",
        ref: refPopper,
        visible: pickerVisible.value,
        effect: "light",
        pure: "",
        trigger: "click"
      }, _ctx.$attrs, {
        role: "dialog",
        teleported: "",
        transition: `${unref41(nsDate).namespace.value}-zoom-in-top`,
        "popper-class": [`${unref41(nsDate).namespace.value}-picker__popper`, _ctx.popperClass],
        "popper-options": unref41(elPopperOptions),
        "fallback-placements": ["bottom", "top", "right", "left"],
        "gpu-acceleration": false,
        "stop-popper-mouse-event": false,
        "hide-after": 0,
        persistent: "",
        onBeforeShow,
        onShow,
        onHide
      }), {
        default: withCtx17(() => [
          !unref41(isRangeInput) ? (openBlock25(), createBlock16(unref41(ElInput), {
            key: 0,
            id: _ctx.id,
            ref_key: "inputRef",
            ref: inputRef,
            "container-role": "combobox",
            "model-value": unref41(displayValue),
            name: _ctx.name,
            size: unref41(pickerSize),
            disabled: unref41(pickerDisabled),
            placeholder: _ctx.placeholder,
            class: normalizeClass18([unref41(nsDate).b("editor"), unref41(nsDate).bm("editor", _ctx.type), _ctx.$attrs.class]),
            style: normalizeStyle10(_ctx.$attrs.style),
            readonly: !_ctx.editable || _ctx.readonly || unref41(isDatesPicker) || _ctx.type === "week",
            label: _ctx.label,
            tabindex: _ctx.tabindex,
            "validate-event": false,
            onInput: onUserInput,
            onFocus: handleFocusInput,
            onBlur: handleBlurInput,
            onKeydown: handleKeydownInput,
            onChange: handleChange,
            onMousedown: onMouseDownInput,
            onMouseenter: onMouseEnter,
            onMouseleave: onMouseLeave,
            onTouchstart: onTouchStartInput,
            onClick: _cache[0] || (_cache[0] = withModifiers4(() => {
            }, ["stop"]))
          }, {
            prefix: withCtx17(() => [
              unref41(triggerIcon) ? (openBlock25(), createBlock16(unref41(ElIcon), {
                key: 0,
                class: normalizeClass18(unref41(nsInput).e("icon")),
                onMousedown: withModifiers4(onMouseDownInput, ["prevent"]),
                onTouchstart: onTouchStartInput
              }, {
                default: withCtx17(() => [
                  (openBlock25(), createBlock16(resolveDynamicComponent8(unref41(triggerIcon))))
                ]),
                _: 1
              }, 8, ["class", "onMousedown"])) : createCommentVNode11("v-if", true)
            ]),
            suffix: withCtx17(() => [
              showClose.value && _ctx.clearIcon ? (openBlock25(), createBlock16(unref41(ElIcon), {
                key: 0,
                class: normalizeClass18(`${unref41(nsInput).e("icon")} clear-icon`),
                onClick: withModifiers4(onClearIconClick, ["stop"])
              }, {
                default: withCtx17(() => [
                  (openBlock25(), createBlock16(resolveDynamicComponent8(_ctx.clearIcon)))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : createCommentVNode11("v-if", true)
            ]),
            _: 1
          }, 8, ["id", "model-value", "name", "size", "disabled", "placeholder", "class", "style", "readonly", "label", "tabindex", "onKeydown"])) : (openBlock25(), createElementBlock20("div", {
            key: 1,
            ref_key: "inputRef",
            ref: inputRef,
            class: normalizeClass18(unref41(rangeInputKls)),
            style: normalizeStyle10(_ctx.$attrs.style),
            onClick: handleFocusInput,
            onMouseenter: onMouseEnter,
            onMouseleave: onMouseLeave,
            onTouchstart: onTouchStartInput,
            onKeydown: handleKeydownInput
          }, [
            unref41(triggerIcon) ? (openBlock25(), createBlock16(unref41(ElIcon), {
              key: 0,
              class: normalizeClass18([unref41(nsInput).e("icon"), unref41(nsRange).e("icon")]),
              onMousedown: withModifiers4(onMouseDownInput, ["prevent"]),
              onTouchstart: onTouchStartInput
            }, {
              default: withCtx17(() => [
                (openBlock25(), createBlock16(resolveDynamicComponent8(unref41(triggerIcon))))
              ]),
              _: 1
            }, 8, ["class", "onMousedown"])) : createCommentVNode11("v-if", true),
            createElementVNode10("input", {
              id: _ctx.id && _ctx.id[0],
              autocomplete: "off",
              name: _ctx.name && _ctx.name[0],
              placeholder: _ctx.startPlaceholder,
              value: unref41(displayValue) && unref41(displayValue)[0],
              disabled: unref41(pickerDisabled),
              readonly: !_ctx.editable || _ctx.readonly,
              class: normalizeClass18(unref41(nsRange).b("input")),
              onMousedown: onMouseDownInput,
              onInput: handleStartInput,
              onChange: handleStartChange,
              onFocus: handleFocusInput,
              onBlur: handleBlurInput
            }, null, 42, _hoisted_17),
            renderSlot24(_ctx.$slots, "range-separator", {}, () => [
              createElementVNode10("span", {
                class: normalizeClass18(unref41(nsRange).b("separator"))
              }, toDisplayString8(_ctx.rangeSeparator), 3)
            ]),
            createElementVNode10("input", {
              id: _ctx.id && _ctx.id[1],
              autocomplete: "off",
              name: _ctx.name && _ctx.name[1],
              placeholder: _ctx.endPlaceholder,
              value: unref41(displayValue) && unref41(displayValue)[1],
              disabled: unref41(pickerDisabled),
              readonly: !_ctx.editable || _ctx.readonly,
              class: normalizeClass18(unref41(nsRange).b("input")),
              onMousedown: onMouseDownInput,
              onFocus: handleFocusInput,
              onBlur: handleBlurInput,
              onInput: handleEndInput,
              onChange: handleEndChange
            }, null, 42, _hoisted_24),
            _ctx.clearIcon ? (openBlock25(), createBlock16(unref41(ElIcon), {
              key: 1,
              class: normalizeClass18(unref41(clearIconKls)),
              onClick: onClearIconClick
            }, {
              default: withCtx17(() => [
                (openBlock25(), createBlock16(resolveDynamicComponent8(_ctx.clearIcon)))
              ]),
              _: 1
            }, 8, ["class"])) : createCommentVNode11("v-if", true)
          ], 38))
        ]),
        content: withCtx17(() => [
          renderSlot24(_ctx.$slots, "default", {
            visible: pickerVisible.value,
            actualVisible: pickerActualVisible.value,
            parsedValue: unref41(parsedValue2),
            format: _ctx.format,
            unlinkPanels: _ctx.unlinkPanels,
            type: _ctx.type,
            defaultValue: _ctx.defaultValue,
            onPick,
            onSelectRange: setSelectionRange,
            onSetPickerOption,
            onCalendarChange,
            onPanelChange,
            onKeydown: onKeydownPopperContent,
            onMousedown: _cache[1] || (_cache[1] = withModifiers4(() => {
            }, ["stop"]))
          })
        ]),
        _: 3
      }, 16, ["visible", "transition", "popper-class", "popper-options"]);
    };
  }
});
var CommonPicker = _export_sfc(_sfc_main26, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker-com/panel-time-pick.mjs
var import_dayjs2 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent31, inject as inject24, ref as ref42, computed as computed41, openBlock as openBlock27, createBlock as createBlock18, Transition as Transition6, unref as unref43, withCtx as withCtx19, createElementBlock as createElementBlock22, normalizeClass as normalizeClass20, createElementVNode as createElementVNode12, createVNode as createVNode14, toDisplayString as toDisplayString10, createCommentVNode as createCommentVNode13 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/props/panel-time-picker.mjs
var panelTimePickerProps = buildProps({
  ...timePanelSharedProps,
  datetimeRole: String,
  parsedValue: {
    type: definePropType(Object)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/composables/use-time-panel.mjs
var useTimePanel = ({
  getAvailableHours,
  getAvailableMinutes,
  getAvailableSeconds
}) => {
  const getAvailableTime = (date5, role, first, compareDate) => {
    const availableTimeGetters = {
      hour: getAvailableHours,
      minute: getAvailableMinutes,
      second: getAvailableSeconds
    };
    let result2 = date5;
    ["hour", "minute", "second"].forEach((type4) => {
      if (availableTimeGetters[type4]) {
        let availableTimeSlots;
        const method5 = availableTimeGetters[type4];
        switch (type4) {
          case "minute": {
            availableTimeSlots = method5(result2.hour(), role, compareDate);
            break;
          }
          case "second": {
            availableTimeSlots = method5(result2.hour(), result2.minute(), role, compareDate);
            break;
          }
          default: {
            availableTimeSlots = method5(role, compareDate);
            break;
          }
        }
        if ((availableTimeSlots == null ? void 0 : availableTimeSlots.length) && !availableTimeSlots.includes(result2[type4]())) {
          const pos = first ? 0 : availableTimeSlots.length - 1;
          result2 = result2[type4](availableTimeSlots[pos]);
        }
      }
    });
    return result2;
  };
  const timePickerOptions = {};
  const onSetOption = ([key, val]) => {
    timePickerOptions[key] = val;
  };
  return {
    timePickerOptions,
    getAvailableTime,
    onSetOption
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/composables/use-time-picker.mjs
import { ref as ref40, watch as watch28 } from "vue";
var makeAvailableArr = (disabledList) => {
  const trueOrNumber = (isDisabled, index) => isDisabled || index;
  const getNumber = (predicate) => predicate !== true;
  return disabledList.map(trueOrNumber).filter(getNumber);
};
var getTimeLists = (disabledHours, disabledMinutes, disabledSeconds) => {
  const getHoursList = (role, compare) => {
    return makeList(24, disabledHours && (() => disabledHours == null ? void 0 : disabledHours(role, compare)));
  };
  const getMinutesList = (hour, role, compare) => {
    return makeList(60, disabledMinutes && (() => disabledMinutes == null ? void 0 : disabledMinutes(hour, role, compare)));
  };
  const getSecondsList = (hour, minute, role, compare) => {
    return makeList(60, disabledSeconds && (() => disabledSeconds == null ? void 0 : disabledSeconds(hour, minute, role, compare)));
  };
  return {
    getHoursList,
    getMinutesList,
    getSecondsList
  };
};
var buildAvailableTimeSlotGetter = (disabledHours, disabledMinutes, disabledSeconds) => {
  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(disabledHours, disabledMinutes, disabledSeconds);
  const getAvailableHours = (role, compare) => {
    return makeAvailableArr(getHoursList(role, compare));
  };
  const getAvailableMinutes = (hour, role, compare) => {
    return makeAvailableArr(getMinutesList(hour, role, compare));
  };
  const getAvailableSeconds = (hour, minute, role, compare) => {
    return makeAvailableArr(getSecondsList(hour, minute, role, compare));
  };
  return {
    getAvailableHours,
    getAvailableMinutes,
    getAvailableSeconds
  };
};
var useOldValue = (props) => {
  const oldValue = ref40(props.parsedValue);
  watch28(() => props.visible, (val) => {
    if (!val) {
      oldValue.value = props.parsedValue;
    }
  });
  return oldValue;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker-com/basic-time-spinner.mjs
import { defineComponent as defineComponent30, ref as ref41, computed as computed40, unref as unref42, nextTick as nextTick12, onMounted as onMounted22, watch as watch29, openBlock as openBlock26, createElementBlock as createElementBlock21, normalizeClass as normalizeClass19, Fragment as Fragment9, renderList as renderList2, createBlock as createBlock17, withCtx as withCtx18, createTextVNode as createTextVNode4, toDisplayString as toDisplayString9, createCommentVNode as createCommentVNode12, withDirectives as withDirectives7, createVNode as createVNode13, createElementVNode as createElementVNode11 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/directives/click-outside/index.mjs
var nodeList = /* @__PURE__ */ new Map();
var startClick;
if (isClient) {
  document.addEventListener("mousedown", (e) => startClick = e);
  document.addEventListener("mouseup", (e) => {
    for (const handlers2 of nodeList.values()) {
      for (const { documentHandler } of handlers2) {
        documentHandler(e, startClick);
      }
    }
  });
}
function createDocumentHandler(el, binding) {
  let excludes = [];
  if (Array.isArray(binding.arg)) {
    excludes = binding.arg;
  } else if (isElement2(binding.arg)) {
    excludes.push(binding.arg);
  }
  return function(mouseup, mousedown) {
    const popperRef = binding.instance.popperRef;
    const mouseUpTarget = mouseup.target;
    const mouseDownTarget = mousedown == null ? void 0 : mousedown.target;
    const isBound = !binding || !binding.instance;
    const isTargetExists = !mouseUpTarget || !mouseDownTarget;
    const isContainedByEl = el.contains(mouseUpTarget) || el.contains(mouseDownTarget);
    const isSelf = el === mouseUpTarget;
    const isTargetExcluded = excludes.length && excludes.some((item) => item == null ? void 0 : item.contains(mouseUpTarget)) || excludes.length && excludes.includes(mouseDownTarget);
    const isContainedByPopper = popperRef && (popperRef.contains(mouseUpTarget) || popperRef.contains(mouseDownTarget));
    if (isBound || isTargetExists || isContainedByEl || isSelf || isTargetExcluded || isContainedByPopper) {
      return;
    }
    binding.value(mouseup, mousedown);
  };
}
var ClickOutside = {
  beforeMount(el, binding) {
    if (!nodeList.has(el)) {
      nodeList.set(el, []);
    }
    nodeList.get(el).push({
      documentHandler: createDocumentHandler(el, binding),
      bindingFn: binding.value
    });
  },
  updated(el, binding) {
    if (!nodeList.has(el)) {
      nodeList.set(el, []);
    }
    const handlers2 = nodeList.get(el);
    const oldHandlerIndex = handlers2.findIndex((item) => item.bindingFn === binding.oldValue);
    const newHandler = {
      documentHandler: createDocumentHandler(el, binding),
      bindingFn: binding.value
    };
    if (oldHandlerIndex >= 0) {
      handlers2.splice(oldHandlerIndex, 1, newHandler);
    } else {
      handlers2.push(newHandler);
    }
  },
  unmounted(el) {
    nodeList.delete(el);
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/directives/repeat-click/index.mjs
import { isFunction as isFunction10 } from "@vue/shared";
var REPEAT_INTERVAL = 100;
var REPEAT_DELAY = 600;
var vRepeatClick = {
  beforeMount(el, binding) {
    const value = binding.value;
    const { interval = REPEAT_INTERVAL, delay: delay2 = REPEAT_DELAY } = isFunction10(value) ? {} : value;
    let intervalId;
    let delayId;
    const handler = () => isFunction10(value) ? value() : value.handler();
    const clear2 = () => {
      if (delayId) {
        clearTimeout(delayId);
        delayId = void 0;
      }
      if (intervalId) {
        clearInterval(intervalId);
        intervalId = void 0;
      }
    };
    el.addEventListener("mousedown", (evt) => {
      if (evt.button !== 0)
        return;
      clear2();
      handler();
      document.addEventListener("mouseup", () => clear2(), {
        once: true
      });
      delayId = setTimeout(() => {
        intervalId = setInterval(() => {
          handler();
        }, interval);
      }, delay2);
    });
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/directives/trap-focus/index.mjs
import { nextTick as nextTick11 } from "vue";
var FOCUSABLE_CHILDREN = "_trap-focus-children";
var FOCUS_STACK = [];
var FOCUS_HANDLER = (e) => {
  var _a2;
  if (FOCUS_STACK.length === 0)
    return;
  const focusableElement = FOCUS_STACK[FOCUS_STACK.length - 1][FOCUSABLE_CHILDREN];
  if (focusableElement.length > 0 && e.code === EVENT_CODE.tab) {
    if (focusableElement.length === 1) {
      e.preventDefault();
      if (document.activeElement !== focusableElement[0]) {
        focusableElement[0].focus();
      }
      return;
    }
    const goingBackward = e.shiftKey;
    const isFirst = e.target === focusableElement[0];
    const isLast = e.target === focusableElement[focusableElement.length - 1];
    if (isFirst && goingBackward) {
      e.preventDefault();
      focusableElement[focusableElement.length - 1].focus();
    }
    if (isLast && !goingBackward) {
      e.preventDefault();
      focusableElement[0].focus();
    }
    if (false) {
      const index = focusableElement.indexOf(e.target);
      if (index !== -1) {
        (_a2 = focusableElement[goingBackward ? index - 1 : index + 1]) == null ? void 0 : _a2.focus();
      }
    }
  }
};
var TrapFocus = {
  beforeMount(el) {
    el[FOCUSABLE_CHILDREN] = obtainAllFocusableElements(el);
    FOCUS_STACK.push(el);
    if (FOCUS_STACK.length <= 1) {
      document.addEventListener("keydown", FOCUS_HANDLER);
    }
  },
  updated(el) {
    nextTick11(() => {
      el[FOCUSABLE_CHILDREN] = obtainAllFocusableElements(el);
    });
  },
  unmounted() {
    FOCUS_STACK.shift();
    if (FOCUS_STACK.length === 0) {
      document.removeEventListener("keydown", FOCUS_HANDLER);
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/normalize-wheel-es/dist/index.mjs
var v = false;
var o;
var f;
var s;
var u;
var d;
var N2;
var l;
var p;
var m;
var w;
var D;
var x;
var E2;
var M;
var F;
function a() {
  if (!v) {
    v = true;
    var e = navigator.userAgent, n = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(e), i = /(Mac OS X)|(Windows)|(Linux)/.exec(e);
    if (x = /\b(iPhone|iP[ao]d)/.exec(e), E2 = /\b(iP[ao]d)/.exec(e), w = /Android/i.exec(e), M = /FBAN\/\w+;/i.exec(e), F = /Mobile/i.exec(e), D = !!/Win64/.exec(e), n) {
      o = n[1] ? parseFloat(n[1]) : n[5] ? parseFloat(n[5]) : NaN, o && document && document.documentMode && (o = document.documentMode);
      var r = /(?:Trident\/(\d+.\d+))/.exec(e);
      N2 = r ? parseFloat(r[1]) + 4 : o, f = n[2] ? parseFloat(n[2]) : NaN, s = n[3] ? parseFloat(n[3]) : NaN, u = n[4] ? parseFloat(n[4]) : NaN, u ? (n = /(?:Chrome\/(\d+\.\d+))/.exec(e), d = n && n[1] ? parseFloat(n[1]) : NaN) : d = NaN;
    } else
      o = f = s = d = u = NaN;
    if (i) {
      if (i[1]) {
        var t = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(e);
        l = t ? parseFloat(t[1].replace("_", ".")) : true;
      } else
        l = false;
      p = !!i[2], m = !!i[3];
    } else
      l = p = m = false;
  }
}
var _ = { ie: function() {
  return a() || o;
}, ieCompatibilityMode: function() {
  return a() || N2 > o;
}, ie64: function() {
  return _.ie() && D;
}, firefox: function() {
  return a() || f;
}, opera: function() {
  return a() || s;
}, webkit: function() {
  return a() || u;
}, safari: function() {
  return _.webkit();
}, chrome: function() {
  return a() || d;
}, windows: function() {
  return a() || p;
}, osx: function() {
  return a() || l;
}, linux: function() {
  return a() || m;
}, iphone: function() {
  return a() || x;
}, mobile: function() {
  return a() || x || E2 || w || F;
}, nativeApp: function() {
  return a() || M;
}, android: function() {
  return a() || w;
}, ipad: function() {
  return a() || E2;
} };
var A = _;
var c = !!(typeof window < "u" && window.document && window.document.createElement);
var U2 = { canUseDOM: c, canUseWorkers: typeof Worker < "u", canUseEventListeners: c && !!(window.addEventListener || window.attachEvent), canUseViewport: c && !!window.screen, isInWorker: !c };
var h2 = U2;
var X2;
h2.canUseDOM && (X2 = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== true);
function S(e, n) {
  if (!h2.canUseDOM || n && !("addEventListener" in document))
    return false;
  var i = "on" + e, r = i in document;
  if (!r) {
    var t = document.createElement("div");
    t.setAttribute(i, "return;"), r = typeof t[i] == "function";
  }
  return !r && X2 && e === "wheel" && (r = document.implementation.hasFeature("Events.wheel", "3.0")), r;
}
var b = S;
var O = 10;
var I2 = 40;
var P2 = 800;
function T(e) {
  var n = 0, i = 0, r = 0, t = 0;
  return "detail" in e && (i = e.detail), "wheelDelta" in e && (i = -e.wheelDelta / 120), "wheelDeltaY" in e && (i = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (n = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (n = i, i = 0), r = n * O, t = i * O, "deltaY" in e && (t = e.deltaY), "deltaX" in e && (r = e.deltaX), (r || t) && e.deltaMode && (e.deltaMode == 1 ? (r *= I2, t *= I2) : (r *= P2, t *= P2)), r && !n && (n = r < 1 ? -1 : 1), t && !i && (i = t < 1 ? -1 : 1), { spinX: n, spinY: i, pixelX: r, pixelY: t };
}
T.getEventType = function() {
  return A.firefox() ? "DOMMouseScroll" : b("wheel") ? "wheel" : "mousewheel";
};
var Y = T;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/directives/mousewheel/index.mjs
var mousewheel = function(element, callback) {
  if (element && element.addEventListener) {
    const fn2 = function(event) {
      const normalized = Y(event);
      callback && Reflect.apply(callback, this, [event, normalized]);
    };
    element.addEventListener("wheel", fn2, { passive: true });
  }
};
var Mousewheel = {
  beforeMount(el, binding) {
    mousewheel(el, binding.value);
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/props/basic-time-spinner.mjs
var basicTimeSpinnerProps = buildProps({
  role: {
    type: String,
    required: true
  },
  spinnerDate: {
    type: definePropType(Object),
    required: true
  },
  showSeconds: {
    type: Boolean,
    default: true
  },
  arrowControl: Boolean,
  amPmMode: {
    type: definePropType(String),
    default: ""
  },
  ...disabledTimeListsProps
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker-com/basic-time-spinner.mjs
var _hoisted_18 = ["onClick"];
var _hoisted_25 = ["onMouseenter"];
var _sfc_main27 = defineComponent30({
  __name: "basic-time-spinner",
  props: basicTimeSpinnerProps,
  emits: ["change", "select-range", "set-option"],
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("time");
    const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(props.disabledHours, props.disabledMinutes, props.disabledSeconds);
    let isScrolling = false;
    const currentScrollbar = ref41();
    const listHoursRef = ref41();
    const listMinutesRef = ref41();
    const listSecondsRef = ref41();
    const listRefsMap = {
      hours: listHoursRef,
      minutes: listMinutesRef,
      seconds: listSecondsRef
    };
    const spinnerItems = computed40(() => {
      return props.showSeconds ? timeUnits : timeUnits.slice(0, 2);
    });
    const timePartials = computed40(() => {
      const { spinnerDate } = props;
      const hours = spinnerDate.hour();
      const minutes = spinnerDate.minute();
      const seconds = spinnerDate.second();
      return { hours, minutes, seconds };
    });
    const timeList = computed40(() => {
      const { hours, minutes } = unref42(timePartials);
      return {
        hours: getHoursList(props.role),
        minutes: getMinutesList(hours, props.role),
        seconds: getSecondsList(hours, minutes, props.role)
      };
    });
    const arrowControlTimeList = computed40(() => {
      const { hours, minutes, seconds } = unref42(timePartials);
      return {
        hours: buildTimeList(hours, 23),
        minutes: buildTimeList(minutes, 59),
        seconds: buildTimeList(seconds, 59)
      };
    });
    const debouncedResetScroll = debounce_default((type4) => {
      isScrolling = false;
      adjustCurrentSpinner(type4);
    }, 200);
    const getAmPmFlag = (hour) => {
      const shouldShowAmPm = !!props.amPmMode;
      if (!shouldShowAmPm)
        return "";
      const isCapital = props.amPmMode === "A";
      let content = hour < 12 ? " am" : " pm";
      if (isCapital)
        content = content.toUpperCase();
      return content;
    };
    const emitSelectRange = (type4) => {
      let range4;
      switch (type4) {
        case "hours":
          range4 = [0, 2];
          break;
        case "minutes":
          range4 = [3, 5];
          break;
        case "seconds":
          range4 = [6, 8];
          break;
      }
      const [left2, right2] = range4;
      emit("select-range", left2, right2);
      currentScrollbar.value = type4;
    };
    const adjustCurrentSpinner = (type4) => {
      adjustSpinner(type4, unref42(timePartials)[type4]);
    };
    const adjustSpinners = () => {
      adjustCurrentSpinner("hours");
      adjustCurrentSpinner("minutes");
      adjustCurrentSpinner("seconds");
    };
    const getScrollbarElement = (el) => el.querySelector(`.${ns.namespace.value}-scrollbar__wrap`);
    const adjustSpinner = (type4, value) => {
      if (props.arrowControl)
        return;
      const scrollbar = unref42(listRefsMap[type4]);
      if (scrollbar && scrollbar.$el) {
        getScrollbarElement(scrollbar.$el).scrollTop = Math.max(0, value * typeItemHeight(type4));
      }
    };
    const typeItemHeight = (type4) => {
      const scrollbar = unref42(listRefsMap[type4]);
      const listItem = scrollbar == null ? void 0 : scrollbar.$el.querySelector("li");
      if (listItem) {
        return Number.parseFloat(getStyle(listItem, "height")) || 0;
      }
      return 0;
    };
    const onIncrement = () => {
      scrollDown(1);
    };
    const onDecrement = () => {
      scrollDown(-1);
    };
    const scrollDown = (step) => {
      if (!currentScrollbar.value) {
        emitSelectRange("hours");
      }
      const label = currentScrollbar.value;
      const now2 = unref42(timePartials)[label];
      const total2 = currentScrollbar.value === "hours" ? 24 : 60;
      const next = findNextUnDisabled(label, now2, step, total2);
      modifyDateField(label, next);
      adjustSpinner(label, next);
      nextTick12(() => emitSelectRange(label));
    };
    const findNextUnDisabled = (type4, now2, step, total2) => {
      let next = (now2 + step + total2) % total2;
      const list = unref42(timeList)[type4];
      while (list[next] && next !== now2) {
        next = (next + step + total2) % total2;
      }
      return next;
    };
    const modifyDateField = (type4, value) => {
      const list = unref42(timeList)[type4];
      const isDisabled = list[value];
      if (isDisabled)
        return;
      const { hours, minutes, seconds } = unref42(timePartials);
      let changeTo;
      switch (type4) {
        case "hours":
          changeTo = props.spinnerDate.hour(value).minute(minutes).second(seconds);
          break;
        case "minutes":
          changeTo = props.spinnerDate.hour(hours).minute(value).second(seconds);
          break;
        case "seconds":
          changeTo = props.spinnerDate.hour(hours).minute(minutes).second(value);
          break;
      }
      emit("change", changeTo);
    };
    const handleClick = (type4, { value, disabled }) => {
      if (!disabled) {
        modifyDateField(type4, value);
        emitSelectRange(type4);
        adjustSpinner(type4, value);
      }
    };
    const handleScroll2 = (type4) => {
      isScrolling = true;
      debouncedResetScroll(type4);
      const value = Math.min(Math.round((getScrollbarElement(unref42(listRefsMap[type4]).$el).scrollTop - (scrollBarHeight(type4) * 0.5 - 10) / typeItemHeight(type4) + 3) / typeItemHeight(type4)), type4 === "hours" ? 23 : 59);
      modifyDateField(type4, value);
    };
    const scrollBarHeight = (type4) => {
      return unref42(listRefsMap[type4]).$el.offsetHeight;
    };
    const bindScrollEvent = () => {
      const bindFunction = (type4) => {
        const scrollbar = unref42(listRefsMap[type4]);
        if (scrollbar && scrollbar.$el) {
          getScrollbarElement(scrollbar.$el).onscroll = () => {
            handleScroll2(type4);
          };
        }
      };
      bindFunction("hours");
      bindFunction("minutes");
      bindFunction("seconds");
    };
    onMounted22(() => {
      nextTick12(() => {
        !props.arrowControl && bindScrollEvent();
        adjustSpinners();
        if (props.role === "start")
          emitSelectRange("hours");
      });
    });
    const setRef = (scrollbar, type4) => {
      listRefsMap[type4].value = scrollbar;
    };
    emit("set-option", [`${props.role}_scrollDown`, scrollDown]);
    emit("set-option", [`${props.role}_emitSelectRange`, emitSelectRange]);
    watch29(() => props.spinnerDate, () => {
      if (isScrolling)
        return;
      adjustSpinners();
    });
    return (_ctx, _cache) => {
      return openBlock26(), createElementBlock21("div", {
        class: normalizeClass19([unref42(ns).b("spinner"), { "has-seconds": _ctx.showSeconds }])
      }, [
        !_ctx.arrowControl ? (openBlock26(true), createElementBlock21(Fragment9, { key: 0 }, renderList2(unref42(spinnerItems), (item) => {
          return openBlock26(), createBlock17(unref42(ElScrollbar), {
            key: item,
            ref_for: true,
            ref: (scrollbar) => setRef(scrollbar, item),
            class: normalizeClass19(unref42(ns).be("spinner", "wrapper")),
            "wrap-style": "max-height: inherit;",
            "view-class": unref42(ns).be("spinner", "list"),
            noresize: "",
            tag: "ul",
            onMouseenter: ($event) => emitSelectRange(item),
            onMousemove: ($event) => adjustCurrentSpinner(item)
          }, {
            default: withCtx18(() => [
              (openBlock26(true), createElementBlock21(Fragment9, null, renderList2(unref42(timeList)[item], (disabled, key) => {
                return openBlock26(), createElementBlock21("li", {
                  key,
                  class: normalizeClass19([
                    unref42(ns).be("spinner", "item"),
                    unref42(ns).is("active", key === unref42(timePartials)[item]),
                    unref42(ns).is("disabled", disabled)
                  ]),
                  onClick: ($event) => handleClick(item, { value: key, disabled })
                }, [
                  item === "hours" ? (openBlock26(), createElementBlock21(Fragment9, { key: 0 }, [
                    createTextVNode4(toDisplayString9(("0" + (_ctx.amPmMode ? key % 12 || 12 : key)).slice(-2)) + toDisplayString9(getAmPmFlag(key)), 1)
                  ], 64)) : (openBlock26(), createElementBlock21(Fragment9, { key: 1 }, [
                    createTextVNode4(toDisplayString9(("0" + key).slice(-2)), 1)
                  ], 64))
                ], 10, _hoisted_18);
              }), 128))
            ]),
            _: 2
          }, 1032, ["class", "view-class", "onMouseenter", "onMousemove"]);
        }), 128)) : createCommentVNode12("v-if", true),
        _ctx.arrowControl ? (openBlock26(true), createElementBlock21(Fragment9, { key: 1 }, renderList2(unref42(spinnerItems), (item) => {
          return openBlock26(), createElementBlock21("div", {
            key: item,
            class: normalizeClass19([unref42(ns).be("spinner", "wrapper"), unref42(ns).is("arrow")]),
            onMouseenter: ($event) => emitSelectRange(item)
          }, [
            withDirectives7((openBlock26(), createBlock17(unref42(ElIcon), {
              class: normalizeClass19(["arrow-up", unref42(ns).be("spinner", "arrow")])
            }, {
              default: withCtx18(() => [
                createVNode13(unref42(arrow_up_default))
              ]),
              _: 1
            }, 8, ["class"])), [
              [unref42(vRepeatClick), onDecrement]
            ]),
            withDirectives7((openBlock26(), createBlock17(unref42(ElIcon), {
              class: normalizeClass19(["arrow-down", unref42(ns).be("spinner", "arrow")])
            }, {
              default: withCtx18(() => [
                createVNode13(unref42(arrow_down_default))
              ]),
              _: 1
            }, 8, ["class"])), [
              [unref42(vRepeatClick), onIncrement]
            ]),
            createElementVNode11("ul", {
              class: normalizeClass19(unref42(ns).be("spinner", "list"))
            }, [
              (openBlock26(true), createElementBlock21(Fragment9, null, renderList2(unref42(arrowControlTimeList)[item], (time, key) => {
                return openBlock26(), createElementBlock21("li", {
                  key,
                  class: normalizeClass19([
                    unref42(ns).be("spinner", "item"),
                    unref42(ns).is("active", time === unref42(timePartials)[item]),
                    unref42(ns).is("disabled", unref42(timeList)[item][time])
                  ])
                }, [
                  typeof time === "number" ? (openBlock26(), createElementBlock21(Fragment9, { key: 0 }, [
                    item === "hours" ? (openBlock26(), createElementBlock21(Fragment9, { key: 0 }, [
                      createTextVNode4(toDisplayString9(("0" + (_ctx.amPmMode ? time % 12 || 12 : time)).slice(-2)) + toDisplayString9(getAmPmFlag(time)), 1)
                    ], 64)) : (openBlock26(), createElementBlock21(Fragment9, { key: 1 }, [
                      createTextVNode4(toDisplayString9(("0" + time).slice(-2)), 1)
                    ], 64))
                  ], 64)) : createCommentVNode12("v-if", true)
                ], 2);
              }), 128))
            ], 2)
          ], 42, _hoisted_25);
        }), 128)) : createCommentVNode12("v-if", true)
      ], 2);
    };
  }
});
var TimeSpinner = _export_sfc(_sfc_main27, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/basic-time-spinner.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker-com/panel-time-pick.mjs
var _sfc_main28 = defineComponent31({
  __name: "panel-time-pick",
  props: panelTimePickerProps,
  emits: ["pick", "select-range", "set-picker-option"],
  setup(__props, { emit }) {
    const props = __props;
    const pickerBase = inject24("EP_PICKER_BASE");
    const {
      arrowControl,
      disabledHours,
      disabledMinutes,
      disabledSeconds,
      defaultValue
    } = pickerBase.props;
    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } = buildAvailableTimeSlotGetter(disabledHours, disabledMinutes, disabledSeconds);
    const ns = useNamespace("time");
    const { t, lang } = useLocale();
    const selectionRange = ref42([0, 2]);
    const oldValue = useOldValue(props);
    const transitionName = computed41(() => {
      return isUndefined2(props.actualVisible) ? `${ns.namespace.value}-zoom-in-top` : "";
    });
    const showSeconds = computed41(() => {
      return props.format.includes("ss");
    });
    const amPmMode = computed41(() => {
      if (props.format.includes("A"))
        return "A";
      if (props.format.includes("a"))
        return "a";
      return "";
    });
    const isValidValue3 = (_date) => {
      const parsedDate = (0, import_dayjs2.default)(_date).locale(lang.value);
      const result2 = getRangeAvailableTime(parsedDate);
      return parsedDate.isSame(result2);
    };
    const handleCancel = () => {
      emit("pick", oldValue.value, false);
    };
    const handleConfirm = (visible = false, first = false) => {
      if (first)
        return;
      emit("pick", props.parsedValue, visible);
    };
    const handleChange = (_date) => {
      if (!props.visible) {
        return;
      }
      const result2 = getRangeAvailableTime(_date).millisecond(0);
      emit("pick", result2, true);
    };
    const setSelectionRange = (start, end2) => {
      emit("select-range", start, end2);
      selectionRange.value = [start, end2];
    };
    const changeSelectionRange = (step) => {
      const list = [0, 3].concat(showSeconds.value ? [6] : []);
      const mapping = ["hours", "minutes"].concat(showSeconds.value ? ["seconds"] : []);
      const index = list.indexOf(selectionRange.value[0]);
      const next = (index + step + list.length) % list.length;
      timePickerOptions["start_emitSelectRange"](mapping[next]);
    };
    const handleKeydown = (event) => {
      const code = event.code;
      const { left: left2, right: right2, up: up2, down: down2 } = EVENT_CODE;
      if ([left2, right2].includes(code)) {
        const step = code === left2 ? -1 : 1;
        changeSelectionRange(step);
        event.preventDefault();
        return;
      }
      if ([up2, down2].includes(code)) {
        const step = code === up2 ? -1 : 1;
        timePickerOptions["start_scrollDown"](step);
        event.preventDefault();
        return;
      }
    };
    const { timePickerOptions, onSetOption, getAvailableTime } = useTimePanel({
      getAvailableHours,
      getAvailableMinutes,
      getAvailableSeconds
    });
    const getRangeAvailableTime = (date5) => {
      return getAvailableTime(date5, props.datetimeRole || "", true);
    };
    const parseUserInput = (value) => {
      if (!value)
        return null;
      return (0, import_dayjs2.default)(value, props.format).locale(lang.value);
    };
    const formatToString = (value) => {
      if (!value)
        return null;
      return value.format(props.format);
    };
    const getDefaultValue2 = () => {
      return (0, import_dayjs2.default)(defaultValue).locale(lang.value);
    };
    emit("set-picker-option", ["isValidValue", isValidValue3]);
    emit("set-picker-option", ["formatToString", formatToString]);
    emit("set-picker-option", ["parseUserInput", parseUserInput]);
    emit("set-picker-option", ["handleKeydownInput", handleKeydown]);
    emit("set-picker-option", ["getRangeAvailableTime", getRangeAvailableTime]);
    emit("set-picker-option", ["getDefaultValue", getDefaultValue2]);
    return (_ctx, _cache) => {
      return openBlock27(), createBlock18(Transition6, { name: unref43(transitionName) }, {
        default: withCtx19(() => [
          _ctx.actualVisible || _ctx.visible ? (openBlock27(), createElementBlock22("div", {
            key: 0,
            class: normalizeClass20(unref43(ns).b("panel"))
          }, [
            createElementVNode12("div", {
              class: normalizeClass20([unref43(ns).be("panel", "content"), { "has-seconds": unref43(showSeconds) }])
            }, [
              createVNode14(TimeSpinner, {
                ref: "spinner",
                role: _ctx.datetimeRole || "start",
                "arrow-control": unref43(arrowControl),
                "show-seconds": unref43(showSeconds),
                "am-pm-mode": unref43(amPmMode),
                "spinner-date": _ctx.parsedValue,
                "disabled-hours": unref43(disabledHours),
                "disabled-minutes": unref43(disabledMinutes),
                "disabled-seconds": unref43(disabledSeconds),
                onChange: handleChange,
                onSetOption: unref43(onSetOption),
                onSelectRange: setSelectionRange
              }, null, 8, ["role", "arrow-control", "show-seconds", "am-pm-mode", "spinner-date", "disabled-hours", "disabled-minutes", "disabled-seconds", "onSetOption"])
            ], 2),
            createElementVNode12("div", {
              class: normalizeClass20(unref43(ns).be("panel", "footer"))
            }, [
              createElementVNode12("button", {
                type: "button",
                class: normalizeClass20([unref43(ns).be("panel", "btn"), "cancel"]),
                onClick: handleCancel
              }, toDisplayString10(unref43(t)("el.datepicker.cancel")), 3),
              createElementVNode12("button", {
                type: "button",
                class: normalizeClass20([unref43(ns).be("panel", "btn"), "confirm"]),
                onClick: _cache[0] || (_cache[0] = ($event) => handleConfirm())
              }, toDisplayString10(unref43(t)("el.datepicker.confirm")), 3)
            ], 2)
          ], 2)) : createCommentVNode13("v-if", true)
        ]),
        _: 1
      }, 8, ["name"]);
    };
  }
});
var TimePickPanel = _export_sfc(_sfc_main28, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker-com/panel-time-range.mjs
var import_dayjs3 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent32, inject as inject25, computed as computed42, ref as ref43, unref as unref44, openBlock as openBlock28, createElementBlock as createElementBlock23, normalizeClass as normalizeClass21, createElementVNode as createElementVNode13, toDisplayString as toDisplayString11, createVNode as createVNode15, createCommentVNode as createCommentVNode14 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/props/panel-time-range.mjs
var panelTimeRangeProps = buildProps({
  ...timePanelSharedProps,
  parsedValue: {
    type: definePropType(Array)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker-com/panel-time-range.mjs
import { isArray as isArray12 } from "@vue/shared";
var _hoisted_19 = ["disabled"];
var _sfc_main29 = defineComponent32({
  __name: "panel-time-range",
  props: panelTimeRangeProps,
  emits: ["pick", "select-range", "set-picker-option"],
  setup(__props, { emit }) {
    const props = __props;
    const makeSelectRange = (start, end2) => {
      const result2 = [];
      for (let i = start; i <= end2; i++) {
        result2.push(i);
      }
      return result2;
    };
    const { t, lang } = useLocale();
    const nsTime = useNamespace("time");
    const nsPicker = useNamespace("picker");
    const pickerBase = inject25("EP_PICKER_BASE");
    const {
      arrowControl,
      disabledHours,
      disabledMinutes,
      disabledSeconds,
      defaultValue
    } = pickerBase.props;
    const startContainerKls = computed42(() => [
      nsTime.be("range-picker", "body"),
      nsTime.be("panel", "content"),
      nsTime.is("arrow", arrowControl),
      showSeconds.value ? "has-seconds" : ""
    ]);
    const endContainerKls = computed42(() => [
      nsTime.be("range-picker", "body"),
      nsTime.be("panel", "content"),
      nsTime.is("arrow", arrowControl),
      showSeconds.value ? "has-seconds" : ""
    ]);
    const startTime = computed42(() => props.parsedValue[0]);
    const endTime = computed42(() => props.parsedValue[1]);
    const oldValue = useOldValue(props);
    const handleCancel = () => {
      emit("pick", oldValue.value, false);
    };
    const showSeconds = computed42(() => {
      return props.format.includes("ss");
    });
    const amPmMode = computed42(() => {
      if (props.format.includes("A"))
        return "A";
      if (props.format.includes("a"))
        return "a";
      return "";
    });
    const handleConfirm = (visible = false) => {
      emit("pick", [startTime.value, endTime.value], visible);
    };
    const handleMinChange = (date5) => {
      handleChange(date5.millisecond(0), endTime.value);
    };
    const handleMaxChange = (date5) => {
      handleChange(startTime.value, date5.millisecond(0));
    };
    const isValidValue3 = (_date) => {
      const parsedDate = _date.map((_2) => (0, import_dayjs3.default)(_2).locale(lang.value));
      const result2 = getRangeAvailableTime(parsedDate);
      return parsedDate[0].isSame(result2[0]) && parsedDate[1].isSame(result2[1]);
    };
    const handleChange = (start, end2) => {
      emit("pick", [start, end2], true);
    };
    const btnConfirmDisabled = computed42(() => {
      return startTime.value > endTime.value;
    });
    const selectionRange = ref43([0, 2]);
    const setMinSelectionRange = (start, end2) => {
      emit("select-range", start, end2, "min");
      selectionRange.value = [start, end2];
    };
    const offset2 = computed42(() => showSeconds.value ? 11 : 8);
    const setMaxSelectionRange = (start, end2) => {
      emit("select-range", start, end2, "max");
      const _offset = unref44(offset2);
      selectionRange.value = [start + _offset, end2 + _offset];
    };
    const changeSelectionRange = (step) => {
      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];
      const mapping = ["hours", "minutes"].concat(showSeconds.value ? ["seconds"] : []);
      const index = list.indexOf(selectionRange.value[0]);
      const next = (index + step + list.length) % list.length;
      const half = list.length / 2;
      if (next < half) {
        timePickerOptions["start_emitSelectRange"](mapping[next]);
      } else {
        timePickerOptions["end_emitSelectRange"](mapping[next - half]);
      }
    };
    const handleKeydown = (event) => {
      const code = event.code;
      const { left: left2, right: right2, up: up2, down: down2 } = EVENT_CODE;
      if ([left2, right2].includes(code)) {
        const step = code === left2 ? -1 : 1;
        changeSelectionRange(step);
        event.preventDefault();
        return;
      }
      if ([up2, down2].includes(code)) {
        const step = code === up2 ? -1 : 1;
        const role = selectionRange.value[0] < offset2.value ? "start" : "end";
        timePickerOptions[`${role}_scrollDown`](step);
        event.preventDefault();
        return;
      }
    };
    const disabledHours_ = (role, compare) => {
      const defaultDisable = disabledHours ? disabledHours(role) : [];
      const isStart = role === "start";
      const compareDate = compare || (isStart ? endTime.value : startTime.value);
      const compareHour = compareDate.hour();
      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);
      return union_default(defaultDisable, nextDisable);
    };
    const disabledMinutes_ = (hour, role, compare) => {
      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];
      const isStart = role === "start";
      const compareDate = compare || (isStart ? endTime.value : startTime.value);
      const compareHour = compareDate.hour();
      if (hour !== compareHour) {
        return defaultDisable;
      }
      const compareMinute = compareDate.minute();
      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);
      return union_default(defaultDisable, nextDisable);
    };
    const disabledSeconds_ = (hour, minute, role, compare) => {
      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];
      const isStart = role === "start";
      const compareDate = compare || (isStart ? endTime.value : startTime.value);
      const compareHour = compareDate.hour();
      const compareMinute = compareDate.minute();
      if (hour !== compareHour || minute !== compareMinute) {
        return defaultDisable;
      }
      const compareSecond = compareDate.second();
      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);
      return union_default(defaultDisable, nextDisable);
    };
    const getRangeAvailableTime = ([start, end2]) => {
      return [
        getAvailableTime(start, "start", true, end2),
        getAvailableTime(end2, "end", false, start)
      ];
    };
    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } = buildAvailableTimeSlotGetter(disabledHours_, disabledMinutes_, disabledSeconds_);
    const {
      timePickerOptions,
      getAvailableTime,
      onSetOption
    } = useTimePanel({
      getAvailableHours,
      getAvailableMinutes,
      getAvailableSeconds
    });
    const parseUserInput = (days) => {
      if (!days)
        return null;
      if (isArray12(days)) {
        return days.map((d2) => (0, import_dayjs3.default)(d2, props.format).locale(lang.value));
      }
      return (0, import_dayjs3.default)(days, props.format).locale(lang.value);
    };
    const formatToString = (days) => {
      if (!days)
        return null;
      if (isArray12(days)) {
        return days.map((d2) => d2.format(props.format));
      }
      return days.format(props.format);
    };
    const getDefaultValue2 = () => {
      if (isArray12(defaultValue)) {
        return defaultValue.map((d2) => (0, import_dayjs3.default)(d2).locale(lang.value));
      }
      const defaultDay = (0, import_dayjs3.default)(defaultValue).locale(lang.value);
      return [defaultDay, defaultDay.add(60, "m")];
    };
    emit("set-picker-option", ["formatToString", formatToString]);
    emit("set-picker-option", ["parseUserInput", parseUserInput]);
    emit("set-picker-option", ["isValidValue", isValidValue3]);
    emit("set-picker-option", ["handleKeydownInput", handleKeydown]);
    emit("set-picker-option", ["getDefaultValue", getDefaultValue2]);
    emit("set-picker-option", ["getRangeAvailableTime", getRangeAvailableTime]);
    return (_ctx, _cache) => {
      return _ctx.actualVisible ? (openBlock28(), createElementBlock23("div", {
        key: 0,
        class: normalizeClass21([unref44(nsTime).b("range-picker"), unref44(nsPicker).b("panel")])
      }, [
        createElementVNode13("div", {
          class: normalizeClass21(unref44(nsTime).be("range-picker", "content"))
        }, [
          createElementVNode13("div", {
            class: normalizeClass21(unref44(nsTime).be("range-picker", "cell"))
          }, [
            createElementVNode13("div", {
              class: normalizeClass21(unref44(nsTime).be("range-picker", "header"))
            }, toDisplayString11(unref44(t)("el.datepicker.startTime")), 3),
            createElementVNode13("div", {
              class: normalizeClass21(unref44(startContainerKls))
            }, [
              createVNode15(TimeSpinner, {
                ref: "minSpinner",
                role: "start",
                "show-seconds": unref44(showSeconds),
                "am-pm-mode": unref44(amPmMode),
                "arrow-control": unref44(arrowControl),
                "spinner-date": unref44(startTime),
                "disabled-hours": disabledHours_,
                "disabled-minutes": disabledMinutes_,
                "disabled-seconds": disabledSeconds_,
                onChange: handleMinChange,
                onSetOption: unref44(onSetOption),
                onSelectRange: setMinSelectionRange
              }, null, 8, ["show-seconds", "am-pm-mode", "arrow-control", "spinner-date", "onSetOption"])
            ], 2)
          ], 2),
          createElementVNode13("div", {
            class: normalizeClass21(unref44(nsTime).be("range-picker", "cell"))
          }, [
            createElementVNode13("div", {
              class: normalizeClass21(unref44(nsTime).be("range-picker", "header"))
            }, toDisplayString11(unref44(t)("el.datepicker.endTime")), 3),
            createElementVNode13("div", {
              class: normalizeClass21(unref44(endContainerKls))
            }, [
              createVNode15(TimeSpinner, {
                ref: "maxSpinner",
                role: "end",
                "show-seconds": unref44(showSeconds),
                "am-pm-mode": unref44(amPmMode),
                "arrow-control": unref44(arrowControl),
                "spinner-date": unref44(endTime),
                "disabled-hours": disabledHours_,
                "disabled-minutes": disabledMinutes_,
                "disabled-seconds": disabledSeconds_,
                onChange: handleMaxChange,
                onSetOption: unref44(onSetOption),
                onSelectRange: setMaxSelectionRange
              }, null, 8, ["show-seconds", "am-pm-mode", "arrow-control", "spinner-date", "onSetOption"])
            ], 2)
          ], 2)
        ], 2),
        createElementVNode13("div", {
          class: normalizeClass21(unref44(nsTime).be("panel", "footer"))
        }, [
          createElementVNode13("button", {
            type: "button",
            class: normalizeClass21([unref44(nsTime).be("panel", "btn"), "cancel"]),
            onClick: _cache[0] || (_cache[0] = ($event) => handleCancel())
          }, toDisplayString11(unref44(t)("el.datepicker.cancel")), 3),
          createElementVNode13("button", {
            type: "button",
            class: normalizeClass21([unref44(nsTime).be("panel", "btn"), "confirm"]),
            disabled: unref44(btnConfirmDisabled),
            onClick: _cache[1] || (_cache[1] = ($event) => handleConfirm())
          }, toDisplayString11(unref44(t)("el.datepicker.confirm")), 11, _hoisted_19)
        ], 2)
      ], 2)) : createCommentVNode14("v-if", true);
    };
  }
});
var TimeRangePanel = _export_sfc(_sfc_main29, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/src/time-picker.mjs
import_dayjs4.default.extend(import_customParseFormat.default);
var TimePicker = defineComponent33({
  name: "ElTimePicker",
  install: null,
  props: {
    ...timePickerDefaultProps,
    isRange: {
      type: Boolean,
      default: false
    }
  },
  emits: ["update:modelValue"],
  setup(props, ctx) {
    const commonPicker = ref44();
    const [type4, Panel] = props.isRange ? ["timerange", TimeRangePanel] : ["time", TimePickPanel];
    const modelUpdater = (value) => ctx.emit("update:modelValue", value);
    provide14("ElPopperOptions", props.popperOptions);
    ctx.expose({
      focus: (e) => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.handleFocusInput(e);
      },
      blur: (e) => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.handleBlurInput(e);
      },
      handleOpen: () => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.handleOpen();
      },
      handleClose: () => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.handleClose();
      }
    });
    return () => {
      var _a2;
      const format2 = (_a2 = props.format) != null ? _a2 : DEFAULT_FORMATS_TIME;
      return createVNode16(CommonPicker, mergeProps9(props, {
        "ref": commonPicker,
        "type": type4,
        "format": format2,
        "onUpdate:modelValue": modelUpdater
      }), {
        default: (props2) => createVNode16(Panel, props2, null)
      });
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-picker/index.mjs
var _TimePicker = TimePicker;
_TimePicker.install = (app) => {
  app.component(_TimePicker.name, _TimePicker);
};
var ElTimePicker = _TimePicker;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/date-table.mjs
import { isObject as isObject13 } from "@vue/shared";
var getPrevMonthLastDays = (date5, count) => {
  const lastDay = date5.subtract(1, "month").endOf("month").date();
  return rangeArr(count).map((_2, index) => lastDay - (count - index - 1));
};
var getMonthDays = (date5) => {
  const days = date5.daysInMonth();
  return rangeArr(days).map((_2, index) => index + 1);
};
var toNestedArr = (days) => rangeArr(days.length / 7).map((index) => {
  const start = index * 7;
  return days.slice(start, start + 7);
});
var dateTableProps = buildProps({
  selectedDay: {
    type: definePropType(Object)
  },
  range: {
    type: definePropType(Array)
  },
  date: {
    type: definePropType(Object),
    required: true
  },
  hideHeader: {
    type: Boolean
  }
});
var dateTableEmits = {
  pick: (value) => isObject13(value)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/use-date-table.mjs
var import_dayjs5 = __toESM(require_dayjs_min(), 1);
var import_localeData = __toESM(require_localeData(), 1);
import { computed as computed43 } from "vue";
var useDateTable = (props, emit) => {
  import_dayjs5.default.extend(import_localeData.default);
  const firstDayOfWeek = import_dayjs5.default.localeData().firstDayOfWeek();
  const { t, lang } = useLocale();
  const now2 = (0, import_dayjs5.default)().locale(lang.value);
  const isInRange = computed43(() => !!props.range && !!props.range.length);
  const rows = computed43(() => {
    let days = [];
    if (isInRange.value) {
      const [start, end2] = props.range;
      const currentMonthRange = rangeArr(end2.date() - start.date() + 1).map((index) => ({
        text: start.date() + index,
        type: "current"
      }));
      let remaining = currentMonthRange.length % 7;
      remaining = remaining === 0 ? 0 : 7 - remaining;
      const nextMonthRange = rangeArr(remaining).map((_2, index) => ({
        text: index + 1,
        type: "next"
      }));
      days = currentMonthRange.concat(nextMonthRange);
    } else {
      const firstDay = props.date.startOf("month").day();
      const prevMonthDays = getPrevMonthLastDays(props.date, (firstDay - firstDayOfWeek + 7) % 7).map((day) => ({
        text: day,
        type: "prev"
      }));
      const currentMonthDays = getMonthDays(props.date).map((day) => ({
        text: day,
        type: "current"
      }));
      days = [...prevMonthDays, ...currentMonthDays];
      const remaining = 7 - (days.length % 7 || 7);
      const nextMonthDays = rangeArr(remaining).map((_2, index) => ({
        text: index + 1,
        type: "next"
      }));
      days = days.concat(nextMonthDays);
    }
    return toNestedArr(days);
  });
  const weekDays = computed43(() => {
    const start = firstDayOfWeek;
    if (start === 0) {
      return WEEK_DAYS.map((_2) => t(`el.datepicker.weeks.${_2}`));
    } else {
      return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start)).map((_2) => t(`el.datepicker.weeks.${_2}`));
    }
  });
  const getFormattedDate = (day, type4) => {
    switch (type4) {
      case "prev":
        return props.date.startOf("month").subtract(1, "month").date(day);
      case "next":
        return props.date.startOf("month").add(1, "month").date(day);
      case "current":
        return props.date.date(day);
    }
  };
  const handlePickDay = ({ text, type: type4 }) => {
    const date5 = getFormattedDate(text, type4);
    emit("pick", date5);
  };
  const getSlotData = ({ text, type: type4 }) => {
    const day = getFormattedDate(text, type4);
    return {
      isSelected: day.isSame(props.selectedDay),
      type: `${type4}-month`,
      day: day.format("YYYY-MM-DD"),
      date: day.toDate()
    };
  };
  return {
    now: now2,
    isInRange,
    rows,
    weekDays,
    getFormattedDate,
    handlePickDay,
    getSlotData
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/date-table2.mjs
var _hoisted_110 = { key: 0 };
var _hoisted_26 = ["onClick"];
var __default__24 = defineComponent34({
  name: "DateTable"
});
var _sfc_main30 = defineComponent34({
  ...__default__24,
  props: dateTableProps,
  emits: dateTableEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const {
      isInRange,
      now: now2,
      rows,
      weekDays,
      getFormattedDate,
      handlePickDay,
      getSlotData
    } = useDateTable(props, emit);
    const nsTable = useNamespace("calendar-table");
    const nsDay = useNamespace("calendar-day");
    const getCellClass = ({ text, type: type4 }) => {
      const classes = [type4];
      if (type4 === "current") {
        const date5 = getFormattedDate(text, type4);
        if (date5.isSame(props.selectedDay, "day")) {
          classes.push(nsDay.is("selected"));
        }
        if (date5.isSame(now2, "day")) {
          classes.push(nsDay.is("today"));
        }
      }
      return classes;
    };
    expose({
      getFormattedDate
    });
    return (_ctx, _cache) => {
      return openBlock29(), createElementBlock24("table", {
        class: normalizeClass22([unref45(nsTable).b(), unref45(nsTable).is("range", unref45(isInRange))]),
        cellspacing: "0",
        cellpadding: "0"
      }, [
        !_ctx.hideHeader ? (openBlock29(), createElementBlock24("thead", _hoisted_110, [
          (openBlock29(true), createElementBlock24(Fragment10, null, renderList3(unref45(weekDays), (day) => {
            return openBlock29(), createElementBlock24("th", { key: day }, toDisplayString12(day), 1);
          }), 128))
        ])) : createCommentVNode15("v-if", true),
        createElementVNode14("tbody", null, [
          (openBlock29(true), createElementBlock24(Fragment10, null, renderList3(unref45(rows), (row, index) => {
            return openBlock29(), createElementBlock24("tr", {
              key: index,
              class: normalizeClass22({
                [unref45(nsTable).e("row")]: true,
                [unref45(nsTable).em("row", "hide-border")]: index === 0 && _ctx.hideHeader
              })
            }, [
              (openBlock29(true), createElementBlock24(Fragment10, null, renderList3(row, (cell, key) => {
                return openBlock29(), createElementBlock24("td", {
                  key,
                  class: normalizeClass22(getCellClass(cell)),
                  onClick: ($event) => unref45(handlePickDay)(cell)
                }, [
                  createElementVNode14("div", {
                    class: normalizeClass22(unref45(nsDay).b())
                  }, [
                    renderSlot25(_ctx.$slots, "date-cell", {
                      data: unref45(getSlotData)(cell)
                    }, () => [
                      createElementVNode14("span", null, toDisplayString12(cell.text), 1)
                    ])
                  ], 2)
                ], 10, _hoisted_26);
              }), 128))
            ], 2);
          }), 128))
        ])
      ], 2);
    };
  }
});
var DateTable = _export_sfc(_sfc_main30, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/calendar/src/date-table.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/use-calendar.mjs
var import_dayjs6 = __toESM(require_dayjs_min(), 1);
import { useSlots as useSlots5, ref as ref45, computed as computed44 } from "vue";
var adjacentMonth = (start, end2) => {
  const firstMonthLastDay = start.endOf("month");
  const lastMonthFirstDay = end2.startOf("month");
  const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, "week");
  const lastMonthStartDay = isSameWeek ? lastMonthFirstDay.add(1, "week") : lastMonthFirstDay;
  return [
    [start, firstMonthLastDay],
    [lastMonthStartDay.startOf("week"), end2]
  ];
};
var threeConsecutiveMonth = (start, end2) => {
  const firstMonthLastDay = start.endOf("month");
  const secondMonthFirstDay = start.add(1, "month").startOf("month");
  const secondMonthStartDay = firstMonthLastDay.isSame(secondMonthFirstDay, "week") ? secondMonthFirstDay.add(1, "week") : secondMonthFirstDay;
  const secondMonthLastDay = secondMonthStartDay.endOf("month");
  const lastMonthFirstDay = end2.startOf("month");
  const lastMonthStartDay = secondMonthLastDay.isSame(lastMonthFirstDay, "week") ? lastMonthFirstDay.add(1, "week") : lastMonthFirstDay;
  return [
    [start, firstMonthLastDay],
    [secondMonthStartDay.startOf("week"), secondMonthLastDay],
    [lastMonthStartDay.startOf("week"), end2]
  ];
};
var useCalendar = (props, emit, componentName2) => {
  const slots = useSlots5();
  const { lang } = useLocale();
  const selectedDay = ref45();
  const now2 = (0, import_dayjs6.default)().locale(lang.value);
  const realSelectedDay = computed44({
    get() {
      if (!props.modelValue)
        return selectedDay.value;
      return date5.value;
    },
    set(val) {
      if (!val)
        return;
      selectedDay.value = val;
      const result2 = val.toDate();
      emit(INPUT_EVENT, result2);
      emit(UPDATE_MODEL_EVENT, result2);
    }
  });
  const validatedRange = computed44(() => {
    if (!props.range)
      return [];
    const rangeArrDayjs = props.range.map((_2) => (0, import_dayjs6.default)(_2).locale(lang.value));
    const [startDayjs, endDayjs] = rangeArrDayjs;
    if (startDayjs.isAfter(endDayjs)) {
      debugWarn(componentName2, "end time should be greater than start time");
      return [];
    }
    if (startDayjs.isSame(endDayjs, "month")) {
      return calculateValidatedDateRange(startDayjs, endDayjs);
    } else {
      if (startDayjs.add(1, "month").month() !== endDayjs.month()) {
        debugWarn(componentName2, "start time and end time interval must not exceed two months");
        return [];
      }
      return calculateValidatedDateRange(startDayjs, endDayjs);
    }
  });
  const date5 = computed44(() => {
    if (!props.modelValue) {
      return realSelectedDay.value || (validatedRange.value.length ? validatedRange.value[0][0] : now2);
    } else {
      return (0, import_dayjs6.default)(props.modelValue).locale(lang.value);
    }
  });
  const prevMonthDayjs = computed44(() => date5.value.subtract(1, "month").date(1));
  const nextMonthDayjs = computed44(() => date5.value.add(1, "month").date(1));
  const prevYearDayjs = computed44(() => date5.value.subtract(1, "year").date(1));
  const nextYearDayjs = computed44(() => date5.value.add(1, "year").date(1));
  const calculateValidatedDateRange = (startDayjs, endDayjs) => {
    const firstDay = startDayjs.startOf("week");
    const lastDay = endDayjs.endOf("week");
    const firstMonth = firstDay.get("month");
    const lastMonth = lastDay.get("month");
    if (firstMonth === lastMonth) {
      return [[firstDay, lastDay]];
    } else if ((firstMonth + 1) % 12 === lastMonth) {
      return adjacentMonth(firstDay, lastDay);
    } else if (firstMonth + 2 === lastMonth || (firstMonth + 1) % 11 === lastMonth) {
      return threeConsecutiveMonth(firstDay, lastDay);
    } else {
      debugWarn(componentName2, "start time and end time interval must not exceed two months");
      return [];
    }
  };
  const pickDay = (day) => {
    realSelectedDay.value = day;
  };
  const selectDate = (type4) => {
    const dateMap = {
      "prev-month": prevMonthDayjs.value,
      "next-month": nextMonthDayjs.value,
      "prev-year": prevYearDayjs.value,
      "next-year": nextYearDayjs.value,
      today: now2
    };
    const day = dateMap[type4];
    if (!day.isSame(date5.value, "day")) {
      pickDay(day);
    }
  };
  useDeprecated({
    from: '"dateCell"',
    replacement: '"date-cell"',
    scope: "ElCalendar",
    version: "2.3.0",
    ref: "https://element-plus.org/en-US/component/calendar.html#slots",
    type: "Slot"
  }, computed44(() => !!slots.dateCell));
  return {
    calculateValidatedDateRange,
    date: date5,
    realSelectedDay,
    pickDay,
    selectDate,
    validatedRange
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/calendar.mjs
import { isArray as isArray13, isDate as isDate5 } from "@vue/shared";
var isValidRange = (range4) => isArray13(range4) && range4.length === 2 && range4.every((item) => isDate5(item));
var calendarProps = buildProps({
  modelValue: {
    type: Date
  },
  range: {
    type: definePropType(Array),
    validator: isValidRange
  }
});
var calendarEmits = {
  [UPDATE_MODEL_EVENT]: (value) => isDate5(value),
  [INPUT_EVENT]: (value) => isDate5(value)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/src/calendar2.mjs
var COMPONENT_NAME8 = "ElCalendar";
var __default__25 = defineComponent35({
  name: COMPONENT_NAME8
});
var _sfc_main31 = defineComponent35({
  ...__default__25,
  props: calendarProps,
  emits: calendarEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const ns = useNamespace("calendar");
    const {
      calculateValidatedDateRange,
      date: date5,
      pickDay,
      realSelectedDay,
      selectDate,
      validatedRange
    } = useCalendar(props, emit, COMPONENT_NAME8);
    const { t } = useLocale();
    const i18nDate = computed45(() => {
      const pickedMonth = `el.datepicker.month${date5.value.format("M")}`;
      return `${date5.value.year()} ${t("el.datepicker.year")} ${t(pickedMonth)}`;
    });
    expose({
      selectedDay: realSelectedDay,
      pickDay,
      selectDate,
      calculateValidatedDateRange
    });
    return (_ctx, _cache) => {
      return openBlock30(), createElementBlock25("div", {
        class: normalizeClass23(unref46(ns).b())
      }, [
        createElementVNode15("div", {
          class: normalizeClass23(unref46(ns).e("header"))
        }, [
          renderSlot26(_ctx.$slots, "header", { date: unref46(i18nDate) }, () => [
            createElementVNode15("div", {
              class: normalizeClass23(unref46(ns).e("title"))
            }, toDisplayString13(unref46(i18nDate)), 3),
            unref46(validatedRange).length === 0 ? (openBlock30(), createElementBlock25("div", {
              key: 0,
              class: normalizeClass23(unref46(ns).e("button-group"))
            }, [
              createVNode17(unref46(ElButtonGroup), null, {
                default: withCtx20(() => [
                  createVNode17(unref46(ElButton), {
                    size: "small",
                    onClick: _cache[0] || (_cache[0] = ($event) => unref46(selectDate)("prev-month"))
                  }, {
                    default: withCtx20(() => [
                      createTextVNode5(toDisplayString13(unref46(t)("el.datepicker.prevMonth")), 1)
                    ]),
                    _: 1
                  }),
                  createVNode17(unref46(ElButton), {
                    size: "small",
                    onClick: _cache[1] || (_cache[1] = ($event) => unref46(selectDate)("today"))
                  }, {
                    default: withCtx20(() => [
                      createTextVNode5(toDisplayString13(unref46(t)("el.datepicker.today")), 1)
                    ]),
                    _: 1
                  }),
                  createVNode17(unref46(ElButton), {
                    size: "small",
                    onClick: _cache[2] || (_cache[2] = ($event) => unref46(selectDate)("next-month"))
                  }, {
                    default: withCtx20(() => [
                      createTextVNode5(toDisplayString13(unref46(t)("el.datepicker.nextMonth")), 1)
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ], 2)) : createCommentVNode16("v-if", true)
          ])
        ], 2),
        unref46(validatedRange).length === 0 ? (openBlock30(), createElementBlock25("div", {
          key: 0,
          class: normalizeClass23(unref46(ns).e("body"))
        }, [
          createVNode17(DateTable, {
            date: unref46(date5),
            "selected-day": unref46(realSelectedDay),
            onPick: unref46(pickDay)
          }, createSlots2({ _: 2 }, [
            _ctx.$slots["date-cell"] || _ctx.$slots.dateCell ? {
              name: "date-cell",
              fn: withCtx20((data) => [
                _ctx.$slots["date-cell"] ? renderSlot26(_ctx.$slots, "date-cell", normalizeProps(mergeProps10({ key: 0 }, data))) : renderSlot26(_ctx.$slots, "dateCell", normalizeProps(mergeProps10({ key: 1 }, data)))
              ])
            } : void 0
          ]), 1032, ["date", "selected-day", "onPick"])
        ], 2)) : (openBlock30(), createElementBlock25("div", {
          key: 1,
          class: normalizeClass23(unref46(ns).e("body"))
        }, [
          (openBlock30(true), createElementBlock25(Fragment11, null, renderList4(unref46(validatedRange), (range_, index) => {
            return openBlock30(), createBlock19(DateTable, {
              key: index,
              date: range_[0],
              "selected-day": unref46(realSelectedDay),
              range: range_,
              "hide-header": index !== 0,
              onPick: unref46(pickDay)
            }, createSlots2({ _: 2 }, [
              _ctx.$slots["date-cell"] || _ctx.$slots.dateCell ? {
                name: "date-cell",
                fn: withCtx20((data) => [
                  _ctx.$slots["date-cell"] ? renderSlot26(_ctx.$slots, "date-cell", normalizeProps(mergeProps10({ key: 0 }, data))) : renderSlot26(_ctx.$slots, "dateCell", normalizeProps(mergeProps10({ key: 1 }, data)))
                ])
              } : void 0
            ]), 1032, ["date", "selected-day", "range", "hide-header", "onPick"]);
          }), 128))
        ], 2))
      ], 2);
    };
  }
});
var Calendar = _export_sfc(_sfc_main31, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/calendar/src/calendar.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/calendar/index.mjs
var ElCalendar = withInstall(Calendar);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/card/src/card2.mjs
import { defineComponent as defineComponent36, openBlock as openBlock31, createElementBlock as createElementBlock26, normalizeClass as normalizeClass24, unref as unref47, renderSlot as renderSlot27, createTextVNode as createTextVNode6, toDisplayString as toDisplayString14, createCommentVNode as createCommentVNode17, createElementVNode as createElementVNode16, normalizeStyle as normalizeStyle11 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/card/src/card.mjs
var cardProps = buildProps({
  header: {
    type: String,
    default: ""
  },
  bodyStyle: {
    type: definePropType([String, Object, Array]),
    default: ""
  },
  shadow: {
    type: String,
    values: ["always", "hover", "never"],
    default: "always"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/card/src/card2.mjs
var __default__26 = defineComponent36({
  name: "ElCard"
});
var _sfc_main32 = defineComponent36({
  ...__default__26,
  props: cardProps,
  setup(__props) {
    const ns = useNamespace("card");
    return (_ctx, _cache) => {
      return openBlock31(), createElementBlock26("div", {
        class: normalizeClass24([unref47(ns).b(), unref47(ns).is(`${_ctx.shadow}-shadow`)])
      }, [
        _ctx.$slots.header || _ctx.header ? (openBlock31(), createElementBlock26("div", {
          key: 0,
          class: normalizeClass24(unref47(ns).e("header"))
        }, [
          renderSlot27(_ctx.$slots, "header", {}, () => [
            createTextVNode6(toDisplayString14(_ctx.header), 1)
          ])
        ], 2)) : createCommentVNode17("v-if", true),
        createElementVNode16("div", {
          class: normalizeClass24(unref47(ns).e("body")),
          style: normalizeStyle11(_ctx.bodyStyle)
        }, [
          renderSlot27(_ctx.$slots, "default")
        ], 6)
      ], 2);
    };
  }
});
var Card = _export_sfc(_sfc_main32, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/card/src/card.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/card/index.mjs
var ElCard = withInstall(Card);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/carousel2.mjs
import { defineComponent as defineComponent37, computed as computed47, unref as unref49, openBlock as openBlock32, createElementBlock as createElementBlock27, normalizeClass as normalizeClass25, withModifiers as withModifiers5, createElementVNode as createElementVNode17, normalizeStyle as normalizeStyle12, createBlock as createBlock20, Transition as Transition7, withCtx as withCtx21, withDirectives as withDirectives8, createVNode as createVNode18, vShow as vShow6, createCommentVNode as createCommentVNode18, renderSlot as renderSlot28, Fragment as Fragment12, renderList as renderList5, toDisplayString as toDisplayString15 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/carousel.mjs
var carouselProps = buildProps({
  initialIndex: {
    type: Number,
    default: 0
  },
  height: {
    type: String,
    default: ""
  },
  trigger: {
    type: String,
    values: ["hover", "click"],
    default: "hover"
  },
  autoplay: {
    type: Boolean,
    default: true
  },
  interval: {
    type: Number,
    default: 3e3
  },
  indicatorPosition: {
    type: String,
    values: ["", "none", "outside"],
    default: ""
  },
  arrow: {
    type: String,
    values: ["always", "hover", "never"],
    default: "hover"
  },
  type: {
    type: String,
    values: ["", "card"],
    default: ""
  },
  loop: {
    type: Boolean,
    default: true
  },
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  pauseOnHover: {
    type: Boolean,
    default: true
  }
});
var carouselEmits = {
  change: (current, prev) => [current, prev].every(isNumber3)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/use-carousel.mjs
import { getCurrentInstance as getCurrentInstance10, ref as ref46, computed as computed46, unref as unref48, watch as watch30, shallowRef as shallowRef8, onMounted as onMounted23, onBeforeUnmount as onBeforeUnmount14, provide as provide15 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/constants.mjs
var carouselContextKey = Symbol("carouselContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/use-carousel.mjs
import { isString as isString14 } from "@vue/shared";
var THROTTLE_TIME = 300;
var useCarousel = (props, emit, componentName2) => {
  const {
    children: items,
    addChild: addItem,
    removeChild: removeItem
  } = useOrderedChildren(getCurrentInstance10(), "ElCarouselItem");
  const activeIndex = ref46(-1);
  const timer = ref46(null);
  const hover = ref46(false);
  const root2 = ref46();
  const containerHeight = ref46(0);
  const arrowDisplay = computed46(() => props.arrow !== "never" && !unref48(isVertical));
  const hasLabel = computed46(() => {
    return items.value.some((item) => item.props.label.toString().length > 0);
  });
  const isCardType = computed46(() => props.type === "card");
  const isVertical = computed46(() => props.direction === "vertical");
  const containerStyle = computed46(() => {
    if (props.height !== "auto") {
      return {
        height: props.height
      };
    }
    return {
      height: `${containerHeight.value}px`,
      overflow: "hidden"
    };
  });
  const throttledArrowClick = throttle_default((index) => {
    setActiveItem(index);
  }, THROTTLE_TIME, { trailing: true });
  const throttledIndicatorHover = throttle_default((index) => {
    handleIndicatorHover(index);
  }, THROTTLE_TIME);
  function pauseTimer() {
    if (timer.value) {
      clearInterval(timer.value);
      timer.value = null;
    }
  }
  function startTimer() {
    if (props.interval <= 0 || !props.autoplay || timer.value)
      return;
    timer.value = setInterval(() => playSlides(), props.interval);
  }
  const playSlides = () => {
    if (activeIndex.value < items.value.length - 1) {
      activeIndex.value = activeIndex.value + 1;
    } else if (props.loop) {
      activeIndex.value = 0;
    }
  };
  function setActiveItem(index) {
    if (isString14(index)) {
      const filteredItems = items.value.filter((item) => item.props.name === index);
      if (filteredItems.length > 0) {
        index = items.value.indexOf(filteredItems[0]);
      }
    }
    index = Number(index);
    if (Number.isNaN(index) || index !== Math.floor(index)) {
      debugWarn(componentName2, "index must be integer.");
      return;
    }
    const itemCount = items.value.length;
    const oldIndex = activeIndex.value;
    if (index < 0) {
      activeIndex.value = props.loop ? itemCount - 1 : 0;
    } else if (index >= itemCount) {
      activeIndex.value = props.loop ? 0 : itemCount - 1;
    } else {
      activeIndex.value = index;
    }
    if (oldIndex === activeIndex.value) {
      resetItemPosition(oldIndex);
    }
    resetTimer();
  }
  function resetItemPosition(oldIndex) {
    items.value.forEach((item, index) => {
      item.translateItem(index, activeIndex.value, oldIndex);
    });
  }
  function itemInStage(item, index) {
    var _a2, _b, _c, _d;
    const _items = unref48(items);
    const itemCount = _items.length;
    if (itemCount === 0 || !item.states.inStage)
      return false;
    const nextItemIndex = index + 1;
    const prevItemIndex = index - 1;
    const lastItemIndex = itemCount - 1;
    const isLastItemActive = _items[lastItemIndex].states.active;
    const isFirstItemActive = _items[0].states.active;
    const isNextItemActive = (_b = (_a2 = _items[nextItemIndex]) == null ? void 0 : _a2.states) == null ? void 0 : _b.active;
    const isPrevItemActive = (_d = (_c = _items[prevItemIndex]) == null ? void 0 : _c.states) == null ? void 0 : _d.active;
    if (index === lastItemIndex && isFirstItemActive || isNextItemActive) {
      return "left";
    } else if (index === 0 && isLastItemActive || isPrevItemActive) {
      return "right";
    }
    return false;
  }
  function handleMouseEnter() {
    hover.value = true;
    if (props.pauseOnHover) {
      pauseTimer();
    }
  }
  function handleMouseLeave() {
    hover.value = false;
    startTimer();
  }
  function handleButtonEnter(arrow2) {
    if (unref48(isVertical))
      return;
    items.value.forEach((item, index) => {
      if (arrow2 === itemInStage(item, index)) {
        item.states.hover = true;
      }
    });
  }
  function handleButtonLeave() {
    if (unref48(isVertical))
      return;
    items.value.forEach((item) => {
      item.states.hover = false;
    });
  }
  function handleIndicatorClick(index) {
    activeIndex.value = index;
  }
  function handleIndicatorHover(index) {
    if (props.trigger === "hover" && index !== activeIndex.value) {
      activeIndex.value = index;
    }
  }
  function prev() {
    setActiveItem(activeIndex.value - 1);
  }
  function next() {
    setActiveItem(activeIndex.value + 1);
  }
  function resetTimer() {
    pauseTimer();
    startTimer();
  }
  function setContainerHeight(height) {
    if (props.height !== "auto")
      return;
    containerHeight.value = height;
  }
  watch30(() => activeIndex.value, (current, prev2) => {
    resetItemPosition(prev2);
    if (prev2 > -1) {
      emit("change", current, prev2);
    }
  });
  watch30(() => props.autoplay, (autoplay) => {
    autoplay ? startTimer() : pauseTimer();
  });
  watch30(() => props.loop, () => {
    setActiveItem(activeIndex.value);
  });
  watch30(() => props.interval, () => {
    resetTimer();
  });
  watch30(() => items.value, () => {
    if (items.value.length > 0)
      setActiveItem(props.initialIndex);
  });
  const resizeObserver = shallowRef8();
  onMounted23(() => {
    resizeObserver.value = useResizeObserver(root2.value, () => {
      resetItemPosition();
    });
    startTimer();
  });
  onBeforeUnmount14(() => {
    pauseTimer();
    if (root2.value && resizeObserver.value)
      resizeObserver.value.stop();
  });
  provide15(carouselContextKey, {
    root: root2,
    isCardType,
    isVertical,
    items,
    loop: props.loop,
    addItem,
    removeItem,
    setActiveItem,
    setContainerHeight
  });
  return {
    root: root2,
    activeIndex,
    arrowDisplay,
    hasLabel,
    hover,
    isCardType,
    items,
    isVertical,
    containerStyle,
    handleButtonEnter,
    handleButtonLeave,
    handleIndicatorClick,
    handleMouseEnter,
    handleMouseLeave,
    setActiveItem,
    prev,
    next,
    throttledArrowClick,
    throttledIndicatorHover
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/carousel2.mjs
var _hoisted_111 = ["onMouseenter", "onClick"];
var _hoisted_27 = { key: 0 };
var COMPONENT_NAME9 = "ElCarousel";
var __default__27 = defineComponent37({
  name: COMPONENT_NAME9
});
var _sfc_main33 = defineComponent37({
  ...__default__27,
  props: carouselProps,
  emits: carouselEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const {
      root: root2,
      activeIndex,
      arrowDisplay,
      hasLabel,
      hover,
      isCardType,
      items,
      isVertical,
      containerStyle,
      handleButtonEnter,
      handleButtonLeave,
      handleIndicatorClick,
      handleMouseEnter,
      handleMouseLeave,
      setActiveItem,
      prev,
      next,
      throttledArrowClick,
      throttledIndicatorHover
    } = useCarousel(props, emit, COMPONENT_NAME9);
    const ns = useNamespace("carousel");
    const carouselClasses = computed47(() => {
      const classes = [ns.b(), ns.m(props.direction)];
      if (unref49(isCardType)) {
        classes.push(ns.m("card"));
      }
      return classes;
    });
    const indicatorsClasses = computed47(() => {
      const classes = [ns.e("indicators"), ns.em("indicators", props.direction)];
      if (unref49(hasLabel)) {
        classes.push(ns.em("indicators", "labels"));
      }
      if (props.indicatorPosition === "outside") {
        classes.push(ns.em("indicators", "outside"));
      }
      if (unref49(isVertical)) {
        classes.push(ns.em("indicators", "right"));
      }
      return classes;
    });
    expose({
      setActiveItem,
      prev,
      next
    });
    return (_ctx, _cache) => {
      return openBlock32(), createElementBlock27("div", {
        ref_key: "root",
        ref: root2,
        class: normalizeClass25(unref49(carouselClasses)),
        onMouseenter: _cache[6] || (_cache[6] = withModifiers5((...args) => unref49(handleMouseEnter) && unref49(handleMouseEnter)(...args), ["stop"])),
        onMouseleave: _cache[7] || (_cache[7] = withModifiers5((...args) => unref49(handleMouseLeave) && unref49(handleMouseLeave)(...args), ["stop"]))
      }, [
        createElementVNode17("div", {
          class: normalizeClass25(unref49(ns).e("container")),
          style: normalizeStyle12(unref49(containerStyle))
        }, [
          unref49(arrowDisplay) ? (openBlock32(), createBlock20(Transition7, {
            key: 0,
            name: "carousel-arrow-left",
            persisted: ""
          }, {
            default: withCtx21(() => [
              withDirectives8(createElementVNode17("button", {
                type: "button",
                class: normalizeClass25([unref49(ns).e("arrow"), unref49(ns).em("arrow", "left")]),
                onMouseenter: _cache[0] || (_cache[0] = ($event) => unref49(handleButtonEnter)("left")),
                onMouseleave: _cache[1] || (_cache[1] = (...args) => unref49(handleButtonLeave) && unref49(handleButtonLeave)(...args)),
                onClick: _cache[2] || (_cache[2] = withModifiers5(($event) => unref49(throttledArrowClick)(unref49(activeIndex) - 1), ["stop"]))
              }, [
                createVNode18(unref49(ElIcon), null, {
                  default: withCtx21(() => [
                    createVNode18(unref49(arrow_left_default))
                  ]),
                  _: 1
                })
              ], 34), [
                [
                  vShow6,
                  (_ctx.arrow === "always" || unref49(hover)) && (props.loop || unref49(activeIndex) > 0)
                ]
              ])
            ]),
            _: 1
          })) : createCommentVNode18("v-if", true),
          unref49(arrowDisplay) ? (openBlock32(), createBlock20(Transition7, {
            key: 1,
            name: "carousel-arrow-right",
            persisted: ""
          }, {
            default: withCtx21(() => [
              withDirectives8(createElementVNode17("button", {
                type: "button",
                class: normalizeClass25([unref49(ns).e("arrow"), unref49(ns).em("arrow", "right")]),
                onMouseenter: _cache[3] || (_cache[3] = ($event) => unref49(handleButtonEnter)("right")),
                onMouseleave: _cache[4] || (_cache[4] = (...args) => unref49(handleButtonLeave) && unref49(handleButtonLeave)(...args)),
                onClick: _cache[5] || (_cache[5] = withModifiers5(($event) => unref49(throttledArrowClick)(unref49(activeIndex) + 1), ["stop"]))
              }, [
                createVNode18(unref49(ElIcon), null, {
                  default: withCtx21(() => [
                    createVNode18(unref49(arrow_right_default))
                  ]),
                  _: 1
                })
              ], 34), [
                [
                  vShow6,
                  (_ctx.arrow === "always" || unref49(hover)) && (props.loop || unref49(activeIndex) < unref49(items).length - 1)
                ]
              ])
            ]),
            _: 1
          })) : createCommentVNode18("v-if", true),
          renderSlot28(_ctx.$slots, "default")
        ], 6),
        _ctx.indicatorPosition !== "none" ? (openBlock32(), createElementBlock27("ul", {
          key: 0,
          class: normalizeClass25(unref49(indicatorsClasses))
        }, [
          (openBlock32(true), createElementBlock27(Fragment12, null, renderList5(unref49(items), (item, index) => {
            return openBlock32(), createElementBlock27("li", {
              key: index,
              class: normalizeClass25([
                unref49(ns).e("indicator"),
                unref49(ns).em("indicator", _ctx.direction),
                unref49(ns).is("active", index === unref49(activeIndex))
              ]),
              onMouseenter: ($event) => unref49(throttledIndicatorHover)(index),
              onClick: withModifiers5(($event) => unref49(handleIndicatorClick)(index), ["stop"])
            }, [
              createElementVNode17("button", {
                class: normalizeClass25(unref49(ns).e("button"))
              }, [
                unref49(hasLabel) ? (openBlock32(), createElementBlock27("span", _hoisted_27, toDisplayString15(item.props.label), 1)) : createCommentVNode18("v-if", true)
              ], 2)
            ], 42, _hoisted_111);
          }), 128))
        ], 2)) : createCommentVNode18("v-if", true)
      ], 34);
    };
  }
});
var Carousel = _export_sfc(_sfc_main33, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/carousel-item2.mjs
import { defineComponent as defineComponent38, computed as computed48, unref as unref51, withDirectives as withDirectives9, openBlock as openBlock33, createElementBlock as createElementBlock28, normalizeClass as normalizeClass26, normalizeStyle as normalizeStyle13, vShow as vShow7, createCommentVNode as createCommentVNode19, renderSlot as renderSlot29 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/carousel-item.mjs
var carouselItemProps = buildProps({
  name: { type: String, default: "" },
  label: {
    type: [String, Number],
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/use-carousel-item.mjs
import { inject as inject26, getCurrentInstance as getCurrentInstance11, ref as ref47, unref as unref50, onMounted as onMounted24, reactive as reactive8, onUnmounted as onUnmounted4 } from "vue";
var useCarouselItem = (props, componentName2) => {
  const carouselContext = inject26(carouselContextKey);
  const instance = getCurrentInstance11();
  if (!carouselContext) {
    debugWarn(componentName2, "usage: <el-carousel></el-carousel-item></el-carousel>");
  }
  if (!instance) {
    debugWarn(componentName2, "compositional hook can only be invoked inside setups");
  }
  const CARD_SCALE = 0.83;
  const carouselItemRef = ref47();
  const hover = ref47(false);
  const translate2 = ref47(0);
  const scale = ref47(1);
  const active = ref47(false);
  const ready = ref47(false);
  const inStage = ref47(false);
  const animating = ref47(false);
  const { isCardType, isVertical } = carouselContext;
  function processIndex(index, activeIndex, length) {
    const lastItemIndex = length - 1;
    const prevItemIndex = activeIndex - 1;
    const nextItemIndex = activeIndex + 1;
    const halfItemIndex = length / 2;
    if (activeIndex === 0 && index === lastItemIndex) {
      return -1;
    } else if (activeIndex === lastItemIndex && index === 0) {
      return length;
    } else if (index < prevItemIndex && activeIndex - index >= halfItemIndex) {
      return length + 1;
    } else if (index > nextItemIndex && index - activeIndex >= halfItemIndex) {
      return -2;
    }
    return index;
  }
  function calcCardTranslate(index, activeIndex) {
    var _a2, _b;
    const parentWidth = unref50(isVertical) ? ((_a2 = carouselContext.root.value) == null ? void 0 : _a2.offsetHeight) || 0 : ((_b = carouselContext.root.value) == null ? void 0 : _b.offsetWidth) || 0;
    if (inStage.value) {
      return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;
    } else if (index < activeIndex) {
      return -(1 + CARD_SCALE) * parentWidth / 4;
    } else {
      return (3 + CARD_SCALE) * parentWidth / 4;
    }
  }
  function calcTranslate(index, activeIndex, isVertical2) {
    const rootEl = carouselContext.root.value;
    if (!rootEl)
      return 0;
    const distance = (isVertical2 ? rootEl.offsetHeight : rootEl.offsetWidth) || 0;
    return distance * (index - activeIndex);
  }
  const translateItem = (index, activeIndex, oldIndex) => {
    var _a2;
    const _isCardType = unref50(isCardType);
    const carouselItemLength = (_a2 = carouselContext.items.value.length) != null ? _a2 : Number.NaN;
    const isActive = index === activeIndex;
    if (!_isCardType && !isUndefined2(oldIndex)) {
      animating.value = isActive || index === oldIndex;
    }
    if (!isActive && carouselItemLength > 2 && carouselContext.loop) {
      index = processIndex(index, activeIndex, carouselItemLength);
    }
    const _isVertical = unref50(isVertical);
    active.value = isActive;
    if (_isCardType) {
      inStage.value = Math.round(Math.abs(index - activeIndex)) <= 1;
      translate2.value = calcCardTranslate(index, activeIndex);
      scale.value = unref50(active) ? 1 : CARD_SCALE;
    } else {
      translate2.value = calcTranslate(index, activeIndex, _isVertical);
    }
    ready.value = true;
    if (isActive && carouselItemRef.value) {
      carouselContext.setContainerHeight(carouselItemRef.value.offsetHeight);
    }
  };
  function handleItemClick() {
    if (carouselContext && unref50(isCardType)) {
      const index = carouselContext.items.value.findIndex(({ uid: uid2 }) => uid2 === instance.uid);
      carouselContext.setActiveItem(index);
    }
  }
  onMounted24(() => {
    carouselContext.addItem({
      props,
      states: reactive8({
        hover,
        translate: translate2,
        scale,
        active,
        ready,
        inStage,
        animating
      }),
      uid: instance.uid,
      translateItem
    });
  });
  onUnmounted4(() => {
    carouselContext.removeItem(instance.uid);
  });
  return {
    carouselItemRef,
    active,
    animating,
    hover,
    inStage,
    isVertical,
    translate: translate2,
    isCardType,
    scale,
    ready,
    handleItemClick
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/src/carousel-item2.mjs
var COMPONENT_NAME10 = "ElCarouselItem";
var __default__28 = defineComponent38({
  name: "ElCarouselItem"
});
var _sfc_main34 = defineComponent38({
  ...__default__28,
  props: carouselItemProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("carousel");
    const {
      carouselItemRef,
      active,
      animating,
      hover,
      inStage,
      isVertical,
      translate: translate2,
      isCardType,
      scale,
      ready,
      handleItemClick
    } = useCarouselItem(props, COMPONENT_NAME10);
    const itemStyle = computed48(() => {
      const translateType = `translate${unref51(isVertical) ? "Y" : "X"}`;
      const _translate = `${translateType}(${unref51(translate2)}px)`;
      const _scale = `scale(${unref51(scale)})`;
      const transform2 = [_translate, _scale].join(" ");
      return {
        transform: transform2
      };
    });
    return (_ctx, _cache) => {
      return withDirectives9((openBlock33(), createElementBlock28("div", {
        ref_key: "carouselItemRef",
        ref: carouselItemRef,
        class: normalizeClass26([
          unref51(ns).e("item"),
          unref51(ns).is("active", unref51(active)),
          unref51(ns).is("in-stage", unref51(inStage)),
          unref51(ns).is("hover", unref51(hover)),
          unref51(ns).is("animating", unref51(animating)),
          {
            [unref51(ns).em("item", "card")]: unref51(isCardType),
            [unref51(ns).em("item", "card-vertical")]: unref51(isCardType) && unref51(isVertical)
          }
        ]),
        style: normalizeStyle13(unref51(itemStyle)),
        onClick: _cache[0] || (_cache[0] = (...args) => unref51(handleItemClick) && unref51(handleItemClick)(...args))
      }, [
        unref51(isCardType) ? withDirectives9((openBlock33(), createElementBlock28("div", {
          key: 0,
          class: normalizeClass26(unref51(ns).e("mask"))
        }, null, 2)), [
          [vShow7, !unref51(active)]
        ]) : createCommentVNode19("v-if", true),
        renderSlot29(_ctx.$slots, "default")
      ], 6)), [
        [vShow7, unref51(ready)]
      ]);
    };
  }
});
var CarouselItem = _export_sfc(_sfc_main34, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/carousel/index.mjs
var ElCarousel = withInstall(Carousel, {
  CarouselItem
});
var ElCarouselItem = withNoopInstall(CarouselItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader/src/cascader2.mjs
import { defineComponent as defineComponent50, useAttrs as useAttrs4, ref as ref54, computed as computed64, nextTick as nextTick18, watch as watch35, onMounted as onMounted27, openBlock as openBlock44, createBlock as createBlock27, unref as unref59, withCtx as withCtx27, withDirectives as withDirectives14, createElementBlock as createElementBlock38, normalizeClass as normalizeClass37, normalizeStyle as normalizeStyle17, createVNode as createVNode22, withModifiers as withModifiers10, Fragment as Fragment17, renderList as renderList8, toDisplayString as toDisplayString21, createElementVNode as createElementVNode23, withKeys as withKeys2, vModelText, createCommentVNode as createCommentVNode25, isRef as isRef11, vShow as vShow8, renderSlot as renderSlot37 } from "vue";
import { isPromise as isPromise3 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/index.mjs
import { defineComponent as defineComponent48, ref as ref53, computed as computed62, nextTick as nextTick17, provide as provide18, reactive as reactive10, watch as watch34, onBeforeUpdate as onBeforeUpdate2, onMounted as onMounted26, resolveComponent as resolveComponent3, openBlock as openBlock42, createElementBlock as createElementBlock36, normalizeClass as normalizeClass35, Fragment as Fragment16, renderList as renderList7, createBlock as createBlock25 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/menu.mjs
import { defineComponent as defineComponent47, getCurrentInstance as getCurrentInstance14, inject as inject34, ref as ref52, computed as computed60, resolveComponent as resolveComponent2, openBlock as openBlock41, createBlock as createBlock24, normalizeClass as normalizeClass34, withCtx as withCtx25, createElementBlock as createElementBlock35, Fragment as Fragment15, renderList as renderList6, createVNode as createVNode20, createTextVNode as createTextVNode11, toDisplayString as toDisplayString20, createCommentVNode as createCommentVNode23 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/node2.mjs
import { defineComponent as defineComponent46, inject as inject33, computed as computed59, createElementVNode as createElementVNode21, resolveComponent, openBlock as openBlock40, createElementBlock as createElementBlock34, normalizeClass as normalizeClass33, createCommentVNode as createCommentVNode22, createBlock as createBlock23, withModifiers as withModifiers8, withCtx as withCtx24, createVNode as createVNode19, Fragment as Fragment14 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox2.mjs
import { defineComponent as defineComponent39, useSlots as useSlots6, computed as computed53, openBlock as openBlock34, createBlock as createBlock21, resolveDynamicComponent as resolveDynamicComponent9, unref as unref52, normalizeClass as normalizeClass27, withCtx as withCtx22, createElementVNode as createElementVNode18, withDirectives as withDirectives10, createElementBlock as createElementBlock29, isRef as isRef7, vModelCheckbox, renderSlot as renderSlot30, Fragment as Fragment13, createTextVNode as createTextVNode7, toDisplayString as toDisplayString16, createCommentVNode as createCommentVNode20 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox.mjs
import { isString as isString15 } from "@vue/shared";
var checkboxProps = {
  modelValue: {
    type: [Number, String, Boolean],
    default: void 0
  },
  label: {
    type: [String, Boolean, Number, Object]
  },
  indeterminate: Boolean,
  disabled: Boolean,
  checked: Boolean,
  name: {
    type: String,
    default: void 0
  },
  trueLabel: {
    type: [String, Number],
    default: void 0
  },
  falseLabel: {
    type: [String, Number],
    default: void 0
  },
  id: {
    type: String,
    default: void 0
  },
  controls: {
    type: String,
    default: void 0
  },
  border: Boolean,
  size: useSizeProp,
  tabindex: [String, Number],
  validateEvent: {
    type: Boolean,
    default: true
  }
};
var checkboxEmits = {
  [UPDATE_MODEL_EVENT]: (val) => isString15(val) || isNumber3(val) || isBoolean2(val),
  change: (val) => isString15(val) || isNumber3(val) || isBoolean2(val)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox-disabled.mjs
import { inject as inject27, computed as computed49 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/constants.mjs
var checkboxGroupContextKey = Symbol("checkboxGroupContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox-disabled.mjs
var useCheckboxDisabled = ({
  model,
  isChecked
}) => {
  const checkboxGroup = inject27(checkboxGroupContextKey, void 0);
  const isLimitDisabled = computed49(() => {
    var _a2, _b;
    const max5 = (_a2 = checkboxGroup == null ? void 0 : checkboxGroup.max) == null ? void 0 : _a2.value;
    const min5 = (_b = checkboxGroup == null ? void 0 : checkboxGroup.min) == null ? void 0 : _b.value;
    return !isUndefined2(max5) && model.value.length >= max5 && !isChecked.value || !isUndefined2(min5) && model.value.length <= min5 && isChecked.value;
  });
  const isDisabled = useFormDisabled(computed49(() => (checkboxGroup == null ? void 0 : checkboxGroup.disabled.value) || isLimitDisabled.value));
  return {
    isDisabled,
    isLimitDisabled
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox-event.mjs
import { inject as inject28, getCurrentInstance as getCurrentInstance12, nextTick as nextTick13, computed as computed50, watch as watch31 } from "vue";
var useCheckboxEvent = (props, {
  model,
  isLimitExceeded,
  hasOwnLabel,
  isDisabled,
  isLabeledByFormItem
}) => {
  const checkboxGroup = inject28(checkboxGroupContextKey, void 0);
  const { formItem } = useFormItem();
  const { emit } = getCurrentInstance12();
  function getLabeledValue(value) {
    var _a2, _b;
    return value === props.trueLabel || value === true ? (_a2 = props.trueLabel) != null ? _a2 : true : (_b = props.falseLabel) != null ? _b : false;
  }
  function emitChangeEvent(checked, e) {
    emit("change", getLabeledValue(checked), e);
  }
  function handleChange(e) {
    if (isLimitExceeded.value)
      return;
    const target2 = e.target;
    emit("change", getLabeledValue(target2.checked), e);
  }
  async function onClickRoot(e) {
    if (isLimitExceeded.value)
      return;
    if (!hasOwnLabel.value && !isDisabled.value && isLabeledByFormItem.value) {
      const eventTargets = e.composedPath();
      const hasLabel = eventTargets.some((item) => item.tagName === "LABEL");
      if (!hasLabel) {
        model.value = getLabeledValue([false, props.falseLabel].includes(model.value));
        await nextTick13();
        emitChangeEvent(model.value, e);
      }
    }
  }
  const validateEvent = computed50(() => (checkboxGroup == null ? void 0 : checkboxGroup.validateEvent) || props.validateEvent);
  watch31(() => props.modelValue, () => {
    if (validateEvent.value) {
      formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
    }
  });
  return {
    handleChange,
    onClickRoot
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox-model.mjs
import { ref as ref48, getCurrentInstance as getCurrentInstance13, inject as inject29, computed as computed51 } from "vue";
import { isArray as isArray14 } from "@vue/shared";
var useCheckboxModel = (props) => {
  const selfModel = ref48(false);
  const { emit } = getCurrentInstance13();
  const checkboxGroup = inject29(checkboxGroupContextKey, void 0);
  const isGroup = computed51(() => isUndefined2(checkboxGroup) === false);
  const isLimitExceeded = ref48(false);
  const model = computed51({
    get() {
      var _a2, _b;
      return isGroup.value ? (_a2 = checkboxGroup == null ? void 0 : checkboxGroup.modelValue) == null ? void 0 : _a2.value : (_b = props.modelValue) != null ? _b : selfModel.value;
    },
    set(val) {
      var _a2, _b;
      if (isGroup.value && isArray14(val)) {
        isLimitExceeded.value = ((_a2 = checkboxGroup == null ? void 0 : checkboxGroup.max) == null ? void 0 : _a2.value) !== void 0 && val.length > (checkboxGroup == null ? void 0 : checkboxGroup.max.value);
        isLimitExceeded.value === false && ((_b = checkboxGroup == null ? void 0 : checkboxGroup.changeEvent) == null ? void 0 : _b.call(checkboxGroup, val));
      } else {
        emit(UPDATE_MODEL_EVENT, val);
        selfModel.value = val;
      }
    }
  });
  return {
    model,
    isGroup,
    isLimitExceeded
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox-status.mjs
import { inject as inject30, ref as ref49, computed as computed52, toRaw as toRaw2 } from "vue";
import { isArray as isArray15, isObject as isObject14 } from "@vue/shared";
var useCheckboxStatus = (props, slots, { model }) => {
  const checkboxGroup = inject30(checkboxGroupContextKey, void 0);
  const isFocused = ref49(false);
  const isChecked = computed52(() => {
    const value = model.value;
    if (isBoolean2(value)) {
      return value;
    } else if (isArray15(value)) {
      if (isObject14(props.label)) {
        return value.map(toRaw2).some((o2) => isEqual_default(o2, props.label));
      } else {
        return value.map(toRaw2).includes(props.label);
      }
    } else if (value !== null && value !== void 0) {
      return value === props.trueLabel;
    } else {
      return !!value;
    }
  });
  const checkboxButtonSize = useFormSize(computed52(() => {
    var _a2;
    return (_a2 = checkboxGroup == null ? void 0 : checkboxGroup.size) == null ? void 0 : _a2.value;
  }), {
    prop: true
  });
  const checkboxSize = useFormSize(computed52(() => {
    var _a2;
    return (_a2 = checkboxGroup == null ? void 0 : checkboxGroup.size) == null ? void 0 : _a2.value;
  }));
  const hasOwnLabel = computed52(() => {
    return !!(slots.default || props.label);
  });
  return {
    checkboxButtonSize,
    isChecked,
    isFocused,
    checkboxSize,
    hasOwnLabel
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox.mjs
import { isArray as isArray16 } from "@vue/shared";
var setStoreValue = (props, { model }) => {
  function addToStore() {
    if (isArray16(model.value) && !model.value.includes(props.label)) {
      model.value.push(props.label);
    } else {
      model.value = props.trueLabel || true;
    }
  }
  props.checked && addToStore();
};
var useCheckbox = (props, slots) => {
  const { formItem: elFormItem } = useFormItem();
  const { model, isGroup, isLimitExceeded } = useCheckboxModel(props);
  const {
    isFocused,
    isChecked,
    checkboxButtonSize,
    checkboxSize,
    hasOwnLabel
  } = useCheckboxStatus(props, slots, { model });
  const { isDisabled } = useCheckboxDisabled({ model, isChecked });
  const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {
    formItemContext: elFormItem,
    disableIdGeneration: hasOwnLabel,
    disableIdManagement: isGroup
  });
  const { handleChange, onClickRoot } = useCheckboxEvent(props, {
    model,
    isLimitExceeded,
    hasOwnLabel,
    isDisabled,
    isLabeledByFormItem
  });
  setStoreValue(props, { model });
  return {
    inputId,
    isLabeledByFormItem,
    isChecked,
    isDisabled,
    isFocused,
    checkboxButtonSize,
    checkboxSize,
    hasOwnLabel,
    model,
    handleChange,
    onClickRoot
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox2.mjs
var _hoisted_112 = ["tabindex", "role", "aria-checked"];
var _hoisted_28 = ["id", "aria-hidden", "name", "tabindex", "disabled", "true-value", "false-value"];
var _hoisted_33 = ["id", "aria-hidden", "disabled", "value", "name", "tabindex"];
var __default__29 = defineComponent39({
  name: "ElCheckbox"
});
var _sfc_main35 = defineComponent39({
  ...__default__29,
  props: checkboxProps,
  emits: checkboxEmits,
  setup(__props) {
    const props = __props;
    const slots = useSlots6();
    const {
      inputId,
      isLabeledByFormItem,
      isChecked,
      isDisabled,
      isFocused,
      checkboxSize,
      hasOwnLabel,
      model,
      handleChange,
      onClickRoot
    } = useCheckbox(props, slots);
    const ns = useNamespace("checkbox");
    const compKls = computed53(() => {
      return [
        ns.b(),
        ns.m(checkboxSize.value),
        ns.is("disabled", isDisabled.value),
        ns.is("bordered", props.border),
        ns.is("checked", isChecked.value)
      ];
    });
    const spanKls = computed53(() => {
      return [
        ns.e("input"),
        ns.is("disabled", isDisabled.value),
        ns.is("checked", isChecked.value),
        ns.is("indeterminate", props.indeterminate),
        ns.is("focus", isFocused.value)
      ];
    });
    return (_ctx, _cache) => {
      return openBlock34(), createBlock21(resolveDynamicComponent9(!unref52(hasOwnLabel) && unref52(isLabeledByFormItem) ? "span" : "label"), {
        class: normalizeClass27(unref52(compKls)),
        "aria-controls": _ctx.indeterminate ? _ctx.controls : null,
        onClick: unref52(onClickRoot)
      }, {
        default: withCtx22(() => [
          createElementVNode18("span", {
            class: normalizeClass27(unref52(spanKls)),
            tabindex: _ctx.indeterminate ? 0 : void 0,
            role: _ctx.indeterminate ? "checkbox" : void 0,
            "aria-checked": _ctx.indeterminate ? "mixed" : void 0
          }, [
            _ctx.trueLabel || _ctx.falseLabel ? withDirectives10((openBlock34(), createElementBlock29("input", {
              key: 0,
              id: unref52(inputId),
              "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef7(model) ? model.value = $event : null),
              class: normalizeClass27(unref52(ns).e("original")),
              type: "checkbox",
              "aria-hidden": _ctx.indeterminate ? "true" : "false",
              name: _ctx.name,
              tabindex: _ctx.tabindex,
              disabled: unref52(isDisabled),
              "true-value": _ctx.trueLabel,
              "false-value": _ctx.falseLabel,
              onChange: _cache[1] || (_cache[1] = (...args) => unref52(handleChange) && unref52(handleChange)(...args)),
              onFocus: _cache[2] || (_cache[2] = ($event) => isFocused.value = true),
              onBlur: _cache[3] || (_cache[3] = ($event) => isFocused.value = false)
            }, null, 42, _hoisted_28)), [
              [vModelCheckbox, unref52(model)]
            ]) : withDirectives10((openBlock34(), createElementBlock29("input", {
              key: 1,
              id: unref52(inputId),
              "onUpdate:modelValue": _cache[4] || (_cache[4] = ($event) => isRef7(model) ? model.value = $event : null),
              class: normalizeClass27(unref52(ns).e("original")),
              type: "checkbox",
              "aria-hidden": _ctx.indeterminate ? "true" : "false",
              disabled: unref52(isDisabled),
              value: _ctx.label,
              name: _ctx.name,
              tabindex: _ctx.tabindex,
              onChange: _cache[5] || (_cache[5] = (...args) => unref52(handleChange) && unref52(handleChange)(...args)),
              onFocus: _cache[6] || (_cache[6] = ($event) => isFocused.value = true),
              onBlur: _cache[7] || (_cache[7] = ($event) => isFocused.value = false)
            }, null, 42, _hoisted_33)), [
              [vModelCheckbox, unref52(model)]
            ]),
            createElementVNode18("span", {
              class: normalizeClass27(unref52(ns).e("inner"))
            }, null, 2)
          ], 10, _hoisted_112),
          unref52(hasOwnLabel) ? (openBlock34(), createElementBlock29("span", {
            key: 0,
            class: normalizeClass27(unref52(ns).e("label"))
          }, [
            renderSlot30(_ctx.$slots, "default"),
            !_ctx.$slots.default ? (openBlock34(), createElementBlock29(Fragment13, { key: 0 }, [
              createTextVNode7(toDisplayString16(_ctx.label), 1)
            ], 64)) : createCommentVNode20("v-if", true)
          ], 2)) : createCommentVNode20("v-if", true)
        ]),
        _: 3
      }, 8, ["class", "aria-controls", "onClick"]);
    };
  }
});
var Checkbox = _export_sfc(_sfc_main35, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox-button.mjs
import { defineComponent as defineComponent40, useSlots as useSlots7, inject as inject31, computed as computed54, openBlock as openBlock35, createElementBlock as createElementBlock30, normalizeClass as normalizeClass28, unref as unref53, withDirectives as withDirectives11, isRef as isRef8, vModelCheckbox as vModelCheckbox2, normalizeStyle as normalizeStyle14, renderSlot as renderSlot31, createTextVNode as createTextVNode8, toDisplayString as toDisplayString17, createCommentVNode as createCommentVNode21 } from "vue";
var _hoisted_113 = ["name", "tabindex", "disabled", "true-value", "false-value"];
var _hoisted_29 = ["name", "tabindex", "disabled", "value"];
var __default__30 = defineComponent40({
  name: "ElCheckboxButton"
});
var _sfc_main36 = defineComponent40({
  ...__default__30,
  props: checkboxProps,
  emits: checkboxEmits,
  setup(__props) {
    const props = __props;
    const slots = useSlots7();
    const {
      isFocused,
      isChecked,
      isDisabled,
      checkboxButtonSize,
      model,
      handleChange
    } = useCheckbox(props, slots);
    const checkboxGroup = inject31(checkboxGroupContextKey, void 0);
    const ns = useNamespace("checkbox");
    const activeStyle = computed54(() => {
      var _a2, _b, _c, _d;
      const fillValue = (_b = (_a2 = checkboxGroup == null ? void 0 : checkboxGroup.fill) == null ? void 0 : _a2.value) != null ? _b : "";
      return {
        backgroundColor: fillValue,
        borderColor: fillValue,
        color: (_d = (_c = checkboxGroup == null ? void 0 : checkboxGroup.textColor) == null ? void 0 : _c.value) != null ? _d : "",
        boxShadow: fillValue ? `-1px 0 0 0 ${fillValue}` : void 0
      };
    });
    const labelKls = computed54(() => {
      return [
        ns.b("button"),
        ns.bm("button", checkboxButtonSize.value),
        ns.is("disabled", isDisabled.value),
        ns.is("checked", isChecked.value),
        ns.is("focus", isFocused.value)
      ];
    });
    return (_ctx, _cache) => {
      return openBlock35(), createElementBlock30("label", {
        class: normalizeClass28(unref53(labelKls))
      }, [
        _ctx.trueLabel || _ctx.falseLabel ? withDirectives11((openBlock35(), createElementBlock30("input", {
          key: 0,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef8(model) ? model.value = $event : null),
          class: normalizeClass28(unref53(ns).be("button", "original")),
          type: "checkbox",
          name: _ctx.name,
          tabindex: _ctx.tabindex,
          disabled: unref53(isDisabled),
          "true-value": _ctx.trueLabel,
          "false-value": _ctx.falseLabel,
          onChange: _cache[1] || (_cache[1] = (...args) => unref53(handleChange) && unref53(handleChange)(...args)),
          onFocus: _cache[2] || (_cache[2] = ($event) => isFocused.value = true),
          onBlur: _cache[3] || (_cache[3] = ($event) => isFocused.value = false)
        }, null, 42, _hoisted_113)), [
          [vModelCheckbox2, unref53(model)]
        ]) : withDirectives11((openBlock35(), createElementBlock30("input", {
          key: 1,
          "onUpdate:modelValue": _cache[4] || (_cache[4] = ($event) => isRef8(model) ? model.value = $event : null),
          class: normalizeClass28(unref53(ns).be("button", "original")),
          type: "checkbox",
          name: _ctx.name,
          tabindex: _ctx.tabindex,
          disabled: unref53(isDisabled),
          value: _ctx.label,
          onChange: _cache[5] || (_cache[5] = (...args) => unref53(handleChange) && unref53(handleChange)(...args)),
          onFocus: _cache[6] || (_cache[6] = ($event) => isFocused.value = true),
          onBlur: _cache[7] || (_cache[7] = ($event) => isFocused.value = false)
        }, null, 42, _hoisted_29)), [
          [vModelCheckbox2, unref53(model)]
        ]),
        _ctx.$slots.default || _ctx.label ? (openBlock35(), createElementBlock30("span", {
          key: 2,
          class: normalizeClass28(unref53(ns).be("button", "inner")),
          style: normalizeStyle14(unref53(isChecked) ? unref53(activeStyle) : void 0)
        }, [
          renderSlot31(_ctx.$slots, "default", {}, () => [
            createTextVNode8(toDisplayString17(_ctx.label), 1)
          ])
        ], 6)) : createCommentVNode21("v-if", true)
      ], 2);
    };
  }
});
var CheckboxButton = _export_sfc(_sfc_main36, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-button.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox-group2.mjs
import { defineComponent as defineComponent41, nextTick as nextTick14, computed as computed55, provide as provide16, toRefs as toRefs5, watch as watch32, openBlock as openBlock36, createBlock as createBlock22, resolveDynamicComponent as resolveDynamicComponent10, unref as unref54, normalizeClass as normalizeClass29, withCtx as withCtx23, renderSlot as renderSlot32 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox-group.mjs
import { isArray as isArray17 } from "@vue/shared";
var checkboxGroupProps = buildProps({
  modelValue: {
    type: definePropType(Array),
    default: () => []
  },
  disabled: Boolean,
  min: Number,
  max: Number,
  size: useSizeProp,
  label: String,
  fill: String,
  textColor: String,
  tag: {
    type: String,
    default: "div"
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var checkboxGroupEmits = {
  [UPDATE_MODEL_EVENT]: (val) => isArray17(val),
  change: (val) => isArray17(val)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/src/checkbox-group2.mjs
var __default__31 = defineComponent41({
  name: "ElCheckboxGroup"
});
var _sfc_main37 = defineComponent41({
  ...__default__31,
  props: checkboxGroupProps,
  emits: checkboxGroupEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("checkbox");
    const { formItem } = useFormItem();
    const { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(props, {
      formItemContext: formItem
    });
    const changeEvent = async (value) => {
      emit(UPDATE_MODEL_EVENT, value);
      await nextTick14();
      emit("change", value);
    };
    const modelValue = computed55({
      get() {
        return props.modelValue;
      },
      set(val) {
        changeEvent(val);
      }
    });
    provide16(checkboxGroupContextKey, {
      ...pick_default(toRefs5(props), [
        "size",
        "min",
        "max",
        "disabled",
        "validateEvent",
        "fill",
        "textColor"
      ]),
      modelValue,
      changeEvent
    });
    watch32(() => props.modelValue, () => {
      if (props.validateEvent) {
        formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
      }
    });
    return (_ctx, _cache) => {
      var _a2;
      return openBlock36(), createBlock22(resolveDynamicComponent10(_ctx.tag), {
        id: unref54(groupId),
        class: normalizeClass29(unref54(ns).b("group")),
        role: "group",
        "aria-label": !unref54(isLabeledByFormItem) ? _ctx.label || "checkbox-group" : void 0,
        "aria-labelledby": unref54(isLabeledByFormItem) ? (_a2 = unref54(formItem)) == null ? void 0 : _a2.labelId : void 0
      }, {
        default: withCtx23(() => [
          renderSlot32(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "class", "aria-label", "aria-labelledby"]);
    };
  }
});
var CheckboxGroup = _export_sfc(_sfc_main37, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-group.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/checkbox/index.mjs
var ElCheckbox = withInstall(Checkbox, {
  CheckboxButton,
  CheckboxGroup
});
var ElCheckboxButton = withNoopInstall(CheckboxButton);
var ElCheckboxGroup = withNoopInstall(CheckboxGroup);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio2.mjs
import { defineComponent as defineComponent42, nextTick as nextTick15, openBlock as openBlock37, createElementBlock as createElementBlock31, normalizeClass as normalizeClass30, unref as unref55, createElementVNode as createElementVNode19, withDirectives as withDirectives12, isRef as isRef9, vModelRadio, withModifiers as withModifiers6, renderSlot as renderSlot33, createTextVNode as createTextVNode9, toDisplayString as toDisplayString18 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio.mjs
import { isString as isString16 } from "@vue/shared";
var radioPropsBase = buildProps({
  size: useSizeProp,
  disabled: Boolean,
  label: {
    type: [String, Number, Boolean],
    default: ""
  }
});
var radioProps = buildProps({
  ...radioPropsBase,
  modelValue: {
    type: [String, Number, Boolean],
    default: ""
  },
  name: {
    type: String,
    default: ""
  },
  border: Boolean
});
var radioEmits = {
  [UPDATE_MODEL_EVENT]: (val) => isString16(val) || isNumber3(val) || isBoolean2(val),
  [CHANGE_EVENT]: (val) => isString16(val) || isNumber3(val) || isBoolean2(val)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/use-radio.mjs
import { ref as ref50, inject as inject32, computed as computed56 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/constants.mjs
var radioGroupKey = Symbol("radioGroupKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/use-radio.mjs
var useRadio = (props, emit) => {
  const radioRef = ref50();
  const radioGroup = inject32(radioGroupKey, void 0);
  const isGroup = computed56(() => !!radioGroup);
  const modelValue = computed56({
    get() {
      return isGroup.value ? radioGroup.modelValue : props.modelValue;
    },
    set(val) {
      if (isGroup.value) {
        radioGroup.changeEvent(val);
      } else {
        emit && emit(UPDATE_MODEL_EVENT, val);
      }
      radioRef.value.checked = props.modelValue === props.label;
    }
  });
  const size4 = useFormSize(computed56(() => radioGroup == null ? void 0 : radioGroup.size));
  const disabled = useFormDisabled(computed56(() => radioGroup == null ? void 0 : radioGroup.disabled));
  const focus = ref50(false);
  const tabIndex = computed56(() => {
    return disabled.value || isGroup.value && modelValue.value !== props.label ? -1 : 0;
  });
  return {
    radioRef,
    isGroup,
    radioGroup,
    focus,
    size: size4,
    disabled,
    tabIndex,
    modelValue
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio2.mjs
var _hoisted_114 = ["value", "name", "disabled"];
var __default__32 = defineComponent42({
  name: "ElRadio"
});
var _sfc_main38 = defineComponent42({
  ...__default__32,
  props: radioProps,
  emits: radioEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("radio");
    const { radioRef, radioGroup, focus, size: size4, disabled, modelValue } = useRadio(props, emit);
    function handleChange() {
      nextTick15(() => emit("change", modelValue.value));
    }
    return (_ctx, _cache) => {
      var _a2;
      return openBlock37(), createElementBlock31("label", {
        class: normalizeClass30([
          unref55(ns).b(),
          unref55(ns).is("disabled", unref55(disabled)),
          unref55(ns).is("focus", unref55(focus)),
          unref55(ns).is("bordered", _ctx.border),
          unref55(ns).is("checked", unref55(modelValue) === _ctx.label),
          unref55(ns).m(unref55(size4))
        ])
      }, [
        createElementVNode19("span", {
          class: normalizeClass30([
            unref55(ns).e("input"),
            unref55(ns).is("disabled", unref55(disabled)),
            unref55(ns).is("checked", unref55(modelValue) === _ctx.label)
          ])
        }, [
          withDirectives12(createElementVNode19("input", {
            ref_key: "radioRef",
            ref: radioRef,
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef9(modelValue) ? modelValue.value = $event : null),
            class: normalizeClass30(unref55(ns).e("original")),
            value: _ctx.label,
            name: _ctx.name || ((_a2 = unref55(radioGroup)) == null ? void 0 : _a2.name),
            disabled: unref55(disabled),
            type: "radio",
            onFocus: _cache[1] || (_cache[1] = ($event) => focus.value = true),
            onBlur: _cache[2] || (_cache[2] = ($event) => focus.value = false),
            onChange: handleChange
          }, null, 42, _hoisted_114), [
            [vModelRadio, unref55(modelValue)]
          ]),
          createElementVNode19("span", {
            class: normalizeClass30(unref55(ns).e("inner"))
          }, null, 2)
        ], 2),
        createElementVNode19("span", {
          class: normalizeClass30(unref55(ns).e("label")),
          onKeydown: _cache[3] || (_cache[3] = withModifiers6(() => {
          }, ["stop"]))
        }, [
          renderSlot33(_ctx.$slots, "default", {}, () => [
            createTextVNode9(toDisplayString18(_ctx.label), 1)
          ])
        ], 34)
      ], 2);
    };
  }
});
var Radio = _export_sfc(_sfc_main38, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio-button2.mjs
import { defineComponent as defineComponent43, computed as computed57, openBlock as openBlock38, createElementBlock as createElementBlock32, normalizeClass as normalizeClass31, unref as unref56, withDirectives as withDirectives13, createElementVNode as createElementVNode20, isRef as isRef10, vModelRadio as vModelRadio2, normalizeStyle as normalizeStyle15, withModifiers as withModifiers7, renderSlot as renderSlot34, createTextVNode as createTextVNode10, toDisplayString as toDisplayString19 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio-button.mjs
var radioButtonProps = buildProps({
  ...radioPropsBase,
  name: {
    type: String,
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio-button2.mjs
var _hoisted_115 = ["value", "name", "disabled"];
var __default__33 = defineComponent43({
  name: "ElRadioButton"
});
var _sfc_main39 = defineComponent43({
  ...__default__33,
  props: radioButtonProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("radio");
    const { radioRef, focus, size: size4, disabled, modelValue, radioGroup } = useRadio(props);
    const activeStyle = computed57(() => {
      return {
        backgroundColor: (radioGroup == null ? void 0 : radioGroup.fill) || "",
        borderColor: (radioGroup == null ? void 0 : radioGroup.fill) || "",
        boxShadow: (radioGroup == null ? void 0 : radioGroup.fill) ? `-1px 0 0 0 ${radioGroup.fill}` : "",
        color: (radioGroup == null ? void 0 : radioGroup.textColor) || ""
      };
    });
    return (_ctx, _cache) => {
      var _a2;
      return openBlock38(), createElementBlock32("label", {
        class: normalizeClass31([
          unref56(ns).b("button"),
          unref56(ns).is("active", unref56(modelValue) === _ctx.label),
          unref56(ns).is("disabled", unref56(disabled)),
          unref56(ns).is("focus", unref56(focus)),
          unref56(ns).bm("button", unref56(size4))
        ])
      }, [
        withDirectives13(createElementVNode20("input", {
          ref_key: "radioRef",
          ref: radioRef,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef10(modelValue) ? modelValue.value = $event : null),
          class: normalizeClass31(unref56(ns).be("button", "original-radio")),
          value: _ctx.label,
          type: "radio",
          name: _ctx.name || ((_a2 = unref56(radioGroup)) == null ? void 0 : _a2.name),
          disabled: unref56(disabled),
          onFocus: _cache[1] || (_cache[1] = ($event) => focus.value = true),
          onBlur: _cache[2] || (_cache[2] = ($event) => focus.value = false)
        }, null, 42, _hoisted_115), [
          [vModelRadio2, unref56(modelValue)]
        ]),
        createElementVNode20("span", {
          class: normalizeClass31(unref56(ns).be("button", "inner")),
          style: normalizeStyle15(unref56(modelValue) === _ctx.label ? unref56(activeStyle) : {}),
          onKeydown: _cache[3] || (_cache[3] = withModifiers7(() => {
          }, ["stop"]))
        }, [
          renderSlot34(_ctx.$slots, "default", {}, () => [
            createTextVNode10(toDisplayString19(_ctx.label), 1)
          ])
        ], 38)
      ], 2);
    };
  }
});
var RadioButton = _export_sfc(_sfc_main39, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-button.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio-group2.mjs
import { defineComponent as defineComponent44, ref as ref51, nextTick as nextTick16, onMounted as onMounted25, computed as computed58, provide as provide17, reactive as reactive9, toRefs as toRefs6, watch as watch33, openBlock as openBlock39, createElementBlock as createElementBlock33, unref as unref57, normalizeClass as normalizeClass32, renderSlot as renderSlot35 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio-group.mjs
var radioGroupProps = buildProps({
  id: {
    type: String,
    default: void 0
  },
  size: useSizeProp,
  disabled: Boolean,
  modelValue: {
    type: [String, Number, Boolean],
    default: ""
  },
  fill: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  textColor: {
    type: String,
    default: ""
  },
  name: {
    type: String,
    default: void 0
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var radioGroupEmits = radioEmits;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/src/radio-group2.mjs
var _hoisted_116 = ["id", "aria-label", "aria-labelledby"];
var __default__34 = defineComponent44({
  name: "ElRadioGroup"
});
var _sfc_main40 = defineComponent44({
  ...__default__34,
  props: radioGroupProps,
  emits: radioGroupEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("radio");
    const radioId = useId();
    const radioGroupRef = ref51();
    const { formItem } = useFormItem();
    const { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(props, {
      formItemContext: formItem
    });
    const changeEvent = (value) => {
      emit(UPDATE_MODEL_EVENT, value);
      nextTick16(() => emit("change", value));
    };
    onMounted25(() => {
      const radios = radioGroupRef.value.querySelectorAll("[type=radio]");
      const firstLabel = radios[0];
      if (!Array.from(radios).some((radio) => radio.checked) && firstLabel) {
        firstLabel.tabIndex = 0;
      }
    });
    const name = computed58(() => {
      return props.name || radioId.value;
    });
    provide17(radioGroupKey, reactive9({
      ...toRefs6(props),
      changeEvent,
      name
    }));
    watch33(() => props.modelValue, () => {
      if (props.validateEvent) {
        formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
      }
    });
    return (_ctx, _cache) => {
      return openBlock39(), createElementBlock33("div", {
        id: unref57(groupId),
        ref_key: "radioGroupRef",
        ref: radioGroupRef,
        class: normalizeClass32(unref57(ns).b("group")),
        role: "radiogroup",
        "aria-label": !unref57(isLabeledByFormItem) ? _ctx.label || "radio-group" : void 0,
        "aria-labelledby": unref57(isLabeledByFormItem) ? unref57(formItem).labelId : void 0
      }, [
        renderSlot35(_ctx.$slots, "default")
      ], 10, _hoisted_116);
    };
  }
});
var RadioGroup = _export_sfc(_sfc_main40, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-group.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/radio/index.mjs
var ElRadio = withInstall(Radio, {
  RadioButton,
  RadioGroup
});
var ElRadioGroup = withNoopInstall(RadioGroup);
var ElRadioButton = withNoopInstall(RadioButton);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/node-content.mjs
import { defineComponent as defineComponent45, h as h3 } from "vue";
var NodeContent = defineComponent45({
  name: "NodeContent",
  setup() {
    const ns = useNamespace("cascader-node");
    return {
      ns
    };
  },
  render() {
    const { ns } = this;
    const { node, panel } = this.$parent;
    const { data, label } = node;
    const { renderLabelFn } = panel;
    return h3("span", { class: ns.e("label") }, renderLabelFn ? renderLabelFn({ node, data }) : label);
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/types.mjs
var CASCADER_PANEL_INJECTION_KEY = Symbol();

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/node2.mjs
var _sfc_main41 = defineComponent46({
  name: "ElCascaderNode",
  components: {
    ElCheckbox,
    ElRadio,
    NodeContent,
    ElIcon,
    Check: check_default,
    Loading: loading_default,
    ArrowRight: arrow_right_default
  },
  props: {
    node: {
      type: Object,
      required: true
    },
    menuId: String
  },
  emits: ["expand"],
  setup(props, { emit }) {
    const panel = inject33(CASCADER_PANEL_INJECTION_KEY);
    const ns = useNamespace("cascader-node");
    const isHoverMenu = computed59(() => panel.isHoverMenu);
    const multiple = computed59(() => panel.config.multiple);
    const checkStrictly = computed59(() => panel.config.checkStrictly);
    const checkedNodeId = computed59(() => {
      var _a2;
      return (_a2 = panel.checkedNodes[0]) == null ? void 0 : _a2.uid;
    });
    const isDisabled = computed59(() => props.node.isDisabled);
    const isLeaf2 = computed59(() => props.node.isLeaf);
    const expandable = computed59(() => checkStrictly.value && !isLeaf2.value || !isDisabled.value);
    const inExpandingPath = computed59(() => isInPath(panel.expandingNode));
    const inCheckedPath = computed59(() => checkStrictly.value && panel.checkedNodes.some(isInPath));
    const isInPath = (node) => {
      var _a2;
      const { level, uid: uid2 } = props.node;
      return ((_a2 = node == null ? void 0 : node.pathNodes[level - 1]) == null ? void 0 : _a2.uid) === uid2;
    };
    const doExpand = () => {
      if (inExpandingPath.value)
        return;
      panel.expandNode(props.node);
    };
    const doCheck = (checked) => {
      const { node } = props;
      if (checked === node.checked)
        return;
      panel.handleCheckChange(node, checked);
    };
    const doLoad = () => {
      panel.lazyLoad(props.node, () => {
        if (!isLeaf2.value)
          doExpand();
      });
    };
    const handleHoverExpand = (e) => {
      if (!isHoverMenu.value)
        return;
      handleExpand();
      !isLeaf2.value && emit("expand", e);
    };
    const handleExpand = () => {
      const { node } = props;
      if (!expandable.value || node.loading)
        return;
      node.loaded ? doExpand() : doLoad();
    };
    const handleClick = () => {
      if (isHoverMenu.value && !isLeaf2.value)
        return;
      if (isLeaf2.value && !isDisabled.value && !checkStrictly.value && !multiple.value) {
        handleCheck(true);
      } else {
        handleExpand();
      }
    };
    const handleSelectCheck = (checked) => {
      if (checkStrictly.value) {
        doCheck(checked);
        if (props.node.loaded) {
          doExpand();
        }
      } else {
        handleCheck(checked);
      }
    };
    const handleCheck = (checked) => {
      if (!props.node.loaded) {
        doLoad();
      } else {
        doCheck(checked);
        !checkStrictly.value && doExpand();
      }
    };
    return {
      panel,
      isHoverMenu,
      multiple,
      checkStrictly,
      checkedNodeId,
      isDisabled,
      isLeaf: isLeaf2,
      expandable,
      inExpandingPath,
      inCheckedPath,
      ns,
      handleHoverExpand,
      handleExpand,
      handleClick,
      handleCheck,
      handleSelectCheck
    };
  }
});
var _hoisted_117 = ["id", "aria-haspopup", "aria-owns", "aria-expanded", "tabindex"];
var _hoisted_210 = createElementVNode21("span", null, null, -1);
function _sfc_render2(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_checkbox = resolveComponent("el-checkbox");
  const _component_el_radio = resolveComponent("el-radio");
  const _component_check = resolveComponent("check");
  const _component_el_icon = resolveComponent("el-icon");
  const _component_node_content = resolveComponent("node-content");
  const _component_loading = resolveComponent("loading");
  const _component_arrow_right = resolveComponent("arrow-right");
  return openBlock40(), createElementBlock34("li", {
    id: `${_ctx.menuId}-${_ctx.node.uid}`,
    role: "menuitem",
    "aria-haspopup": !_ctx.isLeaf,
    "aria-owns": _ctx.isLeaf ? null : _ctx.menuId,
    "aria-expanded": _ctx.inExpandingPath,
    tabindex: _ctx.expandable ? -1 : void 0,
    class: normalizeClass33([
      _ctx.ns.b(),
      _ctx.ns.is("selectable", _ctx.checkStrictly),
      _ctx.ns.is("active", _ctx.node.checked),
      _ctx.ns.is("disabled", !_ctx.expandable),
      _ctx.inExpandingPath && "in-active-path",
      _ctx.inCheckedPath && "in-checked-path"
    ]),
    onMouseenter: _cache[2] || (_cache[2] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),
    onFocus: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),
    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
  }, [
    createCommentVNode22(" prefix "),
    _ctx.multiple ? (openBlock40(), createBlock23(_component_el_checkbox, {
      key: 0,
      "model-value": _ctx.node.checked,
      indeterminate: _ctx.node.indeterminate,
      disabled: _ctx.isDisabled,
      onClick: _cache[0] || (_cache[0] = withModifiers8(() => {
      }, ["stop"])),
      "onUpdate:modelValue": _ctx.handleSelectCheck
    }, null, 8, ["model-value", "indeterminate", "disabled", "onUpdate:modelValue"])) : _ctx.checkStrictly ? (openBlock40(), createBlock23(_component_el_radio, {
      key: 1,
      "model-value": _ctx.checkedNodeId,
      label: _ctx.node.uid,
      disabled: _ctx.isDisabled,
      "onUpdate:modelValue": _ctx.handleSelectCheck,
      onClick: _cache[1] || (_cache[1] = withModifiers8(() => {
      }, ["stop"]))
    }, {
      default: withCtx24(() => [
        createCommentVNode22("\n        Add an empty element to avoid render label,\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\n      "),
        _hoisted_210
      ]),
      _: 1
    }, 8, ["model-value", "label", "disabled", "onUpdate:modelValue"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock40(), createBlock23(_component_el_icon, {
      key: 2,
      class: normalizeClass33(_ctx.ns.e("prefix"))
    }, {
      default: withCtx24(() => [
        createVNode19(_component_check)
      ]),
      _: 1
    }, 8, ["class"])) : createCommentVNode22("v-if", true),
    createCommentVNode22(" content "),
    createVNode19(_component_node_content),
    createCommentVNode22(" postfix "),
    !_ctx.isLeaf ? (openBlock40(), createElementBlock34(Fragment14, { key: 3 }, [
      _ctx.node.loading ? (openBlock40(), createBlock23(_component_el_icon, {
        key: 0,
        class: normalizeClass33([_ctx.ns.is("loading"), _ctx.ns.e("postfix")])
      }, {
        default: withCtx24(() => [
          createVNode19(_component_loading)
        ]),
        _: 1
      }, 8, ["class"])) : (openBlock40(), createBlock23(_component_el_icon, {
        key: 1,
        class: normalizeClass33(["arrow-right", _ctx.ns.e("postfix")])
      }, {
        default: withCtx24(() => [
          createVNode19(_component_arrow_right)
        ]),
        _: 1
      }, 8, ["class"]))
    ], 64)) : createCommentVNode22("v-if", true)
  ], 42, _hoisted_117);
}
var ElCascaderNode = _export_sfc(_sfc_main41, [["render", _sfc_render2], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/node.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/menu.mjs
var _sfc_main42 = defineComponent47({
  name: "ElCascaderMenu",
  components: {
    Loading: loading_default,
    ElIcon,
    ElScrollbar,
    ElCascaderNode
  },
  props: {
    nodes: {
      type: Array,
      required: true
    },
    index: {
      type: Number,
      required: true
    }
  },
  setup(props) {
    const instance = getCurrentInstance14();
    const ns = useNamespace("cascader-menu");
    const { t } = useLocale();
    const id = generateId();
    let activeNode = null;
    let hoverTimer = null;
    const panel = inject34(CASCADER_PANEL_INJECTION_KEY);
    const hoverZone = ref52(null);
    const isEmpty3 = computed60(() => !props.nodes.length);
    const isLoading = computed60(() => !panel.initialLoaded);
    const menuId = computed60(() => `cascader-menu-${id}-${props.index}`);
    const handleExpand = (e) => {
      activeNode = e.target;
    };
    const handleMouseMove = (e) => {
      if (!panel.isHoverMenu || !activeNode || !hoverZone.value)
        return;
      if (activeNode.contains(e.target)) {
        clearHoverTimer();
        const el = instance.vnode.el;
        const { left: left2 } = el.getBoundingClientRect();
        const { offsetWidth, offsetHeight } = el;
        const startX = e.clientX - left2;
        const top = activeNode.offsetTop;
        const bottom = top + activeNode.offsetHeight;
        hoverZone.value.innerHTML = `
          <path style="pointer-events: auto;" fill="transparent" d="M${startX} ${top} L${offsetWidth} 0 V${top} Z" />
          <path style="pointer-events: auto;" fill="transparent" d="M${startX} ${bottom} L${offsetWidth} ${offsetHeight} V${bottom} Z" />
        `;
      } else if (!hoverTimer) {
        hoverTimer = window.setTimeout(clearHoverZone, panel.config.hoverThreshold);
      }
    };
    const clearHoverTimer = () => {
      if (!hoverTimer)
        return;
      clearTimeout(hoverTimer);
      hoverTimer = null;
    };
    const clearHoverZone = () => {
      if (!hoverZone.value)
        return;
      hoverZone.value.innerHTML = "";
      clearHoverTimer();
    };
    return {
      ns,
      panel,
      hoverZone,
      isEmpty: isEmpty3,
      isLoading,
      menuId,
      t,
      handleExpand,
      handleMouseMove,
      clearHoverZone
    };
  }
});
function _sfc_render3(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_cascader_node = resolveComponent2("el-cascader-node");
  const _component_loading = resolveComponent2("loading");
  const _component_el_icon = resolveComponent2("el-icon");
  const _component_el_scrollbar = resolveComponent2("el-scrollbar");
  return openBlock41(), createBlock24(_component_el_scrollbar, {
    key: _ctx.menuId,
    tag: "ul",
    role: "menu",
    class: normalizeClass34(_ctx.ns.b()),
    "wrap-class": _ctx.ns.e("wrap"),
    "view-class": [_ctx.ns.e("list"), _ctx.ns.is("empty", _ctx.isEmpty)],
    onMousemove: _ctx.handleMouseMove,
    onMouseleave: _ctx.clearHoverZone
  }, {
    default: withCtx25(() => {
      var _a2;
      return [
        (openBlock41(true), createElementBlock35(Fragment15, null, renderList6(_ctx.nodes, (node) => {
          return openBlock41(), createBlock24(_component_el_cascader_node, {
            key: node.uid,
            node,
            "menu-id": _ctx.menuId,
            onExpand: _ctx.handleExpand
          }, null, 8, ["node", "menu-id", "onExpand"]);
        }), 128)),
        _ctx.isLoading ? (openBlock41(), createElementBlock35("div", {
          key: 0,
          class: normalizeClass34(_ctx.ns.e("empty-text"))
        }, [
          createVNode20(_component_el_icon, {
            size: "14",
            class: normalizeClass34(_ctx.ns.is("loading"))
          }, {
            default: withCtx25(() => [
              createVNode20(_component_loading)
            ]),
            _: 1
          }, 8, ["class"]),
          createTextVNode11(" " + toDisplayString20(_ctx.t("el.cascader.loading")), 1)
        ], 2)) : _ctx.isEmpty ? (openBlock41(), createElementBlock35("div", {
          key: 1,
          class: normalizeClass34(_ctx.ns.e("empty-text"))
        }, toDisplayString20(_ctx.t("el.cascader.noData")), 3)) : ((_a2 = _ctx.panel) == null ? void 0 : _a2.isHoverMenu) ? (openBlock41(), createElementBlock35("svg", {
          key: 2,
          ref: "hoverZone",
          class: normalizeClass34(_ctx.ns.e("hover-zone"))
        }, null, 2)) : createCommentVNode23("v-if", true)
      ];
    }),
    _: 1
  }, 8, ["class", "wrap-class", "view-class", "onMousemove", "onMouseleave"]);
}
var ElCascaderMenu = _export_sfc(_sfc_main42, [["render", _sfc_render3], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/menu.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/node.mjs
import { isFunction as isFunction11 } from "@vue/shared";
var uid = 0;
var calculatePathNodes = (node) => {
  const nodes = [node];
  let { parent: parent2 } = node;
  while (parent2) {
    nodes.unshift(parent2);
    parent2 = parent2.parent;
  }
  return nodes;
};
var Node = class {
  constructor(data, config, parent2, root2 = false) {
    this.data = data;
    this.config = config;
    this.parent = parent2;
    this.root = root2;
    this.uid = uid++;
    this.checked = false;
    this.indeterminate = false;
    this.loading = false;
    const { value: valueKey, label: labelKey, children: childrenKey } = config;
    const childrenData = data[childrenKey];
    const pathNodes = calculatePathNodes(this);
    this.level = root2 ? 0 : parent2 ? parent2.level + 1 : 1;
    this.value = data[valueKey];
    this.label = data[labelKey];
    this.pathNodes = pathNodes;
    this.pathValues = pathNodes.map((node) => node.value);
    this.pathLabels = pathNodes.map((node) => node.label);
    this.childrenData = childrenData;
    this.children = (childrenData || []).map((child) => new Node(child, config, this));
    this.loaded = !config.lazy || this.isLeaf || !isEmpty2(childrenData);
  }
  get isDisabled() {
    const { data, parent: parent2, config } = this;
    const { disabled, checkStrictly } = config;
    const isDisabled = isFunction11(disabled) ? disabled(data, this) : !!data[disabled];
    return isDisabled || !checkStrictly && (parent2 == null ? void 0 : parent2.isDisabled);
  }
  get isLeaf() {
    const { data, config, childrenData, loaded } = this;
    const { lazy, leaf } = config;
    const isLeaf2 = isFunction11(leaf) ? leaf(data, this) : data[leaf];
    return isUndefined2(isLeaf2) ? lazy && !loaded ? false : !(Array.isArray(childrenData) && childrenData.length) : !!isLeaf2;
  }
  get valueByOption() {
    return this.config.emitPath ? this.pathValues : this.value;
  }
  appendChild(childData) {
    const { childrenData, children } = this;
    const node = new Node(childData, this.config, this);
    if (Array.isArray(childrenData)) {
      childrenData.push(childData);
    } else {
      this.childrenData = [childData];
    }
    children.push(node);
    return node;
  }
  calcText(allLevels, separator) {
    const text = allLevels ? this.pathLabels.join(separator) : this.label;
    this.text = text;
    return text;
  }
  broadcast(event, ...args) {
    const handlerName = `onParent${capitalize2(event)}`;
    this.children.forEach((child) => {
      if (child) {
        child.broadcast(event, ...args);
        child[handlerName] && child[handlerName](...args);
      }
    });
  }
  emit(event, ...args) {
    const { parent: parent2 } = this;
    const handlerName = `onChild${capitalize2(event)}`;
    if (parent2) {
      parent2[handlerName] && parent2[handlerName](...args);
      parent2.emit(event, ...args);
    }
  }
  onParentCheck(checked) {
    if (!this.isDisabled) {
      this.setCheckState(checked);
    }
  }
  onChildCheck() {
    const { children } = this;
    const validChildren = children.filter((child) => !child.isDisabled);
    const checked = validChildren.length ? validChildren.every((child) => child.checked) : false;
    this.setCheckState(checked);
  }
  setCheckState(checked) {
    const totalNum = this.children.length;
    const checkedNum = this.children.reduce((c2, p2) => {
      const num = p2.checked ? 1 : p2.indeterminate ? 0.5 : 0;
      return c2 + num;
    }, 0);
    this.checked = this.loaded && this.children.filter((child) => !child.isDisabled).every((child) => child.loaded && child.checked) && checked;
    this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;
  }
  doCheck(checked) {
    if (this.checked === checked)
      return;
    const { checkStrictly, multiple } = this.config;
    if (checkStrictly || !multiple) {
      this.checked = checked;
    } else {
      this.broadcast("check", checked);
      this.setCheckState(checked);
      this.emit("check");
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/store.mjs
var flatNodes = (nodes, leafOnly) => {
  return nodes.reduce((res, node) => {
    if (node.isLeaf) {
      res.push(node);
    } else {
      !leafOnly && res.push(node);
      res = res.concat(flatNodes(node.children, leafOnly));
    }
    return res;
  }, []);
};
var Store = class {
  constructor(data, config) {
    this.config = config;
    const nodes = (data || []).map((nodeData) => new Node(nodeData, this.config));
    this.nodes = nodes;
    this.allNodes = flatNodes(nodes, false);
    this.leafNodes = flatNodes(nodes, true);
  }
  getNodes() {
    return this.nodes;
  }
  getFlattedNodes(leafOnly) {
    return leafOnly ? this.leafNodes : this.allNodes;
  }
  appendNode(nodeData, parentNode) {
    const node = parentNode ? parentNode.appendChild(nodeData) : new Node(nodeData, this.config);
    if (!parentNode)
      this.nodes.push(node);
    this.allNodes.push(node);
    node.isLeaf && this.leafNodes.push(node);
  }
  appendNodes(nodeDataList, parentNode) {
    nodeDataList.forEach((nodeData) => this.appendNode(nodeData, parentNode));
  }
  getNodeByValue(value, leafOnly = false) {
    if (!value && value !== 0)
      return null;
    const node = this.getFlattedNodes(leafOnly).find((node2) => isEqual_default(node2.value, value) || isEqual_default(node2.pathValues, value));
    return node || null;
  }
  getSameNode(node) {
    if (!node)
      return null;
    const node_ = this.getFlattedNodes(false).find(({ value, level }) => isEqual_default(node.value, value) && node.level === level);
    return node_ || null;
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/config.mjs
import { computed as computed61 } from "vue";
import { NOOP as NOOP11 } from "@vue/shared";
var CommonProps = buildProps({
  modelValue: {
    type: definePropType([Number, String, Array])
  },
  options: {
    type: definePropType(Array),
    default: () => []
  },
  props: {
    type: definePropType(Object),
    default: () => ({})
  }
});
var DefaultProps = {
  expandTrigger: "click",
  multiple: false,
  checkStrictly: false,
  emitPath: true,
  lazy: false,
  lazyLoad: NOOP11,
  value: "value",
  label: "label",
  children: "children",
  leaf: "leaf",
  disabled: "disabled",
  hoverThreshold: 500
};
var useCascaderConfig = (props) => {
  return computed61(() => ({
    ...DefaultProps,
    ...props.props
  }));
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/utils.mjs
var getMenuIndex = (el) => {
  if (!el)
    return 0;
  const pieces = el.id.split("-");
  return Number(pieces[pieces.length - 2]);
};
var checkNode = (el) => {
  if (!el)
    return;
  const input = el.querySelector("input");
  if (input) {
    input.click();
  } else if (isLeaf(el)) {
    el.click();
  }
};
var sortByOriginalOrder = (oldNodes, newNodes) => {
  const newNodesCopy = newNodes.slice(0);
  const newIds = newNodesCopy.map((node) => node.uid);
  const res = oldNodes.reduce((acc, item) => {
    const index = newIds.indexOf(item.uid);
    if (index > -1) {
      acc.push(item);
      newNodesCopy.splice(index, 1);
      newIds.splice(index, 1);
    }
    return acc;
  }, []);
  res.push(...newNodesCopy);
  return res;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/src/index.mjs
var _sfc_main43 = defineComponent48({
  name: "ElCascaderPanel",
  components: {
    ElCascaderMenu
  },
  props: {
    ...CommonProps,
    border: {
      type: Boolean,
      default: true
    },
    renderLabel: Function
  },
  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, "close", "expand-change"],
  setup(props, { emit, slots }) {
    let manualChecked = false;
    const ns = useNamespace("cascader");
    const config = useCascaderConfig(props);
    let store = null;
    const initialLoaded = ref53(true);
    const menuList = ref53([]);
    const checkedValue = ref53(null);
    const menus = ref53([]);
    const expandingNode = ref53(null);
    const checkedNodes = ref53([]);
    const isHoverMenu = computed62(() => config.value.expandTrigger === "hover");
    const renderLabelFn = computed62(() => props.renderLabel || slots.default);
    const initStore = () => {
      const { options } = props;
      const cfg = config.value;
      manualChecked = false;
      store = new Store(options, cfg);
      menus.value = [store.getNodes()];
      if (cfg.lazy && isEmpty2(props.options)) {
        initialLoaded.value = false;
        lazyLoad(void 0, (list) => {
          if (list) {
            store = new Store(list, cfg);
            menus.value = [store.getNodes()];
          }
          initialLoaded.value = true;
          syncCheckedValue(false, true);
        });
      } else {
        syncCheckedValue(false, true);
      }
    };
    const lazyLoad = (node, cb) => {
      const cfg = config.value;
      node = node || new Node({}, cfg, void 0, true);
      node.loading = true;
      const resolve = (dataList) => {
        const _node = node;
        const parent2 = _node.root ? null : _node;
        dataList && (store == null ? void 0 : store.appendNodes(dataList, parent2));
        _node.loading = false;
        _node.loaded = true;
        _node.childrenData = _node.childrenData || [];
        cb && cb(dataList);
      };
      cfg.lazyLoad(node, resolve);
    };
    const expandNode = (node, silent) => {
      var _a2;
      const { level } = node;
      const newMenus = menus.value.slice(0, level);
      let newExpandingNode;
      if (node.isLeaf) {
        newExpandingNode = node.pathNodes[level - 2];
      } else {
        newExpandingNode = node;
        newMenus.push(node.children);
      }
      if (((_a2 = expandingNode.value) == null ? void 0 : _a2.uid) !== (newExpandingNode == null ? void 0 : newExpandingNode.uid)) {
        expandingNode.value = node;
        menus.value = newMenus;
        !silent && emit("expand-change", (node == null ? void 0 : node.pathValues) || []);
      }
    };
    const handleCheckChange = (node, checked, emitClose = true) => {
      const { checkStrictly, multiple } = config.value;
      const oldNode = checkedNodes.value[0];
      manualChecked = true;
      !multiple && (oldNode == null ? void 0 : oldNode.doCheck(false));
      node.doCheck(checked);
      calculateCheckedValue();
      emitClose && !multiple && !checkStrictly && emit("close");
      !emitClose && !multiple && !checkStrictly && expandParentNode(node);
    };
    const expandParentNode = (node) => {
      if (!node)
        return;
      node = node.parent;
      expandParentNode(node);
      node && expandNode(node);
    };
    const getFlattedNodes = (leafOnly) => {
      return store == null ? void 0 : store.getFlattedNodes(leafOnly);
    };
    const getCheckedNodes = (leafOnly) => {
      var _a2;
      return (_a2 = getFlattedNodes(leafOnly)) == null ? void 0 : _a2.filter((node) => node.checked !== false);
    };
    const clearCheckedNodes = () => {
      checkedNodes.value.forEach((node) => node.doCheck(false));
      calculateCheckedValue();
      menus.value = menus.value.slice(0, 1);
      expandingNode.value = null;
      emit("expand-change", []);
    };
    const calculateCheckedValue = () => {
      var _a2;
      const { checkStrictly, multiple } = config.value;
      const oldNodes = checkedNodes.value;
      const newNodes = getCheckedNodes(!checkStrictly);
      const nodes = sortByOriginalOrder(oldNodes, newNodes);
      const values2 = nodes.map((node) => node.valueByOption);
      checkedNodes.value = nodes;
      checkedValue.value = multiple ? values2 : (_a2 = values2[0]) != null ? _a2 : null;
    };
    const syncCheckedValue = (loaded = false, forced = false) => {
      const { modelValue } = props;
      const { lazy, multiple, checkStrictly } = config.value;
      const leafOnly = !checkStrictly;
      if (!initialLoaded.value || manualChecked || !forced && isEqual_default(modelValue, checkedValue.value))
        return;
      if (lazy && !loaded) {
        const values2 = unique(flattenDeep_default(castArray2(modelValue)));
        const nodes = values2.map((val) => store == null ? void 0 : store.getNodeByValue(val)).filter((node) => !!node && !node.loaded && !node.loading);
        if (nodes.length) {
          nodes.forEach((node) => {
            lazyLoad(node, () => syncCheckedValue(false, forced));
          });
        } else {
          syncCheckedValue(true, forced);
        }
      } else {
        const values2 = multiple ? castArray2(modelValue) : [modelValue];
        const nodes = unique(values2.map((val) => store == null ? void 0 : store.getNodeByValue(val, leafOnly)));
        syncMenuState(nodes, forced);
        checkedValue.value = cloneDeep_default(modelValue);
      }
    };
    const syncMenuState = (newCheckedNodes, reserveExpandingState = true) => {
      const { checkStrictly } = config.value;
      const oldNodes = checkedNodes.value;
      const newNodes = newCheckedNodes.filter((node) => !!node && (checkStrictly || node.isLeaf));
      const oldExpandingNode = store == null ? void 0 : store.getSameNode(expandingNode.value);
      const newExpandingNode = reserveExpandingState && oldExpandingNode || newNodes[0];
      if (newExpandingNode) {
        newExpandingNode.pathNodes.forEach((node) => expandNode(node, true));
      } else {
        expandingNode.value = null;
      }
      oldNodes.forEach((node) => node.doCheck(false));
      newNodes.forEach((node) => node.doCheck(true));
      checkedNodes.value = newNodes;
      nextTick17(scrollToExpandingNode);
    };
    const scrollToExpandingNode = () => {
      if (!isClient)
        return;
      menuList.value.forEach((menu) => {
        const menuElement = menu == null ? void 0 : menu.$el;
        if (menuElement) {
          const container = menuElement.querySelector(`.${ns.namespace.value}-scrollbar__wrap`);
          const activeNode = menuElement.querySelector(`.${ns.b("node")}.${ns.is("active")}`) || menuElement.querySelector(`.${ns.b("node")}.in-active-path`);
          scrollIntoView(container, activeNode);
        }
      });
    };
    const handleKeyDown = (e) => {
      const target2 = e.target;
      const { code } = e;
      switch (code) {
        case EVENT_CODE.up:
        case EVENT_CODE.down: {
          e.preventDefault();
          const distance = code === EVENT_CODE.up ? -1 : 1;
          focusNode(getSibling(target2, distance, `.${ns.b("node")}[tabindex="-1"]`));
          break;
        }
        case EVENT_CODE.left: {
          e.preventDefault();
          const preMenu = menuList.value[getMenuIndex(target2) - 1];
          const expandedNode = preMenu == null ? void 0 : preMenu.$el.querySelector(`.${ns.b("node")}[aria-expanded="true"]`);
          focusNode(expandedNode);
          break;
        }
        case EVENT_CODE.right: {
          e.preventDefault();
          const nextMenu = menuList.value[getMenuIndex(target2) + 1];
          const firstNode = nextMenu == null ? void 0 : nextMenu.$el.querySelector(`.${ns.b("node")}[tabindex="-1"]`);
          focusNode(firstNode);
          break;
        }
        case EVENT_CODE.enter:
          checkNode(target2);
          break;
      }
    };
    provide18(CASCADER_PANEL_INJECTION_KEY, reactive10({
      config,
      expandingNode,
      checkedNodes,
      isHoverMenu,
      initialLoaded,
      renderLabelFn,
      lazyLoad,
      expandNode,
      handleCheckChange
    }));
    watch34([config, () => props.options], initStore, {
      deep: true,
      immediate: true
    });
    watch34(() => props.modelValue, () => {
      manualChecked = false;
      syncCheckedValue();
    }, {
      deep: true
    });
    watch34(() => checkedValue.value, (val) => {
      if (!isEqual_default(val, props.modelValue)) {
        emit(UPDATE_MODEL_EVENT, val);
        emit(CHANGE_EVENT, val);
      }
    });
    onBeforeUpdate2(() => menuList.value = []);
    onMounted26(() => !isEmpty2(props.modelValue) && syncCheckedValue());
    return {
      ns,
      menuList,
      menus,
      checkedNodes,
      handleKeyDown,
      handleCheckChange,
      getFlattedNodes,
      getCheckedNodes,
      clearCheckedNodes,
      calculateCheckedValue,
      scrollToExpandingNode
    };
  }
});
function _sfc_render4(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_cascader_menu = resolveComponent3("el-cascader-menu");
  return openBlock42(), createElementBlock36("div", {
    class: normalizeClass35([_ctx.ns.b("panel"), _ctx.ns.is("bordered", _ctx.border)]),
    onKeydown: _cache[0] || (_cache[0] = (...args) => _ctx.handleKeyDown && _ctx.handleKeyDown(...args))
  }, [
    (openBlock42(true), createElementBlock36(Fragment16, null, renderList7(_ctx.menus, (menu, index) => {
      return openBlock42(), createBlock25(_component_el_cascader_menu, {
        key: index,
        ref_for: true,
        ref: (item) => _ctx.menuList[index] = item,
        index,
        nodes: [...menu]
      }, null, 8, ["index", "nodes"]);
    }), 128))
  ], 34);
}
var CascaderPanel = _export_sfc(_sfc_main43, [["render", _sfc_render4], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/index.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader-panel/index.mjs
CascaderPanel.install = (app) => {
  app.component(CascaderPanel.name, CascaderPanel);
};
var _CascaderPanel = CascaderPanel;
var ElCascaderPanel = _CascaderPanel;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tag/src/tag2.mjs
import { defineComponent as defineComponent49, computed as computed63, openBlock as openBlock43, createElementBlock as createElementBlock37, normalizeClass as normalizeClass36, unref as unref58, normalizeStyle as normalizeStyle16, createElementVNode as createElementVNode22, renderSlot as renderSlot36, createBlock as createBlock26, withModifiers as withModifiers9, withCtx as withCtx26, createVNode as createVNode21, createCommentVNode as createCommentVNode24, Transition as Transition8 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tag/src/tag.mjs
var tagProps = buildProps({
  type: {
    type: String,
    values: ["success", "info", "warning", "danger", ""],
    default: ""
  },
  closable: Boolean,
  disableTransitions: Boolean,
  hit: Boolean,
  color: {
    type: String,
    default: ""
  },
  size: {
    type: String,
    values: componentSizes,
    default: ""
  },
  effect: {
    type: String,
    values: ["dark", "light", "plain"],
    default: "light"
  },
  round: Boolean
});
var tagEmits = {
  close: (evt) => evt instanceof MouseEvent,
  click: (evt) => evt instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tag/src/tag2.mjs
var __default__35 = defineComponent49({
  name: "ElTag"
});
var _sfc_main44 = defineComponent49({
  ...__default__35,
  props: tagProps,
  emits: tagEmits,
  setup(__props, { emit }) {
    const props = __props;
    const tagSize = useFormSize();
    const ns = useNamespace("tag");
    const containerKls = computed63(() => {
      const { type: type4, hit, effect, closable, round: round3 } = props;
      return [
        ns.b(),
        ns.is("closable", closable),
        ns.m(type4),
        ns.m(tagSize.value),
        ns.m(effect),
        ns.is("hit", hit),
        ns.is("round", round3)
      ];
    });
    const handleClose = (event) => {
      emit("close", event);
    };
    const handleClick = (event) => {
      emit("click", event);
    };
    return (_ctx, _cache) => {
      return _ctx.disableTransitions ? (openBlock43(), createElementBlock37("span", {
        key: 0,
        class: normalizeClass36(unref58(containerKls)),
        style: normalizeStyle16({ backgroundColor: _ctx.color }),
        onClick: handleClick
      }, [
        createElementVNode22("span", {
          class: normalizeClass36(unref58(ns).e("content"))
        }, [
          renderSlot36(_ctx.$slots, "default")
        ], 2),
        _ctx.closable ? (openBlock43(), createBlock26(unref58(ElIcon), {
          key: 0,
          class: normalizeClass36(unref58(ns).e("close")),
          onClick: withModifiers9(handleClose, ["stop"])
        }, {
          default: withCtx26(() => [
            createVNode21(unref58(close_default))
          ]),
          _: 1
        }, 8, ["class", "onClick"])) : createCommentVNode24("v-if", true)
      ], 6)) : (openBlock43(), createBlock26(Transition8, {
        key: 1,
        name: `${unref58(ns).namespace.value}-zoom-in-center`,
        appear: ""
      }, {
        default: withCtx26(() => [
          createElementVNode22("span", {
            class: normalizeClass36(unref58(containerKls)),
            style: normalizeStyle16({ backgroundColor: _ctx.color }),
            onClick: handleClick
          }, [
            createElementVNode22("span", {
              class: normalizeClass36(unref58(ns).e("content"))
            }, [
              renderSlot36(_ctx.$slots, "default")
            ], 2),
            _ctx.closable ? (openBlock43(), createBlock26(unref58(ElIcon), {
              key: 0,
              class: normalizeClass36(unref58(ns).e("close")),
              onClick: withModifiers9(handleClose, ["stop"])
            }, {
              default: withCtx26(() => [
                createVNode21(unref58(close_default))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : createCommentVNode24("v-if", true)
          ], 6)
        ]),
        _: 3
      }, 8, ["name"]));
    };
  }
});
var Tag = _export_sfc(_sfc_main44, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tag/src/tag.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tag/index.mjs
var ElTag = withInstall(Tag);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader/src/cascader.mjs
var cascaderProps = buildProps({
  ...CommonProps,
  size: useSizeProp,
  placeholder: String,
  disabled: Boolean,
  clearable: Boolean,
  filterable: Boolean,
  filterMethod: {
    type: definePropType(Function),
    default: (node, keyword) => node.text.includes(keyword)
  },
  separator: {
    type: String,
    default: " / "
  },
  showAllLevels: {
    type: Boolean,
    default: true
  },
  collapseTags: Boolean,
  collapseTagsTooltip: {
    type: Boolean,
    default: false
  },
  debounce: {
    type: Number,
    default: 300
  },
  beforeFilter: {
    type: definePropType(Function),
    default: () => true
  },
  popperClass: {
    type: String,
    default: ""
  },
  teleported: useTooltipContentProps.teleported,
  tagType: { ...tagProps.type, default: "info" },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var cascaderEmits = {
  [UPDATE_MODEL_EVENT]: (val) => !!val || val === null,
  [CHANGE_EVENT]: (val) => !!val || val === null,
  focus: (evt) => evt instanceof FocusEvent,
  blur: (evt) => evt instanceof FocusEvent,
  visibleChange: (val) => isBoolean2(val),
  expandChange: (val) => !!val,
  removeTag: (val) => !!val
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader/src/cascader2.mjs
var _hoisted_118 = { key: 0 };
var _hoisted_211 = ["placeholder", "onKeydown"];
var _hoisted_34 = ["onClick"];
var COMPONENT_NAME11 = "ElCascader";
var __default__36 = defineComponent50({
  name: COMPONENT_NAME11
});
var _sfc_main45 = defineComponent50({
  ...__default__36,
  props: cascaderProps,
  emits: cascaderEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const popperOptions = {
      modifiers: [
        {
          name: "arrowPosition",
          enabled: true,
          phase: "main",
          fn: ({ state }) => {
            const { modifiersData, placement } = state;
            if (["right", "left", "bottom", "top"].includes(placement))
              return;
            modifiersData.arrow.x = 35;
          },
          requires: ["arrow"]
        }
      ]
    };
    const attrs = useAttrs4();
    let inputInitialHeight = 0;
    let pressDeleteCount = 0;
    const nsCascader = useNamespace("cascader");
    const nsInput = useNamespace("input");
    const { t } = useLocale();
    const { form, formItem } = useFormItem();
    const tooltipRef = ref54(null);
    const input = ref54(null);
    const tagWrapper = ref54(null);
    const cascaderPanelRef = ref54(null);
    const suggestionPanel = ref54(null);
    const popperVisible = ref54(false);
    const inputHover = ref54(false);
    const filtering = ref54(false);
    const filterFocus = ref54(false);
    const inputValue = ref54("");
    const searchInputValue = ref54("");
    const presentTags = ref54([]);
    const allPresentTags = ref54([]);
    const suggestions = ref54([]);
    const isOnComposition = ref54(false);
    const cascaderStyle = computed64(() => {
      return attrs.style;
    });
    const isDisabled = computed64(() => props.disabled || (form == null ? void 0 : form.disabled));
    const inputPlaceholder = computed64(() => props.placeholder || t("el.cascader.placeholder"));
    const currentPlaceholder = computed64(() => searchInputValue.value || presentTags.value.length > 0 || isOnComposition.value ? "" : inputPlaceholder.value);
    const realSize = useFormSize();
    const tagSize = computed64(() => ["small"].includes(realSize.value) ? "small" : "default");
    const multiple = computed64(() => !!props.props.multiple);
    const readonly6 = computed64(() => !props.filterable || multiple.value);
    const searchKeyword = computed64(() => multiple.value ? searchInputValue.value : inputValue.value);
    const checkedNodes = computed64(() => {
      var _a2;
      return ((_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.checkedNodes) || [];
    });
    const clearBtnVisible = computed64(() => {
      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value)
        return false;
      return !!checkedNodes.value.length;
    });
    const presentText = computed64(() => {
      const { showAllLevels, separator } = props;
      const nodes = checkedNodes.value;
      return nodes.length ? multiple.value ? "" : nodes[0].calcText(showAllLevels, separator) : "";
    });
    const checkedValue = computed64({
      get() {
        return cloneDeep_default(props.modelValue);
      },
      set(val) {
        emit(UPDATE_MODEL_EVENT, val);
        emit(CHANGE_EVENT, val);
        if (props.validateEvent) {
          formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
        }
      }
    });
    const cascaderKls = computed64(() => {
      return [
        nsCascader.b(),
        nsCascader.m(realSize.value),
        nsCascader.is("disabled", isDisabled.value),
        attrs.class
      ];
    });
    const cascaderIconKls = computed64(() => {
      return [
        nsInput.e("icon"),
        "icon-arrow-down",
        nsCascader.is("reverse", popperVisible.value)
      ];
    });
    const inputClass = computed64(() => {
      return nsCascader.is("focus", popperVisible.value || filterFocus.value);
    });
    const contentRef = computed64(() => {
      var _a2, _b;
      return (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.contentRef;
    });
    const togglePopperVisible = (visible) => {
      var _a2, _b, _c;
      if (isDisabled.value)
        return;
      visible = visible != null ? visible : !popperVisible.value;
      if (visible !== popperVisible.value) {
        popperVisible.value = visible;
        (_b = (_a2 = input.value) == null ? void 0 : _a2.input) == null ? void 0 : _b.setAttribute("aria-expanded", `${visible}`);
        if (visible) {
          updatePopperPosition();
          nextTick18((_c = cascaderPanelRef.value) == null ? void 0 : _c.scrollToExpandingNode);
        } else if (props.filterable) {
          syncPresentTextValue();
        }
        emit("visibleChange", visible);
      }
    };
    const updatePopperPosition = () => {
      nextTick18(() => {
        var _a2;
        (_a2 = tooltipRef.value) == null ? void 0 : _a2.updatePopper();
      });
    };
    const hideSuggestionPanel = () => {
      filtering.value = false;
    };
    const genTag3 = (node) => {
      const { showAllLevels, separator } = props;
      return {
        node,
        key: node.uid,
        text: node.calcText(showAllLevels, separator),
        hitState: false,
        closable: !isDisabled.value && !node.isDisabled,
        isCollapseTag: false
      };
    };
    const deleteTag = (tag) => {
      var _a2;
      const node = tag.node;
      node.doCheck(false);
      (_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.calculateCheckedValue();
      emit("removeTag", node.valueByOption);
    };
    const calculatePresentTags = () => {
      if (!multiple.value)
        return;
      const nodes = checkedNodes.value;
      const tags = [];
      const allTags = [];
      nodes.forEach((node) => allTags.push(genTag3(node)));
      allPresentTags.value = allTags;
      if (nodes.length) {
        const [first, ...rest2] = nodes;
        const restCount = rest2.length;
        tags.push(genTag3(first));
        if (restCount) {
          if (props.collapseTags) {
            tags.push({
              key: -1,
              text: `+ ${restCount}`,
              closable: false,
              isCollapseTag: true
            });
          } else {
            rest2.forEach((node) => tags.push(genTag3(node)));
          }
        }
      }
      presentTags.value = tags;
    };
    const calculateSuggestions = () => {
      var _a2, _b;
      const { filterMethod, showAllLevels, separator } = props;
      const res = (_b = (_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter((node) => {
        if (node.isDisabled)
          return false;
        node.calcText(showAllLevels, separator);
        return filterMethod(node, searchKeyword.value);
      });
      if (multiple.value) {
        presentTags.value.forEach((tag) => {
          tag.hitState = false;
        });
        allPresentTags.value.forEach((tag) => {
          tag.hitState = false;
        });
      }
      filtering.value = true;
      suggestions.value = res;
      updatePopperPosition();
    };
    const focusFirstNode = () => {
      var _a2;
      let firstNode;
      if (filtering.value && suggestionPanel.value) {
        firstNode = suggestionPanel.value.$el.querySelector(`.${nsCascader.e("suggestion-item")}`);
      } else {
        firstNode = (_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.$el.querySelector(`.${nsCascader.b("node")}[tabindex="-1"]`);
      }
      if (firstNode) {
        firstNode.focus();
        !filtering.value && firstNode.click();
      }
    };
    const updateStyle = () => {
      var _a2, _b;
      const inputInner = (_a2 = input.value) == null ? void 0 : _a2.input;
      const tagWrapperEl = tagWrapper.value;
      const suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;
      if (!isClient || !inputInner)
        return;
      if (suggestionPanelEl) {
        const suggestionList = suggestionPanelEl.querySelector(`.${nsCascader.e("suggestion-list")}`);
        suggestionList.style.minWidth = `${inputInner.offsetWidth}px`;
      }
      if (tagWrapperEl) {
        const { offsetHeight } = tagWrapperEl;
        const height = presentTags.value.length > 0 ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px` : `${inputInitialHeight}px`;
        inputInner.style.height = height;
        updatePopperPosition();
      }
    };
    const getCheckedNodes = (leafOnly) => {
      var _a2;
      return (_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.getCheckedNodes(leafOnly);
    };
    const handleExpandChange = (value) => {
      updatePopperPosition();
      emit("expandChange", value);
    };
    const handleComposition = (event) => {
      var _a2;
      const text = (_a2 = event.target) == null ? void 0 : _a2.value;
      if (event.type === "compositionend") {
        isOnComposition.value = false;
        nextTick18(() => handleInput(text));
      } else {
        const lastCharacter = text[text.length - 1] || "";
        isOnComposition.value = !isKorean(lastCharacter);
      }
    };
    const handleKeyDown = (e) => {
      if (isOnComposition.value)
        return;
      switch (e.code) {
        case EVENT_CODE.enter:
          togglePopperVisible();
          break;
        case EVENT_CODE.down:
          togglePopperVisible(true);
          nextTick18(focusFirstNode);
          e.preventDefault();
          break;
        case EVENT_CODE.esc:
          if (popperVisible.value === true) {
            e.preventDefault();
            e.stopPropagation();
            togglePopperVisible(false);
          }
          break;
        case EVENT_CODE.tab:
          togglePopperVisible(false);
          break;
      }
    };
    const handleClear = () => {
      var _a2;
      (_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.clearCheckedNodes();
      if (!popperVisible.value && props.filterable) {
        syncPresentTextValue();
      }
      togglePopperVisible(false);
    };
    const syncPresentTextValue = () => {
      const { value } = presentText;
      inputValue.value = value;
      searchInputValue.value = value;
    };
    const handleSuggestionClick = (node) => {
      var _a2, _b;
      const { checked } = node;
      if (multiple.value) {
        (_a2 = cascaderPanelRef.value) == null ? void 0 : _a2.handleCheckChange(node, !checked, false);
      } else {
        !checked && ((_b = cascaderPanelRef.value) == null ? void 0 : _b.handleCheckChange(node, true, false));
        togglePopperVisible(false);
      }
    };
    const handleSuggestionKeyDown = (e) => {
      const target2 = e.target;
      const { code } = e;
      switch (code) {
        case EVENT_CODE.up:
        case EVENT_CODE.down: {
          const distance = code === EVENT_CODE.up ? -1 : 1;
          focusNode(getSibling(target2, distance, `.${nsCascader.e("suggestion-item")}[tabindex="-1"]`));
          break;
        }
        case EVENT_CODE.enter:
          target2.click();
          break;
      }
    };
    const handleDelete = () => {
      const tags = presentTags.value;
      const lastTag = tags[tags.length - 1];
      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;
      if (!lastTag || !pressDeleteCount || props.collapseTags && tags.length > 1)
        return;
      if (lastTag.hitState) {
        deleteTag(lastTag);
      } else {
        lastTag.hitState = true;
      }
    };
    const handleFocus = (e) => {
      const el = e.target;
      const name = nsCascader.e("search-input");
      if (el.className === name) {
        filterFocus.value = true;
      }
      emit("focus", e);
    };
    const handleBlur = (e) => {
      filterFocus.value = false;
      emit("blur", e);
    };
    const handleFilter = debounce_default(() => {
      const { value } = searchKeyword;
      if (!value)
        return;
      const passed = props.beforeFilter(value);
      if (isPromise3(passed)) {
        passed.then(calculateSuggestions).catch(() => {
        });
      } else if (passed !== false) {
        calculateSuggestions();
      } else {
        hideSuggestionPanel();
      }
    }, props.debounce);
    const handleInput = (val, e) => {
      !popperVisible.value && togglePopperVisible(true);
      if (e == null ? void 0 : e.isComposing)
        return;
      val ? handleFilter() : hideSuggestionPanel();
    };
    watch35(filtering, updatePopperPosition);
    watch35([checkedNodes, isDisabled], calculatePresentTags);
    watch35(presentTags, () => {
      nextTick18(() => updateStyle());
    });
    watch35(presentText, syncPresentTextValue, { immediate: true });
    onMounted27(() => {
      const inputInner = input.value.input;
      const inputInnerHeight = Number.parseFloat(useCssVar(nsInput.cssVarName("input-height"), inputInner).value) - 2;
      inputInitialHeight = inputInner.offsetHeight || inputInnerHeight;
      useResizeObserver(inputInner, updateStyle);
    });
    expose({
      getCheckedNodes,
      cascaderPanelRef,
      togglePopperVisible,
      contentRef
    });
    return (_ctx, _cache) => {
      return openBlock44(), createBlock27(unref59(ElTooltip), {
        ref_key: "tooltipRef",
        ref: tooltipRef,
        visible: popperVisible.value,
        teleported: _ctx.teleported,
        "popper-class": [unref59(nsCascader).e("dropdown"), _ctx.popperClass],
        "popper-options": popperOptions,
        "fallback-placements": [
          "bottom-start",
          "bottom",
          "top-start",
          "top",
          "right",
          "left"
        ],
        "stop-popper-mouse-event": false,
        "gpu-acceleration": false,
        placement: "bottom-start",
        transition: `${unref59(nsCascader).namespace.value}-zoom-in-top`,
        effect: "light",
        pure: "",
        persistent: "",
        onHide: hideSuggestionPanel
      }, {
        default: withCtx27(() => [
          withDirectives14((openBlock44(), createElementBlock38("div", {
            class: normalizeClass37(unref59(cascaderKls)),
            style: normalizeStyle17(unref59(cascaderStyle)),
            onClick: _cache[5] || (_cache[5] = () => togglePopperVisible(unref59(readonly6) ? void 0 : true)),
            onKeydown: handleKeyDown,
            onMouseenter: _cache[6] || (_cache[6] = ($event) => inputHover.value = true),
            onMouseleave: _cache[7] || (_cache[7] = ($event) => inputHover.value = false)
          }, [
            createVNode22(unref59(ElInput), {
              ref_key: "input",
              ref: input,
              modelValue: inputValue.value,
              "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => inputValue.value = $event),
              placeholder: unref59(currentPlaceholder),
              readonly: unref59(readonly6),
              disabled: unref59(isDisabled),
              "validate-event": false,
              size: unref59(realSize),
              class: normalizeClass37(unref59(inputClass)),
              tabindex: unref59(multiple) && _ctx.filterable && !unref59(isDisabled) ? -1 : void 0,
              onCompositionstart: handleComposition,
              onCompositionupdate: handleComposition,
              onCompositionend: handleComposition,
              onFocus: handleFocus,
              onBlur: handleBlur,
              onInput: handleInput
            }, {
              suffix: withCtx27(() => [
                unref59(clearBtnVisible) ? (openBlock44(), createBlock27(unref59(ElIcon), {
                  key: "clear",
                  class: normalizeClass37([unref59(nsInput).e("icon"), "icon-circle-close"]),
                  onClick: withModifiers10(handleClear, ["stop"])
                }, {
                  default: withCtx27(() => [
                    createVNode22(unref59(circle_close_default))
                  ]),
                  _: 1
                }, 8, ["class", "onClick"])) : (openBlock44(), createBlock27(unref59(ElIcon), {
                  key: "arrow-down",
                  class: normalizeClass37(unref59(cascaderIconKls)),
                  onClick: _cache[0] || (_cache[0] = withModifiers10(($event) => togglePopperVisible(), ["stop"]))
                }, {
                  default: withCtx27(() => [
                    createVNode22(unref59(arrow_down_default))
                  ]),
                  _: 1
                }, 8, ["class"]))
              ]),
              _: 1
            }, 8, ["modelValue", "placeholder", "readonly", "disabled", "size", "class", "tabindex"]),
            unref59(multiple) ? (openBlock44(), createElementBlock38("div", {
              key: 0,
              ref_key: "tagWrapper",
              ref: tagWrapper,
              class: normalizeClass37(unref59(nsCascader).e("tags"))
            }, [
              (openBlock44(true), createElementBlock38(Fragment17, null, renderList8(presentTags.value, (tag) => {
                return openBlock44(), createBlock27(unref59(ElTag), {
                  key: tag.key,
                  type: _ctx.tagType,
                  size: unref59(tagSize),
                  hit: tag.hitState,
                  closable: tag.closable,
                  "disable-transitions": "",
                  onClose: ($event) => deleteTag(tag)
                }, {
                  default: withCtx27(() => [
                    tag.isCollapseTag === false ? (openBlock44(), createElementBlock38("span", _hoisted_118, toDisplayString21(tag.text), 1)) : (openBlock44(), createBlock27(unref59(ElTooltip), {
                      key: 1,
                      disabled: popperVisible.value || !_ctx.collapseTagsTooltip,
                      "fallback-placements": ["bottom", "top", "right", "left"],
                      placement: "bottom",
                      effect: "light"
                    }, {
                      default: withCtx27(() => [
                        createElementVNode23("span", null, toDisplayString21(tag.text), 1)
                      ]),
                      content: withCtx27(() => [
                        createElementVNode23("div", {
                          class: normalizeClass37(unref59(nsCascader).e("collapse-tags"))
                        }, [
                          (openBlock44(true), createElementBlock38(Fragment17, null, renderList8(allPresentTags.value.slice(1), (tag2, idx) => {
                            return openBlock44(), createElementBlock38("div", {
                              key: idx,
                              class: normalizeClass37(unref59(nsCascader).e("collapse-tag"))
                            }, [
                              (openBlock44(), createBlock27(unref59(ElTag), {
                                key: tag2.key,
                                class: "in-tooltip",
                                type: _ctx.tagType,
                                size: unref59(tagSize),
                                hit: tag2.hitState,
                                closable: tag2.closable,
                                "disable-transitions": "",
                                onClose: ($event) => deleteTag(tag2)
                              }, {
                                default: withCtx27(() => [
                                  createElementVNode23("span", null, toDisplayString21(tag2.text), 1)
                                ]),
                                _: 2
                              }, 1032, ["type", "size", "hit", "closable", "onClose"]))
                            ], 2);
                          }), 128))
                        ], 2)
                      ]),
                      _: 2
                    }, 1032, ["disabled"]))
                  ]),
                  _: 2
                }, 1032, ["type", "size", "hit", "closable", "onClose"]);
              }), 128)),
              _ctx.filterable && !unref59(isDisabled) ? withDirectives14((openBlock44(), createElementBlock38("input", {
                key: 0,
                "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => searchInputValue.value = $event),
                type: "text",
                class: normalizeClass37(unref59(nsCascader).e("search-input")),
                placeholder: unref59(presentText) ? "" : unref59(inputPlaceholder),
                onInput: _cache[3] || (_cache[3] = (e) => handleInput(searchInputValue.value, e)),
                onClick: _cache[4] || (_cache[4] = withModifiers10(($event) => togglePopperVisible(true), ["stop"])),
                onKeydown: withKeys2(handleDelete, ["delete"]),
                onCompositionstart: handleComposition,
                onCompositionupdate: handleComposition,
                onCompositionend: handleComposition,
                onFocus: handleFocus,
                onBlur: handleBlur
              }, null, 42, _hoisted_211)), [
                [vModelText, searchInputValue.value]
              ]) : createCommentVNode25("v-if", true)
            ], 2)) : createCommentVNode25("v-if", true)
          ], 38)), [
            [unref59(ClickOutside), () => togglePopperVisible(false), unref59(contentRef)]
          ])
        ]),
        content: withCtx27(() => [
          withDirectives14(createVNode22(unref59(_CascaderPanel), {
            ref_key: "cascaderPanelRef",
            ref: cascaderPanelRef,
            modelValue: unref59(checkedValue),
            "onUpdate:modelValue": _cache[8] || (_cache[8] = ($event) => isRef11(checkedValue) ? checkedValue.value = $event : null),
            options: _ctx.options,
            props: props.props,
            border: false,
            "render-label": _ctx.$slots.default,
            onExpandChange: handleExpandChange,
            onClose: _cache[9] || (_cache[9] = ($event) => _ctx.$nextTick(() => togglePopperVisible(false)))
          }, null, 8, ["modelValue", "options", "props", "render-label"]), [
            [vShow8, !filtering.value]
          ]),
          _ctx.filterable ? withDirectives14((openBlock44(), createBlock27(unref59(ElScrollbar), {
            key: 0,
            ref_key: "suggestionPanel",
            ref: suggestionPanel,
            tag: "ul",
            class: normalizeClass37(unref59(nsCascader).e("suggestion-panel")),
            "view-class": unref59(nsCascader).e("suggestion-list"),
            onKeydown: handleSuggestionKeyDown
          }, {
            default: withCtx27(() => [
              suggestions.value.length ? (openBlock44(true), createElementBlock38(Fragment17, { key: 0 }, renderList8(suggestions.value, (item) => {
                return openBlock44(), createElementBlock38("li", {
                  key: item.uid,
                  class: normalizeClass37([
                    unref59(nsCascader).e("suggestion-item"),
                    unref59(nsCascader).is("checked", item.checked)
                  ]),
                  tabindex: -1,
                  onClick: ($event) => handleSuggestionClick(item)
                }, [
                  createElementVNode23("span", null, toDisplayString21(item.text), 1),
                  item.checked ? (openBlock44(), createBlock27(unref59(ElIcon), { key: 0 }, {
                    default: withCtx27(() => [
                      createVNode22(unref59(check_default))
                    ]),
                    _: 1
                  })) : createCommentVNode25("v-if", true)
                ], 10, _hoisted_34);
              }), 128)) : renderSlot37(_ctx.$slots, "empty", { key: 1 }, () => [
                createElementVNode23("li", {
                  class: normalizeClass37(unref59(nsCascader).e("empty-text"))
                }, toDisplayString21(unref59(t)("el.cascader.noMatch")), 3)
              ])
            ]),
            _: 3
          }, 8, ["class", "view-class"])), [
            [vShow8, filtering.value]
          ]) : createCommentVNode25("v-if", true)
        ]),
        _: 3
      }, 8, ["visible", "teleported", "popper-class", "transition"]);
    };
  }
});
var Cascader = _export_sfc(_sfc_main45, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/cascader/src/cascader.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/cascader/index.mjs
Cascader.install = (app) => {
  app.component(Cascader.name, Cascader);
};
var _Cascader = Cascader;
var ElCascader = _Cascader;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/check-tag/src/check-tag2.mjs
import { defineComponent as defineComponent51, computed as computed65, openBlock as openBlock45, createElementBlock as createElementBlock39, normalizeClass as normalizeClass38, unref as unref60, renderSlot as renderSlot38 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/check-tag/src/check-tag.mjs
var checkTagProps = buildProps({
  checked: {
    type: Boolean,
    default: false
  }
});
var checkTagEmits = {
  "update:checked": (value) => isBoolean2(value),
  [CHANGE_EVENT]: (value) => isBoolean2(value)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/check-tag/src/check-tag2.mjs
var __default__37 = defineComponent51({
  name: "ElCheckTag"
});
var _sfc_main46 = defineComponent51({
  ...__default__37,
  props: checkTagProps,
  emits: checkTagEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("check-tag");
    const containerKls = computed65(() => [ns.b(), ns.is("checked", props.checked)]);
    const handleChange = () => {
      const checked = !props.checked;
      emit(CHANGE_EVENT, checked);
      emit("update:checked", checked);
    };
    return (_ctx, _cache) => {
      return openBlock45(), createElementBlock39("span", {
        class: normalizeClass38(unref60(containerKls)),
        onClick: handleChange
      }, [
        renderSlot38(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var CheckTag = _export_sfc(_sfc_main46, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/check-tag/src/check-tag.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/check-tag/index.mjs
var ElCheckTag = withInstall(CheckTag);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/col/src/col2.mjs
import { defineComponent as defineComponent53, inject as inject35, computed as computed67, openBlock as openBlock47, createBlock as createBlock29, resolveDynamicComponent as resolveDynamicComponent12, normalizeClass as normalizeClass40, unref as unref62, normalizeStyle as normalizeStyle19, withCtx as withCtx29, renderSlot as renderSlot40 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/row/src/row2.mjs
import { defineComponent as defineComponent52, computed as computed66, provide as provide19, openBlock as openBlock46, createBlock as createBlock28, resolveDynamicComponent as resolveDynamicComponent11, normalizeClass as normalizeClass39, unref as unref61, normalizeStyle as normalizeStyle18, withCtx as withCtx28, renderSlot as renderSlot39 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/row/src/constants.mjs
var rowContextKey = Symbol("rowContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/row/src/row.mjs
var RowJustify = [
  "start",
  "center",
  "end",
  "space-around",
  "space-between",
  "space-evenly"
];
var RowAlign = ["top", "middle", "bottom"];
var rowProps = buildProps({
  tag: {
    type: String,
    default: "div"
  },
  gutter: {
    type: Number,
    default: 0
  },
  justify: {
    type: String,
    values: RowJustify,
    default: "start"
  },
  align: {
    type: String,
    values: RowAlign,
    default: "top"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/row/src/row2.mjs
var __default__38 = defineComponent52({
  name: "ElRow"
});
var _sfc_main47 = defineComponent52({
  ...__default__38,
  props: rowProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("row");
    const gutter = computed66(() => props.gutter);
    provide19(rowContextKey, {
      gutter
    });
    const style = computed66(() => {
      const styles = {};
      if (!props.gutter) {
        return styles;
      }
      styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`;
      return styles;
    });
    const rowKls = computed66(() => [
      ns.b(),
      ns.is(`justify-${props.justify}`, props.justify !== "start"),
      ns.is(`align-${props.align}`, props.align !== "top")
    ]);
    return (_ctx, _cache) => {
      return openBlock46(), createBlock28(resolveDynamicComponent11(_ctx.tag), {
        class: normalizeClass39(unref61(rowKls)),
        style: normalizeStyle18(unref61(style))
      }, {
        default: withCtx28(() => [
          renderSlot39(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class", "style"]);
    };
  }
});
var Row = _export_sfc(_sfc_main47, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/row/src/row.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/row/index.mjs
var ElRow = withInstall(Row);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/col/src/col.mjs
var colProps = buildProps({
  tag: {
    type: String,
    default: "div"
  },
  span: {
    type: Number,
    default: 24
  },
  offset: {
    type: Number,
    default: 0
  },
  pull: {
    type: Number,
    default: 0
  },
  push: {
    type: Number,
    default: 0
  },
  xs: {
    type: definePropType([Number, Object]),
    default: () => mutable({})
  },
  sm: {
    type: definePropType([Number, Object]),
    default: () => mutable({})
  },
  md: {
    type: definePropType([Number, Object]),
    default: () => mutable({})
  },
  lg: {
    type: definePropType([Number, Object]),
    default: () => mutable({})
  },
  xl: {
    type: definePropType([Number, Object]),
    default: () => mutable({})
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/col/src/col2.mjs
import { isObject as isObject15 } from "@vue/shared";
var __default__39 = defineComponent53({
  name: "ElCol"
});
var _sfc_main48 = defineComponent53({
  ...__default__39,
  props: colProps,
  setup(__props) {
    const props = __props;
    const { gutter } = inject35(rowContextKey, { gutter: computed67(() => 0) });
    const ns = useNamespace("col");
    const style = computed67(() => {
      const styles = {};
      if (gutter.value) {
        styles.paddingLeft = styles.paddingRight = `${gutter.value / 2}px`;
      }
      return styles;
    });
    const colKls = computed67(() => {
      const classes = [];
      const pos = ["span", "offset", "pull", "push"];
      pos.forEach((prop) => {
        const size4 = props[prop];
        if (isNumber3(size4)) {
          if (prop === "span")
            classes.push(ns.b(`${props[prop]}`));
          else if (size4 > 0)
            classes.push(ns.b(`${prop}-${props[prop]}`));
        }
      });
      const sizes = ["xs", "sm", "md", "lg", "xl"];
      sizes.forEach((size4) => {
        if (isNumber3(props[size4])) {
          classes.push(ns.b(`${size4}-${props[size4]}`));
        } else if (isObject15(props[size4])) {
          Object.entries(props[size4]).forEach(([prop, sizeProp]) => {
            classes.push(prop !== "span" ? ns.b(`${size4}-${prop}-${sizeProp}`) : ns.b(`${size4}-${sizeProp}`));
          });
        }
      });
      if (gutter.value) {
        classes.push(ns.is("guttered"));
      }
      return [ns.b(), classes];
    });
    return (_ctx, _cache) => {
      return openBlock47(), createBlock29(resolveDynamicComponent12(_ctx.tag), {
        class: normalizeClass40(unref62(colKls)),
        style: normalizeStyle19(unref62(style))
      }, {
        default: withCtx29(() => [
          renderSlot40(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class", "style"]);
    };
  }
});
var Col = _export_sfc(_sfc_main48, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/col/src/col.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/col/index.mjs
var ElCol = withInstall(Col);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/collapse2.mjs
import { defineComponent as defineComponent54, openBlock as openBlock48, createElementBlock as createElementBlock40, normalizeClass as normalizeClass41, unref as unref63, renderSlot as renderSlot41 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/collapse.mjs
var emitChangeFn = (value) => typeof isNumber3(value);
var collapseProps = buildProps({
  accordion: Boolean,
  modelValue: {
    type: definePropType([Array, String, Number]),
    default: () => mutable([])
  }
});
var collapseEmits = {
  [UPDATE_MODEL_EVENT]: emitChangeFn,
  [CHANGE_EVENT]: emitChangeFn
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/use-collapse.mjs
import { ref as ref55, watch as watch36, provide as provide20, computed as computed68 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/constants.mjs
var collapseContextKey = Symbol("collapseContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/use-collapse.mjs
var useCollapse = (props, emit) => {
  const activeNames = ref55(castArray_default(props.modelValue));
  const setActiveNames = (_activeNames) => {
    activeNames.value = _activeNames;
    const value = props.accordion ? activeNames.value[0] : activeNames.value;
    emit(UPDATE_MODEL_EVENT, value);
    emit(CHANGE_EVENT, value);
  };
  const handleItemClick = (name) => {
    if (props.accordion) {
      setActiveNames([activeNames.value[0] === name ? "" : name]);
    } else {
      const _activeNames = [...activeNames.value];
      const index = _activeNames.indexOf(name);
      if (index > -1) {
        _activeNames.splice(index, 1);
      } else {
        _activeNames.push(name);
      }
      setActiveNames(_activeNames);
    }
  };
  watch36(() => props.modelValue, () => activeNames.value = castArray_default(props.modelValue), { deep: true });
  provide20(collapseContextKey, {
    activeNames,
    handleItemClick
  });
  return {
    activeNames,
    setActiveNames
  };
};
var useCollapseDOM = () => {
  const ns = useNamespace("collapse");
  const rootKls = computed68(() => ns.b());
  return {
    rootKls
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/collapse2.mjs
var __default__40 = defineComponent54({
  name: "ElCollapse"
});
var _sfc_main49 = defineComponent54({
  ...__default__40,
  props: collapseProps,
  emits: collapseEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const { activeNames, setActiveNames } = useCollapse(props, emit);
    const { rootKls } = useCollapseDOM();
    expose({
      activeNames,
      setActiveNames
    });
    return (_ctx, _cache) => {
      return openBlock48(), createElementBlock40("div", {
        class: normalizeClass41(unref63(rootKls)),
        role: "tablist",
        "aria-multiselectable": "true"
      }, [
        renderSlot41(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var Collapse = _export_sfc(_sfc_main49, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/collapse-item2.mjs
import { defineComponent as defineComponent56, openBlock as openBlock50, createElementBlock as createElementBlock41, normalizeClass as normalizeClass42, unref as unref66, createElementVNode as createElementVNode24, withKeys as withKeys3, withModifiers as withModifiers11, renderSlot as renderSlot43, createTextVNode as createTextVNode12, toDisplayString as toDisplayString22, createVNode as createVNode23, withCtx as withCtx31, withDirectives as withDirectives15, vShow as vShow9 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse-transition/src/collapse-transition.mjs
import { defineComponent as defineComponent55, openBlock as openBlock49, createBlock as createBlock30, Transition as Transition9, mergeProps as mergeProps11, unref as unref64, toHandlers, withCtx as withCtx30, renderSlot as renderSlot42 } from "vue";
var __default__41 = defineComponent55({
  name: "ElCollapseTransition"
});
var _sfc_main50 = defineComponent55({
  ...__default__41,
  setup(__props) {
    const ns = useNamespace("collapse-transition");
    const on2 = {
      beforeEnter(el) {
        if (!el.dataset)
          el.dataset = {};
        el.dataset.oldPaddingTop = el.style.paddingTop;
        el.dataset.oldPaddingBottom = el.style.paddingBottom;
        el.style.maxHeight = 0;
        el.style.paddingTop = 0;
        el.style.paddingBottom = 0;
      },
      enter(el) {
        el.dataset.oldOverflow = el.style.overflow;
        if (el.scrollHeight !== 0) {
          el.style.maxHeight = `${el.scrollHeight}px`;
          el.style.paddingTop = el.dataset.oldPaddingTop;
          el.style.paddingBottom = el.dataset.oldPaddingBottom;
        } else {
          el.style.maxHeight = 0;
          el.style.paddingTop = el.dataset.oldPaddingTop;
          el.style.paddingBottom = el.dataset.oldPaddingBottom;
        }
        el.style.overflow = "hidden";
      },
      afterEnter(el) {
        el.style.maxHeight = "";
        el.style.overflow = el.dataset.oldOverflow;
      },
      beforeLeave(el) {
        if (!el.dataset)
          el.dataset = {};
        el.dataset.oldPaddingTop = el.style.paddingTop;
        el.dataset.oldPaddingBottom = el.style.paddingBottom;
        el.dataset.oldOverflow = el.style.overflow;
        el.style.maxHeight = `${el.scrollHeight}px`;
        el.style.overflow = "hidden";
      },
      leave(el) {
        if (el.scrollHeight !== 0) {
          el.style.maxHeight = 0;
          el.style.paddingTop = 0;
          el.style.paddingBottom = 0;
        }
      },
      afterLeave(el) {
        el.style.maxHeight = "";
        el.style.overflow = el.dataset.oldOverflow;
        el.style.paddingTop = el.dataset.oldPaddingTop;
        el.style.paddingBottom = el.dataset.oldPaddingBottom;
      }
    };
    return (_ctx, _cache) => {
      return openBlock49(), createBlock30(Transition9, mergeProps11({
        name: unref64(ns).b()
      }, toHandlers(on2)), {
        default: withCtx30(() => [
          renderSlot42(_ctx.$slots, "default")
        ]),
        _: 3
      }, 16, ["name"]);
    };
  }
});
var CollapseTransition = _export_sfc(_sfc_main50, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/collapse-transition/src/collapse-transition.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse-transition/index.mjs
CollapseTransition.install = (app) => {
  app.component(CollapseTransition.name, CollapseTransition);
};
var _CollapseTransition = CollapseTransition;
var ElCollapseTransition = _CollapseTransition;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/collapse-item.mjs
var collapseItemProps = buildProps({
  title: {
    type: String,
    default: ""
  },
  name: {
    type: definePropType([String, Number]),
    default: () => generateId()
  },
  disabled: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/use-collapse-item.mjs
import { inject as inject36, ref as ref56, computed as computed69, unref as unref65 } from "vue";
var useCollapseItem = (props) => {
  const collapse = inject36(collapseContextKey);
  const focusing = ref56(false);
  const isClick = ref56(false);
  const id = ref56(generateId());
  const isActive = computed69(() => collapse == null ? void 0 : collapse.activeNames.value.includes(props.name));
  const handleFocus = () => {
    setTimeout(() => {
      if (!isClick.value) {
        focusing.value = true;
      } else {
        isClick.value = false;
      }
    }, 50);
  };
  const handleHeaderClick = () => {
    if (props.disabled)
      return;
    collapse == null ? void 0 : collapse.handleItemClick(props.name);
    focusing.value = false;
    isClick.value = true;
  };
  const handleEnterClick = () => {
    collapse == null ? void 0 : collapse.handleItemClick(props.name);
  };
  return {
    focusing,
    id,
    isActive,
    handleFocus,
    handleHeaderClick,
    handleEnterClick
  };
};
var useCollapseItemDOM = (props, { focusing, isActive, id }) => {
  const ns = useNamespace("collapse");
  const rootKls = computed69(() => [
    ns.b("item"),
    ns.is("active", unref65(isActive)),
    ns.is("disabled", props.disabled)
  ]);
  const headKls = computed69(() => [
    ns.be("item", "header"),
    ns.is("active", unref65(isActive)),
    { focusing: unref65(focusing) && !props.disabled }
  ]);
  const arrowKls = computed69(() => [
    ns.be("item", "arrow"),
    ns.is("active", unref65(isActive))
  ]);
  const itemWrapperKls = computed69(() => ns.be("item", "wrap"));
  const itemContentKls = computed69(() => ns.be("item", "content"));
  const scopedContentId = computed69(() => ns.b(`content-${unref65(id)}`));
  const scopedHeadId = computed69(() => ns.b(`head-${unref65(id)}`));
  return {
    arrowKls,
    headKls,
    rootKls,
    itemWrapperKls,
    itemContentKls,
    scopedContentId,
    scopedHeadId
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/src/collapse-item2.mjs
var _hoisted_119 = ["aria-expanded", "aria-controls", "aria-describedby"];
var _hoisted_212 = ["id", "tabindex"];
var _hoisted_35 = ["id", "aria-hidden", "aria-labelledby"];
var __default__42 = defineComponent56({
  name: "ElCollapseItem"
});
var _sfc_main51 = defineComponent56({
  ...__default__42,
  props: collapseItemProps,
  setup(__props, { expose }) {
    const props = __props;
    const {
      focusing,
      id,
      isActive,
      handleFocus,
      handleHeaderClick,
      handleEnterClick
    } = useCollapseItem(props);
    const {
      arrowKls,
      headKls,
      rootKls,
      itemWrapperKls,
      itemContentKls,
      scopedContentId,
      scopedHeadId
    } = useCollapseItemDOM(props, { focusing, isActive, id });
    expose({
      isActive
    });
    return (_ctx, _cache) => {
      return openBlock50(), createElementBlock41("div", {
        class: normalizeClass42(unref66(rootKls))
      }, [
        createElementVNode24("div", {
          role: "tab",
          "aria-expanded": unref66(isActive),
          "aria-controls": unref66(scopedContentId),
          "aria-describedby": unref66(scopedContentId)
        }, [
          createElementVNode24("div", {
            id: unref66(scopedHeadId),
            class: normalizeClass42(unref66(headKls)),
            role: "button",
            tabindex: _ctx.disabled ? -1 : 0,
            onClick: _cache[0] || (_cache[0] = (...args) => unref66(handleHeaderClick) && unref66(handleHeaderClick)(...args)),
            onKeypress: _cache[1] || (_cache[1] = withKeys3(withModifiers11((...args) => unref66(handleEnterClick) && unref66(handleEnterClick)(...args), ["stop", "prevent"]), ["space", "enter"])),
            onFocus: _cache[2] || (_cache[2] = (...args) => unref66(handleFocus) && unref66(handleFocus)(...args)),
            onBlur: _cache[3] || (_cache[3] = ($event) => focusing.value = false)
          }, [
            renderSlot43(_ctx.$slots, "title", {}, () => [
              createTextVNode12(toDisplayString22(_ctx.title), 1)
            ]),
            createVNode23(unref66(ElIcon), {
              class: normalizeClass42(unref66(arrowKls))
            }, {
              default: withCtx31(() => [
                createVNode23(unref66(arrow_right_default))
              ]),
              _: 1
            }, 8, ["class"])
          ], 42, _hoisted_212)
        ], 8, _hoisted_119),
        createVNode23(unref66(_CollapseTransition), null, {
          default: withCtx31(() => [
            withDirectives15(createElementVNode24("div", {
              id: unref66(scopedContentId),
              class: normalizeClass42(unref66(itemWrapperKls)),
              role: "tabpanel",
              "aria-hidden": !unref66(isActive),
              "aria-labelledby": unref66(scopedHeadId)
            }, [
              createElementVNode24("div", {
                class: normalizeClass42(unref66(itemContentKls))
              }, [
                renderSlot43(_ctx.$slots, "default")
              ], 2)
            ], 10, _hoisted_35), [
              [vShow9, unref66(isActive)]
            ])
          ]),
          _: 3
        })
      ], 2);
    };
  }
});
var CollapseItem = _export_sfc(_sfc_main51, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collapse/index.mjs
var ElCollapse = withInstall(Collapse, {
  CollapseItem
});
var ElCollapseItem = withNoopInstall(CollapseItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/color-picker2.mjs
import { defineComponent as defineComponent61, ref as ref61, reactive as reactive11, computed as computed73, nextTick as nextTick19, onMounted as onMounted31, watch as watch41, provide as provide21, openBlock as openBlock55, createBlock as createBlock31, unref as unref68, withCtx as withCtx32, withDirectives as withDirectives16, createElementBlock as createElementBlock46, createElementVNode as createElementVNode29, normalizeClass as normalizeClass47, createVNode as createVNode24, createCommentVNode as createCommentVNode26, withKeys as withKeys4, createTextVNode as createTextVNode13, toDisplayString as toDisplayString23, normalizeStyle as normalizeStyle24, vShow as vShow10 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/components/alpha-slider.mjs
import { defineComponent as defineComponent57, openBlock as openBlock51, createElementBlock as createElementBlock42, normalizeClass as normalizeClass43, unref as unref67, createElementVNode as createElementVNode25, normalizeStyle as normalizeStyle20 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/props/alpha-slider.mjs
var alphaSliderProps = buildProps({
  color: {
    type: definePropType(Object),
    required: true
  },
  vertical: {
    type: Boolean,
    default: false
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/composables/use-alpha-slider.mjs
import { getCurrentInstance as getCurrentInstance15, shallowRef as shallowRef9, ref as ref57, onMounted as onMounted28, watch as watch37, computed as computed70 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/utils/draggable.mjs
var isDragging = false;
function draggable(element, options) {
  if (!isClient)
    return;
  const moveFn = function(event) {
    var _a2;
    (_a2 = options.drag) == null ? void 0 : _a2.call(options, event);
  };
  const upFn = function(event) {
    var _a2;
    document.removeEventListener("mousemove", moveFn);
    document.removeEventListener("mouseup", upFn);
    document.removeEventListener("touchmove", moveFn);
    document.removeEventListener("touchend", upFn);
    document.onselectstart = null;
    document.ondragstart = null;
    isDragging = false;
    (_a2 = options.end) == null ? void 0 : _a2.call(options, event);
  };
  const downFn = function(event) {
    var _a2;
    if (isDragging)
      return;
    event.preventDefault();
    document.onselectstart = () => false;
    document.ondragstart = () => false;
    document.addEventListener("mousemove", moveFn);
    document.addEventListener("mouseup", upFn);
    document.addEventListener("touchmove", moveFn);
    document.addEventListener("touchend", upFn);
    isDragging = true;
    (_a2 = options.start) == null ? void 0 : _a2.call(options, event);
  };
  element.addEventListener("mousedown", downFn);
  element.addEventListener("touchstart", downFn);
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/composables/use-alpha-slider.mjs
var useAlphaSlider = (props) => {
  const instance = getCurrentInstance15();
  const thumb = shallowRef9();
  const bar = shallowRef9();
  function handleClick(event) {
    const target2 = event.target;
    if (target2 !== thumb.value) {
      handleDrag(event);
    }
  }
  function handleDrag(event) {
    if (!bar.value || !thumb.value)
      return;
    const el = instance.vnode.el;
    const rect = el.getBoundingClientRect();
    const { clientX, clientY } = getClientXY(event);
    if (!props.vertical) {
      let left2 = clientX - rect.left;
      left2 = Math.max(thumb.value.offsetWidth / 2, left2);
      left2 = Math.min(left2, rect.width - thumb.value.offsetWidth / 2);
      props.color.set("alpha", Math.round((left2 - thumb.value.offsetWidth / 2) / (rect.width - thumb.value.offsetWidth) * 100));
    } else {
      let top = clientY - rect.top;
      top = Math.max(thumb.value.offsetHeight / 2, top);
      top = Math.min(top, rect.height - thumb.value.offsetHeight / 2);
      props.color.set("alpha", Math.round((top - thumb.value.offsetHeight / 2) / (rect.height - thumb.value.offsetHeight) * 100));
    }
  }
  return {
    thumb,
    bar,
    handleDrag,
    handleClick
  };
};
var useAlphaSliderDOM = (props, {
  bar,
  thumb,
  handleDrag
}) => {
  const instance = getCurrentInstance15();
  const ns = useNamespace("color-alpha-slider");
  const thumbLeft = ref57(0);
  const thumbTop = ref57(0);
  const background = ref57();
  function getThumbLeft() {
    if (!thumb.value)
      return 0;
    if (props.vertical)
      return 0;
    const el = instance.vnode.el;
    const alpha = props.color.get("alpha");
    if (!el)
      return 0;
    return Math.round(alpha * (el.offsetWidth - thumb.value.offsetWidth / 2) / 100);
  }
  function getThumbTop() {
    if (!thumb.value)
      return 0;
    const el = instance.vnode.el;
    if (!props.vertical)
      return 0;
    const alpha = props.color.get("alpha");
    if (!el)
      return 0;
    return Math.round(alpha * (el.offsetHeight - thumb.value.offsetHeight / 2) / 100);
  }
  function getBackground() {
    if (props.color && props.color.value) {
      const { r, g, b: b2 } = props.color.toRgb();
      return `linear-gradient(to right, rgba(${r}, ${g}, ${b2}, 0) 0%, rgba(${r}, ${g}, ${b2}, 1) 100%)`;
    }
    return "";
  }
  function update2() {
    thumbLeft.value = getThumbLeft();
    thumbTop.value = getThumbTop();
    background.value = getBackground();
  }
  onMounted28(() => {
    if (!bar.value || !thumb.value)
      return;
    const dragConfig = {
      drag: (event) => {
        handleDrag(event);
      },
      end: (event) => {
        handleDrag(event);
      }
    };
    draggable(bar.value, dragConfig);
    draggable(thumb.value, dragConfig);
    update2();
  });
  watch37(() => props.color.get("alpha"), () => update2());
  watch37(() => props.color.value, () => update2());
  const rootKls = computed70(() => [ns.b(), ns.is("vertical", props.vertical)]);
  const barKls = computed70(() => ns.e("bar"));
  const thumbKls = computed70(() => ns.e("thumb"));
  const barStyle = computed70(() => ({ background: background.value }));
  const thumbStyle = computed70(() => ({
    left: addUnit(thumbLeft.value),
    top: addUnit(thumbTop.value)
  }));
  return { rootKls, barKls, barStyle, thumbKls, thumbStyle, update: update2 };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/components/alpha-slider.mjs
var COMPONENT_NAME12 = "ElColorAlphaSlider";
var __default__43 = defineComponent57({
  name: COMPONENT_NAME12
});
var _sfc_main52 = defineComponent57({
  ...__default__43,
  props: alphaSliderProps,
  setup(__props, { expose }) {
    const props = __props;
    const { bar, thumb, handleDrag, handleClick } = useAlphaSlider(props);
    const { rootKls, barKls, barStyle, thumbKls, thumbStyle, update: update2 } = useAlphaSliderDOM(props, {
      bar,
      thumb,
      handleDrag
    });
    expose({
      update: update2,
      bar,
      thumb
    });
    return (_ctx, _cache) => {
      return openBlock51(), createElementBlock42("div", {
        class: normalizeClass43(unref67(rootKls))
      }, [
        createElementVNode25("div", {
          ref_key: "bar",
          ref: bar,
          class: normalizeClass43(unref67(barKls)),
          style: normalizeStyle20(unref67(barStyle)),
          onClick: _cache[0] || (_cache[0] = (...args) => unref67(handleClick) && unref67(handleClick)(...args))
        }, null, 6),
        createElementVNode25("div", {
          ref_key: "thumb",
          ref: thumb,
          class: normalizeClass43(unref67(thumbKls)),
          style: normalizeStyle20(unref67(thumbStyle))
        }, null, 6)
      ], 2);
    };
  }
});
var AlphaSlider = _export_sfc(_sfc_main52, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/alpha-slider.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/components/hue-slider.mjs
import { defineComponent as defineComponent58, getCurrentInstance as getCurrentInstance16, ref as ref58, computed as computed71, watch as watch38, onMounted as onMounted29, openBlock as openBlock52, createElementBlock as createElementBlock43, normalizeClass as normalizeClass44, createElementVNode as createElementVNode26, normalizeStyle as normalizeStyle21 } from "vue";
var _sfc_main53 = defineComponent58({
  name: "ElColorHueSlider",
  props: {
    color: {
      type: Object,
      required: true
    },
    vertical: Boolean
  },
  setup(props) {
    const ns = useNamespace("color-hue-slider");
    const instance = getCurrentInstance16();
    const thumb = ref58();
    const bar = ref58();
    const thumbLeft = ref58(0);
    const thumbTop = ref58(0);
    const hueValue = computed71(() => {
      return props.color.get("hue");
    });
    watch38(() => hueValue.value, () => {
      update2();
    });
    function handleClick(event) {
      const target2 = event.target;
      if (target2 !== thumb.value) {
        handleDrag(event);
      }
    }
    function handleDrag(event) {
      if (!bar.value || !thumb.value)
        return;
      const el = instance.vnode.el;
      const rect = el.getBoundingClientRect();
      const { clientX, clientY } = getClientXY(event);
      let hue;
      if (!props.vertical) {
        let left2 = clientX - rect.left;
        left2 = Math.min(left2, rect.width - thumb.value.offsetWidth / 2);
        left2 = Math.max(thumb.value.offsetWidth / 2, left2);
        hue = Math.round((left2 - thumb.value.offsetWidth / 2) / (rect.width - thumb.value.offsetWidth) * 360);
      } else {
        let top = clientY - rect.top;
        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2);
        top = Math.max(thumb.value.offsetHeight / 2, top);
        hue = Math.round((top - thumb.value.offsetHeight / 2) / (rect.height - thumb.value.offsetHeight) * 360);
      }
      props.color.set("hue", hue);
    }
    function getThumbLeft() {
      if (!thumb.value)
        return 0;
      const el = instance.vnode.el;
      if (props.vertical)
        return 0;
      const hue = props.color.get("hue");
      if (!el)
        return 0;
      return Math.round(hue * (el.offsetWidth - thumb.value.offsetWidth / 2) / 360);
    }
    function getThumbTop() {
      if (!thumb.value)
        return 0;
      const el = instance.vnode.el;
      if (!props.vertical)
        return 0;
      const hue = props.color.get("hue");
      if (!el)
        return 0;
      return Math.round(hue * (el.offsetHeight - thumb.value.offsetHeight / 2) / 360);
    }
    function update2() {
      thumbLeft.value = getThumbLeft();
      thumbTop.value = getThumbTop();
    }
    onMounted29(() => {
      if (!bar.value || !thumb.value)
        return;
      const dragConfig = {
        drag: (event) => {
          handleDrag(event);
        },
        end: (event) => {
          handleDrag(event);
        }
      };
      draggable(bar.value, dragConfig);
      draggable(thumb.value, dragConfig);
      update2();
    });
    return {
      bar,
      thumb,
      thumbLeft,
      thumbTop,
      hueValue,
      handleClick,
      update: update2,
      ns
    };
  }
});
function _sfc_render5(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock52(), createElementBlock43("div", {
    class: normalizeClass44([_ctx.ns.b(), _ctx.ns.is("vertical", _ctx.vertical)])
  }, [
    createElementVNode26("div", {
      ref: "bar",
      class: normalizeClass44(_ctx.ns.e("bar")),
      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
    }, null, 2),
    createElementVNode26("div", {
      ref: "thumb",
      class: normalizeClass44(_ctx.ns.e("thumb")),
      style: normalizeStyle21({
        left: _ctx.thumbLeft + "px",
        top: _ctx.thumbTop + "px"
      })
    }, null, 6)
  ], 2);
}
var HueSlider = _export_sfc(_sfc_main53, [["render", _sfc_render5], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/hue-slider.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/components/predefine.mjs
import { defineComponent as defineComponent59, inject as inject37, ref as ref59, watch as watch39, watchEffect as watchEffect6, openBlock as openBlock53, createElementBlock as createElementBlock44, normalizeClass as normalizeClass45, createElementVNode as createElementVNode27, Fragment as Fragment18, renderList as renderList9, normalizeStyle as normalizeStyle22 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/color-picker.mjs
import { isString as isString17 } from "@vue/shared";
var colorPickerProps = buildProps({
  modelValue: String,
  id: String,
  showAlpha: Boolean,
  colorFormat: String,
  disabled: Boolean,
  size: useSizeProp,
  popperClass: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  predefine: {
    type: definePropType(Array)
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var colorPickerEmits = {
  [UPDATE_MODEL_EVENT]: (val) => isString17(val) || isNil_default(val),
  [CHANGE_EVENT]: (val) => isString17(val) || isNil_default(val),
  activeChange: (val) => isString17(val) || isNil_default(val)
};
var colorPickerContextKey = Symbol("colorPickerContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/utils/color.mjs
import { hasOwn as hasOwn7 } from "@vue/shared";
var hsv2hsl = function(hue, sat, val) {
  return [
    hue,
    sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue) || 0,
    hue / 2
  ];
};
var isOnePointZero2 = function(n) {
  return typeof n === "string" && n.includes(".") && Number.parseFloat(n) === 1;
};
var isPercentage2 = function(n) {
  return typeof n === "string" && n.includes("%");
};
var bound012 = function(value, max5) {
  if (isOnePointZero2(value))
    value = "100%";
  const processPercent = isPercentage2(value);
  value = Math.min(max5, Math.max(0, Number.parseFloat(`${value}`)));
  if (processPercent) {
    value = Number.parseInt(`${value * max5}`, 10) / 100;
  }
  if (Math.abs(value - max5) < 1e-6) {
    return 1;
  }
  return value % max5 / Number.parseFloat(max5);
};
var INT_HEX_MAP = {
  10: "A",
  11: "B",
  12: "C",
  13: "D",
  14: "E",
  15: "F"
};
var hexOne = (value) => {
  value = Math.min(Math.round(value), 255);
  const high = Math.floor(value / 16);
  const low = value % 16;
  return `${INT_HEX_MAP[high] || high}${INT_HEX_MAP[low] || low}`;
};
var toHex = function({ r, g, b: b2 }) {
  if (Number.isNaN(+r) || Number.isNaN(+g) || Number.isNaN(+b2))
    return "";
  return `#${hexOne(r)}${hexOne(g)}${hexOne(b2)}`;
};
var HEX_INT_MAP = {
  A: 10,
  B: 11,
  C: 12,
  D: 13,
  E: 14,
  F: 15
};
var parseHexChannel = function(hex2) {
  if (hex2.length === 2) {
    return (HEX_INT_MAP[hex2[0].toUpperCase()] || +hex2[0]) * 16 + (HEX_INT_MAP[hex2[1].toUpperCase()] || +hex2[1]);
  }
  return HEX_INT_MAP[hex2[1].toUpperCase()] || +hex2[1];
};
var hsl2hsv = function(hue, sat, light) {
  sat = sat / 100;
  light = light / 100;
  let smin = sat;
  const lmin = Math.max(light, 0.01);
  light *= 2;
  sat *= light <= 1 ? light : 2 - light;
  smin *= lmin <= 1 ? lmin : 2 - lmin;
  const v2 = (light + sat) / 2;
  const sv = light === 0 ? 2 * smin / (lmin + smin) : 2 * sat / (light + sat);
  return {
    h: hue,
    s: sv * 100,
    v: v2 * 100
  };
};
var rgb2hsv = (r, g, b2) => {
  r = bound012(r, 255);
  g = bound012(g, 255);
  b2 = bound012(b2, 255);
  const max5 = Math.max(r, g, b2);
  const min5 = Math.min(r, g, b2);
  let h30;
  const v2 = max5;
  const d2 = max5 - min5;
  const s2 = max5 === 0 ? 0 : d2 / max5;
  if (max5 === min5) {
    h30 = 0;
  } else {
    switch (max5) {
      case r: {
        h30 = (g - b2) / d2 + (g < b2 ? 6 : 0);
        break;
      }
      case g: {
        h30 = (b2 - r) / d2 + 2;
        break;
      }
      case b2: {
        h30 = (r - g) / d2 + 4;
        break;
      }
    }
    h30 /= 6;
  }
  return { h: h30 * 360, s: s2 * 100, v: v2 * 100 };
};
var hsv2rgb = function(h30, s2, v2) {
  h30 = bound012(h30, 360) * 6;
  s2 = bound012(s2, 100);
  v2 = bound012(v2, 100);
  const i = Math.floor(h30);
  const f2 = h30 - i;
  const p2 = v2 * (1 - s2);
  const q2 = v2 * (1 - f2 * s2);
  const t = v2 * (1 - (1 - f2) * s2);
  const mod = i % 6;
  const r = [v2, q2, p2, p2, t, v2][mod];
  const g = [t, v2, v2, q2, p2, p2][mod];
  const b2 = [p2, p2, t, v2, v2, q2][mod];
  return {
    r: Math.round(r * 255),
    g: Math.round(g * 255),
    b: Math.round(b2 * 255)
  };
};
var Color = class {
  constructor(options = {}) {
    this._hue = 0;
    this._saturation = 100;
    this._value = 100;
    this._alpha = 100;
    this.enableAlpha = false;
    this.format = "hex";
    this.value = "";
    for (const option in options) {
      if (hasOwn7(options, option)) {
        this[option] = options[option];
      }
    }
    if (options.value) {
      this.fromString(options.value);
    } else {
      this.doOnChange();
    }
  }
  set(prop, value) {
    if (arguments.length === 1 && typeof prop === "object") {
      for (const p2 in prop) {
        if (hasOwn7(prop, p2)) {
          this.set(p2, prop[p2]);
        }
      }
      return;
    }
    ;
    this[`_${prop}`] = value;
    this.doOnChange();
  }
  get(prop) {
    if (prop === "alpha") {
      return Math.floor(this[`_${prop}`]);
    }
    return this[`_${prop}`];
  }
  toRgb() {
    return hsv2rgb(this._hue, this._saturation, this._value);
  }
  fromString(value) {
    if (!value) {
      this._hue = 0;
      this._saturation = 100;
      this._value = 100;
      this.doOnChange();
      return;
    }
    const fromHSV = (h30, s2, v2) => {
      this._hue = Math.max(0, Math.min(360, h30));
      this._saturation = Math.max(0, Math.min(100, s2));
      this._value = Math.max(0, Math.min(100, v2));
      this.doOnChange();
    };
    if (value.includes("hsl")) {
      const parts = value.replace(/hsla|hsl|\(|\)/gm, "").split(/\s|,/g).filter((val) => val !== "").map((val, index) => index > 2 ? Number.parseFloat(val) : Number.parseInt(val, 10));
      if (parts.length === 4) {
        this._alpha = Number.parseFloat(parts[3]) * 100;
      } else if (parts.length === 3) {
        this._alpha = 100;
      }
      if (parts.length >= 3) {
        const { h: h30, s: s2, v: v2 } = hsl2hsv(parts[0], parts[1], parts[2]);
        fromHSV(h30, s2, v2);
      }
    } else if (value.includes("hsv")) {
      const parts = value.replace(/hsva|hsv|\(|\)/gm, "").split(/\s|,/g).filter((val) => val !== "").map((val, index) => index > 2 ? Number.parseFloat(val) : Number.parseInt(val, 10));
      if (parts.length === 4) {
        this._alpha = Number.parseFloat(parts[3]) * 100;
      } else if (parts.length === 3) {
        this._alpha = 100;
      }
      if (parts.length >= 3) {
        fromHSV(parts[0], parts[1], parts[2]);
      }
    } else if (value.includes("rgb")) {
      const parts = value.replace(/rgba|rgb|\(|\)/gm, "").split(/\s|,/g).filter((val) => val !== "").map((val, index) => index > 2 ? Number.parseFloat(val) : Number.parseInt(val, 10));
      if (parts.length === 4) {
        this._alpha = Number.parseFloat(parts[3]) * 100;
      } else if (parts.length === 3) {
        this._alpha = 100;
      }
      if (parts.length >= 3) {
        const { h: h30, s: s2, v: v2 } = rgb2hsv(parts[0], parts[1], parts[2]);
        fromHSV(h30, s2, v2);
      }
    } else if (value.includes("#")) {
      const hex2 = value.replace("#", "").trim();
      if (!/^[0-9a-fA-F]{3}$|^[0-9a-fA-F]{6}$|^[0-9a-fA-F]{8}$/.test(hex2))
        return;
      let r, g, b2;
      if (hex2.length === 3) {
        r = parseHexChannel(hex2[0] + hex2[0]);
        g = parseHexChannel(hex2[1] + hex2[1]);
        b2 = parseHexChannel(hex2[2] + hex2[2]);
      } else if (hex2.length === 6 || hex2.length === 8) {
        r = parseHexChannel(hex2.slice(0, 2));
        g = parseHexChannel(hex2.slice(2, 4));
        b2 = parseHexChannel(hex2.slice(4, 6));
      }
      if (hex2.length === 8) {
        this._alpha = parseHexChannel(hex2.slice(6)) / 255 * 100;
      } else if (hex2.length === 3 || hex2.length === 6) {
        this._alpha = 100;
      }
      const { h: h30, s: s2, v: v2 } = rgb2hsv(r, g, b2);
      fromHSV(h30, s2, v2);
    }
  }
  compare(color) {
    return Math.abs(color._hue - this._hue) < 2 && Math.abs(color._saturation - this._saturation) < 1 && Math.abs(color._value - this._value) < 1 && Math.abs(color._alpha - this._alpha) < 1;
  }
  doOnChange() {
    const { _hue, _saturation, _value, _alpha, format: format2 } = this;
    if (this.enableAlpha) {
      switch (format2) {
        case "hsl": {
          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);
          this.value = `hsla(${_hue}, ${Math.round(hsl[1] * 100)}%, ${Math.round(hsl[2] * 100)}%, ${this.get("alpha") / 100})`;
          break;
        }
        case "hsv": {
          this.value = `hsva(${_hue}, ${Math.round(_saturation)}%, ${Math.round(_value)}%, ${this.get("alpha") / 100})`;
          break;
        }
        case "hex": {
          this.value = `${toHex(hsv2rgb(_hue, _saturation, _value))}${hexOne(_alpha * 255 / 100)}`;
          break;
        }
        default: {
          const { r, g, b: b2 } = hsv2rgb(_hue, _saturation, _value);
          this.value = `rgba(${r}, ${g}, ${b2}, ${this.get("alpha") / 100})`;
        }
      }
    } else {
      switch (format2) {
        case "hsl": {
          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);
          this.value = `hsl(${_hue}, ${Math.round(hsl[1] * 100)}%, ${Math.round(hsl[2] * 100)}%)`;
          break;
        }
        case "hsv": {
          this.value = `hsv(${_hue}, ${Math.round(_saturation)}%, ${Math.round(_value)}%)`;
          break;
        }
        case "rgb": {
          const { r, g, b: b2 } = hsv2rgb(_hue, _saturation, _value);
          this.value = `rgb(${r}, ${g}, ${b2})`;
          break;
        }
        default: {
          this.value = toHex(hsv2rgb(_hue, _saturation, _value));
        }
      }
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/components/predefine.mjs
var _sfc_main54 = defineComponent59({
  props: {
    colors: {
      type: Array,
      required: true
    },
    color: {
      type: Object,
      required: true
    }
  },
  setup(props) {
    const ns = useNamespace("color-predefine");
    const { currentColor } = inject37(colorPickerContextKey);
    const rgbaColors = ref59(parseColors(props.colors, props.color));
    watch39(() => currentColor.value, (val) => {
      const color = new Color();
      color.fromString(val);
      rgbaColors.value.forEach((item) => {
        item.selected = color.compare(item);
      });
    });
    watchEffect6(() => {
      rgbaColors.value = parseColors(props.colors, props.color);
    });
    function handleSelect(index) {
      props.color.fromString(props.colors[index]);
    }
    function parseColors(colors, color) {
      return colors.map((value) => {
        const c2 = new Color();
        c2.enableAlpha = true;
        c2.format = "rgba";
        c2.fromString(value);
        c2.selected = c2.value === color.value;
        return c2;
      });
    }
    return {
      rgbaColors,
      handleSelect,
      ns
    };
  }
});
var _hoisted_120 = ["onClick"];
function _sfc_render6(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock53(), createElementBlock44("div", {
    class: normalizeClass45(_ctx.ns.b())
  }, [
    createElementVNode27("div", {
      class: normalizeClass45(_ctx.ns.e("colors"))
    }, [
      (openBlock53(true), createElementBlock44(Fragment18, null, renderList9(_ctx.rgbaColors, (item, index) => {
        return openBlock53(), createElementBlock44("div", {
          key: _ctx.colors[index],
          class: normalizeClass45([
            _ctx.ns.e("color-selector"),
            _ctx.ns.is("alpha", item._alpha < 100),
            { selected: item.selected }
          ]),
          onClick: ($event) => _ctx.handleSelect(index)
        }, [
          createElementVNode27("div", {
            style: normalizeStyle22({ backgroundColor: item.value })
          }, null, 4)
        ], 10, _hoisted_120);
      }), 128))
    ], 2)
  ], 2);
}
var Predefine = _export_sfc(_sfc_main54, [["render", _sfc_render6], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/predefine.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/components/sv-panel.mjs
import { defineComponent as defineComponent60, getCurrentInstance as getCurrentInstance17, ref as ref60, computed as computed72, watch as watch40, onMounted as onMounted30, createElementVNode as createElementVNode28, openBlock as openBlock54, createElementBlock as createElementBlock45, normalizeClass as normalizeClass46, normalizeStyle as normalizeStyle23 } from "vue";
var _sfc_main55 = defineComponent60({
  name: "ElSlPanel",
  props: {
    color: {
      type: Object,
      required: true
    }
  },
  setup(props) {
    const ns = useNamespace("color-svpanel");
    const instance = getCurrentInstance17();
    const cursorTop = ref60(0);
    const cursorLeft = ref60(0);
    const background = ref60("hsl(0, 100%, 50%)");
    const colorValue = computed72(() => {
      const hue = props.color.get("hue");
      const value = props.color.get("value");
      return { hue, value };
    });
    function update2() {
      const saturation = props.color.get("saturation");
      const value = props.color.get("value");
      const el = instance.vnode.el;
      const { clientWidth: width, clientHeight: height } = el;
      cursorLeft.value = saturation * width / 100;
      cursorTop.value = (100 - value) * height / 100;
      background.value = `hsl(${props.color.get("hue")}, 100%, 50%)`;
    }
    function handleDrag(event) {
      const el = instance.vnode.el;
      const rect = el.getBoundingClientRect();
      const { clientX, clientY } = getClientXY(event);
      let left2 = clientX - rect.left;
      let top = clientY - rect.top;
      left2 = Math.max(0, left2);
      left2 = Math.min(left2, rect.width);
      top = Math.max(0, top);
      top = Math.min(top, rect.height);
      cursorLeft.value = left2;
      cursorTop.value = top;
      props.color.set({
        saturation: left2 / rect.width * 100,
        value: 100 - top / rect.height * 100
      });
    }
    watch40(() => colorValue.value, () => {
      update2();
    });
    onMounted30(() => {
      draggable(instance.vnode.el, {
        drag: (event) => {
          handleDrag(event);
        },
        end: (event) => {
          handleDrag(event);
        }
      });
      update2();
    });
    return {
      cursorTop,
      cursorLeft,
      background,
      colorValue,
      handleDrag,
      update: update2,
      ns
    };
  }
});
var _hoisted_121 = createElementVNode28("div", null, null, -1);
var _hoisted_213 = [
  _hoisted_121
];
function _sfc_render7(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock54(), createElementBlock45("div", {
    class: normalizeClass46(_ctx.ns.b()),
    style: normalizeStyle23({
      backgroundColor: _ctx.background
    })
  }, [
    createElementVNode28("div", {
      class: normalizeClass46(_ctx.ns.e("white"))
    }, null, 2),
    createElementVNode28("div", {
      class: normalizeClass46(_ctx.ns.e("black"))
    }, null, 2),
    createElementVNode28("div", {
      class: normalizeClass46(_ctx.ns.e("cursor")),
      style: normalizeStyle23({
        top: _ctx.cursorTop + "px",
        left: _ctx.cursorLeft + "px"
      })
    }, _hoisted_213, 6)
  ], 6);
}
var SvPanel = _export_sfc(_sfc_main55, [["render", _sfc_render7], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/sv-panel.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/src/color-picker2.mjs
var _hoisted_122 = ["id", "aria-label", "aria-labelledby", "aria-description", "tabindex", "onKeydown"];
var __default__44 = defineComponent61({
  name: "ElColorPicker"
});
var _sfc_main56 = defineComponent61({
  ...__default__44,
  props: colorPickerProps,
  emits: colorPickerEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const { t } = useLocale();
    const ns = useNamespace("color");
    const { formItem } = useFormItem();
    const colorSize = useFormSize();
    const colorDisabled = useFormDisabled();
    const { inputId: buttonId, isLabeledByFormItem } = useFormItemInputId(props, {
      formItemContext: formItem
    });
    const hue = ref61();
    const sv = ref61();
    const alpha = ref61();
    const popper = ref61();
    let shouldActiveChange = true;
    const color = reactive11(new Color({
      enableAlpha: props.showAlpha,
      format: props.colorFormat || "",
      value: props.modelValue
    }));
    const showPicker = ref61(false);
    const showPanelColor = ref61(false);
    const customInput = ref61("");
    const displayedColor = computed73(() => {
      if (!props.modelValue && !showPanelColor.value) {
        return "transparent";
      }
      return displayedRgb(color, props.showAlpha);
    });
    const currentColor = computed73(() => {
      return !props.modelValue && !showPanelColor.value ? "" : color.value;
    });
    const buttonAriaLabel = computed73(() => {
      return !isLabeledByFormItem.value ? props.label || t("el.colorpicker.defaultLabel") : void 0;
    });
    const buttonAriaLabelledby = computed73(() => {
      return isLabeledByFormItem.value ? formItem == null ? void 0 : formItem.labelId : void 0;
    });
    const btnKls = computed73(() => {
      return [
        ns.b("picker"),
        ns.is("disabled", colorDisabled.value),
        ns.bm("picker", colorSize.value)
      ];
    });
    function displayedRgb(color2, showAlpha) {
      if (!(color2 instanceof Color)) {
        throw new TypeError("color should be instance of _color Class");
      }
      const { r, g, b: b2 } = color2.toRgb();
      return showAlpha ? `rgba(${r}, ${g}, ${b2}, ${color2.get("alpha") / 100})` : `rgb(${r}, ${g}, ${b2})`;
    }
    function setShowPicker(value) {
      showPicker.value = value;
    }
    const debounceSetShowPicker = debounce_default(setShowPicker, 100);
    function show() {
      if (colorDisabled.value)
        return;
      setShowPicker(true);
    }
    function hide2() {
      debounceSetShowPicker(false);
      resetColor();
    }
    function resetColor() {
      nextTick19(() => {
        if (props.modelValue) {
          color.fromString(props.modelValue);
        } else {
          color.value = "";
          nextTick19(() => {
            showPanelColor.value = false;
          });
        }
      });
    }
    function handleTrigger() {
      if (colorDisabled.value)
        return;
      debounceSetShowPicker(!showPicker.value);
    }
    function handleConfirm() {
      color.fromString(customInput.value);
    }
    function confirmValue() {
      const value = color.value;
      emit(UPDATE_MODEL_EVENT, value);
      emit("change", value);
      if (props.validateEvent) {
        formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
      }
      debounceSetShowPicker(false);
      nextTick19(() => {
        const newColor = new Color({
          enableAlpha: props.showAlpha,
          format: props.colorFormat || "",
          value: props.modelValue
        });
        if (!color.compare(newColor)) {
          resetColor();
        }
      });
    }
    function clear2() {
      debounceSetShowPicker(false);
      emit(UPDATE_MODEL_EVENT, null);
      emit("change", null);
      if (props.modelValue !== null && props.validateEvent) {
        formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
      }
      resetColor();
    }
    onMounted31(() => {
      if (props.modelValue) {
        customInput.value = currentColor.value;
      }
    });
    watch41(() => props.modelValue, (newVal) => {
      if (!newVal) {
        showPanelColor.value = false;
      } else if (newVal && newVal !== color.value) {
        shouldActiveChange = false;
        color.fromString(newVal);
      }
    });
    watch41(() => currentColor.value, (val) => {
      customInput.value = val;
      shouldActiveChange && emit("activeChange", val);
      shouldActiveChange = true;
    });
    watch41(() => color.value, () => {
      if (!props.modelValue && !showPanelColor.value) {
        showPanelColor.value = true;
      }
    });
    watch41(() => showPicker.value, () => {
      nextTick19(() => {
        var _a2, _b, _c;
        (_a2 = hue.value) == null ? void 0 : _a2.update();
        (_b = sv.value) == null ? void 0 : _b.update();
        (_c = alpha.value) == null ? void 0 : _c.update();
      });
    });
    provide21(colorPickerContextKey, {
      currentColor
    });
    expose({
      color,
      show,
      hide: hide2
    });
    return (_ctx, _cache) => {
      return openBlock55(), createBlock31(unref68(ElTooltip), {
        ref_key: "popper",
        ref: popper,
        visible: showPicker.value,
        "show-arrow": false,
        "fallback-placements": ["bottom", "top", "right", "left"],
        offset: 0,
        "gpu-acceleration": false,
        "popper-class": [unref68(ns).be("picker", "panel"), unref68(ns).b("dropdown"), _ctx.popperClass],
        "stop-popper-mouse-event": false,
        effect: "light",
        trigger: "click",
        transition: `${unref68(ns).namespace.value}-zoom-in-top`,
        persistent: ""
      }, {
        content: withCtx32(() => [
          withDirectives16((openBlock55(), createElementBlock46("div", null, [
            createElementVNode29("div", {
              class: normalizeClass47(unref68(ns).be("dropdown", "main-wrapper"))
            }, [
              createVNode24(HueSlider, {
                ref_key: "hue",
                ref: hue,
                class: "hue-slider",
                color: unref68(color),
                vertical: ""
              }, null, 8, ["color"]),
              createVNode24(SvPanel, {
                ref: "svPanel",
                color: unref68(color)
              }, null, 8, ["color"])
            ], 2),
            _ctx.showAlpha ? (openBlock55(), createBlock31(AlphaSlider, {
              key: 0,
              ref_key: "alpha",
              ref: alpha,
              color: unref68(color)
            }, null, 8, ["color"])) : createCommentVNode26("v-if", true),
            _ctx.predefine ? (openBlock55(), createBlock31(Predefine, {
              key: 1,
              ref: "predefine",
              color: unref68(color),
              colors: _ctx.predefine
            }, null, 8, ["color", "colors"])) : createCommentVNode26("v-if", true),
            createElementVNode29("div", {
              class: normalizeClass47(unref68(ns).be("dropdown", "btns"))
            }, [
              createElementVNode29("span", {
                class: normalizeClass47(unref68(ns).be("dropdown", "value"))
              }, [
                createVNode24(unref68(ElInput), {
                  modelValue: customInput.value,
                  "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => customInput.value = $event),
                  "validate-event": false,
                  size: "small",
                  onKeyup: withKeys4(handleConfirm, ["enter"]),
                  onBlur: handleConfirm
                }, null, 8, ["modelValue", "onKeyup"])
              ], 2),
              createVNode24(unref68(ElButton), {
                class: normalizeClass47(unref68(ns).be("dropdown", "link-btn")),
                text: "",
                size: "small",
                onClick: clear2
              }, {
                default: withCtx32(() => [
                  createTextVNode13(toDisplayString23(unref68(t)("el.colorpicker.clear")), 1)
                ]),
                _: 1
              }, 8, ["class"]),
              createVNode24(unref68(ElButton), {
                plain: "",
                size: "small",
                class: normalizeClass47(unref68(ns).be("dropdown", "btn")),
                onClick: confirmValue
              }, {
                default: withCtx32(() => [
                  createTextVNode13(toDisplayString23(unref68(t)("el.colorpicker.confirm")), 1)
                ]),
                _: 1
              }, 8, ["class"])
            ], 2)
          ])), [
            [unref68(ClickOutside), hide2]
          ])
        ]),
        default: withCtx32(() => [
          createElementVNode29("div", {
            id: unref68(buttonId),
            class: normalizeClass47(unref68(btnKls)),
            role: "button",
            "aria-label": unref68(buttonAriaLabel),
            "aria-labelledby": unref68(buttonAriaLabelledby),
            "aria-description": unref68(t)("el.colorpicker.description", { color: _ctx.modelValue || "" }),
            tabindex: _ctx.tabindex,
            onKeydown: withKeys4(handleTrigger, ["enter"])
          }, [
            unref68(colorDisabled) ? (openBlock55(), createElementBlock46("div", {
              key: 0,
              class: normalizeClass47(unref68(ns).be("picker", "mask"))
            }, null, 2)) : createCommentVNode26("v-if", true),
            createElementVNode29("div", {
              class: normalizeClass47(unref68(ns).be("picker", "trigger")),
              onClick: handleTrigger
            }, [
              createElementVNode29("span", {
                class: normalizeClass47([unref68(ns).be("picker", "color"), unref68(ns).is("alpha", _ctx.showAlpha)])
              }, [
                createElementVNode29("span", {
                  class: normalizeClass47(unref68(ns).be("picker", "color-inner")),
                  style: normalizeStyle24({
                    backgroundColor: unref68(displayedColor)
                  })
                }, [
                  withDirectives16(createVNode24(unref68(ElIcon), {
                    class: normalizeClass47([unref68(ns).be("picker", "icon"), unref68(ns).is("icon-arrow-down")])
                  }, {
                    default: withCtx32(() => [
                      createVNode24(unref68(arrow_down_default))
                    ]),
                    _: 1
                  }, 8, ["class"]), [
                    [vShow10, _ctx.modelValue || showPanelColor.value]
                  ]),
                  !_ctx.modelValue && !showPanelColor.value ? (openBlock55(), createBlock31(unref68(ElIcon), {
                    key: 0,
                    class: normalizeClass47([unref68(ns).be("picker", "empty"), unref68(ns).is("icon-close")])
                  }, {
                    default: withCtx32(() => [
                      createVNode24(unref68(close_default))
                    ]),
                    _: 1
                  }, 8, ["class"])) : createCommentVNode26("v-if", true)
                ], 6)
              ], 2)
            ], 2)
          ], 42, _hoisted_122)
        ]),
        _: 1
      }, 8, ["visible", "popper-class", "transition"]);
    };
  }
});
var ColorPicker = _export_sfc(_sfc_main56, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/color-picker.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/color-picker/index.mjs
var ElColorPicker = withInstall(ColorPicker);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/container/src/container.mjs
import { defineComponent as defineComponent62, useSlots as useSlots8, computed as computed74, openBlock as openBlock56, createElementBlock as createElementBlock47, normalizeClass as normalizeClass48, unref as unref69, renderSlot as renderSlot44 } from "vue";
var __default__45 = defineComponent62({
  name: "ElContainer"
});
var _sfc_main57 = defineComponent62({
  ...__default__45,
  props: {
    direction: {
      type: String
    }
  },
  setup(__props) {
    const props = __props;
    const slots = useSlots8();
    const ns = useNamespace("container");
    const isVertical = computed74(() => {
      if (props.direction === "vertical") {
        return true;
      } else if (props.direction === "horizontal") {
        return false;
      }
      if (slots && slots.default) {
        const vNodes = slots.default();
        return vNodes.some((vNode) => {
          const tag = vNode.type.name;
          return tag === "ElHeader" || tag === "ElFooter";
        });
      } else {
        return false;
      }
    });
    return (_ctx, _cache) => {
      return openBlock56(), createElementBlock47("section", {
        class: normalizeClass48([unref69(ns).b(), unref69(ns).is("vertical", unref69(isVertical))])
      }, [
        renderSlot44(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var Container = _export_sfc(_sfc_main57, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/container/src/container.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/container/src/aside.mjs
import { defineComponent as defineComponent63, computed as computed75, openBlock as openBlock57, createElementBlock as createElementBlock48, normalizeClass as normalizeClass49, unref as unref70, normalizeStyle as normalizeStyle25, renderSlot as renderSlot45 } from "vue";
var __default__46 = defineComponent63({
  name: "ElAside"
});
var _sfc_main58 = defineComponent63({
  ...__default__46,
  props: {
    width: {
      type: String,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const ns = useNamespace("aside");
    const style = computed75(() => props.width ? ns.cssVarBlock({ width: props.width }) : {});
    return (_ctx, _cache) => {
      return openBlock57(), createElementBlock48("aside", {
        class: normalizeClass49(unref70(ns).b()),
        style: normalizeStyle25(unref70(style))
      }, [
        renderSlot45(_ctx.$slots, "default")
      ], 6);
    };
  }
});
var Aside = _export_sfc(_sfc_main58, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/container/src/aside.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/container/src/footer.mjs
import { defineComponent as defineComponent64, computed as computed76, openBlock as openBlock58, createElementBlock as createElementBlock49, normalizeClass as normalizeClass50, unref as unref71, normalizeStyle as normalizeStyle26, renderSlot as renderSlot46 } from "vue";
var __default__47 = defineComponent64({
  name: "ElFooter"
});
var _sfc_main59 = defineComponent64({
  ...__default__47,
  props: {
    height: {
      type: String,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const ns = useNamespace("footer");
    const style = computed76(() => props.height ? ns.cssVarBlock({ height: props.height }) : {});
    return (_ctx, _cache) => {
      return openBlock58(), createElementBlock49("footer", {
        class: normalizeClass50(unref71(ns).b()),
        style: normalizeStyle26(unref71(style))
      }, [
        renderSlot46(_ctx.$slots, "default")
      ], 6);
    };
  }
});
var Footer = _export_sfc(_sfc_main59, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/container/src/footer.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/container/src/header.mjs
import { defineComponent as defineComponent65, computed as computed77, openBlock as openBlock59, createElementBlock as createElementBlock50, normalizeClass as normalizeClass51, unref as unref72, normalizeStyle as normalizeStyle27, renderSlot as renderSlot47 } from "vue";
var __default__48 = defineComponent65({
  name: "ElHeader"
});
var _sfc_main60 = defineComponent65({
  ...__default__48,
  props: {
    height: {
      type: String,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const ns = useNamespace("header");
    const style = computed77(() => {
      return props.height ? ns.cssVarBlock({
        height: props.height
      }) : {};
    });
    return (_ctx, _cache) => {
      return openBlock59(), createElementBlock50("header", {
        class: normalizeClass51(unref72(ns).b()),
        style: normalizeStyle27(unref72(style))
      }, [
        renderSlot47(_ctx.$slots, "default")
      ], 6);
    };
  }
});
var Header = _export_sfc(_sfc_main60, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/container/src/header.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/container/src/main.mjs
import { defineComponent as defineComponent66, openBlock as openBlock60, createElementBlock as createElementBlock51, normalizeClass as normalizeClass52, unref as unref73, renderSlot as renderSlot48 } from "vue";
var __default__49 = defineComponent66({
  name: "ElMain"
});
var _sfc_main61 = defineComponent66({
  ...__default__49,
  setup(__props) {
    const ns = useNamespace("main");
    return (_ctx, _cache) => {
      return openBlock60(), createElementBlock51("main", {
        class: normalizeClass52(unref73(ns).b())
      }, [
        renderSlot48(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var Main = _export_sfc(_sfc_main61, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/container/src/main.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/container/index.mjs
var ElContainer = withInstall(Container, {
  Aside,
  Footer,
  Header,
  Main
});
var ElAside = withNoopInstall(Aside);
var ElFooter = withNoopInstall(Footer);
var ElHeader = withNoopInstall(Header);
var ElMain = withNoopInstall(Main);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker.mjs
var import_dayjs15 = __toESM(require_dayjs_min(), 1);
var import_customParseFormat2 = __toESM(require_customParseFormat(), 1);
var import_advancedFormat = __toESM(require_advancedFormat(), 1);
var import_localeData2 = __toESM(require_localeData(), 1);
var import_weekOfYear = __toESM(require_weekOfYear(), 1);
var import_weekYear = __toESM(require_weekYear(), 1);
var import_dayOfYear = __toESM(require_dayOfYear(), 1);
var import_isSameOrAfter = __toESM(require_isSameOrAfter(), 1);
var import_isSameOrBefore = __toESM(require_isSameOrBefore(), 1);
import { defineComponent as defineComponent74, provide as provide22, reactive as reactive12, toRef as toRef11, ref as ref69, createVNode as createVNode30, mergeProps as mergeProps12 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/constants.mjs
var ROOT_PICKER_INJECTION_KEY = Symbol();

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/date-picker.mjs
var datePickerProps = buildProps({
  ...timePickerDefaultProps,
  type: {
    type: definePropType(String),
    default: "date"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/panel-date-pick.mjs
var import_dayjs11 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent71, useAttrs as useAttrs5, useSlots as useSlots9, inject as inject39, toRef as toRef8, ref as ref65, computed as computed81, nextTick as nextTick23, watch as watch45, openBlock as openBlock64, createElementBlock as createElementBlock55, normalizeClass as normalizeClass56, unref as unref77, createElementVNode as createElementVNode33, renderSlot as renderSlot49, Fragment as Fragment22, renderList as renderList13, toDisplayString as toDisplayString27, createCommentVNode as createCommentVNode28, createVNode as createVNode27, withDirectives as withDirectives17, withCtx as withCtx33, vShow as vShow11, withKeys as withKeys7, createBlock as createBlock32, createTextVNode as createTextVNode14 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/shared.mjs
import { isArray as isArray18 } from "@vue/shared";
var selectionModes = ["date", "dates", "year", "month", "week", "range"];
var datePickerSharedProps = buildProps({
  disabledDate: {
    type: definePropType(Function)
  },
  date: {
    type: definePropType(Object),
    required: true
  },
  minDate: {
    type: definePropType(Object)
  },
  maxDate: {
    type: definePropType(Object)
  },
  parsedValue: {
    type: definePropType([Object, Array])
  },
  rangeState: {
    type: definePropType(Object),
    default: () => ({
      endDate: null,
      selecting: false
    })
  }
});
var panelSharedProps = buildProps({
  type: {
    type: definePropType(String),
    required: true,
    values: datePickTypes
  }
});
var panelRangeSharedProps = buildProps({
  unlinkPanels: Boolean,
  parsedValue: {
    type: definePropType(Array)
  }
});
var selectionModeWithDefault = (mode) => {
  return {
    type: String,
    values: selectionModes,
    default: mode
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/panel-date-pick.mjs
var panelDatePickProps = buildProps({
  ...panelSharedProps,
  parsedValue: {
    type: definePropType([Object, Array])
  },
  visible: {
    type: Boolean
  },
  format: {
    type: String,
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-date-table.mjs
var import_dayjs8 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent68, ref as ref62, computed as computed78, unref as unref74, watch as watch42, nextTick as nextTick20, openBlock as openBlock61, createElementBlock as createElementBlock52, normalizeClass as normalizeClass53, withModifiers as withModifiers12, createElementVNode as createElementVNode30, toDisplayString as toDisplayString24, createCommentVNode as createCommentVNode27, Fragment as Fragment19, renderList as renderList10, createVNode as createVNode26 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/basic-date-table.mjs
var basicDateTableProps = buildProps({
  ...datePickerSharedProps,
  cellClassName: {
    type: definePropType(Function)
  },
  showWeekNumber: Boolean,
  selectionMode: selectionModeWithDefault("date")
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/utils.mjs
var import_dayjs7 = __toESM(require_dayjs_min(), 1);
import { isArray as isArray19 } from "@vue/shared";
var isValidRange2 = (range4) => {
  if (!isArray19(range4))
    return false;
  const [left2, right2] = range4;
  return import_dayjs7.default.isDayjs(left2) && import_dayjs7.default.isDayjs(right2) && left2.isSameOrBefore(right2);
};
var getDefaultValue = (defaultValue, { lang, unit: unit3, unlinkPanels }) => {
  let start;
  if (isArray19(defaultValue)) {
    let [left2, right2] = defaultValue.map((d2) => (0, import_dayjs7.default)(d2).locale(lang));
    if (!unlinkPanels) {
      right2 = left2.add(1, unit3);
    }
    return [left2, right2];
  } else if (defaultValue) {
    start = (0, import_dayjs7.default)(defaultValue);
  } else {
    start = (0, import_dayjs7.default)();
  }
  start = start.locale(lang);
  return [start, start.add(1, unit3)];
};
var buildPickerTable = (dimension, rows, {
  columnIndexOffset,
  startDate,
  nextEndDate,
  now: now2,
  unit: unit3,
  relativeDateGetter,
  setCellMetadata,
  setRowMetadata
}) => {
  for (let rowIndex = 0; rowIndex < dimension.row; rowIndex++) {
    const row = rows[rowIndex];
    for (let columnIndex = 0; columnIndex < dimension.column; columnIndex++) {
      let cell = row[columnIndex + columnIndexOffset];
      if (!cell) {
        cell = {
          row: rowIndex,
          column: columnIndex,
          type: "normal",
          inRange: false,
          start: false,
          end: false
        };
      }
      const index = rowIndex * dimension.column + columnIndex;
      const nextStartDate = relativeDateGetter(index);
      cell.dayjs = nextStartDate;
      cell.date = nextStartDate.toDate();
      cell.timestamp = nextStartDate.valueOf();
      cell.type = "normal";
      cell.inRange = !!(startDate && nextStartDate.isSameOrAfter(startDate, unit3) && nextEndDate && nextStartDate.isSameOrBefore(nextEndDate, unit3)) || !!(startDate && nextStartDate.isSameOrBefore(startDate, unit3) && nextEndDate && nextStartDate.isSameOrAfter(nextEndDate, unit3));
      if (startDate == null ? void 0 : startDate.isSameOrAfter(nextEndDate)) {
        cell.start = !!nextEndDate && nextStartDate.isSame(nextEndDate, unit3);
        cell.end = startDate && nextStartDate.isSame(startDate, unit3);
      } else {
        cell.start = !!startDate && nextStartDate.isSame(startDate, unit3);
        cell.end = !!nextEndDate && nextStartDate.isSame(nextEndDate, unit3);
      }
      const isToday = nextStartDate.isSame(now2, unit3);
      if (isToday) {
        cell.type = "today";
      }
      setCellMetadata == null ? void 0 : setCellMetadata(cell, { rowIndex, columnIndex });
      row[columnIndex + columnIndexOffset] = cell;
    }
    setRowMetadata == null ? void 0 : setRowMetadata(row);
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-cell-render.mjs
import { defineComponent as defineComponent67, inject as inject38, createVNode as createVNode25 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/basic-cell.mjs
var basicCellProps = buildProps({
  cell: {
    type: definePropType(Object)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-cell-render.mjs
var ElDatePickerCell = defineComponent67({
  name: "ElDatePickerCell",
  props: basicCellProps,
  setup(props) {
    const ns = useNamespace("date-table-cell");
    const {
      slots
    } = inject38(ROOT_PICKER_INJECTION_KEY);
    return () => {
      const {
        cell
      } = props;
      if (slots.default) {
        const list = slots.default(cell).filter((item) => {
          return item.patchFlag !== -2 && item.type.toString() !== "Symbol(Comment)";
        });
        if (list.length) {
          return list;
        }
      }
      return createVNode25("div", {
        "class": ns.b()
      }, [createVNode25("span", {
        "class": ns.e("text")
      }, [cell == null ? void 0 : cell.text])]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-date-table.mjs
var _hoisted_123 = ["aria-label", "onMousedown"];
var _hoisted_214 = {
  key: 0,
  scope: "col"
};
var _hoisted_36 = ["aria-label"];
var _hoisted_4 = ["aria-current", "aria-selected", "tabindex"];
var _sfc_main62 = defineComponent68({
  __name: "basic-date-table",
  props: basicDateTableProps,
  emits: ["changerange", "pick", "select"],
  setup(__props, { expose, emit }) {
    const props = __props;
    const ns = useNamespace("date-table");
    const { t, lang } = useLocale();
    const tbodyRef = ref62();
    const currentCellRef = ref62();
    const lastRow = ref62();
    const lastColumn = ref62();
    const tableRows = ref62([[], [], [], [], [], []]);
    let focusWithClick = false;
    const firstDayOfWeek = props.date.$locale().weekStart || 7;
    const WEEKS_CONSTANT = props.date.locale("en").localeData().weekdaysShort().map((_2) => _2.toLowerCase());
    const offsetDay = computed78(() => {
      return firstDayOfWeek > 3 ? 7 - firstDayOfWeek : -firstDayOfWeek;
    });
    const startDate = computed78(() => {
      const startDayOfMonth = props.date.startOf("month");
      return startDayOfMonth.subtract(startDayOfMonth.day() || 7, "day");
    });
    const WEEKS = computed78(() => {
      return WEEKS_CONSTANT.concat(WEEKS_CONSTANT).slice(firstDayOfWeek, firstDayOfWeek + 7);
    });
    const hasCurrent = computed78(() => {
      return flatten_default(rows.value).some((row) => {
        return row.isCurrent;
      });
    });
    const days = computed78(() => {
      const startOfMonth = props.date.startOf("month");
      const startOfMonthDay = startOfMonth.day() || 7;
      const dateCountOfMonth = startOfMonth.daysInMonth();
      const dateCountOfLastMonth = startOfMonth.subtract(1, "month").daysInMonth();
      return {
        startOfMonthDay,
        dateCountOfMonth,
        dateCountOfLastMonth
      };
    });
    const selectedDate = computed78(() => {
      return props.selectionMode === "dates" ? castArray2(props.parsedValue) : [];
    });
    const setDateText = (cell, {
      count,
      rowIndex,
      columnIndex
    }) => {
      const { startOfMonthDay, dateCountOfMonth, dateCountOfLastMonth } = unref74(days);
      const offset2 = unref74(offsetDay);
      if (rowIndex >= 0 && rowIndex <= 1) {
        const numberOfDaysFromPreviousMonth = startOfMonthDay + offset2 < 0 ? 7 + startOfMonthDay + offset2 : startOfMonthDay + offset2;
        if (columnIndex + rowIndex * 7 >= numberOfDaysFromPreviousMonth) {
          cell.text = count;
          return true;
        } else {
          cell.text = dateCountOfLastMonth - (numberOfDaysFromPreviousMonth - columnIndex % 7) + 1 + rowIndex * 7;
          cell.type = "prev-month";
        }
      } else {
        if (count <= dateCountOfMonth) {
          cell.text = count;
        } else {
          cell.text = count - dateCountOfMonth;
          cell.type = "next-month";
        }
        return true;
      }
      return false;
    };
    const setCellMetadata = (cell, {
      columnIndex,
      rowIndex
    }, count) => {
      const { disabledDate: disabledDate2, cellClassName } = props;
      const _selectedDate = unref74(selectedDate);
      const shouldIncrement = setDateText(cell, { count, rowIndex, columnIndex });
      const cellDate = cell.dayjs.toDate();
      cell.selected = _selectedDate.find((d2) => d2.valueOf() === cell.dayjs.valueOf());
      cell.isSelected = !!cell.selected;
      cell.isCurrent = isCurrent(cell);
      cell.disabled = disabledDate2 == null ? void 0 : disabledDate2(cellDate);
      cell.customClass = cellClassName == null ? void 0 : cellClassName(cellDate);
      return shouldIncrement;
    };
    const setRowMetadata = (row) => {
      if (props.selectionMode === "week") {
        const [start, end2] = props.showWeekNumber ? [1, 7] : [0, 6];
        const isActive = isWeekActive(row[start + 1]);
        row[start].inRange = isActive;
        row[start].start = isActive;
        row[end2].inRange = isActive;
        row[end2].end = isActive;
      }
    };
    const rows = computed78(() => {
      const { minDate, maxDate, rangeState, showWeekNumber } = props;
      const offset2 = offsetDay.value;
      const rows_ = tableRows.value;
      const dateUnit = "day";
      let count = 1;
      if (showWeekNumber) {
        for (let rowIndex = 0; rowIndex < 6; rowIndex++) {
          if (!rows_[rowIndex][0]) {
            rows_[rowIndex][0] = {
              type: "week",
              text: startDate.value.add(rowIndex * 7 + 1, dateUnit).week()
            };
          }
        }
      }
      buildPickerTable({ row: 6, column: 7 }, rows_, {
        startDate: minDate,
        columnIndexOffset: showWeekNumber ? 1 : 0,
        nextEndDate: rangeState.endDate || maxDate || rangeState.selecting && minDate || null,
        now: (0, import_dayjs8.default)().locale(unref74(lang)).startOf(dateUnit),
        unit: dateUnit,
        relativeDateGetter: (idx) => startDate.value.add(idx - offset2, dateUnit),
        setCellMetadata: (...args) => {
          if (setCellMetadata(...args, count)) {
            count += 1;
          }
        },
        setRowMetadata
      });
      return rows_;
    });
    watch42(() => props.date, async () => {
      var _a2, _b;
      if ((_a2 = tbodyRef.value) == null ? void 0 : _a2.contains(document.activeElement)) {
        await nextTick20();
        (_b = currentCellRef.value) == null ? void 0 : _b.focus();
      }
    });
    const focus = async () => {
      var _a2;
      (_a2 = currentCellRef.value) == null ? void 0 : _a2.focus();
    };
    const isNormalDay = (type4 = "") => {
      return ["normal", "today"].includes(type4);
    };
    const isCurrent = (cell) => {
      return props.selectionMode === "date" && isNormalDay(cell.type) && cellMatchesDate(cell, props.parsedValue);
    };
    const cellMatchesDate = (cell, date5) => {
      if (!date5)
        return false;
      return (0, import_dayjs8.default)(date5).locale(lang.value).isSame(props.date.date(Number(cell.text)), "day");
    };
    const getCellClasses = (cell) => {
      const classes = [];
      if (isNormalDay(cell.type) && !cell.disabled) {
        classes.push("available");
        if (cell.type === "today") {
          classes.push("today");
        }
      } else {
        classes.push(cell.type);
      }
      if (isCurrent(cell)) {
        classes.push("current");
      }
      if (cell.inRange && (isNormalDay(cell.type) || props.selectionMode === "week")) {
        classes.push("in-range");
        if (cell.start) {
          classes.push("start-date");
        }
        if (cell.end) {
          classes.push("end-date");
        }
      }
      if (cell.disabled) {
        classes.push("disabled");
      }
      if (cell.selected) {
        classes.push("selected");
      }
      if (cell.customClass) {
        classes.push(cell.customClass);
      }
      return classes.join(" ");
    };
    const getDateOfCell = (row, column2) => {
      const offsetFromStart = row * 7 + (column2 - (props.showWeekNumber ? 1 : 0)) - offsetDay.value;
      return startDate.value.add(offsetFromStart, "day");
    };
    const handleMouseMove = (event) => {
      var _a2;
      if (!props.rangeState.selecting)
        return;
      let target2 = event.target;
      if (target2.tagName === "SPAN") {
        target2 = (_a2 = target2.parentNode) == null ? void 0 : _a2.parentNode;
      }
      if (target2.tagName === "DIV") {
        target2 = target2.parentNode;
      }
      if (target2.tagName !== "TD")
        return;
      const row = target2.parentNode.rowIndex - 1;
      const column2 = target2.cellIndex;
      if (rows.value[row][column2].disabled)
        return;
      if (row !== lastRow.value || column2 !== lastColumn.value) {
        lastRow.value = row;
        lastColumn.value = column2;
        emit("changerange", {
          selecting: true,
          endDate: getDateOfCell(row, column2)
        });
      }
    };
    const isSelectedCell = (cell) => {
      return !hasCurrent.value && (cell == null ? void 0 : cell.text) === 1 && cell.type === "normal" || cell.isCurrent;
    };
    const handleFocus = (event) => {
      if (focusWithClick || hasCurrent.value || props.selectionMode !== "date")
        return;
      handlePickDate(event, true);
    };
    const handleMouseDown = (event) => {
      const target2 = event.target.closest("td");
      if (!target2)
        return;
      focusWithClick = true;
    };
    const handleMouseUp = (event) => {
      const target2 = event.target.closest("td");
      if (!target2)
        return;
      focusWithClick = false;
    };
    const handlePickDate = (event, isKeyboardMovement = false) => {
      const target2 = event.target.closest("td");
      if (!target2)
        return;
      const row = target2.parentNode.rowIndex - 1;
      const column2 = target2.cellIndex;
      const cell = rows.value[row][column2];
      if (cell.disabled || cell.type === "week")
        return;
      const newDate = getDateOfCell(row, column2);
      if (props.selectionMode === "range") {
        if (!props.rangeState.selecting || !props.minDate) {
          emit("pick", { minDate: newDate, maxDate: null });
          emit("select", true);
        } else {
          if (newDate >= props.minDate) {
            emit("pick", { minDate: props.minDate, maxDate: newDate });
          } else {
            emit("pick", { minDate: newDate, maxDate: props.minDate });
          }
          emit("select", false);
        }
      } else if (props.selectionMode === "date") {
        emit("pick", newDate, isKeyboardMovement);
      } else if (props.selectionMode === "week") {
        const weekNumber = newDate.week();
        const value = `${newDate.year()}w${weekNumber}`;
        emit("pick", {
          year: newDate.year(),
          week: weekNumber,
          value,
          date: newDate.startOf("week")
        });
      } else if (props.selectionMode === "dates") {
        const newValue = cell.selected ? castArray2(props.parsedValue).filter((d2) => (d2 == null ? void 0 : d2.valueOf()) !== newDate.valueOf()) : castArray2(props.parsedValue).concat([newDate]);
        emit("pick", newValue);
      }
    };
    const isWeekActive = (cell) => {
      if (props.selectionMode !== "week")
        return false;
      let newDate = props.date.startOf("day");
      if (cell.type === "prev-month") {
        newDate = newDate.subtract(1, "month");
      }
      if (cell.type === "next-month") {
        newDate = newDate.add(1, "month");
      }
      newDate = newDate.date(Number.parseInt(cell.text, 10));
      if (props.parsedValue && !Array.isArray(props.parsedValue)) {
        const dayOffset = (props.parsedValue.day() - firstDayOfWeek + 7) % 7 - 1;
        const weekDate = props.parsedValue.subtract(dayOffset, "day");
        return weekDate.isSame(newDate, "day");
      }
      return false;
    };
    expose({
      focus
    });
    return (_ctx, _cache) => {
      return openBlock61(), createElementBlock52("table", {
        role: "grid",
        "aria-label": unref74(t)("el.datepicker.dateTablePrompt"),
        cellspacing: "0",
        cellpadding: "0",
        class: normalizeClass53([unref74(ns).b(), { "is-week-mode": _ctx.selectionMode === "week" }]),
        onClick: handlePickDate,
        onMousemove: handleMouseMove,
        onMousedown: withModifiers12(handleMouseDown, ["prevent"]),
        onMouseup: handleMouseUp
      }, [
        createElementVNode30("tbody", {
          ref_key: "tbodyRef",
          ref: tbodyRef
        }, [
          createElementVNode30("tr", null, [
            _ctx.showWeekNumber ? (openBlock61(), createElementBlock52("th", _hoisted_214, toDisplayString24(unref74(t)("el.datepicker.week")), 1)) : createCommentVNode27("v-if", true),
            (openBlock61(true), createElementBlock52(Fragment19, null, renderList10(unref74(WEEKS), (week, key) => {
              return openBlock61(), createElementBlock52("th", {
                key,
                scope: "col",
                "aria-label": unref74(t)("el.datepicker.weeksFull." + week)
              }, toDisplayString24(unref74(t)("el.datepicker.weeks." + week)), 9, _hoisted_36);
            }), 128))
          ]),
          (openBlock61(true), createElementBlock52(Fragment19, null, renderList10(unref74(rows), (row, rowKey2) => {
            return openBlock61(), createElementBlock52("tr", {
              key: rowKey2,
              class: normalizeClass53([unref74(ns).e("row"), { current: isWeekActive(row[1]) }])
            }, [
              (openBlock61(true), createElementBlock52(Fragment19, null, renderList10(row, (cell, columnKey) => {
                return openBlock61(), createElementBlock52("td", {
                  key: `${rowKey2}.${columnKey}`,
                  ref_for: true,
                  ref: (el) => isSelectedCell(cell) && (currentCellRef.value = el),
                  class: normalizeClass53(getCellClasses(cell)),
                  "aria-current": cell.isCurrent ? "date" : void 0,
                  "aria-selected": cell.isCurrent,
                  tabindex: isSelectedCell(cell) ? 0 : -1,
                  onFocus: handleFocus
                }, [
                  createVNode26(unref74(ElDatePickerCell), { cell }, null, 8, ["cell"])
                ], 42, _hoisted_4);
              }), 128))
            ], 2);
          }), 128))
        ], 512)
      ], 42, _hoisted_123);
    };
  }
});
var DateTable2 = _export_sfc(_sfc_main62, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-date-table.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-month-table.mjs
var import_dayjs9 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent69, ref as ref63, computed as computed79, watch as watch43, nextTick as nextTick21, openBlock as openBlock62, createElementBlock as createElementBlock53, unref as unref75, normalizeClass as normalizeClass54, createElementVNode as createElementVNode31, Fragment as Fragment20, renderList as renderList11, withKeys as withKeys5, withModifiers as withModifiers13, toDisplayString as toDisplayString25 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/basic-month-table.mjs
var basicMonthTableProps = buildProps({
  ...datePickerSharedProps,
  selectionMode: selectionModeWithDefault("month")
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-month-table.mjs
var _hoisted_124 = ["aria-label"];
var _hoisted_215 = ["aria-selected", "aria-label", "tabindex", "onKeydown"];
var _hoisted_37 = { class: "cell" };
var _sfc_main63 = defineComponent69({
  __name: "basic-month-table",
  props: basicMonthTableProps,
  emits: ["changerange", "pick", "select"],
  setup(__props, { expose, emit }) {
    const props = __props;
    const datesInMonth = (year, month, lang2) => {
      const firstDay = (0, import_dayjs9.default)().locale(lang2).startOf("month").month(month).year(year);
      const numOfDays = firstDay.daysInMonth();
      return rangeArr(numOfDays).map((n) => firstDay.add(n, "day").toDate());
    };
    const ns = useNamespace("month-table");
    const { t, lang } = useLocale();
    const tbodyRef = ref63();
    const currentCellRef = ref63();
    const months = ref63(props.date.locale("en").localeData().monthsShort().map((_2) => _2.toLowerCase()));
    const tableRows = ref63([
      [],
      [],
      []
    ]);
    const lastRow = ref63();
    const lastColumn = ref63();
    const rows = computed79(() => {
      var _a2, _b;
      const rows2 = tableRows.value;
      const now2 = (0, import_dayjs9.default)().locale(lang.value).startOf("month");
      for (let i = 0; i < 3; i++) {
        const row = rows2[i];
        for (let j = 0; j < 4; j++) {
          const cell = row[j] || (row[j] = {
            row: i,
            column: j,
            type: "normal",
            inRange: false,
            start: false,
            end: false,
            text: -1,
            disabled: false
          });
          cell.type = "normal";
          const index = i * 4 + j;
          const calTime = props.date.startOf("year").month(index);
          const calEndDate = props.rangeState.endDate || props.maxDate || props.rangeState.selecting && props.minDate || null;
          cell.inRange = !!(props.minDate && calTime.isSameOrAfter(props.minDate, "month") && calEndDate && calTime.isSameOrBefore(calEndDate, "month")) || !!(props.minDate && calTime.isSameOrBefore(props.minDate, "month") && calEndDate && calTime.isSameOrAfter(calEndDate, "month"));
          if ((_a2 = props.minDate) == null ? void 0 : _a2.isSameOrAfter(calEndDate)) {
            cell.start = !!(calEndDate && calTime.isSame(calEndDate, "month"));
            cell.end = props.minDate && calTime.isSame(props.minDate, "month");
          } else {
            cell.start = !!(props.minDate && calTime.isSame(props.minDate, "month"));
            cell.end = !!(calEndDate && calTime.isSame(calEndDate, "month"));
          }
          const isToday = now2.isSame(calTime);
          if (isToday) {
            cell.type = "today";
          }
          cell.text = index;
          cell.disabled = ((_b = props.disabledDate) == null ? void 0 : _b.call(props, calTime.toDate())) || false;
        }
      }
      return rows2;
    });
    const focus = () => {
      var _a2;
      (_a2 = currentCellRef.value) == null ? void 0 : _a2.focus();
    };
    const getCellStyle = (cell) => {
      const style = {};
      const year = props.date.year();
      const today = /* @__PURE__ */ new Date();
      const month = cell.text;
      style.disabled = props.disabledDate ? datesInMonth(year, month, lang.value).every(props.disabledDate) : false;
      style.current = castArray2(props.parsedValue).findIndex((date5) => import_dayjs9.default.isDayjs(date5) && date5.year() === year && date5.month() === month) >= 0;
      style.today = today.getFullYear() === year && today.getMonth() === month;
      if (cell.inRange) {
        style["in-range"] = true;
        if (cell.start) {
          style["start-date"] = true;
        }
        if (cell.end) {
          style["end-date"] = true;
        }
      }
      return style;
    };
    const isSelectedCell = (cell) => {
      const year = props.date.year();
      const month = cell.text;
      return castArray2(props.date).findIndex((date5) => date5.year() === year && date5.month() === month) >= 0;
    };
    const handleMouseMove = (event) => {
      var _a2;
      if (!props.rangeState.selecting)
        return;
      let target2 = event.target;
      if (target2.tagName === "A") {
        target2 = (_a2 = target2.parentNode) == null ? void 0 : _a2.parentNode;
      }
      if (target2.tagName === "DIV") {
        target2 = target2.parentNode;
      }
      if (target2.tagName !== "TD")
        return;
      const row = target2.parentNode.rowIndex;
      const column2 = target2.cellIndex;
      if (rows.value[row][column2].disabled)
        return;
      if (row !== lastRow.value || column2 !== lastColumn.value) {
        lastRow.value = row;
        lastColumn.value = column2;
        emit("changerange", {
          selecting: true,
          endDate: props.date.startOf("year").month(row * 4 + column2)
        });
      }
    };
    const handleMonthTableClick = (event) => {
      var _a2;
      const target2 = (_a2 = event.target) == null ? void 0 : _a2.closest("td");
      if ((target2 == null ? void 0 : target2.tagName) !== "TD")
        return;
      if (hasClass(target2, "disabled"))
        return;
      const column2 = target2.cellIndex;
      const row = target2.parentNode.rowIndex;
      const month = row * 4 + column2;
      const newDate = props.date.startOf("year").month(month);
      if (props.selectionMode === "range") {
        if (!props.rangeState.selecting) {
          emit("pick", { minDate: newDate, maxDate: null });
          emit("select", true);
        } else {
          if (props.minDate && newDate >= props.minDate) {
            emit("pick", { minDate: props.minDate, maxDate: newDate });
          } else {
            emit("pick", { minDate: newDate, maxDate: props.minDate });
          }
          emit("select", false);
        }
      } else {
        emit("pick", month);
      }
    };
    watch43(() => props.date, async () => {
      var _a2, _b;
      if ((_a2 = tbodyRef.value) == null ? void 0 : _a2.contains(document.activeElement)) {
        await nextTick21();
        (_b = currentCellRef.value) == null ? void 0 : _b.focus();
      }
    });
    expose({
      focus
    });
    return (_ctx, _cache) => {
      return openBlock62(), createElementBlock53("table", {
        role: "grid",
        "aria-label": unref75(t)("el.datepicker.monthTablePrompt"),
        class: normalizeClass54(unref75(ns).b()),
        onClick: handleMonthTableClick,
        onMousemove: handleMouseMove
      }, [
        createElementVNode31("tbody", {
          ref_key: "tbodyRef",
          ref: tbodyRef
        }, [
          (openBlock62(true), createElementBlock53(Fragment20, null, renderList11(unref75(rows), (row, key) => {
            return openBlock62(), createElementBlock53("tr", { key }, [
              (openBlock62(true), createElementBlock53(Fragment20, null, renderList11(row, (cell, key_) => {
                return openBlock62(), createElementBlock53("td", {
                  key: key_,
                  ref_for: true,
                  ref: (el) => isSelectedCell(cell) && (currentCellRef.value = el),
                  class: normalizeClass54(getCellStyle(cell)),
                  "aria-selected": `${isSelectedCell(cell)}`,
                  "aria-label": unref75(t)(`el.datepicker.month${+cell.text + 1}`),
                  tabindex: isSelectedCell(cell) ? 0 : -1,
                  onKeydown: [
                    withKeys5(withModifiers13(handleMonthTableClick, ["prevent", "stop"]), ["space"]),
                    withKeys5(withModifiers13(handleMonthTableClick, ["prevent", "stop"]), ["enter"])
                  ]
                }, [
                  createElementVNode31("div", null, [
                    createElementVNode31("span", _hoisted_37, toDisplayString25(unref75(t)("el.datepicker.months." + months.value[cell.text])), 1)
                  ])
                ], 42, _hoisted_215);
              }), 128))
            ]);
          }), 128))
        ], 512)
      ], 42, _hoisted_124);
    };
  }
});
var MonthTable = _export_sfc(_sfc_main63, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-month-table.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-year-table.mjs
var import_dayjs10 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent70, ref as ref64, computed as computed80, watch as watch44, nextTick as nextTick22, openBlock as openBlock63, createElementBlock as createElementBlock54, unref as unref76, normalizeClass as normalizeClass55, createElementVNode as createElementVNode32, Fragment as Fragment21, renderList as renderList12, withKeys as withKeys6, withModifiers as withModifiers14, toDisplayString as toDisplayString26 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/basic-year-table.mjs
var { date: date4, disabledDate, parsedValue } = datePickerSharedProps;
var basicYearTableProps = buildProps({
  date: date4,
  disabledDate,
  parsedValue
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-year-table.mjs
var _hoisted_125 = ["aria-label"];
var _hoisted_216 = ["aria-selected", "tabindex", "onKeydown"];
var _hoisted_38 = { class: "cell" };
var _hoisted_42 = { key: 1 };
var _sfc_main64 = defineComponent70({
  __name: "basic-year-table",
  props: basicYearTableProps,
  emits: ["pick"],
  setup(__props, { expose, emit }) {
    const props = __props;
    const datesInYear = (year, lang2) => {
      const firstDay = (0, import_dayjs10.default)(String(year)).locale(lang2).startOf("year");
      const lastDay = firstDay.endOf("year");
      const numOfDays = lastDay.dayOfYear();
      return rangeArr(numOfDays).map((n) => firstDay.add(n, "day").toDate());
    };
    const ns = useNamespace("year-table");
    const { t, lang } = useLocale();
    const tbodyRef = ref64();
    const currentCellRef = ref64();
    const startYear = computed80(() => {
      return Math.floor(props.date.year() / 10) * 10;
    });
    const focus = () => {
      var _a2;
      (_a2 = currentCellRef.value) == null ? void 0 : _a2.focus();
    };
    const getCellKls = (year) => {
      const kls = {};
      const today = (0, import_dayjs10.default)().locale(lang.value);
      kls.disabled = props.disabledDate ? datesInYear(year, lang.value).every(props.disabledDate) : false;
      kls.current = castArray2(props.parsedValue).findIndex((d2) => d2.year() === year) >= 0;
      kls.today = today.year() === year;
      return kls;
    };
    const isSelectedCell = (year) => {
      return year === startYear.value && props.date.year() < startYear.value && props.date.year() > startYear.value + 9 || castArray2(props.date).findIndex((date5) => date5.year() === year) >= 0;
    };
    const handleYearTableClick = (event) => {
      const clickTarget = event.target;
      const target2 = clickTarget.closest("td");
      if (target2 && target2.textContent) {
        if (hasClass(target2, "disabled"))
          return;
        const year = target2.textContent || target2.innerText;
        emit("pick", Number(year));
      }
    };
    watch44(() => props.date, async () => {
      var _a2, _b;
      if ((_a2 = tbodyRef.value) == null ? void 0 : _a2.contains(document.activeElement)) {
        await nextTick22();
        (_b = currentCellRef.value) == null ? void 0 : _b.focus();
      }
    });
    expose({
      focus
    });
    return (_ctx, _cache) => {
      return openBlock63(), createElementBlock54("table", {
        role: "grid",
        "aria-label": unref76(t)("el.datepicker.yearTablePrompt"),
        class: normalizeClass55(unref76(ns).b()),
        onClick: handleYearTableClick
      }, [
        createElementVNode32("tbody", {
          ref_key: "tbodyRef",
          ref: tbodyRef
        }, [
          (openBlock63(), createElementBlock54(Fragment21, null, renderList12(3, (_2, i) => {
            return createElementVNode32("tr", { key: i }, [
              (openBlock63(), createElementBlock54(Fragment21, null, renderList12(4, (__, j) => {
                return openBlock63(), createElementBlock54(Fragment21, {
                  key: i + "_" + j
                }, [
                  i * 4 + j < 10 ? (openBlock63(), createElementBlock54("td", {
                    key: 0,
                    ref_for: true,
                    ref: (el) => isSelectedCell(unref76(startYear) + i * 4 + j) && (currentCellRef.value = el),
                    class: normalizeClass55(["available", getCellKls(unref76(startYear) + i * 4 + j)]),
                    "aria-selected": `${isSelectedCell(unref76(startYear) + i * 4 + j)}`,
                    tabindex: isSelectedCell(unref76(startYear) + i * 4 + j) ? 0 : -1,
                    onKeydown: [
                      withKeys6(withModifiers14(handleYearTableClick, ["prevent", "stop"]), ["space"]),
                      withKeys6(withModifiers14(handleYearTableClick, ["prevent", "stop"]), ["enter"])
                    ]
                  }, [
                    createElementVNode32("span", _hoisted_38, toDisplayString26(unref76(startYear) + i * 4 + j), 1)
                  ], 42, _hoisted_216)) : (openBlock63(), createElementBlock54("td", _hoisted_42))
                ], 64);
              }), 64))
            ]);
          }), 64))
        ], 512)
      ], 10, _hoisted_125);
    };
  }
});
var YearTable = _export_sfc(_sfc_main64, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-year-table.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/panel-date-pick.mjs
import { isArray as isArray20, isFunction as isFunction12 } from "@vue/shared";
var _hoisted_126 = ["onClick"];
var _hoisted_217 = ["aria-label"];
var _hoisted_39 = ["aria-label"];
var _hoisted_43 = ["aria-label"];
var _hoisted_5 = ["aria-label"];
var _sfc_main65 = defineComponent71({
  __name: "panel-date-pick",
  props: panelDatePickProps,
  emits: ["pick", "set-picker-option", "panel-change"],
  setup(__props, { emit: contextEmit }) {
    const props = __props;
    const timeWithinRange = (_2, __, ___) => true;
    const ppNs = useNamespace("picker-panel");
    const dpNs = useNamespace("date-picker");
    const attrs = useAttrs5();
    const slots = useSlots9();
    const { t, lang } = useLocale();
    const pickerBase = inject39("EP_PICKER_BASE");
    const popper = inject39(TOOLTIP_INJECTION_KEY);
    const { shortcuts, disabledDate: disabledDate2, cellClassName, defaultTime, arrowControl } = pickerBase.props;
    const defaultValue = toRef8(pickerBase.props, "defaultValue");
    const currentViewRef = ref65();
    const innerDate = ref65((0, import_dayjs11.default)().locale(lang.value));
    const isChangeToNow = ref65(false);
    const defaultTimeD = computed81(() => {
      return (0, import_dayjs11.default)(defaultTime).locale(lang.value);
    });
    const month = computed81(() => {
      return innerDate.value.month();
    });
    const year = computed81(() => {
      return innerDate.value.year();
    });
    const selectableRange = ref65([]);
    const userInputDate = ref65(null);
    const userInputTime = ref65(null);
    const checkDateWithinRange = (date5) => {
      return selectableRange.value.length > 0 ? timeWithinRange(date5, selectableRange.value, props.format || "HH:mm:ss") : true;
    };
    const formatEmit = (emitDayjs) => {
      if (defaultTime && !visibleTime.value && !isChangeToNow.value) {
        return defaultTimeD.value.year(emitDayjs.year()).month(emitDayjs.month()).date(emitDayjs.date());
      }
      if (showTime.value)
        return emitDayjs.millisecond(0);
      return emitDayjs.startOf("day");
    };
    const emit = (value, ...args) => {
      if (!value) {
        contextEmit("pick", value, ...args);
      } else if (isArray20(value)) {
        const dates = value.map(formatEmit);
        contextEmit("pick", dates, ...args);
      } else {
        contextEmit("pick", formatEmit(value), ...args);
      }
      userInputDate.value = null;
      userInputTime.value = null;
      isChangeToNow.value = false;
    };
    const handleDatePick = (value, keepOpen) => {
      if (selectionMode.value === "date") {
        value = value;
        let newDate = props.parsedValue ? props.parsedValue.year(value.year()).month(value.month()).date(value.date()) : value;
        if (!checkDateWithinRange(newDate)) {
          newDate = selectableRange.value[0][0].year(value.year()).month(value.month()).date(value.date());
        }
        innerDate.value = newDate;
        emit(newDate, showTime.value || keepOpen);
      } else if (selectionMode.value === "week") {
        emit(value.date);
      } else if (selectionMode.value === "dates") {
        emit(value, true);
      }
    };
    const moveByMonth = (forward) => {
      const action = forward ? "add" : "subtract";
      innerDate.value = innerDate.value[action](1, "month");
      handlePanelChange("month");
    };
    const moveByYear = (forward) => {
      const currentDate = innerDate.value;
      const action = forward ? "add" : "subtract";
      innerDate.value = currentView.value === "year" ? currentDate[action](10, "year") : currentDate[action](1, "year");
      handlePanelChange("year");
    };
    const currentView = ref65("date");
    const yearLabel = computed81(() => {
      const yearTranslation = t("el.datepicker.year");
      if (currentView.value === "year") {
        const startYear = Math.floor(year.value / 10) * 10;
        if (yearTranslation) {
          return `${startYear} ${yearTranslation} - ${startYear + 9} ${yearTranslation}`;
        }
        return `${startYear} - ${startYear + 9}`;
      }
      return `${year.value} ${yearTranslation}`;
    });
    const handleShortcutClick = (shortcut) => {
      const shortcutValue = isFunction12(shortcut.value) ? shortcut.value() : shortcut.value;
      if (shortcutValue) {
        emit((0, import_dayjs11.default)(shortcutValue).locale(lang.value));
        return;
      }
      if (shortcut.onClick) {
        shortcut.onClick({
          attrs,
          slots,
          emit: contextEmit
        });
      }
    };
    const selectionMode = computed81(() => {
      const { type: type4 } = props;
      if (["week", "month", "year", "dates"].includes(type4))
        return type4;
      return "date";
    });
    const keyboardMode = computed81(() => {
      return selectionMode.value === "date" ? currentView.value : selectionMode.value;
    });
    const hasShortcuts = computed81(() => !!shortcuts.length);
    const handleMonthPick = async (month2) => {
      innerDate.value = innerDate.value.startOf("month").month(month2);
      if (selectionMode.value === "month") {
        emit(innerDate.value, false);
      } else {
        currentView.value = "date";
        if (["month", "year", "date", "week"].includes(selectionMode.value)) {
          emit(innerDate.value, true);
          await nextTick23();
          handleFocusPicker();
        }
      }
      handlePanelChange("month");
    };
    const handleYearPick = async (year2) => {
      if (selectionMode.value === "year") {
        innerDate.value = innerDate.value.startOf("year").year(year2);
        emit(innerDate.value, false);
      } else {
        innerDate.value = innerDate.value.year(year2);
        currentView.value = "month";
        if (["month", "year", "date", "week"].includes(selectionMode.value)) {
          emit(innerDate.value, true);
          await nextTick23();
          handleFocusPicker();
        }
      }
      handlePanelChange("year");
    };
    const showPicker = async (view) => {
      currentView.value = view;
      await nextTick23();
      handleFocusPicker();
    };
    const showTime = computed81(() => props.type === "datetime" || props.type === "datetimerange");
    const footerVisible = computed81(() => {
      return showTime.value || selectionMode.value === "dates";
    });
    const onConfirm = () => {
      if (selectionMode.value === "dates") {
        emit(props.parsedValue);
      } else {
        let result2 = props.parsedValue;
        if (!result2) {
          const defaultTimeD2 = (0, import_dayjs11.default)(defaultTime).locale(lang.value);
          const defaultValueD = getDefaultValue2();
          result2 = defaultTimeD2.year(defaultValueD.year()).month(defaultValueD.month()).date(defaultValueD.date());
        }
        innerDate.value = result2;
        emit(result2);
      }
    };
    const changeToNow = () => {
      const now2 = (0, import_dayjs11.default)().locale(lang.value);
      const nowDate = now2.toDate();
      isChangeToNow.value = true;
      if ((!disabledDate2 || !disabledDate2(nowDate)) && checkDateWithinRange(nowDate)) {
        innerDate.value = (0, import_dayjs11.default)().locale(lang.value);
        emit(innerDate.value);
      }
    };
    const timeFormat = computed81(() => {
      return extractTimeFormat(props.format);
    });
    const dateFormat = computed81(() => {
      return extractDateFormat(props.format);
    });
    const visibleTime = computed81(() => {
      if (userInputTime.value)
        return userInputTime.value;
      if (!props.parsedValue && !defaultValue.value)
        return;
      return (props.parsedValue || innerDate.value).format(timeFormat.value);
    });
    const visibleDate = computed81(() => {
      if (userInputDate.value)
        return userInputDate.value;
      if (!props.parsedValue && !defaultValue.value)
        return;
      return (props.parsedValue || innerDate.value).format(dateFormat.value);
    });
    const timePickerVisible = ref65(false);
    const onTimePickerInputFocus = () => {
      timePickerVisible.value = true;
    };
    const handleTimePickClose = () => {
      timePickerVisible.value = false;
    };
    const getUnits = (date5) => {
      return {
        hour: date5.hour(),
        minute: date5.minute(),
        second: date5.second(),
        year: date5.year(),
        month: date5.month(),
        date: date5.date()
      };
    };
    const handleTimePick = (value, visible, first) => {
      const { hour, minute, second } = getUnits(value);
      const newDate = props.parsedValue ? props.parsedValue.hour(hour).minute(minute).second(second) : value;
      innerDate.value = newDate;
      emit(innerDate.value, true);
      if (!first) {
        timePickerVisible.value = visible;
      }
    };
    const handleVisibleTimeChange = (value) => {
      const newDate = (0, import_dayjs11.default)(value, timeFormat.value).locale(lang.value);
      if (newDate.isValid() && checkDateWithinRange(newDate)) {
        const { year: year2, month: month2, date: date5 } = getUnits(innerDate.value);
        innerDate.value = newDate.year(year2).month(month2).date(date5);
        userInputTime.value = null;
        timePickerVisible.value = false;
        emit(innerDate.value, true);
      }
    };
    const handleVisibleDateChange = (value) => {
      const newDate = (0, import_dayjs11.default)(value, dateFormat.value).locale(lang.value);
      if (newDate.isValid()) {
        if (disabledDate2 && disabledDate2(newDate.toDate())) {
          return;
        }
        const { hour, minute, second } = getUnits(innerDate.value);
        innerDate.value = newDate.hour(hour).minute(minute).second(second);
        userInputDate.value = null;
        emit(innerDate.value, true);
      }
    };
    const isValidValue3 = (date5) => {
      return import_dayjs11.default.isDayjs(date5) && date5.isValid() && (disabledDate2 ? !disabledDate2(date5.toDate()) : true);
    };
    const formatToString = (value) => {
      if (selectionMode.value === "dates") {
        return value.map((_2) => _2.format(props.format));
      }
      return value.format(props.format);
    };
    const parseUserInput = (value) => {
      return (0, import_dayjs11.default)(value, props.format).locale(lang.value);
    };
    const getDefaultValue2 = () => {
      const parseDate2 = (0, import_dayjs11.default)(defaultValue.value).locale(lang.value);
      if (!defaultValue.value) {
        const defaultTimeDValue = defaultTimeD.value;
        return (0, import_dayjs11.default)().hour(defaultTimeDValue.hour()).minute(defaultTimeDValue.minute()).second(defaultTimeDValue.second()).locale(lang.value);
      }
      return parseDate2;
    };
    const handleFocusPicker = async () => {
      var _a2;
      if (["week", "month", "year", "date"].includes(selectionMode.value)) {
        (_a2 = currentViewRef.value) == null ? void 0 : _a2.focus();
        if (selectionMode.value === "week") {
          handleKeyControl(EVENT_CODE.down);
        }
      }
    };
    const handleKeydownTable = (event) => {
      const { code } = event;
      const validCode = [
        EVENT_CODE.up,
        EVENT_CODE.down,
        EVENT_CODE.left,
        EVENT_CODE.right,
        EVENT_CODE.home,
        EVENT_CODE.end,
        EVENT_CODE.pageUp,
        EVENT_CODE.pageDown
      ];
      if (validCode.includes(code)) {
        handleKeyControl(code);
        event.stopPropagation();
        event.preventDefault();
      }
      if ([EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.numpadEnter].includes(code) && userInputDate.value === null && userInputTime.value === null) {
        event.preventDefault();
        emit(innerDate.value, false);
      }
    };
    const handleKeyControl = (code) => {
      var _a2;
      const { up: up2, down: down2, left: left2, right: right2, home: home2, end: end2, pageUp: pageUp2, pageDown: pageDown2 } = EVENT_CODE;
      const mapping = {
        year: {
          [up2]: -4,
          [down2]: 4,
          [left2]: -1,
          [right2]: 1,
          offset: (date5, step) => date5.setFullYear(date5.getFullYear() + step)
        },
        month: {
          [up2]: -4,
          [down2]: 4,
          [left2]: -1,
          [right2]: 1,
          offset: (date5, step) => date5.setMonth(date5.getMonth() + step)
        },
        week: {
          [up2]: -1,
          [down2]: 1,
          [left2]: -1,
          [right2]: 1,
          offset: (date5, step) => date5.setDate(date5.getDate() + step * 7)
        },
        date: {
          [up2]: -7,
          [down2]: 7,
          [left2]: -1,
          [right2]: 1,
          [home2]: (date5) => -date5.getDay(),
          [end2]: (date5) => -date5.getDay() + 6,
          [pageUp2]: (date5) => -new Date(date5.getFullYear(), date5.getMonth(), 0).getDate(),
          [pageDown2]: (date5) => new Date(date5.getFullYear(), date5.getMonth() + 1, 0).getDate(),
          offset: (date5, step) => date5.setDate(date5.getDate() + step)
        }
      };
      const newDate = innerDate.value.toDate();
      while (Math.abs(innerDate.value.diff(newDate, "year", true)) < 1) {
        const map2 = mapping[keyboardMode.value];
        if (!map2)
          return;
        map2.offset(newDate, isFunction12(map2[code]) ? map2[code](newDate) : (_a2 = map2[code]) != null ? _a2 : 0);
        if (disabledDate2 && disabledDate2(newDate)) {
          break;
        }
        const result2 = (0, import_dayjs11.default)(newDate).locale(lang.value);
        innerDate.value = result2;
        contextEmit("pick", result2, true);
        break;
      }
    };
    const handlePanelChange = (mode) => {
      contextEmit("panel-change", innerDate.value.toDate(), mode, currentView.value);
    };
    watch45(() => selectionMode.value, (val) => {
      if (["month", "year"].includes(val)) {
        currentView.value = val;
        return;
      }
      currentView.value = "date";
    }, { immediate: true });
    watch45(() => currentView.value, () => {
      popper == null ? void 0 : popper.updatePopper();
    });
    watch45(() => defaultValue.value, (val) => {
      if (val) {
        innerDate.value = getDefaultValue2();
      }
    }, { immediate: true });
    watch45(() => props.parsedValue, (val) => {
      if (val) {
        if (selectionMode.value === "dates")
          return;
        if (Array.isArray(val))
          return;
        innerDate.value = val;
      } else {
        innerDate.value = getDefaultValue2();
      }
    }, { immediate: true });
    contextEmit("set-picker-option", ["isValidValue", isValidValue3]);
    contextEmit("set-picker-option", ["formatToString", formatToString]);
    contextEmit("set-picker-option", ["parseUserInput", parseUserInput]);
    contextEmit("set-picker-option", ["handleFocusPicker", handleFocusPicker]);
    return (_ctx, _cache) => {
      return openBlock64(), createElementBlock55("div", {
        class: normalizeClass56([
          unref77(ppNs).b(),
          unref77(dpNs).b(),
          {
            "has-sidebar": _ctx.$slots.sidebar || unref77(hasShortcuts),
            "has-time": unref77(showTime)
          }
        ])
      }, [
        createElementVNode33("div", {
          class: normalizeClass56(unref77(ppNs).e("body-wrapper"))
        }, [
          renderSlot49(_ctx.$slots, "sidebar", {
            class: normalizeClass56(unref77(ppNs).e("sidebar"))
          }),
          unref77(hasShortcuts) ? (openBlock64(), createElementBlock55("div", {
            key: 0,
            class: normalizeClass56(unref77(ppNs).e("sidebar"))
          }, [
            (openBlock64(true), createElementBlock55(Fragment22, null, renderList13(unref77(shortcuts), (shortcut, key) => {
              return openBlock64(), createElementBlock55("button", {
                key,
                type: "button",
                class: normalizeClass56(unref77(ppNs).e("shortcut")),
                onClick: ($event) => handleShortcutClick(shortcut)
              }, toDisplayString27(shortcut.text), 11, _hoisted_126);
            }), 128))
          ], 2)) : createCommentVNode28("v-if", true),
          createElementVNode33("div", {
            class: normalizeClass56(unref77(ppNs).e("body"))
          }, [
            unref77(showTime) ? (openBlock64(), createElementBlock55("div", {
              key: 0,
              class: normalizeClass56(unref77(dpNs).e("time-header"))
            }, [
              createElementVNode33("span", {
                class: normalizeClass56(unref77(dpNs).e("editor-wrap"))
              }, [
                createVNode27(unref77(ElInput), {
                  placeholder: unref77(t)("el.datepicker.selectDate"),
                  "model-value": unref77(visibleDate),
                  size: "small",
                  "validate-event": false,
                  onInput: _cache[0] || (_cache[0] = (val) => userInputDate.value = val),
                  onChange: handleVisibleDateChange
                }, null, 8, ["placeholder", "model-value"])
              ], 2),
              withDirectives17((openBlock64(), createElementBlock55("span", {
                class: normalizeClass56(unref77(dpNs).e("editor-wrap"))
              }, [
                createVNode27(unref77(ElInput), {
                  placeholder: unref77(t)("el.datepicker.selectTime"),
                  "model-value": unref77(visibleTime),
                  size: "small",
                  "validate-event": false,
                  onFocus: onTimePickerInputFocus,
                  onInput: _cache[1] || (_cache[1] = (val) => userInputTime.value = val),
                  onChange: handleVisibleTimeChange
                }, null, 8, ["placeholder", "model-value"]),
                createVNode27(unref77(TimePickPanel), {
                  visible: timePickerVisible.value,
                  format: unref77(timeFormat),
                  "time-arrow-control": unref77(arrowControl),
                  "parsed-value": innerDate.value,
                  onPick: handleTimePick
                }, null, 8, ["visible", "format", "time-arrow-control", "parsed-value"])
              ], 2)), [
                [unref77(ClickOutside), handleTimePickClose]
              ])
            ], 2)) : createCommentVNode28("v-if", true),
            withDirectives17(createElementVNode33("div", {
              class: normalizeClass56([
                unref77(dpNs).e("header"),
                (currentView.value === "year" || currentView.value === "month") && unref77(dpNs).e("header--bordered")
              ])
            }, [
              createElementVNode33("span", {
                class: normalizeClass56(unref77(dpNs).e("prev-btn"))
              }, [
                createElementVNode33("button", {
                  type: "button",
                  "aria-label": unref77(t)(`el.datepicker.prevYear`),
                  class: normalizeClass56(["d-arrow-left", unref77(ppNs).e("icon-btn")]),
                  onClick: _cache[2] || (_cache[2] = ($event) => moveByYear(false))
                }, [
                  createVNode27(unref77(ElIcon), null, {
                    default: withCtx33(() => [
                      createVNode27(unref77(d_arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_217),
                withDirectives17(createElementVNode33("button", {
                  type: "button",
                  "aria-label": unref77(t)(`el.datepicker.prevMonth`),
                  class: normalizeClass56([unref77(ppNs).e("icon-btn"), "arrow-left"]),
                  onClick: _cache[3] || (_cache[3] = ($event) => moveByMonth(false))
                }, [
                  createVNode27(unref77(ElIcon), null, {
                    default: withCtx33(() => [
                      createVNode27(unref77(arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_39), [
                  [vShow11, currentView.value === "date"]
                ])
              ], 2),
              createElementVNode33("span", {
                role: "button",
                class: normalizeClass56(unref77(dpNs).e("header-label")),
                "aria-live": "polite",
                tabindex: "0",
                onKeydown: _cache[4] || (_cache[4] = withKeys7(($event) => showPicker("year"), ["enter"])),
                onClick: _cache[5] || (_cache[5] = ($event) => showPicker("year"))
              }, toDisplayString27(unref77(yearLabel)), 35),
              withDirectives17(createElementVNode33("span", {
                role: "button",
                "aria-live": "polite",
                tabindex: "0",
                class: normalizeClass56([
                  unref77(dpNs).e("header-label"),
                  { active: currentView.value === "month" }
                ]),
                onKeydown: _cache[6] || (_cache[6] = withKeys7(($event) => showPicker("month"), ["enter"])),
                onClick: _cache[7] || (_cache[7] = ($event) => showPicker("month"))
              }, toDisplayString27(unref77(t)(`el.datepicker.month${unref77(month) + 1}`)), 35), [
                [vShow11, currentView.value === "date"]
              ]),
              createElementVNode33("span", {
                class: normalizeClass56(unref77(dpNs).e("next-btn"))
              }, [
                withDirectives17(createElementVNode33("button", {
                  type: "button",
                  "aria-label": unref77(t)(`el.datepicker.nextMonth`),
                  class: normalizeClass56([unref77(ppNs).e("icon-btn"), "arrow-right"]),
                  onClick: _cache[8] || (_cache[8] = ($event) => moveByMonth(true))
                }, [
                  createVNode27(unref77(ElIcon), null, {
                    default: withCtx33(() => [
                      createVNode27(unref77(arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_43), [
                  [vShow11, currentView.value === "date"]
                ]),
                createElementVNode33("button", {
                  type: "button",
                  "aria-label": unref77(t)(`el.datepicker.nextYear`),
                  class: normalizeClass56([unref77(ppNs).e("icon-btn"), "d-arrow-right"]),
                  onClick: _cache[9] || (_cache[9] = ($event) => moveByYear(true))
                }, [
                  createVNode27(unref77(ElIcon), null, {
                    default: withCtx33(() => [
                      createVNode27(unref77(d_arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_5)
              ], 2)
            ], 2), [
              [vShow11, currentView.value !== "time"]
            ]),
            createElementVNode33("div", {
              class: normalizeClass56(unref77(ppNs).e("content")),
              onKeydown: handleKeydownTable
            }, [
              currentView.value === "date" ? (openBlock64(), createBlock32(DateTable2, {
                key: 0,
                ref_key: "currentViewRef",
                ref: currentViewRef,
                "selection-mode": unref77(selectionMode),
                date: innerDate.value,
                "parsed-value": _ctx.parsedValue,
                "disabled-date": unref77(disabledDate2),
                "cell-class-name": unref77(cellClassName),
                onPick: handleDatePick
              }, null, 8, ["selection-mode", "date", "parsed-value", "disabled-date", "cell-class-name"])) : createCommentVNode28("v-if", true),
              currentView.value === "year" ? (openBlock64(), createBlock32(YearTable, {
                key: 1,
                ref_key: "currentViewRef",
                ref: currentViewRef,
                date: innerDate.value,
                "disabled-date": unref77(disabledDate2),
                "parsed-value": _ctx.parsedValue,
                onPick: handleYearPick
              }, null, 8, ["date", "disabled-date", "parsed-value"])) : createCommentVNode28("v-if", true),
              currentView.value === "month" ? (openBlock64(), createBlock32(MonthTable, {
                key: 2,
                ref_key: "currentViewRef",
                ref: currentViewRef,
                date: innerDate.value,
                "parsed-value": _ctx.parsedValue,
                "disabled-date": unref77(disabledDate2),
                onPick: handleMonthPick
              }, null, 8, ["date", "parsed-value", "disabled-date"])) : createCommentVNode28("v-if", true)
            ], 34)
          ], 2)
        ], 2),
        withDirectives17(createElementVNode33("div", {
          class: normalizeClass56(unref77(ppNs).e("footer"))
        }, [
          withDirectives17(createVNode27(unref77(ElButton), {
            text: "",
            size: "small",
            class: normalizeClass56(unref77(ppNs).e("link-btn")),
            onClick: changeToNow
          }, {
            default: withCtx33(() => [
              createTextVNode14(toDisplayString27(unref77(t)("el.datepicker.now")), 1)
            ]),
            _: 1
          }, 8, ["class"]), [
            [vShow11, unref77(selectionMode) !== "dates"]
          ]),
          createVNode27(unref77(ElButton), {
            plain: "",
            size: "small",
            class: normalizeClass56(unref77(ppNs).e("link-btn")),
            onClick: onConfirm
          }, {
            default: withCtx33(() => [
              createTextVNode14(toDisplayString27(unref77(t)("el.datepicker.confirm")), 1)
            ]),
            _: 1
          }, 8, ["class"])
        ], 2), [
          [vShow11, unref77(footerVisible) && currentView.value === "date"]
        ])
      ], 2);
    };
  }
});
var DatePickPanel = _export_sfc(_sfc_main65, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-date-pick.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/panel-date-range.mjs
var import_dayjs13 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent72, inject as inject41, toRef as toRef9, ref as ref67, computed as computed82, unref as unref79, openBlock as openBlock65, createElementBlock as createElementBlock56, normalizeClass as normalizeClass57, createElementVNode as createElementVNode34, renderSlot as renderSlot50, Fragment as Fragment23, renderList as renderList14, toDisplayString as toDisplayString28, createCommentVNode as createCommentVNode29, createVNode as createVNode28, withDirectives as withDirectives18, withCtx as withCtx34, createBlock as createBlock33, createTextVNode as createTextVNode15 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/panel-date-range.mjs
var panelDateRangeProps = buildProps({
  ...panelSharedProps,
  ...panelRangeSharedProps
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/composables/use-range-picker.mjs
import { getCurrentInstance as getCurrentInstance19, inject as inject40, ref as ref66, unref as unref78, watch as watch46 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/composables/use-shortcut.mjs
var import_dayjs12 = __toESM(require_dayjs_min(), 1);
import { getCurrentInstance as getCurrentInstance18, useAttrs as useAttrs6, useSlots as useSlots10 } from "vue";
import { isFunction as isFunction13 } from "@vue/shared";
var useShortcut = (lang) => {
  const { emit } = getCurrentInstance18();
  const attrs = useAttrs6();
  const slots = useSlots10();
  const handleShortcutClick = (shortcut) => {
    const shortcutValues = isFunction13(shortcut.value) ? shortcut.value() : shortcut.value;
    if (shortcutValues) {
      emit("pick", [
        (0, import_dayjs12.default)(shortcutValues[0]).locale(lang.value),
        (0, import_dayjs12.default)(shortcutValues[1]).locale(lang.value)
      ]);
      return;
    }
    if (shortcut.onClick) {
      shortcut.onClick({
        attrs,
        slots,
        emit
      });
    }
  };
  return handleShortcutClick;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/composables/use-range-picker.mjs
import { isArray as isArray21 } from "@vue/shared";
var useRangePicker = (props, {
  defaultValue,
  leftDate,
  rightDate,
  unit: unit3,
  onParsedValueChanged
}) => {
  const { emit } = getCurrentInstance19();
  const { pickerNs } = inject40(ROOT_PICKER_INJECTION_KEY);
  const drpNs = useNamespace("date-range-picker");
  const { t, lang } = useLocale();
  const handleShortcutClick = useShortcut(lang);
  const minDate = ref66();
  const maxDate = ref66();
  const rangeState = ref66({
    endDate: null,
    selecting: false
  });
  const handleChangeRange = (val) => {
    rangeState.value = val;
  };
  const handleRangeConfirm = (visible = false) => {
    const _minDate = unref78(minDate);
    const _maxDate = unref78(maxDate);
    if (isValidRange2([_minDate, _maxDate])) {
      emit("pick", [_minDate, _maxDate], visible);
    }
  };
  const onSelect = (selecting) => {
    rangeState.value.selecting = selecting;
    if (!selecting) {
      rangeState.value.endDate = null;
    }
  };
  const restoreDefault = () => {
    const [start, end2] = getDefaultValue(unref78(defaultValue), {
      lang: unref78(lang),
      unit: unit3,
      unlinkPanels: props.unlinkPanels
    });
    minDate.value = void 0;
    maxDate.value = void 0;
    leftDate.value = start;
    rightDate.value = end2;
  };
  watch46(defaultValue, (val) => {
    if (val) {
      restoreDefault();
    }
  }, { immediate: true });
  watch46(() => props.parsedValue, (parsedValue2) => {
    if (isArray21(parsedValue2) && parsedValue2.length === 2) {
      const [start, end2] = parsedValue2;
      minDate.value = start;
      leftDate.value = start;
      maxDate.value = end2;
      onParsedValueChanged(unref78(minDate), unref78(maxDate));
    } else {
      restoreDefault();
    }
  }, { immediate: true });
  return {
    minDate,
    maxDate,
    rangeState,
    lang,
    ppNs: pickerNs,
    drpNs,
    handleChangeRange,
    handleRangeConfirm,
    handleShortcutClick,
    onSelect,
    t
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/panel-date-range.mjs
import { isArray as isArray22 } from "@vue/shared";
var _hoisted_127 = ["onClick"];
var _hoisted_218 = ["disabled"];
var _hoisted_310 = ["disabled"];
var _hoisted_44 = ["disabled"];
var _hoisted_52 = ["disabled"];
var unit = "month";
var _sfc_main66 = defineComponent72({
  __name: "panel-date-range",
  props: panelDateRangeProps,
  emits: [
    "pick",
    "set-picker-option",
    "calendar-change",
    "panel-change"
  ],
  setup(__props, { emit }) {
    const props = __props;
    const pickerBase = inject41("EP_PICKER_BASE");
    const {
      disabledDate: disabledDate2,
      cellClassName,
      format: format2,
      defaultTime,
      arrowControl,
      clearable
    } = pickerBase.props;
    const shortcuts = toRef9(pickerBase.props, "shortcuts");
    const defaultValue = toRef9(pickerBase.props, "defaultValue");
    const { lang } = useLocale();
    const leftDate = ref67((0, import_dayjs13.default)().locale(lang.value));
    const rightDate = ref67((0, import_dayjs13.default)().locale(lang.value).add(1, unit));
    const {
      minDate,
      maxDate,
      rangeState,
      ppNs,
      drpNs,
      handleChangeRange,
      handleRangeConfirm,
      handleShortcutClick,
      onSelect,
      t
    } = useRangePicker(props, {
      defaultValue,
      leftDate,
      rightDate,
      unit,
      onParsedValueChanged
    });
    const dateUserInput = ref67({
      min: null,
      max: null
    });
    const timeUserInput = ref67({
      min: null,
      max: null
    });
    const leftLabel = computed82(() => {
      return `${leftDate.value.year()} ${t("el.datepicker.year")} ${t(`el.datepicker.month${leftDate.value.month() + 1}`)}`;
    });
    const rightLabel = computed82(() => {
      return `${rightDate.value.year()} ${t("el.datepicker.year")} ${t(`el.datepicker.month${rightDate.value.month() + 1}`)}`;
    });
    const leftYear = computed82(() => {
      return leftDate.value.year();
    });
    const leftMonth = computed82(() => {
      return leftDate.value.month();
    });
    const rightYear = computed82(() => {
      return rightDate.value.year();
    });
    const rightMonth = computed82(() => {
      return rightDate.value.month();
    });
    const hasShortcuts = computed82(() => !!shortcuts.value.length);
    const minVisibleDate = computed82(() => {
      if (dateUserInput.value.min !== null)
        return dateUserInput.value.min;
      if (minDate.value)
        return minDate.value.format(dateFormat.value);
      return "";
    });
    const maxVisibleDate = computed82(() => {
      if (dateUserInput.value.max !== null)
        return dateUserInput.value.max;
      if (maxDate.value || minDate.value)
        return (maxDate.value || minDate.value).format(dateFormat.value);
      return "";
    });
    const minVisibleTime = computed82(() => {
      if (timeUserInput.value.min !== null)
        return timeUserInput.value.min;
      if (minDate.value)
        return minDate.value.format(timeFormat.value);
      return "";
    });
    const maxVisibleTime = computed82(() => {
      if (timeUserInput.value.max !== null)
        return timeUserInput.value.max;
      if (maxDate.value || minDate.value)
        return (maxDate.value || minDate.value).format(timeFormat.value);
      return "";
    });
    const timeFormat = computed82(() => {
      return extractTimeFormat(format2);
    });
    const dateFormat = computed82(() => {
      return extractDateFormat(format2);
    });
    const leftPrevYear = () => {
      leftDate.value = leftDate.value.subtract(1, "year");
      if (!props.unlinkPanels) {
        rightDate.value = leftDate.value.add(1, "month");
      }
      handlePanelChange("year");
    };
    const leftPrevMonth = () => {
      leftDate.value = leftDate.value.subtract(1, "month");
      if (!props.unlinkPanels) {
        rightDate.value = leftDate.value.add(1, "month");
      }
      handlePanelChange("month");
    };
    const rightNextYear = () => {
      if (!props.unlinkPanels) {
        leftDate.value = leftDate.value.add(1, "year");
        rightDate.value = leftDate.value.add(1, "month");
      } else {
        rightDate.value = rightDate.value.add(1, "year");
      }
      handlePanelChange("year");
    };
    const rightNextMonth = () => {
      if (!props.unlinkPanels) {
        leftDate.value = leftDate.value.add(1, "month");
        rightDate.value = leftDate.value.add(1, "month");
      } else {
        rightDate.value = rightDate.value.add(1, "month");
      }
      handlePanelChange("month");
    };
    const leftNextYear = () => {
      leftDate.value = leftDate.value.add(1, "year");
      handlePanelChange("year");
    };
    const leftNextMonth = () => {
      leftDate.value = leftDate.value.add(1, "month");
      handlePanelChange("month");
    };
    const rightPrevYear = () => {
      rightDate.value = rightDate.value.subtract(1, "year");
      handlePanelChange("year");
    };
    const rightPrevMonth = () => {
      rightDate.value = rightDate.value.subtract(1, "month");
      handlePanelChange("month");
    };
    const handlePanelChange = (mode) => {
      emit("panel-change", [leftDate.value.toDate(), rightDate.value.toDate()], mode);
    };
    const enableMonthArrow = computed82(() => {
      const nextMonth = (leftMonth.value + 1) % 12;
      const yearOffset = leftMonth.value + 1 >= 12 ? 1 : 0;
      return props.unlinkPanels && new Date(leftYear.value + yearOffset, nextMonth) < new Date(rightYear.value, rightMonth.value);
    });
    const enableYearArrow = computed82(() => {
      return props.unlinkPanels && rightYear.value * 12 + rightMonth.value - (leftYear.value * 12 + leftMonth.value + 1) >= 12;
    });
    const btnDisabled = computed82(() => {
      return !(minDate.value && maxDate.value && !rangeState.value.selecting && isValidRange2([minDate.value, maxDate.value]));
    });
    const showTime = computed82(() => props.type === "datetime" || props.type === "datetimerange");
    const formatEmit = (emitDayjs, index) => {
      if (!emitDayjs)
        return;
      if (defaultTime) {
        const defaultTimeD = (0, import_dayjs13.default)(defaultTime[index] || defaultTime).locale(lang.value);
        return defaultTimeD.year(emitDayjs.year()).month(emitDayjs.month()).date(emitDayjs.date());
      }
      return emitDayjs;
    };
    const handleRangePick = (val, close2 = true) => {
      const min_ = val.minDate;
      const max_ = val.maxDate;
      const minDate_ = formatEmit(min_, 0);
      const maxDate_ = formatEmit(max_, 1);
      if (maxDate.value === maxDate_ && minDate.value === minDate_) {
        return;
      }
      emit("calendar-change", [min_.toDate(), max_ && max_.toDate()]);
      maxDate.value = maxDate_;
      minDate.value = minDate_;
      if (!close2 || showTime.value)
        return;
      handleRangeConfirm();
    };
    const minTimePickerVisible = ref67(false);
    const maxTimePickerVisible = ref67(false);
    const handleMinTimeClose = () => {
      minTimePickerVisible.value = false;
    };
    const handleMaxTimeClose = () => {
      maxTimePickerVisible.value = false;
    };
    const handleDateInput = (value, type4) => {
      dateUserInput.value[type4] = value;
      const parsedValueD = (0, import_dayjs13.default)(value, dateFormat.value).locale(lang.value);
      if (parsedValueD.isValid()) {
        if (disabledDate2 && disabledDate2(parsedValueD.toDate())) {
          return;
        }
        if (type4 === "min") {
          leftDate.value = parsedValueD;
          minDate.value = (minDate.value || leftDate.value).year(parsedValueD.year()).month(parsedValueD.month()).date(parsedValueD.date());
          if (!props.unlinkPanels) {
            rightDate.value = parsedValueD.add(1, "month");
            maxDate.value = minDate.value.add(1, "month");
          }
        } else {
          rightDate.value = parsedValueD;
          maxDate.value = (maxDate.value || rightDate.value).year(parsedValueD.year()).month(parsedValueD.month()).date(parsedValueD.date());
          if (!props.unlinkPanels) {
            leftDate.value = parsedValueD.subtract(1, "month");
            minDate.value = maxDate.value.subtract(1, "month");
          }
        }
      }
    };
    const handleDateChange = (_2, type4) => {
      dateUserInput.value[type4] = null;
    };
    const handleTimeInput = (value, type4) => {
      timeUserInput.value[type4] = value;
      const parsedValueD = (0, import_dayjs13.default)(value, timeFormat.value).locale(lang.value);
      if (parsedValueD.isValid()) {
        if (type4 === "min") {
          minTimePickerVisible.value = true;
          minDate.value = (minDate.value || leftDate.value).hour(parsedValueD.hour()).minute(parsedValueD.minute()).second(parsedValueD.second());
          if (!maxDate.value || maxDate.value.isBefore(minDate.value)) {
            maxDate.value = minDate.value;
          }
        } else {
          maxTimePickerVisible.value = true;
          maxDate.value = (maxDate.value || rightDate.value).hour(parsedValueD.hour()).minute(parsedValueD.minute()).second(parsedValueD.second());
          rightDate.value = maxDate.value;
          if (maxDate.value && maxDate.value.isBefore(minDate.value)) {
            minDate.value = maxDate.value;
          }
        }
      }
    };
    const handleTimeChange = (value, type4) => {
      timeUserInput.value[type4] = null;
      if (type4 === "min") {
        leftDate.value = minDate.value;
        minTimePickerVisible.value = false;
      } else {
        rightDate.value = maxDate.value;
        maxTimePickerVisible.value = false;
      }
    };
    const handleMinTimePick = (value, visible, first) => {
      if (timeUserInput.value.min)
        return;
      if (value) {
        leftDate.value = value;
        minDate.value = (minDate.value || leftDate.value).hour(value.hour()).minute(value.minute()).second(value.second());
      }
      if (!first) {
        minTimePickerVisible.value = visible;
      }
      if (!maxDate.value || maxDate.value.isBefore(minDate.value)) {
        maxDate.value = minDate.value;
        rightDate.value = value;
      }
    };
    const handleMaxTimePick = (value, visible, first) => {
      if (timeUserInput.value.max)
        return;
      if (value) {
        rightDate.value = value;
        maxDate.value = (maxDate.value || rightDate.value).hour(value.hour()).minute(value.minute()).second(value.second());
      }
      if (!first) {
        maxTimePickerVisible.value = visible;
      }
      if (maxDate.value && maxDate.value.isBefore(minDate.value)) {
        minDate.value = maxDate.value;
      }
    };
    const handleClear = () => {
      leftDate.value = getDefaultValue(unref79(defaultValue), {
        lang: unref79(lang),
        unit: "month",
        unlinkPanels: props.unlinkPanels
      })[0];
      rightDate.value = leftDate.value.add(1, "month");
      emit("pick", null);
    };
    const formatToString = (value) => {
      return isArray22(value) ? value.map((_2) => _2.format(format2)) : value.format(format2);
    };
    const parseUserInput = (value) => {
      return isArray22(value) ? value.map((_2) => (0, import_dayjs13.default)(_2, format2).locale(lang.value)) : (0, import_dayjs13.default)(value, format2).locale(lang.value);
    };
    function onParsedValueChanged(minDate2, maxDate2) {
      if (props.unlinkPanels && maxDate2) {
        const minDateYear = (minDate2 == null ? void 0 : minDate2.year()) || 0;
        const minDateMonth = (minDate2 == null ? void 0 : minDate2.month()) || 0;
        const maxDateYear = maxDate2.year();
        const maxDateMonth = maxDate2.month();
        rightDate.value = minDateYear === maxDateYear && minDateMonth === maxDateMonth ? maxDate2.add(1, unit) : maxDate2;
      } else {
        rightDate.value = leftDate.value.add(1, unit);
        if (maxDate2) {
          rightDate.value = rightDate.value.hour(maxDate2.hour()).minute(maxDate2.minute()).second(maxDate2.second());
        }
      }
    }
    emit("set-picker-option", ["isValidValue", isValidRange2]);
    emit("set-picker-option", ["parseUserInput", parseUserInput]);
    emit("set-picker-option", ["formatToString", formatToString]);
    emit("set-picker-option", ["handleClear", handleClear]);
    return (_ctx, _cache) => {
      return openBlock65(), createElementBlock56("div", {
        class: normalizeClass57([
          unref79(ppNs).b(),
          unref79(drpNs).b(),
          {
            "has-sidebar": _ctx.$slots.sidebar || unref79(hasShortcuts),
            "has-time": unref79(showTime)
          }
        ])
      }, [
        createElementVNode34("div", {
          class: normalizeClass57(unref79(ppNs).e("body-wrapper"))
        }, [
          renderSlot50(_ctx.$slots, "sidebar", {
            class: normalizeClass57(unref79(ppNs).e("sidebar"))
          }),
          unref79(hasShortcuts) ? (openBlock65(), createElementBlock56("div", {
            key: 0,
            class: normalizeClass57(unref79(ppNs).e("sidebar"))
          }, [
            (openBlock65(true), createElementBlock56(Fragment23, null, renderList14(unref79(shortcuts), (shortcut, key) => {
              return openBlock65(), createElementBlock56("button", {
                key,
                type: "button",
                class: normalizeClass57(unref79(ppNs).e("shortcut")),
                onClick: ($event) => unref79(handleShortcutClick)(shortcut)
              }, toDisplayString28(shortcut.text), 11, _hoisted_127);
            }), 128))
          ], 2)) : createCommentVNode29("v-if", true),
          createElementVNode34("div", {
            class: normalizeClass57(unref79(ppNs).e("body"))
          }, [
            unref79(showTime) ? (openBlock65(), createElementBlock56("div", {
              key: 0,
              class: normalizeClass57(unref79(drpNs).e("time-header"))
            }, [
              createElementVNode34("span", {
                class: normalizeClass57(unref79(drpNs).e("editors-wrap"))
              }, [
                createElementVNode34("span", {
                  class: normalizeClass57(unref79(drpNs).e("time-picker-wrap"))
                }, [
                  createVNode28(unref79(ElInput), {
                    size: "small",
                    disabled: unref79(rangeState).selecting,
                    placeholder: unref79(t)("el.datepicker.startDate"),
                    class: normalizeClass57(unref79(drpNs).e("editor")),
                    "model-value": unref79(minVisibleDate),
                    "validate-event": false,
                    onInput: _cache[0] || (_cache[0] = (val) => handleDateInput(val, "min")),
                    onChange: _cache[1] || (_cache[1] = (val) => handleDateChange(val, "min"))
                  }, null, 8, ["disabled", "placeholder", "class", "model-value"])
                ], 2),
                withDirectives18((openBlock65(), createElementBlock56("span", {
                  class: normalizeClass57(unref79(drpNs).e("time-picker-wrap"))
                }, [
                  createVNode28(unref79(ElInput), {
                    size: "small",
                    class: normalizeClass57(unref79(drpNs).e("editor")),
                    disabled: unref79(rangeState).selecting,
                    placeholder: unref79(t)("el.datepicker.startTime"),
                    "model-value": unref79(minVisibleTime),
                    "validate-event": false,
                    onFocus: _cache[2] || (_cache[2] = ($event) => minTimePickerVisible.value = true),
                    onInput: _cache[3] || (_cache[3] = (val) => handleTimeInput(val, "min")),
                    onChange: _cache[4] || (_cache[4] = (val) => handleTimeChange(val, "min"))
                  }, null, 8, ["class", "disabled", "placeholder", "model-value"]),
                  createVNode28(unref79(TimePickPanel), {
                    visible: minTimePickerVisible.value,
                    format: unref79(timeFormat),
                    "datetime-role": "start",
                    "time-arrow-control": unref79(arrowControl),
                    "parsed-value": leftDate.value,
                    onPick: handleMinTimePick
                  }, null, 8, ["visible", "format", "time-arrow-control", "parsed-value"])
                ], 2)), [
                  [unref79(ClickOutside), handleMinTimeClose]
                ])
              ], 2),
              createElementVNode34("span", null, [
                createVNode28(unref79(ElIcon), null, {
                  default: withCtx34(() => [
                    createVNode28(unref79(arrow_right_default))
                  ]),
                  _: 1
                })
              ]),
              createElementVNode34("span", {
                class: normalizeClass57([unref79(drpNs).e("editors-wrap"), "is-right"])
              }, [
                createElementVNode34("span", {
                  class: normalizeClass57(unref79(drpNs).e("time-picker-wrap"))
                }, [
                  createVNode28(unref79(ElInput), {
                    size: "small",
                    class: normalizeClass57(unref79(drpNs).e("editor")),
                    disabled: unref79(rangeState).selecting,
                    placeholder: unref79(t)("el.datepicker.endDate"),
                    "model-value": unref79(maxVisibleDate),
                    readonly: !unref79(minDate),
                    "validate-event": false,
                    onInput: _cache[5] || (_cache[5] = (val) => handleDateInput(val, "max")),
                    onChange: _cache[6] || (_cache[6] = (val) => handleDateChange(val, "max"))
                  }, null, 8, ["class", "disabled", "placeholder", "model-value", "readonly"])
                ], 2),
                withDirectives18((openBlock65(), createElementBlock56("span", {
                  class: normalizeClass57(unref79(drpNs).e("time-picker-wrap"))
                }, [
                  createVNode28(unref79(ElInput), {
                    size: "small",
                    class: normalizeClass57(unref79(drpNs).e("editor")),
                    disabled: unref79(rangeState).selecting,
                    placeholder: unref79(t)("el.datepicker.endTime"),
                    "model-value": unref79(maxVisibleTime),
                    readonly: !unref79(minDate),
                    "validate-event": false,
                    onFocus: _cache[7] || (_cache[7] = ($event) => unref79(minDate) && (maxTimePickerVisible.value = true)),
                    onInput: _cache[8] || (_cache[8] = (val) => handleTimeInput(val, "max")),
                    onChange: _cache[9] || (_cache[9] = (val) => handleTimeChange(val, "max"))
                  }, null, 8, ["class", "disabled", "placeholder", "model-value", "readonly"]),
                  createVNode28(unref79(TimePickPanel), {
                    "datetime-role": "end",
                    visible: maxTimePickerVisible.value,
                    format: unref79(timeFormat),
                    "time-arrow-control": unref79(arrowControl),
                    "parsed-value": rightDate.value,
                    onPick: handleMaxTimePick
                  }, null, 8, ["visible", "format", "time-arrow-control", "parsed-value"])
                ], 2)), [
                  [unref79(ClickOutside), handleMaxTimeClose]
                ])
              ], 2)
            ], 2)) : createCommentVNode29("v-if", true),
            createElementVNode34("div", {
              class: normalizeClass57([[unref79(ppNs).e("content"), unref79(drpNs).e("content")], "is-left"])
            }, [
              createElementVNode34("div", {
                class: normalizeClass57(unref79(drpNs).e("header"))
              }, [
                createElementVNode34("button", {
                  type: "button",
                  class: normalizeClass57([unref79(ppNs).e("icon-btn"), "d-arrow-left"]),
                  onClick: leftPrevYear
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(d_arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 2),
                createElementVNode34("button", {
                  type: "button",
                  class: normalizeClass57([unref79(ppNs).e("icon-btn"), "arrow-left"]),
                  onClick: leftPrevMonth
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 2),
                _ctx.unlinkPanels ? (openBlock65(), createElementBlock56("button", {
                  key: 0,
                  type: "button",
                  disabled: !unref79(enableYearArrow),
                  class: normalizeClass57([[unref79(ppNs).e("icon-btn"), { "is-disabled": !unref79(enableYearArrow) }], "d-arrow-right"]),
                  onClick: leftNextYear
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(d_arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_218)) : createCommentVNode29("v-if", true),
                _ctx.unlinkPanels ? (openBlock65(), createElementBlock56("button", {
                  key: 1,
                  type: "button",
                  disabled: !unref79(enableMonthArrow),
                  class: normalizeClass57([[
                    unref79(ppNs).e("icon-btn"),
                    { "is-disabled": !unref79(enableMonthArrow) }
                  ], "arrow-right"]),
                  onClick: leftNextMonth
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_310)) : createCommentVNode29("v-if", true),
                createElementVNode34("div", null, toDisplayString28(unref79(leftLabel)), 1)
              ], 2),
              createVNode28(DateTable2, {
                "selection-mode": "range",
                date: leftDate.value,
                "min-date": unref79(minDate),
                "max-date": unref79(maxDate),
                "range-state": unref79(rangeState),
                "disabled-date": unref79(disabledDate2),
                "cell-class-name": unref79(cellClassName),
                onChangerange: unref79(handleChangeRange),
                onPick: handleRangePick,
                onSelect: unref79(onSelect)
              }, null, 8, ["date", "min-date", "max-date", "range-state", "disabled-date", "cell-class-name", "onChangerange", "onSelect"])
            ], 2),
            createElementVNode34("div", {
              class: normalizeClass57([[unref79(ppNs).e("content"), unref79(drpNs).e("content")], "is-right"])
            }, [
              createElementVNode34("div", {
                class: normalizeClass57(unref79(drpNs).e("header"))
              }, [
                _ctx.unlinkPanels ? (openBlock65(), createElementBlock56("button", {
                  key: 0,
                  type: "button",
                  disabled: !unref79(enableYearArrow),
                  class: normalizeClass57([[unref79(ppNs).e("icon-btn"), { "is-disabled": !unref79(enableYearArrow) }], "d-arrow-left"]),
                  onClick: rightPrevYear
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(d_arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_44)) : createCommentVNode29("v-if", true),
                _ctx.unlinkPanels ? (openBlock65(), createElementBlock56("button", {
                  key: 1,
                  type: "button",
                  disabled: !unref79(enableMonthArrow),
                  class: normalizeClass57([[
                    unref79(ppNs).e("icon-btn"),
                    { "is-disabled": !unref79(enableMonthArrow) }
                  ], "arrow-left"]),
                  onClick: rightPrevMonth
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_52)) : createCommentVNode29("v-if", true),
                createElementVNode34("button", {
                  type: "button",
                  class: normalizeClass57([unref79(ppNs).e("icon-btn"), "d-arrow-right"]),
                  onClick: rightNextYear
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(d_arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 2),
                createElementVNode34("button", {
                  type: "button",
                  class: normalizeClass57([unref79(ppNs).e("icon-btn"), "arrow-right"]),
                  onClick: rightNextMonth
                }, [
                  createVNode28(unref79(ElIcon), null, {
                    default: withCtx34(() => [
                      createVNode28(unref79(arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 2),
                createElementVNode34("div", null, toDisplayString28(unref79(rightLabel)), 1)
              ], 2),
              createVNode28(DateTable2, {
                "selection-mode": "range",
                date: rightDate.value,
                "min-date": unref79(minDate),
                "max-date": unref79(maxDate),
                "range-state": unref79(rangeState),
                "disabled-date": unref79(disabledDate2),
                "cell-class-name": unref79(cellClassName),
                onChangerange: unref79(handleChangeRange),
                onPick: handleRangePick,
                onSelect: unref79(onSelect)
              }, null, 8, ["date", "min-date", "max-date", "range-state", "disabled-date", "cell-class-name", "onChangerange", "onSelect"])
            ], 2)
          ], 2)
        ], 2),
        unref79(showTime) ? (openBlock65(), createElementBlock56("div", {
          key: 0,
          class: normalizeClass57(unref79(ppNs).e("footer"))
        }, [
          unref79(clearable) ? (openBlock65(), createBlock33(unref79(ElButton), {
            key: 0,
            text: "",
            size: "small",
            class: normalizeClass57(unref79(ppNs).e("link-btn")),
            onClick: handleClear
          }, {
            default: withCtx34(() => [
              createTextVNode15(toDisplayString28(unref79(t)("el.datepicker.clear")), 1)
            ]),
            _: 1
          }, 8, ["class"])) : createCommentVNode29("v-if", true),
          createVNode28(unref79(ElButton), {
            plain: "",
            size: "small",
            class: normalizeClass57(unref79(ppNs).e("link-btn")),
            disabled: unref79(btnDisabled),
            onClick: _cache[10] || (_cache[10] = ($event) => unref79(handleRangeConfirm)(false))
          }, {
            default: withCtx34(() => [
              createTextVNode15(toDisplayString28(unref79(t)("el.datepicker.confirm")), 1)
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ], 2)) : createCommentVNode29("v-if", true)
      ], 2);
    };
  }
});
var DateRangePickPanel = _export_sfc(_sfc_main66, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-date-range.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/panel-month-range.mjs
var import_dayjs14 = __toESM(require_dayjs_min(), 1);
import { defineComponent as defineComponent73, inject as inject42, toRef as toRef10, ref as ref68, computed as computed84, openBlock as openBlock66, createElementBlock as createElementBlock57, normalizeClass as normalizeClass58, unref as unref80, createElementVNode as createElementVNode35, renderSlot as renderSlot51, Fragment as Fragment24, renderList as renderList15, toDisplayString as toDisplayString29, createCommentVNode as createCommentVNode30, createVNode as createVNode29, withCtx as withCtx35 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/props/panel-month-range.mjs
var panelMonthRangeProps = buildProps({
  ...panelRangeSharedProps
});
var panelMonthRangeEmits = ["pick", "set-picker-option"];

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/composables/use-month-range-header.mjs
import { computed as computed83 } from "vue";
var useMonthRangeHeader = ({
  unlinkPanels,
  leftDate,
  rightDate
}) => {
  const { t } = useLocale();
  const leftPrevYear = () => {
    leftDate.value = leftDate.value.subtract(1, "year");
    if (!unlinkPanels.value) {
      rightDate.value = rightDate.value.subtract(1, "year");
    }
  };
  const rightNextYear = () => {
    if (!unlinkPanels.value) {
      leftDate.value = leftDate.value.add(1, "year");
    }
    rightDate.value = rightDate.value.add(1, "year");
  };
  const leftNextYear = () => {
    leftDate.value = leftDate.value.add(1, "year");
  };
  const rightPrevYear = () => {
    rightDate.value = rightDate.value.subtract(1, "year");
  };
  const leftLabel = computed83(() => {
    return `${leftDate.value.year()} ${t("el.datepicker.year")}`;
  });
  const rightLabel = computed83(() => {
    return `${rightDate.value.year()} ${t("el.datepicker.year")}`;
  });
  const leftYear = computed83(() => {
    return leftDate.value.year();
  });
  const rightYear = computed83(() => {
    return rightDate.value.year() === leftDate.value.year() ? leftDate.value.year() + 1 : rightDate.value.year();
  });
  return {
    leftPrevYear,
    rightNextYear,
    leftNextYear,
    rightPrevYear,
    leftLabel,
    rightLabel,
    leftYear,
    rightYear
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker-com/panel-month-range.mjs
var _hoisted_128 = ["onClick"];
var _hoisted_219 = ["disabled"];
var _hoisted_311 = ["disabled"];
var unit2 = "year";
var __default__50 = defineComponent73({
  name: "DatePickerMonthRange"
});
var _sfc_main67 = defineComponent73({
  ...__default__50,
  props: panelMonthRangeProps,
  emits: panelMonthRangeEmits,
  setup(__props, { emit }) {
    const props = __props;
    const { lang } = useLocale();
    const pickerBase = inject42("EP_PICKER_BASE");
    const { shortcuts, disabledDate: disabledDate2, format: format2 } = pickerBase.props;
    const defaultValue = toRef10(pickerBase.props, "defaultValue");
    const leftDate = ref68((0, import_dayjs14.default)().locale(lang.value));
    const rightDate = ref68((0, import_dayjs14.default)().locale(lang.value).add(1, unit2));
    const {
      minDate,
      maxDate,
      rangeState,
      ppNs,
      drpNs,
      handleChangeRange,
      handleRangeConfirm,
      handleShortcutClick,
      onSelect
    } = useRangePicker(props, {
      defaultValue,
      leftDate,
      rightDate,
      unit: unit2,
      onParsedValueChanged
    });
    const hasShortcuts = computed84(() => !!shortcuts.length);
    const {
      leftPrevYear,
      rightNextYear,
      leftNextYear,
      rightPrevYear,
      leftLabel,
      rightLabel,
      leftYear,
      rightYear
    } = useMonthRangeHeader({
      unlinkPanels: toRef10(props, "unlinkPanels"),
      leftDate,
      rightDate
    });
    const enableYearArrow = computed84(() => {
      return props.unlinkPanels && rightYear.value > leftYear.value + 1;
    });
    const handleRangePick = (val, close2 = true) => {
      const minDate_ = val.minDate;
      const maxDate_ = val.maxDate;
      if (maxDate.value === maxDate_ && minDate.value === minDate_) {
        return;
      }
      maxDate.value = maxDate_;
      minDate.value = minDate_;
      if (!close2)
        return;
      handleRangeConfirm();
    };
    const formatToString = (days) => {
      return days.map((day) => day.format(format2));
    };
    function onParsedValueChanged(minDate2, maxDate2) {
      if (props.unlinkPanels && maxDate2) {
        const minDateYear = (minDate2 == null ? void 0 : minDate2.year()) || 0;
        const maxDateYear = maxDate2.year();
        rightDate.value = minDateYear === maxDateYear ? maxDate2.add(1, unit2) : maxDate2;
      } else {
        rightDate.value = leftDate.value.add(1, unit2);
      }
    }
    emit("set-picker-option", ["formatToString", formatToString]);
    return (_ctx, _cache) => {
      return openBlock66(), createElementBlock57("div", {
        class: normalizeClass58([
          unref80(ppNs).b(),
          unref80(drpNs).b(),
          {
            "has-sidebar": Boolean(_ctx.$slots.sidebar) || unref80(hasShortcuts)
          }
        ])
      }, [
        createElementVNode35("div", {
          class: normalizeClass58(unref80(ppNs).e("body-wrapper"))
        }, [
          renderSlot51(_ctx.$slots, "sidebar", {
            class: normalizeClass58(unref80(ppNs).e("sidebar"))
          }),
          unref80(hasShortcuts) ? (openBlock66(), createElementBlock57("div", {
            key: 0,
            class: normalizeClass58(unref80(ppNs).e("sidebar"))
          }, [
            (openBlock66(true), createElementBlock57(Fragment24, null, renderList15(unref80(shortcuts), (shortcut, key) => {
              return openBlock66(), createElementBlock57("button", {
                key,
                type: "button",
                class: normalizeClass58(unref80(ppNs).e("shortcut")),
                onClick: ($event) => unref80(handleShortcutClick)(shortcut)
              }, toDisplayString29(shortcut.text), 11, _hoisted_128);
            }), 128))
          ], 2)) : createCommentVNode30("v-if", true),
          createElementVNode35("div", {
            class: normalizeClass58(unref80(ppNs).e("body"))
          }, [
            createElementVNode35("div", {
              class: normalizeClass58([[unref80(ppNs).e("content"), unref80(drpNs).e("content")], "is-left"])
            }, [
              createElementVNode35("div", {
                class: normalizeClass58(unref80(drpNs).e("header"))
              }, [
                createElementVNode35("button", {
                  type: "button",
                  class: normalizeClass58([unref80(ppNs).e("icon-btn"), "d-arrow-left"]),
                  onClick: _cache[0] || (_cache[0] = (...args) => unref80(leftPrevYear) && unref80(leftPrevYear)(...args))
                }, [
                  createVNode29(unref80(ElIcon), null, {
                    default: withCtx35(() => [
                      createVNode29(unref80(d_arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 2),
                _ctx.unlinkPanels ? (openBlock66(), createElementBlock57("button", {
                  key: 0,
                  type: "button",
                  disabled: !unref80(enableYearArrow),
                  class: normalizeClass58([[
                    unref80(ppNs).e("icon-btn"),
                    { [unref80(ppNs).is("disabled")]: !unref80(enableYearArrow) }
                  ], "d-arrow-right"]),
                  onClick: _cache[1] || (_cache[1] = (...args) => unref80(leftNextYear) && unref80(leftNextYear)(...args))
                }, [
                  createVNode29(unref80(ElIcon), null, {
                    default: withCtx35(() => [
                      createVNode29(unref80(d_arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_219)) : createCommentVNode30("v-if", true),
                createElementVNode35("div", null, toDisplayString29(unref80(leftLabel)), 1)
              ], 2),
              createVNode29(MonthTable, {
                "selection-mode": "range",
                date: leftDate.value,
                "min-date": unref80(minDate),
                "max-date": unref80(maxDate),
                "range-state": unref80(rangeState),
                "disabled-date": unref80(disabledDate2),
                onChangerange: unref80(handleChangeRange),
                onPick: handleRangePick,
                onSelect: unref80(onSelect)
              }, null, 8, ["date", "min-date", "max-date", "range-state", "disabled-date", "onChangerange", "onSelect"])
            ], 2),
            createElementVNode35("div", {
              class: normalizeClass58([[unref80(ppNs).e("content"), unref80(drpNs).e("content")], "is-right"])
            }, [
              createElementVNode35("div", {
                class: normalizeClass58(unref80(drpNs).e("header"))
              }, [
                _ctx.unlinkPanels ? (openBlock66(), createElementBlock57("button", {
                  key: 0,
                  type: "button",
                  disabled: !unref80(enableYearArrow),
                  class: normalizeClass58([[unref80(ppNs).e("icon-btn"), { "is-disabled": !unref80(enableYearArrow) }], "d-arrow-left"]),
                  onClick: _cache[2] || (_cache[2] = (...args) => unref80(rightPrevYear) && unref80(rightPrevYear)(...args))
                }, [
                  createVNode29(unref80(ElIcon), null, {
                    default: withCtx35(() => [
                      createVNode29(unref80(d_arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 10, _hoisted_311)) : createCommentVNode30("v-if", true),
                createElementVNode35("button", {
                  type: "button",
                  class: normalizeClass58([unref80(ppNs).e("icon-btn"), "d-arrow-right"]),
                  onClick: _cache[3] || (_cache[3] = (...args) => unref80(rightNextYear) && unref80(rightNextYear)(...args))
                }, [
                  createVNode29(unref80(ElIcon), null, {
                    default: withCtx35(() => [
                      createVNode29(unref80(d_arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 2),
                createElementVNode35("div", null, toDisplayString29(unref80(rightLabel)), 1)
              ], 2),
              createVNode29(MonthTable, {
                "selection-mode": "range",
                date: rightDate.value,
                "min-date": unref80(minDate),
                "max-date": unref80(maxDate),
                "range-state": unref80(rangeState),
                "disabled-date": unref80(disabledDate2),
                onChangerange: unref80(handleChangeRange),
                onPick: handleRangePick,
                onSelect: unref80(onSelect)
              }, null, 8, ["date", "min-date", "max-date", "range-state", "disabled-date", "onChangerange", "onSelect"])
            ], 2)
          ], 2)
        ], 2)
      ], 2);
    };
  }
});
var MonthRangePickPanel = _export_sfc(_sfc_main67, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-month-range.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/panel-utils.mjs
var getPanel = function(type4) {
  switch (type4) {
    case "daterange":
    case "datetimerange": {
      return DateRangePickPanel;
    }
    case "monthrange": {
      return MonthRangePickPanel;
    }
    default: {
      return DatePickPanel;
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/src/date-picker.mjs
import_dayjs15.default.extend(import_localeData2.default);
import_dayjs15.default.extend(import_advancedFormat.default);
import_dayjs15.default.extend(import_customParseFormat2.default);
import_dayjs15.default.extend(import_weekOfYear.default);
import_dayjs15.default.extend(import_weekYear.default);
import_dayjs15.default.extend(import_dayOfYear.default);
import_dayjs15.default.extend(import_isSameOrAfter.default);
import_dayjs15.default.extend(import_isSameOrBefore.default);
var DatePicker = defineComponent74({
  name: "ElDatePicker",
  install: null,
  props: datePickerProps,
  emits: ["update:modelValue"],
  setup(props, {
    expose,
    emit,
    slots
  }) {
    const ns = useNamespace("picker-panel");
    provide22("ElPopperOptions", reactive12(toRef11(props, "popperOptions")));
    provide22(ROOT_PICKER_INJECTION_KEY, {
      slots,
      pickerNs: ns
    });
    const commonPicker = ref69();
    const refProps = {
      focus: (focusStartInput = true) => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.focus(focusStartInput);
      },
      handleOpen: () => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.handleOpen();
      },
      handleClose: () => {
        var _a2;
        (_a2 = commonPicker.value) == null ? void 0 : _a2.handleClose();
      }
    };
    expose(refProps);
    const onModelValueUpdated = (val) => {
      emit("update:modelValue", val);
    };
    return () => {
      var _a2;
      const format2 = (_a2 = props.format) != null ? _a2 : DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE;
      const Component = getPanel(props.type);
      return createVNode30(CommonPicker, mergeProps12(props, {
        "format": format2,
        "type": props.type,
        "ref": commonPicker,
        "onUpdate:modelValue": onModelValueUpdated
      }), {
        default: (scopedProps) => createVNode30(Component, scopedProps, null),
        "range-separator": slots["range-separator"]
      });
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/date-picker/index.mjs
var _DatePicker = DatePicker;
_DatePicker.install = (app) => {
  app.component(_DatePicker.name, _DatePicker);
};
var ElDatePicker = _DatePicker;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/description2.mjs
import { defineComponent as defineComponent77, useSlots as useSlots11, provide as provide23, computed as computed85, openBlock as openBlock68, createElementBlock as createElementBlock59, normalizeClass as normalizeClass59, unref as unref82, createElementVNode as createElementVNode37, renderSlot as renderSlot52, createTextVNode as createTextVNode16, toDisplayString as toDisplayString30, createCommentVNode as createCommentVNode31, Fragment as Fragment26, renderList as renderList17, createBlock as createBlock35 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/descriptions-row2.mjs
import { defineComponent as defineComponent76, inject as inject44, unref as unref81, openBlock as openBlock67, createElementBlock as createElementBlock58, Fragment as Fragment25, createElementVNode as createElementVNode36, renderList as renderList16, createBlock as createBlock34, createVNode as createVNode31 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/descriptions-cell.mjs
import { defineComponent as defineComponent75, inject as inject43, h as h4 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/token.mjs
var descriptionsKey = Symbol("elDescriptions");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/descriptions-cell.mjs
var ElDescriptionsCell = defineComponent75({
  name: "ElDescriptionsCell",
  props: {
    cell: {
      type: Object
    },
    tag: {
      type: String
    },
    type: {
      type: String
    }
  },
  setup() {
    const descriptions = inject43(descriptionsKey, {});
    return {
      descriptions
    };
  },
  render() {
    var _a2, _b, _c, _d, _e, _f;
    const item = getNormalizedProps(this.cell);
    const { border, direction: direction2 } = this.descriptions;
    const isVertical = direction2 === "vertical";
    const label = ((_c = (_b = (_a2 = this.cell) == null ? void 0 : _a2.children) == null ? void 0 : _b.label) == null ? void 0 : _c.call(_b)) || item.label;
    const content = (_f = (_e = (_d = this.cell) == null ? void 0 : _d.children) == null ? void 0 : _e.default) == null ? void 0 : _f.call(_e);
    const span = item.span;
    const align = item.align ? `is-${item.align}` : "";
    const labelAlign = item.labelAlign ? `is-${item.labelAlign}` : align;
    const className = item.className;
    const labelClassName = item.labelClassName;
    const style = {
      width: addUnit(item.width),
      minWidth: addUnit(item.minWidth)
    };
    const ns = useNamespace("descriptions");
    switch (this.type) {
      case "label":
        return h4(this.tag, {
          style,
          class: [
            ns.e("cell"),
            ns.e("label"),
            ns.is("bordered-label", border),
            ns.is("vertical-label", isVertical),
            labelAlign,
            labelClassName
          ],
          colSpan: isVertical ? span : 1
        }, label);
      case "content":
        return h4(this.tag, {
          style,
          class: [
            ns.e("cell"),
            ns.e("content"),
            ns.is("bordered-content", border),
            ns.is("vertical-content", isVertical),
            align,
            className
          ],
          colSpan: isVertical ? span : span * 2 - 1
        }, content);
      default:
        return h4("td", {
          style,
          class: [ns.e("cell"), align],
          colSpan: span
        }, [
          !isNil_default(label) ? h4("span", {
            class: [ns.e("label"), labelClassName]
          }, label) : void 0,
          h4("span", {
            class: [ns.e("content"), className]
          }, content)
        ]);
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/descriptions-row.mjs
var descriptionsRowProps = buildProps({
  row: {
    type: Array,
    default: () => []
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/descriptions-row2.mjs
var _hoisted_129 = { key: 1 };
var __default__51 = defineComponent76({
  name: "ElDescriptionsRow"
});
var _sfc_main68 = defineComponent76({
  ...__default__51,
  props: descriptionsRowProps,
  setup(__props) {
    const descriptions = inject44(descriptionsKey, {});
    return (_ctx, _cache) => {
      return unref81(descriptions).direction === "vertical" ? (openBlock67(), createElementBlock58(Fragment25, { key: 0 }, [
        createElementVNode36("tr", null, [
          (openBlock67(true), createElementBlock58(Fragment25, null, renderList16(_ctx.row, (cell, index) => {
            return openBlock67(), createBlock34(unref81(ElDescriptionsCell), {
              key: `tr1-${index}`,
              cell,
              tag: "th",
              type: "label"
            }, null, 8, ["cell"]);
          }), 128))
        ]),
        createElementVNode36("tr", null, [
          (openBlock67(true), createElementBlock58(Fragment25, null, renderList16(_ctx.row, (cell, index) => {
            return openBlock67(), createBlock34(unref81(ElDescriptionsCell), {
              key: `tr2-${index}`,
              cell,
              tag: "td",
              type: "content"
            }, null, 8, ["cell"]);
          }), 128))
        ])
      ], 64)) : (openBlock67(), createElementBlock58("tr", _hoisted_129, [
        (openBlock67(true), createElementBlock58(Fragment25, null, renderList16(_ctx.row, (cell, index) => {
          return openBlock67(), createElementBlock58(Fragment25, {
            key: `tr3-${index}`
          }, [
            unref81(descriptions).border ? (openBlock67(), createElementBlock58(Fragment25, { key: 0 }, [
              createVNode31(unref81(ElDescriptionsCell), {
                cell,
                tag: "td",
                type: "label"
              }, null, 8, ["cell"]),
              createVNode31(unref81(ElDescriptionsCell), {
                cell,
                tag: "td",
                type: "content"
              }, null, 8, ["cell"])
            ], 64)) : (openBlock67(), createBlock34(unref81(ElDescriptionsCell), {
              key: 1,
              cell,
              tag: "td",
              type: "both"
            }, null, 8, ["cell"]))
          ], 64);
        }), 128))
      ]));
    };
  }
});
var ElDescriptionsRow = _export_sfc(_sfc_main68, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/descriptions/src/descriptions-row.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/description.mjs
var descriptionProps = buildProps({
  border: {
    type: Boolean,
    default: false
  },
  column: {
    type: Number,
    default: 3
  },
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  size: useSizeProp,
  title: {
    type: String,
    default: ""
  },
  extra: {
    type: String,
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/description2.mjs
var __default__52 = defineComponent77({
  name: "ElDescriptions"
});
var _sfc_main69 = defineComponent77({
  ...__default__52,
  props: descriptionProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("descriptions");
    const descriptionsSize = useFormSize();
    const slots = useSlots11();
    provide23(descriptionsKey, props);
    const descriptionKls = computed85(() => [ns.b(), ns.m(descriptionsSize.value)]);
    const filledNode = (node, span, count, isLast = false) => {
      if (!node.props) {
        node.props = {};
      }
      if (span > count) {
        node.props.span = count;
      }
      if (isLast) {
        node.props.span = span;
      }
      return node;
    };
    const getRows = () => {
      var _a2;
      const children = flattedChildren((_a2 = slots.default) == null ? void 0 : _a2.call(slots)).filter((node) => {
        var _a22;
        return ((_a22 = node == null ? void 0 : node.type) == null ? void 0 : _a22.name) === "ElDescriptionsItem";
      });
      const rows = [];
      let temp = [];
      let count = props.column;
      let totalSpan = 0;
      children.forEach((node, index) => {
        var _a22;
        const span = ((_a22 = node.props) == null ? void 0 : _a22.span) || 1;
        if (index < children.length - 1) {
          totalSpan += span > count ? count : span;
        }
        if (index === children.length - 1) {
          const lastSpan = props.column - totalSpan % props.column;
          temp.push(filledNode(node, lastSpan, count, true));
          rows.push(temp);
          return;
        }
        if (span < count) {
          count -= span;
          temp.push(node);
        } else {
          temp.push(filledNode(node, span, count));
          rows.push(temp);
          count = props.column;
          temp = [];
        }
      });
      return rows;
    };
    return (_ctx, _cache) => {
      return openBlock68(), createElementBlock59("div", {
        class: normalizeClass59(unref82(descriptionKls))
      }, [
        _ctx.title || _ctx.extra || _ctx.$slots.title || _ctx.$slots.extra ? (openBlock68(), createElementBlock59("div", {
          key: 0,
          class: normalizeClass59(unref82(ns).e("header"))
        }, [
          createElementVNode37("div", {
            class: normalizeClass59(unref82(ns).e("title"))
          }, [
            renderSlot52(_ctx.$slots, "title", {}, () => [
              createTextVNode16(toDisplayString30(_ctx.title), 1)
            ])
          ], 2),
          createElementVNode37("div", {
            class: normalizeClass59(unref82(ns).e("extra"))
          }, [
            renderSlot52(_ctx.$slots, "extra", {}, () => [
              createTextVNode16(toDisplayString30(_ctx.extra), 1)
            ])
          ], 2)
        ], 2)) : createCommentVNode31("v-if", true),
        createElementVNode37("div", {
          class: normalizeClass59(unref82(ns).e("body"))
        }, [
          createElementVNode37("table", {
            class: normalizeClass59([unref82(ns).e("table"), unref82(ns).is("bordered", _ctx.border)])
          }, [
            createElementVNode37("tbody", null, [
              (openBlock68(true), createElementBlock59(Fragment26, null, renderList17(getRows(), (row, index) => {
                return openBlock68(), createBlock35(ElDescriptionsRow, {
                  key: index,
                  row
                }, null, 8, ["row"]);
              }), 128))
            ])
          ], 2)
        ], 2)
      ], 2);
    };
  }
});
var Descriptions = _export_sfc(_sfc_main69, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/descriptions/src/description.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/src/description-item.mjs
import { defineComponent as defineComponent78 } from "vue";
var DescriptionsItem = defineComponent78({
  name: "ElDescriptionsItem",
  props: {
    label: {
      type: String,
      default: ""
    },
    span: {
      type: Number,
      default: 1
    },
    width: {
      type: [String, Number],
      default: ""
    },
    minWidth: {
      type: [String, Number],
      default: ""
    },
    align: {
      type: String,
      default: "left"
    },
    labelAlign: {
      type: String,
      default: ""
    },
    className: {
      type: String,
      default: ""
    },
    labelClassName: {
      type: String,
      default: ""
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/descriptions/index.mjs
var ElDescriptions = withInstall(Descriptions, {
  DescriptionsItem
});
var ElDescriptionsItem = withNoopInstall(DescriptionsItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/dialog2.mjs
import { defineComponent as defineComponent81, useSlots as useSlots12, computed as computed88, ref as ref71, provide as provide24, openBlock as openBlock70, createBlock as createBlock37, Teleport as Teleport3, createVNode as createVNode34, Transition as Transition10, unref as unref84, withCtx as withCtx37, withDirectives as withDirectives19, createElementVNode as createElementVNode39, normalizeClass as normalizeClass61, normalizeStyle as normalizeStyle29, mergeProps as mergeProps13, createSlots as createSlots3, renderSlot as renderSlot55, createCommentVNode as createCommentVNode33, vShow as vShow12 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/overlay/src/overlay.mjs
import { defineComponent as defineComponent79, createVNode as createVNode32, renderSlot as renderSlot53, h as h5 } from "vue";
var overlayProps = buildProps({
  mask: {
    type: Boolean,
    default: true
  },
  customMaskEvent: {
    type: Boolean,
    default: false
  },
  overlayClass: {
    type: definePropType([
      String,
      Array,
      Object
    ])
  },
  zIndex: {
    type: definePropType([String, Number])
  }
});
var overlayEmits = {
  click: (evt) => evt instanceof MouseEvent
};
var BLOCK = "overlay";
var Overlay = defineComponent79({
  name: "ElOverlay",
  props: overlayProps,
  emits: overlayEmits,
  setup(props, { slots, emit }) {
    const ns = useNamespace(BLOCK);
    const onMaskClick = (e) => {
      emit("click", e);
    };
    const { onClick, onMousedown, onMouseup } = useSameTarget(props.customMaskEvent ? void 0 : onMaskClick);
    return () => {
      return props.mask ? createVNode32("div", {
        class: [ns.b(), props.overlayClass],
        style: {
          zIndex: props.zIndex
        },
        onClick,
        onMousedown,
        onMouseup
      }, [renderSlot53(slots, "default")], PatchFlags.STYLE | PatchFlags.CLASS | PatchFlags.PROPS, ["onClick", "onMouseup", "onMousedown"]) : h5("div", {
        class: props.overlayClass,
        style: {
          zIndex: props.zIndex,
          position: "fixed",
          top: "0px",
          right: "0px",
          bottom: "0px",
          left: "0px"
        }
      }, [renderSlot53(slots, "default")]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/overlay/index.mjs
var ElOverlay = Overlay;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/dialog-content2.mjs
import { defineComponent as defineComponent80, inject as inject45, computed as computed86, openBlock as openBlock69, createElementBlock as createElementBlock60, unref as unref83, normalizeClass as normalizeClass60, normalizeStyle as normalizeStyle28, createElementVNode as createElementVNode38, renderSlot as renderSlot54, toDisplayString as toDisplayString31, createVNode as createVNode33, withCtx as withCtx36, createBlock as createBlock36, resolveDynamicComponent as resolveDynamicComponent13, createCommentVNode as createCommentVNode32 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/constants.mjs
var dialogInjectionKey = Symbol("dialogInjectionKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/dialog-content.mjs
var dialogContentProps = buildProps({
  center: {
    type: Boolean,
    default: false
  },
  alignCenter: {
    type: Boolean,
    default: false
  },
  closeIcon: {
    type: iconPropType
  },
  customClass: {
    type: String,
    default: ""
  },
  draggable: {
    type: Boolean,
    default: false
  },
  fullscreen: {
    type: Boolean,
    default: false
  },
  showClose: {
    type: Boolean,
    default: true
  },
  title: {
    type: String,
    default: ""
  }
});
var dialogContentEmits = {
  close: () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/dialog-content2.mjs
var _hoisted_130 = ["aria-label"];
var _hoisted_220 = ["id"];
var __default__53 = defineComponent80({ name: "ElDialogContent" });
var _sfc_main70 = defineComponent80({
  ...__default__53,
  props: dialogContentProps,
  emits: dialogContentEmits,
  setup(__props) {
    const props = __props;
    const { t } = useLocale();
    const { Close } = CloseComponents;
    const { dialogRef, headerRef, bodyId, ns, style } = inject45(dialogInjectionKey);
    const { focusTrapRef } = inject45(FOCUS_TRAP_INJECTION_KEY);
    const composedDialogRef = composeRefs(focusTrapRef, dialogRef);
    const draggable2 = computed86(() => props.draggable);
    useDraggable(dialogRef, headerRef, draggable2);
    return (_ctx, _cache) => {
      return openBlock69(), createElementBlock60("div", {
        ref: unref83(composedDialogRef),
        class: normalizeClass60([
          unref83(ns).b(),
          unref83(ns).is("fullscreen", _ctx.fullscreen),
          unref83(ns).is("draggable", unref83(draggable2)),
          unref83(ns).is("align-center", _ctx.alignCenter),
          { [unref83(ns).m("center")]: _ctx.center },
          _ctx.customClass
        ]),
        style: normalizeStyle28(unref83(style)),
        tabindex: "-1"
      }, [
        createElementVNode38("header", {
          ref_key: "headerRef",
          ref: headerRef,
          class: normalizeClass60(unref83(ns).e("header"))
        }, [
          renderSlot54(_ctx.$slots, "header", {}, () => [
            createElementVNode38("span", {
              role: "heading",
              class: normalizeClass60(unref83(ns).e("title"))
            }, toDisplayString31(_ctx.title), 3)
          ]),
          _ctx.showClose ? (openBlock69(), createElementBlock60("button", {
            key: 0,
            "aria-label": unref83(t)("el.dialog.close"),
            class: normalizeClass60(unref83(ns).e("headerbtn")),
            type: "button",
            onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("close"))
          }, [
            createVNode33(unref83(ElIcon), {
              class: normalizeClass60(unref83(ns).e("close"))
            }, {
              default: withCtx36(() => [
                (openBlock69(), createBlock36(resolveDynamicComponent13(_ctx.closeIcon || unref83(Close))))
              ]),
              _: 1
            }, 8, ["class"])
          ], 10, _hoisted_130)) : createCommentVNode32("v-if", true)
        ], 2),
        createElementVNode38("div", {
          id: unref83(bodyId),
          class: normalizeClass60(unref83(ns).e("body"))
        }, [
          renderSlot54(_ctx.$slots, "default")
        ], 10, _hoisted_220),
        _ctx.$slots.footer ? (openBlock69(), createElementBlock60("footer", {
          key: 0,
          class: normalizeClass60(unref83(ns).e("footer"))
        }, [
          renderSlot54(_ctx.$slots, "footer")
        ], 2)) : createCommentVNode32("v-if", true)
      ], 6);
    };
  }
});
var ElDialogContent = _export_sfc(_sfc_main70, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog-content.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/dialog.mjs
var dialogProps = buildProps({
  ...dialogContentProps,
  appendToBody: {
    type: Boolean,
    default: false
  },
  beforeClose: {
    type: definePropType(Function)
  },
  destroyOnClose: {
    type: Boolean,
    default: false
  },
  closeOnClickModal: {
    type: Boolean,
    default: true
  },
  closeOnPressEscape: {
    type: Boolean,
    default: true
  },
  lockScroll: {
    type: Boolean,
    default: true
  },
  modal: {
    type: Boolean,
    default: true
  },
  openDelay: {
    type: Number,
    default: 0
  },
  closeDelay: {
    type: Number,
    default: 0
  },
  top: {
    type: String
  },
  modelValue: {
    type: Boolean,
    default: false
  },
  modalClass: String,
  width: {
    type: [String, Number]
  },
  zIndex: {
    type: Number
  },
  trapFocus: {
    type: Boolean,
    default: false
  }
});
var dialogEmits = {
  open: () => true,
  opened: () => true,
  close: () => true,
  closed: () => true,
  [UPDATE_MODEL_EVENT]: (value) => isBoolean2(value),
  openAutoFocus: () => true,
  closeAutoFocus: () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/use-dialog.mjs
import { getCurrentInstance as getCurrentInstance20, ref as ref70, computed as computed87, watch as watch47, nextTick as nextTick24, onMounted as onMounted32 } from "vue";
var useDialog = (props, targetRef) => {
  const instance = getCurrentInstance20();
  const emit = instance.emit;
  const { nextZIndex } = useZIndex();
  let lastPosition = "";
  const titleId = useId();
  const bodyId = useId();
  const visible = ref70(false);
  const closed = ref70(false);
  const rendered = ref70(false);
  const zIndex2 = ref70(props.zIndex || nextZIndex());
  let openTimer = void 0;
  let closeTimer = void 0;
  const namespace = useGlobalConfig("namespace", defaultNamespace);
  const style = computed87(() => {
    const style2 = {};
    const varPrefix = `--${namespace.value}-dialog`;
    if (!props.fullscreen) {
      if (props.top) {
        style2[`${varPrefix}-margin-top`] = props.top;
      }
      if (props.width) {
        style2[`${varPrefix}-width`] = addUnit(props.width);
      }
    }
    return style2;
  });
  const overlayDialogStyle = computed87(() => {
    if (props.alignCenter) {
      return { display: "flex" };
    }
    return {};
  });
  function afterEnter() {
    emit("opened");
  }
  function afterLeave() {
    emit("closed");
    emit(UPDATE_MODEL_EVENT, false);
    if (props.destroyOnClose) {
      rendered.value = false;
    }
  }
  function beforeLeave() {
    emit("close");
  }
  function open() {
    closeTimer == null ? void 0 : closeTimer();
    openTimer == null ? void 0 : openTimer();
    if (props.openDelay && props.openDelay > 0) {
      ;
      ({ stop: openTimer } = useTimeoutFn(() => doOpen(), props.openDelay));
    } else {
      doOpen();
    }
  }
  function close2() {
    openTimer == null ? void 0 : openTimer();
    closeTimer == null ? void 0 : closeTimer();
    if (props.closeDelay && props.closeDelay > 0) {
      ;
      ({ stop: closeTimer } = useTimeoutFn(() => doClose(), props.closeDelay));
    } else {
      doClose();
    }
  }
  function handleClose() {
    function hide2(shouldCancel) {
      if (shouldCancel)
        return;
      closed.value = true;
      visible.value = false;
    }
    if (props.beforeClose) {
      props.beforeClose(hide2);
    } else {
      close2();
    }
  }
  function onModalClick() {
    if (props.closeOnClickModal) {
      handleClose();
    }
  }
  function doOpen() {
    if (!isClient)
      return;
    visible.value = true;
  }
  function doClose() {
    visible.value = false;
  }
  function onOpenAutoFocus() {
    emit("openAutoFocus");
  }
  function onCloseAutoFocus() {
    emit("closeAutoFocus");
  }
  function onFocusoutPrevented(event) {
    var _a2;
    if (((_a2 = event.detail) == null ? void 0 : _a2.focusReason) === "pointer") {
      event.preventDefault();
    }
  }
  if (props.lockScroll) {
    useLockscreen(visible);
  }
  function onCloseRequested() {
    if (props.closeOnPressEscape) {
      handleClose();
    }
  }
  watch47(() => props.modelValue, (val) => {
    if (val) {
      closed.value = false;
      open();
      rendered.value = true;
      zIndex2.value = props.zIndex ? zIndex2.value++ : nextZIndex();
      nextTick24(() => {
        emit("open");
        if (targetRef.value) {
          targetRef.value.scrollTop = 0;
        }
      });
    } else {
      if (visible.value) {
        close2();
      }
    }
  });
  watch47(() => props.fullscreen, (val) => {
    if (!targetRef.value)
      return;
    if (val) {
      lastPosition = targetRef.value.style.transform;
      targetRef.value.style.transform = "";
    } else {
      targetRef.value.style.transform = lastPosition;
    }
  });
  onMounted32(() => {
    if (props.modelValue) {
      visible.value = true;
      rendered.value = true;
      open();
    }
  });
  return {
    afterEnter,
    afterLeave,
    beforeLeave,
    handleClose,
    onModalClick,
    close: close2,
    doClose,
    onOpenAutoFocus,
    onCloseAutoFocus,
    onCloseRequested,
    onFocusoutPrevented,
    titleId,
    bodyId,
    closed,
    style,
    overlayDialogStyle,
    rendered,
    visible,
    zIndex: zIndex2
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/src/dialog2.mjs
var _hoisted_131 = ["aria-label", "aria-labelledby", "aria-describedby"];
var __default__54 = defineComponent81({
  name: "ElDialog",
  inheritAttrs: false
});
var _sfc_main71 = defineComponent81({
  ...__default__54,
  props: dialogProps,
  emits: dialogEmits,
  setup(__props, { expose }) {
    const props = __props;
    const slots = useSlots12();
    useDeprecated({
      scope: "el-dialog",
      from: "the title slot",
      replacement: "the header slot",
      version: "3.0.0",
      ref: "https://element-plus.org/en-US/component/dialog.html#slots"
    }, computed88(() => !!slots.title));
    useDeprecated({
      scope: "el-dialog",
      from: "custom-class",
      replacement: "class",
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/dialog.html#attributes",
      type: "Attribute"
    }, computed88(() => !!props.customClass));
    const ns = useNamespace("dialog");
    const dialogRef = ref71();
    const headerRef = ref71();
    const dialogContentRef = ref71();
    const {
      visible,
      titleId,
      bodyId,
      style,
      overlayDialogStyle,
      rendered,
      zIndex: zIndex2,
      afterEnter,
      afterLeave,
      beforeLeave,
      handleClose,
      onModalClick,
      onOpenAutoFocus,
      onCloseAutoFocus,
      onCloseRequested,
      onFocusoutPrevented
    } = useDialog(props, dialogRef);
    provide24(dialogInjectionKey, {
      dialogRef,
      headerRef,
      bodyId,
      ns,
      rendered,
      style
    });
    const overlayEvent = useSameTarget(onModalClick);
    const draggable2 = computed88(() => props.draggable && !props.fullscreen);
    expose({
      visible,
      dialogContentRef
    });
    return (_ctx, _cache) => {
      return openBlock70(), createBlock37(Teleport3, {
        to: "body",
        disabled: !_ctx.appendToBody
      }, [
        createVNode34(Transition10, {
          name: "dialog-fade",
          onAfterEnter: unref84(afterEnter),
          onAfterLeave: unref84(afterLeave),
          onBeforeLeave: unref84(beforeLeave),
          persisted: ""
        }, {
          default: withCtx37(() => [
            withDirectives19(createVNode34(unref84(ElOverlay), {
              "custom-mask-event": "",
              mask: _ctx.modal,
              "overlay-class": _ctx.modalClass,
              "z-index": unref84(zIndex2)
            }, {
              default: withCtx37(() => [
                createElementVNode39("div", {
                  role: "dialog",
                  "aria-modal": "true",
                  "aria-label": _ctx.title || void 0,
                  "aria-labelledby": !_ctx.title ? unref84(titleId) : void 0,
                  "aria-describedby": unref84(bodyId),
                  class: normalizeClass61(`${unref84(ns).namespace.value}-overlay-dialog`),
                  style: normalizeStyle29(unref84(overlayDialogStyle)),
                  onClick: _cache[0] || (_cache[0] = (...args) => unref84(overlayEvent).onClick && unref84(overlayEvent).onClick(...args)),
                  onMousedown: _cache[1] || (_cache[1] = (...args) => unref84(overlayEvent).onMousedown && unref84(overlayEvent).onMousedown(...args)),
                  onMouseup: _cache[2] || (_cache[2] = (...args) => unref84(overlayEvent).onMouseup && unref84(overlayEvent).onMouseup(...args))
                }, [
                  createVNode34(unref84(ElFocusTrap), {
                    loop: "",
                    trapped: unref84(visible),
                    "focus-start-el": "container",
                    onFocusAfterTrapped: unref84(onOpenAutoFocus),
                    onFocusAfterReleased: unref84(onCloseAutoFocus),
                    onFocusoutPrevented: unref84(onFocusoutPrevented),
                    onReleaseRequested: unref84(onCloseRequested)
                  }, {
                    default: withCtx37(() => [
                      unref84(rendered) ? (openBlock70(), createBlock37(ElDialogContent, mergeProps13({
                        key: 0,
                        ref_key: "dialogContentRef",
                        ref: dialogContentRef
                      }, _ctx.$attrs, {
                        "custom-class": _ctx.customClass,
                        center: _ctx.center,
                        "align-center": _ctx.alignCenter,
                        "close-icon": _ctx.closeIcon,
                        draggable: unref84(draggable2),
                        fullscreen: _ctx.fullscreen,
                        "show-close": _ctx.showClose,
                        title: _ctx.title,
                        onClose: unref84(handleClose)
                      }), createSlots3({
                        header: withCtx37(() => [
                          !_ctx.$slots.title ? renderSlot55(_ctx.$slots, "header", {
                            key: 0,
                            close: unref84(handleClose),
                            titleId: unref84(titleId),
                            titleClass: unref84(ns).e("title")
                          }) : renderSlot55(_ctx.$slots, "title", { key: 1 })
                        ]),
                        default: withCtx37(() => [
                          renderSlot55(_ctx.$slots, "default")
                        ]),
                        _: 2
                      }, [
                        _ctx.$slots.footer ? {
                          name: "footer",
                          fn: withCtx37(() => [
                            renderSlot55(_ctx.$slots, "footer")
                          ])
                        } : void 0
                      ]), 1040, ["custom-class", "center", "align-center", "close-icon", "draggable", "fullscreen", "show-close", "title", "onClose"])) : createCommentVNode33("v-if", true)
                    ]),
                    _: 3
                  }, 8, ["trapped", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusoutPrevented", "onReleaseRequested"])
                ], 46, _hoisted_131)
              ]),
              _: 3
            }, 8, ["mask", "overlay-class", "z-index"]), [
              [vShow12, unref84(visible)]
            ])
          ]),
          _: 3
        }, 8, ["onAfterEnter", "onAfterLeave", "onBeforeLeave"])
      ], 8, ["disabled"]);
    };
  }
});
var Dialog = _export_sfc(_sfc_main71, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dialog/index.mjs
var ElDialog = withInstall(Dialog);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/divider/src/divider2.mjs
import { defineComponent as defineComponent82, computed as computed89, openBlock as openBlock71, createElementBlock as createElementBlock61, normalizeClass as normalizeClass62, unref as unref85, normalizeStyle as normalizeStyle30, renderSlot as renderSlot56, createCommentVNode as createCommentVNode34 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/divider/src/divider.mjs
var dividerProps = buildProps({
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  contentPosition: {
    type: String,
    values: ["left", "center", "right"],
    default: "center"
  },
  borderStyle: {
    type: definePropType(String),
    default: "solid"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/divider/src/divider2.mjs
var __default__55 = defineComponent82({
  name: "ElDivider"
});
var _sfc_main72 = defineComponent82({
  ...__default__55,
  props: dividerProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("divider");
    const dividerStyle = computed89(() => {
      return ns.cssVar({
        "border-style": props.borderStyle
      });
    });
    return (_ctx, _cache) => {
      return openBlock71(), createElementBlock61("div", {
        class: normalizeClass62([unref85(ns).b(), unref85(ns).m(_ctx.direction)]),
        style: normalizeStyle30(unref85(dividerStyle)),
        role: "separator"
      }, [
        _ctx.$slots.default && _ctx.direction !== "vertical" ? (openBlock71(), createElementBlock61("div", {
          key: 0,
          class: normalizeClass62([unref85(ns).e("text"), unref85(ns).is(_ctx.contentPosition)])
        }, [
          renderSlot56(_ctx.$slots, "default")
        ], 2)) : createCommentVNode34("v-if", true)
      ], 6);
    };
  }
});
var Divider = _export_sfc(_sfc_main72, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/divider/src/divider.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/divider/index.mjs
var ElDivider = withInstall(Divider);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/drawer/src/drawer2.mjs
import { defineComponent as defineComponent83, computed as computed90, ref as ref72, resolveComponent as resolveComponent4, openBlock as openBlock72, createBlock as createBlock38, Teleport as Teleport4, createVNode as createVNode35, Transition as Transition11, withCtx as withCtx38, withDirectives as withDirectives20, createElementVNode as createElementVNode40, mergeProps as mergeProps14, withModifiers as withModifiers15, normalizeClass as normalizeClass63, createElementBlock as createElementBlock62, renderSlot as renderSlot57, toDisplayString as toDisplayString32, createCommentVNode as createCommentVNode35, vShow as vShow13 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/drawer/src/drawer.mjs
var drawerProps = buildProps({
  ...dialogProps,
  direction: {
    type: String,
    default: "rtl",
    values: ["ltr", "rtl", "ttb", "btt"]
  },
  size: {
    type: [String, Number],
    default: "30%"
  },
  withHeader: {
    type: Boolean,
    default: true
  },
  modalFade: {
    type: Boolean,
    default: true
  }
});
var drawerEmits = dialogEmits;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/drawer/src/drawer2.mjs
var _sfc_main73 = defineComponent83({
  name: "ElDrawer",
  components: {
    ElOverlay,
    ElFocusTrap,
    ElIcon,
    Close: close_default
  },
  inheritAttrs: false,
  props: drawerProps,
  emits: drawerEmits,
  setup(props, { slots }) {
    useDeprecated({
      scope: "el-drawer",
      from: "the title slot",
      replacement: "the header slot",
      version: "3.0.0",
      ref: "https://element-plus.org/en-US/component/drawer.html#slots"
    }, computed90(() => !!slots.title));
    useDeprecated({
      scope: "el-drawer",
      from: "custom-class",
      replacement: "class",
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/drawer.html#attributes",
      type: "Attribute"
    }, computed90(() => !!props.customClass));
    const drawerRef = ref72();
    const focusStartRef = ref72();
    const ns = useNamespace("drawer");
    const { t } = useLocale();
    const isHorizontal2 = computed90(() => props.direction === "rtl" || props.direction === "ltr");
    const drawerSize = computed90(() => addUnit(props.size));
    return {
      ...useDialog(props, drawerRef),
      drawerRef,
      focusStartRef,
      isHorizontal: isHorizontal2,
      drawerSize,
      ns,
      t
    };
  }
});
var _hoisted_132 = ["aria-label", "aria-labelledby", "aria-describedby"];
var _hoisted_221 = ["id"];
var _hoisted_312 = ["aria-label"];
var _hoisted_45 = ["id"];
function _sfc_render8(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_close = resolveComponent4("close");
  const _component_el_icon = resolveComponent4("el-icon");
  const _component_el_focus_trap = resolveComponent4("el-focus-trap");
  const _component_el_overlay = resolveComponent4("el-overlay");
  return openBlock72(), createBlock38(Teleport4, {
    to: "body",
    disabled: !_ctx.appendToBody
  }, [
    createVNode35(Transition11, {
      name: _ctx.ns.b("fade"),
      onAfterEnter: _ctx.afterEnter,
      onAfterLeave: _ctx.afterLeave,
      onBeforeLeave: _ctx.beforeLeave,
      persisted: ""
    }, {
      default: withCtx38(() => [
        withDirectives20(createVNode35(_component_el_overlay, {
          mask: _ctx.modal,
          "overlay-class": _ctx.modalClass,
          "z-index": _ctx.zIndex,
          onClick: _ctx.onModalClick
        }, {
          default: withCtx38(() => [
            createVNode35(_component_el_focus_trap, {
              loop: "",
              trapped: _ctx.visible,
              "focus-trap-el": _ctx.drawerRef,
              "focus-start-el": _ctx.focusStartRef,
              onReleaseRequested: _ctx.onCloseRequested
            }, {
              default: withCtx38(() => [
                createElementVNode40("div", mergeProps14({
                  ref: "drawerRef",
                  "aria-modal": "true",
                  "aria-label": _ctx.title || void 0,
                  "aria-labelledby": !_ctx.title ? _ctx.titleId : void 0,
                  "aria-describedby": _ctx.bodyId
                }, _ctx.$attrs, {
                  class: [_ctx.ns.b(), _ctx.direction, _ctx.visible && "open", _ctx.customClass],
                  style: _ctx.isHorizontal ? "width: " + _ctx.drawerSize : "height: " + _ctx.drawerSize,
                  role: "dialog",
                  onClick: _cache[1] || (_cache[1] = withModifiers15(() => {
                  }, ["stop"]))
                }), [
                  createElementVNode40("span", {
                    ref: "focusStartRef",
                    class: normalizeClass63(_ctx.ns.e("sr-focus")),
                    tabindex: "-1"
                  }, null, 2),
                  _ctx.withHeader ? (openBlock72(), createElementBlock62("header", {
                    key: 0,
                    class: normalizeClass63(_ctx.ns.e("header"))
                  }, [
                    !_ctx.$slots.title ? renderSlot57(_ctx.$slots, "header", {
                      key: 0,
                      close: _ctx.handleClose,
                      titleId: _ctx.titleId,
                      titleClass: _ctx.ns.e("title")
                    }, () => [
                      !_ctx.$slots.title ? (openBlock72(), createElementBlock62("span", {
                        key: 0,
                        id: _ctx.titleId,
                        role: "heading",
                        class: normalizeClass63(_ctx.ns.e("title"))
                      }, toDisplayString32(_ctx.title), 11, _hoisted_221)) : createCommentVNode35("v-if", true)
                    ]) : renderSlot57(_ctx.$slots, "title", { key: 1 }, () => [
                      createCommentVNode35(" DEPRECATED SLOT ")
                    ]),
                    _ctx.showClose ? (openBlock72(), createElementBlock62("button", {
                      key: 2,
                      "aria-label": _ctx.t("el.drawer.close"),
                      class: normalizeClass63(_ctx.ns.e("close-btn")),
                      type: "button",
                      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClose && _ctx.handleClose(...args))
                    }, [
                      createVNode35(_component_el_icon, {
                        class: normalizeClass63(_ctx.ns.e("close"))
                      }, {
                        default: withCtx38(() => [
                          createVNode35(_component_close)
                        ]),
                        _: 1
                      }, 8, ["class"])
                    ], 10, _hoisted_312)) : createCommentVNode35("v-if", true)
                  ], 2)) : createCommentVNode35("v-if", true),
                  _ctx.rendered ? (openBlock72(), createElementBlock62("div", {
                    key: 1,
                    id: _ctx.bodyId,
                    class: normalizeClass63(_ctx.ns.e("body"))
                  }, [
                    renderSlot57(_ctx.$slots, "default")
                  ], 10, _hoisted_45)) : createCommentVNode35("v-if", true),
                  _ctx.$slots.footer ? (openBlock72(), createElementBlock62("div", {
                    key: 2,
                    class: normalizeClass63(_ctx.ns.e("footer"))
                  }, [
                    renderSlot57(_ctx.$slots, "footer")
                  ], 2)) : createCommentVNode35("v-if", true)
                ], 16, _hoisted_132)
              ]),
              _: 3
            }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onReleaseRequested"])
          ]),
          _: 3
        }, 8, ["mask", "overlay-class", "z-index", "onClick"]), [
          [vShow13, _ctx.visible]
        ])
      ]),
      _: 3
    }, 8, ["name", "onAfterEnter", "onAfterLeave", "onBeforeLeave"])
  ], 8, ["disabled"]);
}
var Drawer = _export_sfc(_sfc_main73, [["render", _sfc_render8], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/drawer/src/drawer.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/drawer/index.mjs
var ElDrawer = withInstall(Drawer);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown2.mjs
import { defineComponent as defineComponent89, getCurrentInstance as getCurrentInstance21, ref as ref76, computed as computed93, watch as watch49, toRef as toRef13, onBeforeUnmount as onBeforeUnmount16, unref as unref89, provide as provide28, resolveComponent as resolveComponent7, openBlock as openBlock75, createElementBlock as createElementBlock63, normalizeClass as normalizeClass64, createVNode as createVNode37, createSlots as createSlots4, withCtx as withCtx41, renderSlot as renderSlot63, createBlock as createBlock41, mergeProps as mergeProps15, createCommentVNode as createCommentVNode36 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/roving-focus-group2.mjs
import { defineComponent as defineComponent87, resolveComponent as resolveComponent5, openBlock as openBlock73, createBlock as createBlock39, withCtx as withCtx39, createVNode as createVNode36, normalizeProps as normalizeProps2, guardReactiveProps, renderSlot as renderSlot61 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/roving-focus-group-impl.mjs
import { defineComponent as defineComponent86, ref as ref74, inject as inject47, computed as computed91, unref as unref87, provide as provide26, readonly as readonly5, toRef as toRef12, watch as watch48, renderSlot as renderSlot60 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collection/src/collection.mjs
import { ref as ref73, unref as unref86, provide as provide25, inject as inject46, onMounted as onMounted33, onBeforeUnmount as onBeforeUnmount15 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collection/src/collection2.mjs
import { defineComponent as defineComponent84, renderSlot as renderSlot58 } from "vue";
var _sfc_main74 = defineComponent84({
  inheritAttrs: false
});
function _sfc_render9(_ctx, _cache, $props, $setup, $data, $options) {
  return renderSlot58(_ctx.$slots, "default");
}
var Collection = _export_sfc(_sfc_main74, [["render", _sfc_render9], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/collection/src/collection.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collection/src/collection-item.mjs
import { defineComponent as defineComponent85, renderSlot as renderSlot59 } from "vue";
var _sfc_main75 = defineComponent85({
  name: "ElCollectionItem",
  inheritAttrs: false
});
function _sfc_render10(_ctx, _cache, $props, $setup, $data, $options) {
  return renderSlot59(_ctx.$slots, "default");
}
var CollectionItem = _export_sfc(_sfc_main75, [["render", _sfc_render10], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/collection/src/collection-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/collection/src/collection.mjs
var COLLECTION_ITEM_SIGN = `data-el-collection-item`;
var createCollectionWithScope = (name) => {
  const COLLECTION_NAME = `El${name}Collection`;
  const COLLECTION_ITEM_NAME = `${COLLECTION_NAME}Item`;
  const COLLECTION_INJECTION_KEY3 = Symbol(COLLECTION_NAME);
  const COLLECTION_ITEM_INJECTION_KEY3 = Symbol(COLLECTION_ITEM_NAME);
  const ElCollection3 = {
    ...Collection,
    name: COLLECTION_NAME,
    setup() {
      const collectionRef = ref73(null);
      const itemMap = /* @__PURE__ */ new Map();
      const getItems = () => {
        const collectionEl = unref86(collectionRef);
        if (!collectionEl)
          return [];
        const orderedNodes = Array.from(collectionEl.querySelectorAll(`[${COLLECTION_ITEM_SIGN}]`));
        const items = [...itemMap.values()];
        return items.sort((a2, b2) => orderedNodes.indexOf(a2.ref) - orderedNodes.indexOf(b2.ref));
      };
      provide25(COLLECTION_INJECTION_KEY3, {
        itemMap,
        getItems,
        collectionRef
      });
    }
  };
  const ElCollectionItem3 = {
    ...CollectionItem,
    name: COLLECTION_ITEM_NAME,
    setup(_2, { attrs }) {
      const collectionItemRef = ref73(null);
      const collectionInjection = inject46(COLLECTION_INJECTION_KEY3, void 0);
      provide25(COLLECTION_ITEM_INJECTION_KEY3, {
        collectionItemRef
      });
      onMounted33(() => {
        const collectionItemEl = unref86(collectionItemRef);
        if (collectionItemEl) {
          collectionInjection.itemMap.set(collectionItemEl, {
            ref: collectionItemEl,
            ...attrs
          });
        }
      });
      onBeforeUnmount15(() => {
        const collectionItemEl = unref86(collectionItemRef);
        collectionInjection.itemMap.delete(collectionItemEl);
      });
    }
  };
  return {
    COLLECTION_INJECTION_KEY: COLLECTION_INJECTION_KEY3,
    COLLECTION_ITEM_INJECTION_KEY: COLLECTION_ITEM_INJECTION_KEY3,
    ElCollection: ElCollection3,
    ElCollectionItem: ElCollectionItem3
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/roving-focus-group.mjs
var rovingFocusGroupProps = buildProps({
  style: { type: definePropType([String, Array, Object]) },
  currentTabId: {
    type: definePropType(String)
  },
  defaultCurrentTabId: String,
  loop: Boolean,
  dir: {
    type: String,
    values: ["ltr", "rtl"],
    default: "ltr"
  },
  orientation: {
    type: definePropType(String)
  },
  onBlur: Function,
  onFocus: Function,
  onMousedown: Function
});
var {
  ElCollection,
  ElCollectionItem,
  COLLECTION_INJECTION_KEY,
  COLLECTION_ITEM_INJECTION_KEY
} = createCollectionWithScope("RovingFocusGroup");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/tokens.mjs
var ROVING_FOCUS_GROUP_INJECTION_KEY = Symbol("elRovingFocusGroup");
var ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY = Symbol("elRovingFocusGroupItem");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/utils.mjs
var MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
var getDirectionAwareKey = (key, dir) => {
  if (dir !== "rtl")
    return key;
  switch (key) {
    case EVENT_CODE.right:
      return EVENT_CODE.left;
    case EVENT_CODE.left:
      return EVENT_CODE.right;
    default:
      return key;
  }
};
var getFocusIntent = (event, orientation, dir) => {
  const key = getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && [EVENT_CODE.left, EVENT_CODE.right].includes(key))
    return void 0;
  if (orientation === "horizontal" && [EVENT_CODE.up, EVENT_CODE.down].includes(key))
    return void 0;
  return MAP_KEY_TO_FOCUS_INTENT[key];
};
var reorderArray = (array4, atIdx) => {
  return array4.map((_2, idx) => array4[(idx + atIdx) % array4.length]);
};
var focusFirst = (elements) => {
  const { activeElement: prevActive } = document;
  for (const element of elements) {
    if (element === prevActive)
      return;
    element.focus();
    if (prevActive !== document.activeElement)
      return;
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/roving-focus-group-impl.mjs
var CURRENT_TAB_ID_CHANGE_EVT = "currentTabIdChange";
var ENTRY_FOCUS_EVT = "rovingFocusGroup.entryFocus";
var EVT_OPTS = { bubbles: false, cancelable: true };
var _sfc_main76 = defineComponent86({
  name: "ElRovingFocusGroupImpl",
  inheritAttrs: false,
  props: rovingFocusGroupProps,
  emits: [CURRENT_TAB_ID_CHANGE_EVT, "entryFocus"],
  setup(props, { emit }) {
    var _a2;
    const currentTabbedId = ref74((_a2 = props.currentTabId || props.defaultCurrentTabId) != null ? _a2 : null);
    const isBackingOut = ref74(false);
    const isClickFocus = ref74(false);
    const rovingFocusGroupRef = ref74(null);
    const { getItems } = inject47(COLLECTION_INJECTION_KEY, void 0);
    const rovingFocusGroupRootStyle = computed91(() => {
      return [
        {
          outline: "none"
        },
        props.style
      ];
    });
    const onItemFocus = (tabbedId) => {
      emit(CURRENT_TAB_ID_CHANGE_EVT, tabbedId);
    };
    const onItemShiftTab = () => {
      isBackingOut.value = true;
    };
    const onMousedown = composeEventHandlers((e) => {
      var _a22;
      (_a22 = props.onMousedown) == null ? void 0 : _a22.call(props, e);
    }, () => {
      isClickFocus.value = true;
    });
    const onFocus = composeEventHandlers((e) => {
      var _a22;
      (_a22 = props.onFocus) == null ? void 0 : _a22.call(props, e);
    }, (e) => {
      const isKeyboardFocus = !unref87(isClickFocus);
      const { target: target2, currentTarget } = e;
      if (target2 === currentTarget && isKeyboardFocus && !unref87(isBackingOut)) {
        const entryFocusEvt = new Event(ENTRY_FOCUS_EVT, EVT_OPTS);
        currentTarget == null ? void 0 : currentTarget.dispatchEvent(entryFocusEvt);
        if (!entryFocusEvt.defaultPrevented) {
          const items = getItems().filter((item) => item.focusable);
          const activeItem = items.find((item) => item.active);
          const currentItem = items.find((item) => item.id === unref87(currentTabbedId));
          const candidates = [activeItem, currentItem, ...items].filter(Boolean);
          const candidateNodes = candidates.map((item) => item.ref);
          focusFirst(candidateNodes);
        }
      }
      isClickFocus.value = false;
    });
    const onBlur = composeEventHandlers((e) => {
      var _a22;
      (_a22 = props.onBlur) == null ? void 0 : _a22.call(props, e);
    }, () => {
      isBackingOut.value = false;
    });
    const handleEntryFocus = (...args) => {
      emit("entryFocus", ...args);
    };
    provide26(ROVING_FOCUS_GROUP_INJECTION_KEY, {
      currentTabbedId: readonly5(currentTabbedId),
      loop: toRef12(props, "loop"),
      tabIndex: computed91(() => {
        return unref87(isBackingOut) ? -1 : 0;
      }),
      rovingFocusGroupRef,
      rovingFocusGroupRootStyle,
      orientation: toRef12(props, "orientation"),
      dir: toRef12(props, "dir"),
      onItemFocus,
      onItemShiftTab,
      onBlur,
      onFocus,
      onMousedown
    });
    watch48(() => props.currentTabId, (val) => {
      currentTabbedId.value = val != null ? val : null;
    });
    useEventListener(rovingFocusGroupRef, ENTRY_FOCUS_EVT, handleEntryFocus);
  }
});
function _sfc_render11(_ctx, _cache, $props, $setup, $data, $options) {
  return renderSlot60(_ctx.$slots, "default");
}
var ElRovingFocusGroupImpl = _export_sfc(_sfc_main76, [["render", _sfc_render11], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-group-impl.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/roving-focus-group2.mjs
var _sfc_main77 = defineComponent87({
  name: "ElRovingFocusGroup",
  components: {
    ElFocusGroupCollection: ElCollection,
    ElRovingFocusGroupImpl
  }
});
function _sfc_render12(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_roving_focus_group_impl = resolveComponent5("el-roving-focus-group-impl");
  const _component_el_focus_group_collection = resolveComponent5("el-focus-group-collection");
  return openBlock73(), createBlock39(_component_el_focus_group_collection, null, {
    default: withCtx39(() => [
      createVNode36(_component_el_roving_focus_group_impl, normalizeProps2(guardReactiveProps(_ctx.$attrs)), {
        default: withCtx39(() => [
          renderSlot61(_ctx.$slots, "default")
        ]),
        _: 3
      }, 16)
    ]),
    _: 3
  });
}
var ElRovingFocusGroup = _export_sfc(_sfc_main77, [["render", _sfc_render12], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-group.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/roving-focus-group/src/roving-focus-item.mjs
import { defineComponent as defineComponent88, inject as inject48, ref as ref75, unref as unref88, nextTick as nextTick25, computed as computed92, provide as provide27, resolveComponent as resolveComponent6, openBlock as openBlock74, createBlock as createBlock40, withCtx as withCtx40, renderSlot as renderSlot62 } from "vue";
var _sfc_main78 = defineComponent88({
  components: {
    ElRovingFocusCollectionItem: ElCollectionItem
  },
  props: {
    focusable: {
      type: Boolean,
      default: true
    },
    active: {
      type: Boolean,
      default: false
    }
  },
  emits: ["mousedown", "focus", "keydown"],
  setup(props, { emit }) {
    const { currentTabbedId, loop, onItemFocus, onItemShiftTab } = inject48(ROVING_FOCUS_GROUP_INJECTION_KEY, void 0);
    const { getItems } = inject48(COLLECTION_INJECTION_KEY, void 0);
    const id = useId();
    const rovingFocusGroupItemRef = ref75(null);
    const handleMousedown = composeEventHandlers((e) => {
      emit("mousedown", e);
    }, (e) => {
      if (!props.focusable) {
        e.preventDefault();
      } else {
        onItemFocus(unref88(id));
      }
    });
    const handleFocus = composeEventHandlers((e) => {
      emit("focus", e);
    }, () => {
      onItemFocus(unref88(id));
    });
    const handleKeydown = composeEventHandlers((e) => {
      emit("keydown", e);
    }, (e) => {
      const { key, shiftKey, target: target2, currentTarget } = e;
      if (key === EVENT_CODE.tab && shiftKey) {
        onItemShiftTab();
        return;
      }
      if (target2 !== currentTarget)
        return;
      const focusIntent = getFocusIntent(e);
      if (focusIntent) {
        e.preventDefault();
        const items = getItems().filter((item) => item.focusable);
        let elements = items.map((item) => item.ref);
        switch (focusIntent) {
          case "last": {
            elements.reverse();
            break;
          }
          case "prev":
          case "next": {
            if (focusIntent === "prev") {
              elements.reverse();
            }
            const currentIdx = elements.indexOf(currentTarget);
            elements = loop.value ? reorderArray(elements, currentIdx + 1) : elements.slice(currentIdx + 1);
            break;
          }
          default: {
            break;
          }
        }
        nextTick25(() => {
          focusFirst(elements);
        });
      }
    });
    const isCurrentTab = computed92(() => currentTabbedId.value === unref88(id));
    provide27(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {
      rovingFocusGroupItemRef,
      tabIndex: computed92(() => unref88(isCurrentTab) ? 0 : -1),
      handleMousedown,
      handleFocus,
      handleKeydown
    });
    return {
      id,
      handleKeydown,
      handleFocus,
      handleMousedown
    };
  }
});
function _sfc_render13(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_roving_focus_collection_item = resolveComponent6("el-roving-focus-collection-item");
  return openBlock74(), createBlock40(_component_el_roving_focus_collection_item, {
    id: _ctx.id,
    focusable: _ctx.focusable,
    active: _ctx.active
  }, {
    default: withCtx40(() => [
      renderSlot62(_ctx.$slots, "default")
    ]),
    _: 3
  }, 8, ["id", "focusable", "active"]);
}
var ElRovingFocusItem = _export_sfc(_sfc_main78, [["render", _sfc_render13], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown.mjs
var dropdownProps = buildProps({
  trigger: useTooltipTriggerProps.trigger,
  effect: {
    ...useTooltipContentProps.effect,
    default: "light"
  },
  type: {
    type: definePropType(String)
  },
  placement: {
    type: definePropType(String),
    default: "bottom"
  },
  popperOptions: {
    type: definePropType(Object),
    default: () => ({})
  },
  id: String,
  size: {
    type: String,
    default: ""
  },
  splitButton: Boolean,
  hideOnClick: {
    type: Boolean,
    default: true
  },
  loop: {
    type: Boolean,
    default: true
  },
  showTimeout: {
    type: Number,
    default: 150
  },
  hideTimeout: {
    type: Number,
    default: 150
  },
  tabindex: {
    type: definePropType([Number, String]),
    default: 0
  },
  maxHeight: {
    type: definePropType([Number, String]),
    default: ""
  },
  popperClass: {
    type: String,
    default: ""
  },
  disabled: {
    type: Boolean,
    default: false
  },
  role: {
    type: String,
    default: "menu"
  },
  buttonProps: {
    type: definePropType(Object)
  },
  teleported: useTooltipContentProps.teleported
});
var dropdownItemProps = buildProps({
  command: {
    type: [Object, String, Number],
    default: () => ({})
  },
  disabled: Boolean,
  divided: Boolean,
  textValue: String,
  icon: {
    type: iconPropType
  }
});
var dropdownMenuProps = buildProps({
  onKeydown: { type: definePropType(Function) }
});
var FIRST_KEYS = [
  EVENT_CODE.down,
  EVENT_CODE.pageDown,
  EVENT_CODE.home
];
var LAST_KEYS = [EVENT_CODE.up, EVENT_CODE.pageUp, EVENT_CODE.end];
var FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];
var {
  ElCollection: ElCollection2,
  ElCollectionItem: ElCollectionItem2,
  COLLECTION_INJECTION_KEY: COLLECTION_INJECTION_KEY2,
  COLLECTION_ITEM_INJECTION_KEY: COLLECTION_ITEM_INJECTION_KEY2
} = createCollectionWithScope("Dropdown");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/tokens.mjs
var DROPDOWN_INJECTION_KEY = Symbol("elDropdown");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown2.mjs
import { isArray as isArray23 } from "@vue/shared";
var { ButtonGroup: ElButtonGroup2 } = ElButton;
var _sfc_main79 = defineComponent89({
  name: "ElDropdown",
  components: {
    ElButton,
    ElButtonGroup: ElButtonGroup2,
    ElScrollbar,
    ElDropdownCollection: ElCollection2,
    ElTooltip,
    ElRovingFocusGroup,
    ElOnlyChild: OnlyChild,
    ElIcon,
    ArrowDown: arrow_down_default
  },
  props: dropdownProps,
  emits: ["visible-change", "click", "command"],
  setup(props, { emit }) {
    const _instance = getCurrentInstance21();
    const ns = useNamespace("dropdown");
    const { t } = useLocale();
    const triggeringElementRef = ref76();
    const referenceElementRef = ref76();
    const popperRef = ref76(null);
    const contentRef = ref76(null);
    const scrollbar = ref76(null);
    const currentTabId = ref76(null);
    const isUsingKeyboard = ref76(false);
    const triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down];
    const wrapStyle = computed93(() => ({
      maxHeight: addUnit(props.maxHeight)
    }));
    const dropdownTriggerKls = computed93(() => [ns.m(dropdownSize.value)]);
    const defaultTriggerId = useId().value;
    const triggerId = computed93(() => {
      return props.id || defaultTriggerId;
    });
    watch49([triggeringElementRef, toRef13(props, "trigger")], ([triggeringElement, trigger2], [prevTriggeringElement]) => {
      var _a2, _b, _c;
      const triggerArray = isArray23(trigger2) ? trigger2 : [trigger2];
      if ((_a2 = prevTriggeringElement == null ? void 0 : prevTriggeringElement.$el) == null ? void 0 : _a2.removeEventListener) {
        prevTriggeringElement.$el.removeEventListener("pointerenter", onAutofocusTriggerEnter);
      }
      if ((_b = triggeringElement == null ? void 0 : triggeringElement.$el) == null ? void 0 : _b.removeEventListener) {
        triggeringElement.$el.removeEventListener("pointerenter", onAutofocusTriggerEnter);
      }
      if (((_c = triggeringElement == null ? void 0 : triggeringElement.$el) == null ? void 0 : _c.addEventListener) && triggerArray.includes("hover")) {
        triggeringElement.$el.addEventListener("pointerenter", onAutofocusTriggerEnter);
      }
    }, { immediate: true });
    onBeforeUnmount16(() => {
      var _a2, _b;
      if ((_b = (_a2 = triggeringElementRef.value) == null ? void 0 : _a2.$el) == null ? void 0 : _b.removeEventListener) {
        triggeringElementRef.value.$el.removeEventListener("pointerenter", onAutofocusTriggerEnter);
      }
    });
    function handleClick() {
      handleClose();
    }
    function handleClose() {
      var _a2;
      (_a2 = popperRef.value) == null ? void 0 : _a2.onClose();
    }
    function handleOpen() {
      var _a2;
      (_a2 = popperRef.value) == null ? void 0 : _a2.onOpen();
    }
    const dropdownSize = useFormSize();
    function commandHandler(...args) {
      emit("command", ...args);
    }
    function onAutofocusTriggerEnter() {
      var _a2, _b;
      (_b = (_a2 = triggeringElementRef.value) == null ? void 0 : _a2.$el) == null ? void 0 : _b.focus();
    }
    function onItemEnter() {
    }
    function onItemLeave() {
      const contentEl = unref89(contentRef);
      contentEl == null ? void 0 : contentEl.focus();
      currentTabId.value = null;
    }
    function handleCurrentTabIdChange(id) {
      currentTabId.value = id;
    }
    function handleEntryFocus(e) {
      if (!isUsingKeyboard.value) {
        e.preventDefault();
        e.stopImmediatePropagation();
      }
    }
    function handleBeforeShowTooltip() {
      emit("visible-change", true);
    }
    function handleShowTooltip(event) {
      if ((event == null ? void 0 : event.type) === "keydown") {
        contentRef.value.focus();
      }
    }
    function handleBeforeHideTooltip() {
      emit("visible-change", false);
    }
    provide28(DROPDOWN_INJECTION_KEY, {
      contentRef,
      role: computed93(() => props.role),
      triggerId,
      isUsingKeyboard,
      onItemEnter,
      onItemLeave
    });
    provide28("elDropdown", {
      instance: _instance,
      dropdownSize,
      handleClick,
      commandHandler,
      trigger: toRef13(props, "trigger"),
      hideOnClick: toRef13(props, "hideOnClick")
    });
    const onFocusAfterTrapped = (e) => {
      var _a2, _b;
      e.preventDefault();
      (_b = (_a2 = contentRef.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2, {
        preventScroll: true
      });
    };
    const handlerMainButtonClick = (event) => {
      emit("click", event);
    };
    return {
      t,
      ns,
      scrollbar,
      wrapStyle,
      dropdownTriggerKls,
      dropdownSize,
      triggerId,
      triggerKeys,
      currentTabId,
      handleCurrentTabIdChange,
      handlerMainButtonClick,
      handleEntryFocus,
      handleClose,
      handleOpen,
      handleBeforeShowTooltip,
      handleShowTooltip,
      handleBeforeHideTooltip,
      onFocusAfterTrapped,
      popperRef,
      contentRef,
      triggeringElementRef,
      referenceElementRef
    };
  }
});
function _sfc_render14(_ctx, _cache, $props, $setup, $data, $options) {
  var _a2;
  const _component_el_dropdown_collection = resolveComponent7("el-dropdown-collection");
  const _component_el_roving_focus_group = resolveComponent7("el-roving-focus-group");
  const _component_el_scrollbar = resolveComponent7("el-scrollbar");
  const _component_el_only_child = resolveComponent7("el-only-child");
  const _component_el_tooltip = resolveComponent7("el-tooltip");
  const _component_el_button = resolveComponent7("el-button");
  const _component_arrow_down = resolveComponent7("arrow-down");
  const _component_el_icon = resolveComponent7("el-icon");
  const _component_el_button_group = resolveComponent7("el-button-group");
  return openBlock75(), createElementBlock63("div", {
    class: normalizeClass64([_ctx.ns.b(), _ctx.ns.is("disabled", _ctx.disabled)])
  }, [
    createVNode37(_component_el_tooltip, {
      ref: "popperRef",
      role: _ctx.role,
      effect: _ctx.effect,
      "fallback-placements": ["bottom", "top"],
      "popper-options": _ctx.popperOptions,
      "gpu-acceleration": false,
      "hide-after": _ctx.trigger === "hover" ? _ctx.hideTimeout : 0,
      "manual-mode": true,
      placement: _ctx.placement,
      "popper-class": [_ctx.ns.e("popper"), _ctx.popperClass],
      "reference-element": (_a2 = _ctx.referenceElementRef) == null ? void 0 : _a2.$el,
      trigger: _ctx.trigger,
      "trigger-keys": _ctx.triggerKeys,
      "trigger-target-el": _ctx.contentRef,
      "show-after": _ctx.trigger === "hover" ? _ctx.showTimeout : 0,
      "stop-popper-mouse-event": false,
      "virtual-ref": _ctx.triggeringElementRef,
      "virtual-triggering": _ctx.splitButton,
      disabled: _ctx.disabled,
      transition: `${_ctx.ns.namespace.value}-zoom-in-top`,
      teleported: _ctx.teleported,
      pure: "",
      persistent: "",
      onBeforeShow: _ctx.handleBeforeShowTooltip,
      onShow: _ctx.handleShowTooltip,
      onBeforeHide: _ctx.handleBeforeHideTooltip
    }, createSlots4({
      content: withCtx41(() => [
        createVNode37(_component_el_scrollbar, {
          ref: "scrollbar",
          "wrap-style": _ctx.wrapStyle,
          tag: "div",
          "view-class": _ctx.ns.e("list")
        }, {
          default: withCtx41(() => [
            createVNode37(_component_el_roving_focus_group, {
              loop: _ctx.loop,
              "current-tab-id": _ctx.currentTabId,
              orientation: "horizontal",
              onCurrentTabIdChange: _ctx.handleCurrentTabIdChange,
              onEntryFocus: _ctx.handleEntryFocus
            }, {
              default: withCtx41(() => [
                createVNode37(_component_el_dropdown_collection, null, {
                  default: withCtx41(() => [
                    renderSlot63(_ctx.$slots, "dropdown")
                  ]),
                  _: 3
                })
              ]),
              _: 3
            }, 8, ["loop", "current-tab-id", "onCurrentTabIdChange", "onEntryFocus"])
          ]),
          _: 3
        }, 8, ["wrap-style", "view-class"])
      ]),
      _: 2
    }, [
      !_ctx.splitButton ? {
        name: "default",
        fn: withCtx41(() => [
          createVNode37(_component_el_only_child, {
            id: _ctx.triggerId,
            ref: "triggeringElementRef",
            role: "button",
            tabindex: _ctx.tabindex
          }, {
            default: withCtx41(() => [
              renderSlot63(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["id", "tabindex"])
        ])
      } : void 0
    ]), 1032, ["role", "effect", "popper-options", "hide-after", "placement", "popper-class", "reference-element", "trigger", "trigger-keys", "trigger-target-el", "show-after", "virtual-ref", "virtual-triggering", "disabled", "transition", "teleported", "onBeforeShow", "onShow", "onBeforeHide"]),
    _ctx.splitButton ? (openBlock75(), createBlock41(_component_el_button_group, { key: 0 }, {
      default: withCtx41(() => [
        createVNode37(_component_el_button, mergeProps15({ ref: "referenceElementRef" }, _ctx.buttonProps, {
          size: _ctx.dropdownSize,
          type: _ctx.type,
          disabled: _ctx.disabled,
          tabindex: _ctx.tabindex,
          onClick: _ctx.handlerMainButtonClick
        }), {
          default: withCtx41(() => [
            renderSlot63(_ctx.$slots, "default")
          ]),
          _: 3
        }, 16, ["size", "type", "disabled", "tabindex", "onClick"]),
        createVNode37(_component_el_button, mergeProps15({
          id: _ctx.triggerId,
          ref: "triggeringElementRef"
        }, _ctx.buttonProps, {
          role: "button",
          size: _ctx.dropdownSize,
          type: _ctx.type,
          class: _ctx.ns.e("caret-button"),
          disabled: _ctx.disabled,
          tabindex: _ctx.tabindex,
          "aria-label": _ctx.t("el.dropdown.toggleDropdown")
        }), {
          default: withCtx41(() => [
            createVNode37(_component_el_icon, {
              class: normalizeClass64(_ctx.ns.e("icon"))
            }, {
              default: withCtx41(() => [
                createVNode37(_component_arrow_down)
              ]),
              _: 1
            }, 8, ["class"])
          ]),
          _: 1
        }, 16, ["id", "size", "type", "class", "disabled", "tabindex", "aria-label"])
      ]),
      _: 3
    })) : createCommentVNode36("v-if", true)
  ], 2);
}
var Dropdown = _export_sfc(_sfc_main79, [["render", _sfc_render14], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown-item.mjs
import { defineComponent as defineComponent91, getCurrentInstance as getCurrentInstance22, ref as ref78, computed as computed96, unref as unref90, inject as inject51, resolveComponent as resolveComponent9, openBlock as openBlock77, createBlock as createBlock43, withCtx as withCtx43, createVNode as createVNode38, mergeProps as mergeProps17, renderSlot as renderSlot65 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown-item-impl.mjs
import { defineComponent as defineComponent90, inject as inject49, computed as computed94, resolveComponent as resolveComponent8, openBlock as openBlock76, createElementBlock as createElementBlock64, Fragment as Fragment27, mergeProps as mergeProps16, createCommentVNode as createCommentVNode37, createElementVNode as createElementVNode41, withModifiers as withModifiers16, createBlock as createBlock42, withCtx as withCtx42, resolveDynamicComponent as resolveDynamicComponent14, renderSlot as renderSlot64 } from "vue";
var _sfc_main80 = defineComponent90({
  name: "DropdownItemImpl",
  components: {
    ElIcon
  },
  props: dropdownItemProps,
  emits: ["pointermove", "pointerleave", "click", "clickimpl"],
  setup(_2, { emit }) {
    const ns = useNamespace("dropdown");
    const { role: menuRole } = inject49(DROPDOWN_INJECTION_KEY, void 0);
    const { collectionItemRef: dropdownCollectionItemRef } = inject49(COLLECTION_ITEM_INJECTION_KEY2, void 0);
    const { collectionItemRef: rovingFocusCollectionItemRef } = inject49(COLLECTION_ITEM_INJECTION_KEY, void 0);
    const {
      rovingFocusGroupItemRef,
      tabIndex,
      handleFocus,
      handleKeydown: handleItemKeydown,
      handleMousedown
    } = inject49(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, void 0);
    const itemRef = composeRefs(dropdownCollectionItemRef, rovingFocusCollectionItemRef, rovingFocusGroupItemRef);
    const role = computed94(() => {
      if (menuRole.value === "menu") {
        return "menuitem";
      } else if (menuRole.value === "navigation") {
        return "link";
      }
      return "button";
    });
    const handleKeydown = composeEventHandlers((e) => {
      const { code } = e;
      if (code === EVENT_CODE.enter || code === EVENT_CODE.space) {
        e.preventDefault();
        e.stopImmediatePropagation();
        emit("clickimpl", e);
        return true;
      }
    }, handleItemKeydown);
    return {
      ns,
      itemRef,
      dataset: {
        [COLLECTION_ITEM_SIGN]: ""
      },
      role,
      tabIndex,
      handleFocus,
      handleKeydown,
      handleMousedown
    };
  }
});
var _hoisted_133 = ["aria-disabled", "tabindex", "role"];
function _sfc_render15(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_icon = resolveComponent8("el-icon");
  return openBlock76(), createElementBlock64(Fragment27, null, [
    _ctx.divided ? (openBlock76(), createElementBlock64("li", mergeProps16({
      key: 0,
      role: "separator",
      class: _ctx.ns.bem("menu", "item", "divided")
    }, _ctx.$attrs), null, 16)) : createCommentVNode37("v-if", true),
    createElementVNode41("li", mergeProps16({ ref: _ctx.itemRef }, { ..._ctx.dataset, ..._ctx.$attrs }, {
      "aria-disabled": _ctx.disabled,
      class: [_ctx.ns.be("menu", "item"), _ctx.ns.is("disabled", _ctx.disabled)],
      tabindex: _ctx.tabIndex,
      role: _ctx.role,
      onClick: _cache[0] || (_cache[0] = (e) => _ctx.$emit("clickimpl", e)),
      onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),
      onKeydown: _cache[2] || (_cache[2] = withModifiers16((...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args), ["self"])),
      onMousedown: _cache[3] || (_cache[3] = (...args) => _ctx.handleMousedown && _ctx.handleMousedown(...args)),
      onPointermove: _cache[4] || (_cache[4] = (e) => _ctx.$emit("pointermove", e)),
      onPointerleave: _cache[5] || (_cache[5] = (e) => _ctx.$emit("pointerleave", e))
    }), [
      _ctx.icon ? (openBlock76(), createBlock42(_component_el_icon, { key: 0 }, {
        default: withCtx42(() => [
          (openBlock76(), createBlock42(resolveDynamicComponent14(_ctx.icon)))
        ]),
        _: 1
      })) : createCommentVNode37("v-if", true),
      renderSlot64(_ctx.$slots, "default")
    ], 16, _hoisted_133)
  ], 64);
}
var ElDropdownItemImpl = _export_sfc(_sfc_main80, [["render", _sfc_render15], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-item-impl.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/useDropdown.mjs
import { inject as inject50, computed as computed95, ref as ref77 } from "vue";
var useDropdown = () => {
  const elDropdown = inject50("elDropdown", {});
  const _elDropdownSize = computed95(() => elDropdown == null ? void 0 : elDropdown.dropdownSize);
  return {
    elDropdown,
    _elDropdownSize
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown-item.mjs
var _sfc_main81 = defineComponent91({
  name: "ElDropdownItem",
  components: {
    ElDropdownCollectionItem: ElCollectionItem2,
    ElRovingFocusItem,
    ElDropdownItemImpl
  },
  inheritAttrs: false,
  props: dropdownItemProps,
  emits: ["pointermove", "pointerleave", "click"],
  setup(props, { emit, attrs }) {
    const { elDropdown } = useDropdown();
    const _instance = getCurrentInstance22();
    const itemRef = ref78(null);
    const textContent = computed96(() => {
      var _a2, _b;
      return (_b = (_a2 = unref90(itemRef)) == null ? void 0 : _a2.textContent) != null ? _b : "";
    });
    const { onItemEnter, onItemLeave } = inject51(DROPDOWN_INJECTION_KEY, void 0);
    const handlePointerMove = composeEventHandlers((e) => {
      emit("pointermove", e);
      return e.defaultPrevented;
    }, whenMouse((e) => {
      if (props.disabled) {
        onItemLeave(e);
        return;
      }
      const target2 = e.currentTarget;
      if (target2 === document.activeElement || target2.contains(document.activeElement)) {
        return;
      }
      onItemEnter(e);
      if (!e.defaultPrevented) {
        target2 == null ? void 0 : target2.focus();
      }
    }));
    const handlePointerLeave = composeEventHandlers((e) => {
      emit("pointerleave", e);
      return e.defaultPrevented;
    }, whenMouse((e) => {
      onItemLeave(e);
    }));
    const handleClick = composeEventHandlers((e) => {
      if (props.disabled) {
        return;
      }
      emit("click", e);
      return e.type !== "keydown" && e.defaultPrevented;
    }, (e) => {
      var _a2, _b, _c;
      if (props.disabled) {
        e.stopImmediatePropagation();
        return;
      }
      if ((_a2 = elDropdown == null ? void 0 : elDropdown.hideOnClick) == null ? void 0 : _a2.value) {
        (_b = elDropdown.handleClick) == null ? void 0 : _b.call(elDropdown);
      }
      (_c = elDropdown.commandHandler) == null ? void 0 : _c.call(elDropdown, props.command, _instance, e);
    });
    const propsAndAttrs = computed96(() => {
      return { ...props, ...attrs };
    });
    return {
      handleClick,
      handlePointerMove,
      handlePointerLeave,
      textContent,
      propsAndAttrs
    };
  }
});
function _sfc_render16(_ctx, _cache, $props, $setup, $data, $options) {
  var _a2;
  const _component_el_dropdown_item_impl = resolveComponent9("el-dropdown-item-impl");
  const _component_el_roving_focus_item = resolveComponent9("el-roving-focus-item");
  const _component_el_dropdown_collection_item = resolveComponent9("el-dropdown-collection-item");
  return openBlock77(), createBlock43(_component_el_dropdown_collection_item, {
    disabled: _ctx.disabled,
    "text-value": (_a2 = _ctx.textValue) != null ? _a2 : _ctx.textContent
  }, {
    default: withCtx43(() => [
      createVNode38(_component_el_roving_focus_item, {
        focusable: !_ctx.disabled
      }, {
        default: withCtx43(() => [
          createVNode38(_component_el_dropdown_item_impl, mergeProps17(_ctx.propsAndAttrs, {
            onPointerleave: _ctx.handlePointerLeave,
            onPointermove: _ctx.handlePointerMove,
            onClickimpl: _ctx.handleClick
          }), {
            default: withCtx43(() => [
              renderSlot65(_ctx.$slots, "default")
            ]),
            _: 3
          }, 16, ["onPointerleave", "onPointermove", "onClickimpl"])
        ]),
        _: 3
      }, 8, ["focusable"])
    ]),
    _: 3
  }, 8, ["disabled", "text-value"]);
}
var DropdownItem = _export_sfc(_sfc_main81, [["render", _sfc_render16], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/src/dropdown-menu.mjs
import { defineComponent as defineComponent92, inject as inject52, computed as computed97, unref as unref91, openBlock as openBlock78, createElementBlock as createElementBlock65, normalizeClass as normalizeClass65, normalizeStyle as normalizeStyle31, withModifiers as withModifiers17, renderSlot as renderSlot66 } from "vue";
var _sfc_main82 = defineComponent92({
  name: "ElDropdownMenu",
  props: dropdownMenuProps,
  setup(props) {
    const ns = useNamespace("dropdown");
    const { _elDropdownSize } = useDropdown();
    const size4 = _elDropdownSize.value;
    const { focusTrapRef, onKeydown } = inject52(FOCUS_TRAP_INJECTION_KEY, void 0);
    const { contentRef, role, triggerId } = inject52(DROPDOWN_INJECTION_KEY, void 0);
    const { collectionRef: dropdownCollectionRef, getItems } = inject52(COLLECTION_INJECTION_KEY2, void 0);
    const {
      rovingFocusGroupRef,
      rovingFocusGroupRootStyle,
      tabIndex,
      onBlur,
      onFocus,
      onMousedown
    } = inject52(ROVING_FOCUS_GROUP_INJECTION_KEY, void 0);
    const { collectionRef: rovingFocusGroupCollectionRef } = inject52(COLLECTION_INJECTION_KEY, void 0);
    const dropdownKls = computed97(() => {
      return [ns.b("menu"), ns.bm("menu", size4 == null ? void 0 : size4.value)];
    });
    const dropdownListWrapperRef = composeRefs(contentRef, dropdownCollectionRef, focusTrapRef, rovingFocusGroupRef, rovingFocusGroupCollectionRef);
    const composedKeydown = composeEventHandlers((e) => {
      var _a2;
      (_a2 = props.onKeydown) == null ? void 0 : _a2.call(props, e);
    }, (e) => {
      const { currentTarget, code, target: target2 } = e;
      const isKeydownContained = currentTarget.contains(target2);
      if (isKeydownContained) {
      }
      if (EVENT_CODE.tab === code) {
        e.stopImmediatePropagation();
      }
      e.preventDefault();
      if (target2 !== unref91(contentRef))
        return;
      if (!FIRST_LAST_KEYS.includes(code))
        return;
      const items = getItems().filter((item) => !item.disabled);
      const targets = items.map((item) => item.ref);
      if (LAST_KEYS.includes(code)) {
        targets.reverse();
      }
      focusFirst(targets);
    });
    const handleKeydown = (e) => {
      composedKeydown(e);
      onKeydown(e);
    };
    return {
      size: size4,
      rovingFocusGroupRootStyle,
      tabIndex,
      dropdownKls,
      role,
      triggerId,
      dropdownListWrapperRef,
      handleKeydown,
      onBlur,
      onFocus,
      onMousedown
    };
  }
});
var _hoisted_134 = ["role", "aria-labelledby"];
function _sfc_render17(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock78(), createElementBlock65("ul", {
    ref: _ctx.dropdownListWrapperRef,
    class: normalizeClass65(_ctx.dropdownKls),
    style: normalizeStyle31(_ctx.rovingFocusGroupRootStyle),
    tabindex: -1,
    role: _ctx.role,
    "aria-labelledby": _ctx.triggerId,
    onBlur: _cache[0] || (_cache[0] = (...args) => _ctx.onBlur && _ctx.onBlur(...args)),
    onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.onFocus && _ctx.onFocus(...args)),
    onKeydown: _cache[2] || (_cache[2] = withModifiers17((...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args), ["self"])),
    onMousedown: _cache[3] || (_cache[3] = withModifiers17((...args) => _ctx.onMousedown && _ctx.onMousedown(...args), ["self"]))
  }, [
    renderSlot66(_ctx.$slots, "default")
  ], 46, _hoisted_134);
}
var DropdownMenu = _export_sfc(_sfc_main82, [["render", _sfc_render17], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-menu.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/dropdown/index.mjs
var ElDropdown = withInstall(Dropdown, {
  DropdownItem,
  DropdownMenu
});
var ElDropdownItem = withNoopInstall(DropdownItem);
var ElDropdownMenu = withNoopInstall(DropdownMenu);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/empty/src/empty2.mjs
import { defineComponent as defineComponent94, computed as computed98, openBlock as openBlock80, createElementBlock as createElementBlock67, normalizeClass as normalizeClass66, unref as unref93, createElementVNode as createElementVNode43, normalizeStyle as normalizeStyle32, renderSlot as renderSlot67, createVNode as createVNode39, toDisplayString as toDisplayString33, createCommentVNode as createCommentVNode38 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/empty/src/img-empty.mjs
import { defineComponent as defineComponent93, openBlock as openBlock79, createElementBlock as createElementBlock66, createElementVNode as createElementVNode42, unref as unref92 } from "vue";
var _hoisted_135 = {
  viewBox: "0 0 79 86",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  "xmlns:xlink": "http://www.w3.org/1999/xlink"
};
var _hoisted_222 = ["id"];
var _hoisted_313 = ["stop-color"];
var _hoisted_46 = ["stop-color"];
var _hoisted_53 = ["id"];
var _hoisted_6 = ["stop-color"];
var _hoisted_7 = ["stop-color"];
var _hoisted_8 = ["id"];
var _hoisted_9 = {
  id: "Illustrations",
  stroke: "none",
  "stroke-width": "1",
  fill: "none",
  "fill-rule": "evenodd"
};
var _hoisted_10 = {
  id: "B-type",
  transform: "translate(-1268.000000, -535.000000)"
};
var _hoisted_11 = {
  id: "Group-2",
  transform: "translate(1268.000000, 535.000000)"
};
var _hoisted_1210 = ["fill"];
var _hoisted_136 = ["fill"];
var _hoisted_142 = {
  id: "Group-Copy",
  transform: "translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)"
};
var _hoisted_152 = ["fill"];
var _hoisted_162 = ["fill"];
var _hoisted_172 = ["fill"];
var _hoisted_182 = ["fill"];
var _hoisted_192 = ["fill"];
var _hoisted_20 = {
  id: "Rectangle-Copy-17",
  transform: "translate(53.000000, 45.000000)"
};
var _hoisted_21 = ["fill", "xlink:href"];
var _hoisted_223 = ["fill", "mask"];
var _hoisted_232 = ["fill"];
var __default__56 = defineComponent93({
  name: "ImgEmpty"
});
var _sfc_main83 = defineComponent93({
  ...__default__56,
  setup(__props) {
    const ns = useNamespace("empty");
    const id = useId();
    return (_ctx, _cache) => {
      return openBlock79(), createElementBlock66("svg", _hoisted_135, [
        createElementVNode42("defs", null, [
          createElementVNode42("linearGradient", {
            id: `linearGradient-1-${unref92(id)}`,
            x1: "38.8503086%",
            y1: "0%",
            x2: "61.1496914%",
            y2: "100%"
          }, [
            createElementVNode42("stop", {
              "stop-color": `var(${unref92(ns).cssVarBlockName("fill-color-1")})`,
              offset: "0%"
            }, null, 8, _hoisted_313),
            createElementVNode42("stop", {
              "stop-color": `var(${unref92(ns).cssVarBlockName("fill-color-4")})`,
              offset: "100%"
            }, null, 8, _hoisted_46)
          ], 8, _hoisted_222),
          createElementVNode42("linearGradient", {
            id: `linearGradient-2-${unref92(id)}`,
            x1: "0%",
            y1: "9.5%",
            x2: "100%",
            y2: "90.5%"
          }, [
            createElementVNode42("stop", {
              "stop-color": `var(${unref92(ns).cssVarBlockName("fill-color-1")})`,
              offset: "0%"
            }, null, 8, _hoisted_6),
            createElementVNode42("stop", {
              "stop-color": `var(${unref92(ns).cssVarBlockName("fill-color-6")})`,
              offset: "100%"
            }, null, 8, _hoisted_7)
          ], 8, _hoisted_53),
          createElementVNode42("rect", {
            id: `path-3-${unref92(id)}`,
            x: "0",
            y: "0",
            width: "17",
            height: "36"
          }, null, 8, _hoisted_8)
        ]),
        createElementVNode42("g", _hoisted_9, [
          createElementVNode42("g", _hoisted_10, [
            createElementVNode42("g", _hoisted_11, [
              createElementVNode42("path", {
                id: "Oval-Copy-2",
                d: "M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z",
                fill: `var(${unref92(ns).cssVarBlockName("fill-color-3")})`
              }, null, 8, _hoisted_1210),
              createElementVNode42("polygon", {
                id: "Rectangle-Copy-14",
                fill: `var(${unref92(ns).cssVarBlockName("fill-color-7")})`,
                transform: "translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) ",
                points: "13 58 53 58 42 45 2 45"
              }, null, 8, _hoisted_136),
              createElementVNode42("g", _hoisted_142, [
                createElementVNode42("polygon", {
                  id: "Rectangle-Copy-10",
                  fill: `var(${unref92(ns).cssVarBlockName("fill-color-7")})`,
                  transform: "translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) ",
                  points: "2.84078316e-14 3 18 3 23 7 5 7"
                }, null, 8, _hoisted_152),
                createElementVNode42("polygon", {
                  id: "Rectangle-Copy-11",
                  fill: `var(${unref92(ns).cssVarBlockName("fill-color-5")})`,
                  points: "-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43"
                }, null, 8, _hoisted_162),
                createElementVNode42("rect", {
                  id: "Rectangle-Copy-12",
                  fill: `url(#linearGradient-1-${unref92(id)})`,
                  transform: "translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) ",
                  x: "38",
                  y: "7",
                  width: "17",
                  height: "36"
                }, null, 8, _hoisted_172),
                createElementVNode42("polygon", {
                  id: "Rectangle-Copy-13",
                  fill: `var(${unref92(ns).cssVarBlockName("fill-color-2")})`,
                  transform: "translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) ",
                  points: "24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12"
                }, null, 8, _hoisted_182)
              ]),
              createElementVNode42("rect", {
                id: "Rectangle-Copy-15",
                fill: `url(#linearGradient-2-${unref92(id)})`,
                x: "13",
                y: "45",
                width: "40",
                height: "36"
              }, null, 8, _hoisted_192),
              createElementVNode42("g", _hoisted_20, [
                createElementVNode42("use", {
                  id: "Mask",
                  fill: `var(${unref92(ns).cssVarBlockName("fill-color-8")})`,
                  transform: "translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) ",
                  "xlink:href": `#path-3-${unref92(id)}`
                }, null, 8, _hoisted_21),
                createElementVNode42("polygon", {
                  id: "Rectangle-Copy",
                  fill: `var(${unref92(ns).cssVarBlockName("fill-color-9")})`,
                  mask: `url(#mask-4-${unref92(id)})`,
                  transform: "translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) ",
                  points: "7 0 24 0 20 18 7 16.5"
                }, null, 8, _hoisted_223)
              ]),
              createElementVNode42("polygon", {
                id: "Rectangle-Copy-18",
                fill: `var(${unref92(ns).cssVarBlockName("fill-color-2")})`,
                transform: "translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) ",
                points: "62 45 79 45 70 58 53 58"
              }, null, 8, _hoisted_232)
            ])
          ])
        ])
      ]);
    };
  }
});
var ImgEmpty = _export_sfc(_sfc_main83, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/empty/src/img-empty.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/empty/src/empty.mjs
var emptyProps = buildProps({
  image: {
    type: String,
    default: ""
  },
  imageSize: Number,
  description: {
    type: String,
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/empty/src/empty2.mjs
var _hoisted_137 = ["src"];
var _hoisted_224 = { key: 1 };
var __default__57 = defineComponent94({
  name: "ElEmpty"
});
var _sfc_main84 = defineComponent94({
  ...__default__57,
  props: emptyProps,
  setup(__props) {
    const props = __props;
    const { t } = useLocale();
    const ns = useNamespace("empty");
    const emptyDescription = computed98(() => props.description || t("el.table.emptyText"));
    const imageStyle = computed98(() => ({
      width: addUnit(props.imageSize)
    }));
    return (_ctx, _cache) => {
      return openBlock80(), createElementBlock67("div", {
        class: normalizeClass66(unref93(ns).b())
      }, [
        createElementVNode43("div", {
          class: normalizeClass66(unref93(ns).e("image")),
          style: normalizeStyle32(unref93(imageStyle))
        }, [
          _ctx.image ? (openBlock80(), createElementBlock67("img", {
            key: 0,
            src: _ctx.image,
            ondragstart: "return false"
          }, null, 8, _hoisted_137)) : renderSlot67(_ctx.$slots, "image", { key: 1 }, () => [
            createVNode39(ImgEmpty)
          ])
        ], 6),
        createElementVNode43("div", {
          class: normalizeClass66(unref93(ns).e("description"))
        }, [
          _ctx.$slots.description ? renderSlot67(_ctx.$slots, "description", { key: 0 }) : (openBlock80(), createElementBlock67("p", _hoisted_224, toDisplayString33(unref93(emptyDescription)), 1))
        ], 2),
        _ctx.$slots.default ? (openBlock80(), createElementBlock67("div", {
          key: 0,
          class: normalizeClass66(unref93(ns).e("bottom"))
        }, [
          renderSlot67(_ctx.$slots, "default")
        ], 2)) : createCommentVNode38("v-if", true)
      ], 2);
    };
  }
});
var Empty = _export_sfc(_sfc_main84, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/empty/src/empty.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/empty/index.mjs
var ElEmpty = withInstall(Empty);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image/src/image2.mjs
import { defineComponent as defineComponent96, useAttrs as useAttrs7, ref as ref80, computed as computed100, nextTick as nextTick27, watch as watch51, onMounted as onMounted35, openBlock as openBlock82, createElementBlock as createElementBlock69, normalizeClass as normalizeClass68, unref as unref95, normalizeStyle as normalizeStyle34, renderSlot as renderSlot69, createElementVNode as createElementVNode45, toDisplayString as toDisplayString34, Fragment as Fragment29, mergeProps as mergeProps18, createCommentVNode as createCommentVNode40, createBlock as createBlock45, withCtx as withCtx45 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image-viewer/src/image-viewer2.mjs
import { defineComponent as defineComponent95, markRaw as markRaw2, ref as ref79, effectScope as effectScope2, shallowRef as shallowRef10, computed as computed99, watch as watch50, nextTick as nextTick26, onMounted as onMounted34, openBlock as openBlock81, createBlock as createBlock44, Teleport as Teleport5, createVNode as createVNode40, Transition as Transition12, withCtx as withCtx44, createElementVNode as createElementVNode44, normalizeClass as normalizeClass67, unref as unref94, normalizeStyle as normalizeStyle33, withModifiers as withModifiers18, createCommentVNode as createCommentVNode39, createElementBlock as createElementBlock68, Fragment as Fragment28, resolveDynamicComponent as resolveDynamicComponent15, renderList as renderList18, withDirectives as withDirectives21, vShow as vShow14, renderSlot as renderSlot68 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image-viewer/src/image-viewer.mjs
var imageViewerProps = buildProps({
  urlList: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  zIndex: {
    type: Number
  },
  initialIndex: {
    type: Number,
    default: 0
  },
  infinite: {
    type: Boolean,
    default: true
  },
  hideOnClickModal: Boolean,
  teleported: Boolean,
  closeOnPressEscape: {
    type: Boolean,
    default: true
  },
  zoomRate: {
    type: Number,
    default: 1.2
  }
});
var imageViewerEmits = {
  close: () => true,
  switch: (index) => isNumber3(index)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image-viewer/src/image-viewer2.mjs
var _hoisted_138 = ["src"];
var __default__58 = defineComponent95({
  name: "ElImageViewer"
});
var _sfc_main85 = defineComponent95({
  ...__default__58,
  props: imageViewerProps,
  emits: imageViewerEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const modes = {
      CONTAIN: {
        name: "contain",
        icon: markRaw2(full_screen_default)
      },
      ORIGINAL: {
        name: "original",
        icon: markRaw2(scale_to_original_default)
      }
    };
    const { t } = useLocale();
    const ns = useNamespace("image-viewer");
    const { nextZIndex } = useZIndex();
    const wrapper = ref79();
    const imgRefs = ref79([]);
    const scopeEventListener = effectScope2();
    const loading = ref79(true);
    const activeIndex = ref79(props.initialIndex);
    const mode = shallowRef10(modes.CONTAIN);
    const transform2 = ref79({
      scale: 1,
      deg: 0,
      offsetX: 0,
      offsetY: 0,
      enableTransition: false
    });
    const isSingle = computed99(() => {
      const { urlList } = props;
      return urlList.length <= 1;
    });
    const isFirst = computed99(() => {
      return activeIndex.value === 0;
    });
    const isLast = computed99(() => {
      return activeIndex.value === props.urlList.length - 1;
    });
    const currentImg = computed99(() => {
      return props.urlList[activeIndex.value];
    });
    const arrowPrevKls = computed99(() => [
      ns.e("btn"),
      ns.e("prev"),
      ns.is("disabled", !props.infinite && isFirst.value)
    ]);
    const arrowNextKls = computed99(() => [
      ns.e("btn"),
      ns.e("next"),
      ns.is("disabled", !props.infinite && isLast.value)
    ]);
    const imgStyle = computed99(() => {
      const { scale, deg, offsetX, offsetY, enableTransition } = transform2.value;
      let translateX = offsetX / scale;
      let translateY = offsetY / scale;
      switch (deg % 360) {
        case 90:
        case -270:
          ;
          [translateX, translateY] = [translateY, -translateX];
          break;
        case 180:
        case -180:
          ;
          [translateX, translateY] = [-translateX, -translateY];
          break;
        case 270:
        case -90:
          ;
          [translateX, translateY] = [-translateY, translateX];
          break;
      }
      const style = {
        transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,
        transition: enableTransition ? "transform .3s" : ""
      };
      if (mode.value.name === modes.CONTAIN.name) {
        style.maxWidth = style.maxHeight = "100%";
      }
      return style;
    });
    const computedZIndex = computed99(() => {
      return isNumber3(props.zIndex) ? props.zIndex : nextZIndex();
    });
    function hide2() {
      unregisterEventListener();
      emit("close");
    }
    function registerEventListener() {
      const keydownHandler = throttle_default((e) => {
        switch (e.code) {
          case EVENT_CODE.esc:
            props.closeOnPressEscape && hide2();
            break;
          case EVENT_CODE.space:
            toggleMode();
            break;
          case EVENT_CODE.left:
            prev();
            break;
          case EVENT_CODE.up:
            handleActions("zoomIn");
            break;
          case EVENT_CODE.right:
            next();
            break;
          case EVENT_CODE.down:
            handleActions("zoomOut");
            break;
        }
      });
      const mousewheelHandler = throttle_default((e) => {
        const delta = e.deltaY || e.deltaX;
        handleActions(delta < 0 ? "zoomIn" : "zoomOut", {
          zoomRate: props.zoomRate,
          enableTransition: false
        });
      });
      scopeEventListener.run(() => {
        useEventListener(document, "keydown", keydownHandler);
        useEventListener(document, "wheel", mousewheelHandler);
      });
    }
    function unregisterEventListener() {
      scopeEventListener.stop();
    }
    function handleImgLoad() {
      loading.value = false;
    }
    function handleImgError(e) {
      loading.value = false;
      e.target.alt = t("el.image.error");
    }
    function handleMouseDown(e) {
      if (loading.value || e.button !== 0 || !wrapper.value)
        return;
      transform2.value.enableTransition = false;
      const { offsetX, offsetY } = transform2.value;
      const startX = e.pageX;
      const startY = e.pageY;
      const dragHandler = throttle_default((ev) => {
        transform2.value = {
          ...transform2.value,
          offsetX: offsetX + ev.pageX - startX,
          offsetY: offsetY + ev.pageY - startY
        };
      });
      const removeMousemove = useEventListener(document, "mousemove", dragHandler);
      useEventListener(document, "mouseup", () => {
        removeMousemove();
      });
      e.preventDefault();
    }
    function reset() {
      transform2.value = {
        scale: 1,
        deg: 0,
        offsetX: 0,
        offsetY: 0,
        enableTransition: false
      };
    }
    function toggleMode() {
      if (loading.value)
        return;
      const modeNames = keysOf(modes);
      const modeValues = Object.values(modes);
      const currentMode = mode.value.name;
      const index = modeValues.findIndex((i) => i.name === currentMode);
      const nextIndex = (index + 1) % modeNames.length;
      mode.value = modes[modeNames[nextIndex]];
      reset();
    }
    function setActiveItem(index) {
      const len = props.urlList.length;
      activeIndex.value = (index + len) % len;
    }
    function prev() {
      if (isFirst.value && !props.infinite)
        return;
      setActiveItem(activeIndex.value - 1);
    }
    function next() {
      if (isLast.value && !props.infinite)
        return;
      setActiveItem(activeIndex.value + 1);
    }
    function handleActions(action, options = {}) {
      if (loading.value)
        return;
      const { zoomRate, rotateDeg, enableTransition } = {
        zoomRate: props.zoomRate,
        rotateDeg: 90,
        enableTransition: true,
        ...options
      };
      switch (action) {
        case "zoomOut":
          if (transform2.value.scale > 0.2) {
            transform2.value.scale = Number.parseFloat((transform2.value.scale / zoomRate).toFixed(3));
          }
          break;
        case "zoomIn":
          if (transform2.value.scale < 7) {
            transform2.value.scale = Number.parseFloat((transform2.value.scale * zoomRate).toFixed(3));
          }
          break;
        case "clockwise":
          transform2.value.deg += rotateDeg;
          break;
        case "anticlockwise":
          transform2.value.deg -= rotateDeg;
          break;
      }
      transform2.value.enableTransition = enableTransition;
    }
    watch50(currentImg, () => {
      nextTick26(() => {
        const $img = imgRefs.value[0];
        if (!($img == null ? void 0 : $img.complete)) {
          loading.value = true;
        }
      });
    });
    watch50(activeIndex, (val) => {
      reset();
      emit("switch", val);
    });
    onMounted34(() => {
      var _a2, _b;
      registerEventListener();
      (_b = (_a2 = wrapper.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
    });
    expose({
      setActiveItem
    });
    return (_ctx, _cache) => {
      return openBlock81(), createBlock44(Teleport5, {
        to: "body",
        disabled: !_ctx.teleported
      }, [
        createVNode40(Transition12, {
          name: "viewer-fade",
          appear: ""
        }, {
          default: withCtx44(() => [
            createElementVNode44("div", {
              ref_key: "wrapper",
              ref: wrapper,
              tabindex: -1,
              class: normalizeClass67(unref94(ns).e("wrapper")),
              style: normalizeStyle33({ zIndex: unref94(computedZIndex) })
            }, [
              createElementVNode44("div", {
                class: normalizeClass67(unref94(ns).e("mask")),
                onClick: _cache[0] || (_cache[0] = withModifiers18(($event) => _ctx.hideOnClickModal && hide2(), ["self"]))
              }, null, 2),
              createCommentVNode39(" CLOSE "),
              createElementVNode44("span", {
                class: normalizeClass67([unref94(ns).e("btn"), unref94(ns).e("close")]),
                onClick: hide2
              }, [
                createVNode40(unref94(ElIcon), null, {
                  default: withCtx44(() => [
                    createVNode40(unref94(close_default))
                  ]),
                  _: 1
                })
              ], 2),
              createCommentVNode39(" ARROW "),
              !unref94(isSingle) ? (openBlock81(), createElementBlock68(Fragment28, { key: 0 }, [
                createElementVNode44("span", {
                  class: normalizeClass67(unref94(arrowPrevKls)),
                  onClick: prev
                }, [
                  createVNode40(unref94(ElIcon), null, {
                    default: withCtx44(() => [
                      createVNode40(unref94(arrow_left_default))
                    ]),
                    _: 1
                  })
                ], 2),
                createElementVNode44("span", {
                  class: normalizeClass67(unref94(arrowNextKls)),
                  onClick: next
                }, [
                  createVNode40(unref94(ElIcon), null, {
                    default: withCtx44(() => [
                      createVNode40(unref94(arrow_right_default))
                    ]),
                    _: 1
                  })
                ], 2)
              ], 64)) : createCommentVNode39("v-if", true),
              createCommentVNode39(" ACTIONS "),
              createElementVNode44("div", {
                class: normalizeClass67([unref94(ns).e("btn"), unref94(ns).e("actions")])
              }, [
                createElementVNode44("div", {
                  class: normalizeClass67(unref94(ns).e("actions__inner"))
                }, [
                  createVNode40(unref94(ElIcon), {
                    onClick: _cache[1] || (_cache[1] = ($event) => handleActions("zoomOut"))
                  }, {
                    default: withCtx44(() => [
                      createVNode40(unref94(zoom_out_default))
                    ]),
                    _: 1
                  }),
                  createVNode40(unref94(ElIcon), {
                    onClick: _cache[2] || (_cache[2] = ($event) => handleActions("zoomIn"))
                  }, {
                    default: withCtx44(() => [
                      createVNode40(unref94(zoom_in_default))
                    ]),
                    _: 1
                  }),
                  createElementVNode44("i", {
                    class: normalizeClass67(unref94(ns).e("actions__divider"))
                  }, null, 2),
                  createVNode40(unref94(ElIcon), { onClick: toggleMode }, {
                    default: withCtx44(() => [
                      (openBlock81(), createBlock44(resolveDynamicComponent15(unref94(mode).icon)))
                    ]),
                    _: 1
                  }),
                  createElementVNode44("i", {
                    class: normalizeClass67(unref94(ns).e("actions__divider"))
                  }, null, 2),
                  createVNode40(unref94(ElIcon), {
                    onClick: _cache[3] || (_cache[3] = ($event) => handleActions("anticlockwise"))
                  }, {
                    default: withCtx44(() => [
                      createVNode40(unref94(refresh_left_default))
                    ]),
                    _: 1
                  }),
                  createVNode40(unref94(ElIcon), {
                    onClick: _cache[4] || (_cache[4] = ($event) => handleActions("clockwise"))
                  }, {
                    default: withCtx44(() => [
                      createVNode40(unref94(refresh_right_default))
                    ]),
                    _: 1
                  })
                ], 2)
              ], 2),
              createCommentVNode39(" CANVAS "),
              createElementVNode44("div", {
                class: normalizeClass67(unref94(ns).e("canvas"))
              }, [
                (openBlock81(true), createElementBlock68(Fragment28, null, renderList18(_ctx.urlList, (url2, i) => {
                  return withDirectives21((openBlock81(), createElementBlock68("img", {
                    ref_for: true,
                    ref: (el) => imgRefs.value[i] = el,
                    key: url2,
                    src: url2,
                    style: normalizeStyle33(unref94(imgStyle)),
                    class: normalizeClass67(unref94(ns).e("img")),
                    onLoad: handleImgLoad,
                    onError: handleImgError,
                    onMousedown: handleMouseDown
                  }, null, 46, _hoisted_138)), [
                    [vShow14, i === activeIndex.value]
                  ]);
                }), 128))
              ], 2),
              renderSlot68(_ctx.$slots, "default")
            ], 6)
          ]),
          _: 3
        })
      ], 8, ["disabled"]);
    };
  }
});
var ImageViewer = _export_sfc(_sfc_main85, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/image-viewer/src/image-viewer.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image-viewer/index.mjs
var ElImageViewer = withInstall(ImageViewer);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image/src/image.mjs
var imageProps = buildProps({
  hideOnClickModal: Boolean,
  src: {
    type: String,
    default: ""
  },
  fit: {
    type: String,
    values: ["", "contain", "cover", "fill", "none", "scale-down"],
    default: ""
  },
  loading: {
    type: String,
    values: ["eager", "lazy"]
  },
  lazy: Boolean,
  scrollContainer: {
    type: definePropType([String, Object])
  },
  previewSrcList: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  previewTeleported: Boolean,
  zIndex: {
    type: Number
  },
  initialIndex: {
    type: Number,
    default: 0
  },
  infinite: {
    type: Boolean,
    default: true
  },
  closeOnPressEscape: {
    type: Boolean,
    default: true
  },
  zoomRate: {
    type: Number,
    default: 1.2
  }
});
var imageEmits = {
  load: (evt) => evt instanceof Event,
  error: (evt) => evt instanceof Event,
  switch: (val) => isNumber3(val),
  close: () => true,
  show: () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image/src/image2.mjs
import { isString as isString18 } from "@vue/shared";
var _hoisted_139 = ["src", "loading"];
var _hoisted_225 = { key: 0 };
var __default__59 = defineComponent96({
  name: "ElImage",
  inheritAttrs: false
});
var _sfc_main86 = defineComponent96({
  ...__default__59,
  props: imageProps,
  emits: imageEmits,
  setup(__props, { emit }) {
    const props = __props;
    let prevOverflow = "";
    const { t } = useLocale();
    const ns = useNamespace("image");
    const rawAttrs = useAttrs7();
    const attrs = useAttrs();
    const imageSrc = ref80();
    const hasLoadError = ref80(false);
    const isLoading = ref80(true);
    const showViewer = ref80(false);
    const container = ref80();
    const _scrollContainer = ref80();
    const supportLoading = isClient && "loading" in HTMLImageElement.prototype;
    let stopScrollListener;
    let stopWheelListener;
    const imageKls = computed100(() => [
      ns.e("inner"),
      preview.value && ns.e("preview"),
      isLoading.value && ns.is("loading")
    ]);
    const containerStyle = computed100(() => rawAttrs.style);
    const imageStyle = computed100(() => {
      const { fit } = props;
      if (isClient && fit) {
        return { objectFit: fit };
      }
      return {};
    });
    const preview = computed100(() => {
      const { previewSrcList } = props;
      return Array.isArray(previewSrcList) && previewSrcList.length > 0;
    });
    const imageIndex = computed100(() => {
      const { previewSrcList, initialIndex } = props;
      let previewIndex = initialIndex;
      if (initialIndex > previewSrcList.length - 1) {
        previewIndex = 0;
      }
      return previewIndex;
    });
    const isManual = computed100(() => {
      if (props.loading === "eager")
        return false;
      return !supportLoading && props.loading === "lazy" || props.lazy;
    });
    const loadImage = () => {
      if (!isClient)
        return;
      isLoading.value = true;
      hasLoadError.value = false;
      imageSrc.value = props.src;
    };
    function handleLoad(event) {
      isLoading.value = false;
      hasLoadError.value = false;
      emit("load", event);
    }
    function handleError(event) {
      isLoading.value = false;
      hasLoadError.value = true;
      emit("error", event);
    }
    function handleLazyLoad() {
      if (isInContainer(container.value, _scrollContainer.value)) {
        loadImage();
        removeLazyLoadListener();
      }
    }
    const lazyLoadHandler = useThrottleFn(handleLazyLoad, 200, true);
    async function addLazyLoadListener() {
      var _a2;
      if (!isClient)
        return;
      await nextTick27();
      const { scrollContainer } = props;
      if (isElement2(scrollContainer)) {
        _scrollContainer.value = scrollContainer;
      } else if (isString18(scrollContainer) && scrollContainer !== "") {
        _scrollContainer.value = (_a2 = document.querySelector(scrollContainer)) != null ? _a2 : void 0;
      } else if (container.value) {
        _scrollContainer.value = getScrollContainer(container.value);
      }
      if (_scrollContainer.value) {
        stopScrollListener = useEventListener(_scrollContainer, "scroll", lazyLoadHandler);
        setTimeout(() => handleLazyLoad(), 100);
      }
    }
    function removeLazyLoadListener() {
      if (!isClient || !_scrollContainer.value || !lazyLoadHandler)
        return;
      stopScrollListener == null ? void 0 : stopScrollListener();
      _scrollContainer.value = void 0;
    }
    function wheelHandler(e) {
      if (!e.ctrlKey)
        return;
      if (e.deltaY < 0) {
        e.preventDefault();
        return false;
      } else if (e.deltaY > 0) {
        e.preventDefault();
        return false;
      }
    }
    function clickHandler() {
      if (!preview.value)
        return;
      stopWheelListener = useEventListener("wheel", wheelHandler, {
        passive: false
      });
      prevOverflow = document.body.style.overflow;
      document.body.style.overflow = "hidden";
      showViewer.value = true;
      emit("show");
    }
    function closeViewer() {
      stopWheelListener == null ? void 0 : stopWheelListener();
      document.body.style.overflow = prevOverflow;
      showViewer.value = false;
      emit("close");
    }
    function switchViewer(val) {
      emit("switch", val);
    }
    watch51(() => props.src, () => {
      if (isManual.value) {
        isLoading.value = true;
        hasLoadError.value = false;
        removeLazyLoadListener();
        addLazyLoadListener();
      } else {
        loadImage();
      }
    });
    onMounted35(() => {
      if (isManual.value) {
        addLazyLoadListener();
      } else {
        loadImage();
      }
    });
    return (_ctx, _cache) => {
      return openBlock82(), createElementBlock69("div", {
        ref_key: "container",
        ref: container,
        class: normalizeClass68([unref95(ns).b(), _ctx.$attrs.class]),
        style: normalizeStyle34(unref95(containerStyle))
      }, [
        hasLoadError.value ? renderSlot69(_ctx.$slots, "error", { key: 0 }, () => [
          createElementVNode45("div", {
            class: normalizeClass68(unref95(ns).e("error"))
          }, toDisplayString34(unref95(t)("el.image.error")), 3)
        ]) : (openBlock82(), createElementBlock69(Fragment29, { key: 1 }, [
          imageSrc.value !== void 0 ? (openBlock82(), createElementBlock69("img", mergeProps18({ key: 0 }, unref95(attrs), {
            src: imageSrc.value,
            loading: _ctx.loading,
            style: unref95(imageStyle),
            class: unref95(imageKls),
            onClick: clickHandler,
            onLoad: handleLoad,
            onError: handleError
          }), null, 16, _hoisted_139)) : createCommentVNode40("v-if", true),
          isLoading.value ? (openBlock82(), createElementBlock69("div", {
            key: 1,
            class: normalizeClass68(unref95(ns).e("wrapper"))
          }, [
            renderSlot69(_ctx.$slots, "placeholder", {}, () => [
              createElementVNode45("div", {
                class: normalizeClass68(unref95(ns).e("placeholder"))
              }, null, 2)
            ])
          ], 2)) : createCommentVNode40("v-if", true)
        ], 64)),
        unref95(preview) ? (openBlock82(), createElementBlock69(Fragment29, { key: 2 }, [
          showViewer.value ? (openBlock82(), createBlock45(unref95(ElImageViewer), {
            key: 0,
            "z-index": _ctx.zIndex,
            "initial-index": unref95(imageIndex),
            infinite: _ctx.infinite,
            "zoom-rate": _ctx.zoomRate,
            "url-list": _ctx.previewSrcList,
            "hide-on-click-modal": _ctx.hideOnClickModal,
            teleported: _ctx.previewTeleported,
            "close-on-press-escape": _ctx.closeOnPressEscape,
            onClose: closeViewer,
            onSwitch: switchViewer
          }, {
            default: withCtx45(() => [
              _ctx.$slots.viewer ? (openBlock82(), createElementBlock69("div", _hoisted_225, [
                renderSlot69(_ctx.$slots, "viewer")
              ])) : createCommentVNode40("v-if", true)
            ]),
            _: 3
          }, 8, ["z-index", "initial-index", "infinite", "zoom-rate", "url-list", "hide-on-click-modal", "teleported", "close-on-press-escape"])) : createCommentVNode40("v-if", true)
        ], 64)) : createCommentVNode40("v-if", true)
      ], 6);
    };
  }
});
var Image2 = _export_sfc(_sfc_main86, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/image/src/image.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/image/index.mjs
var ElImage = withInstall(Image2);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input-number/src/input-number2.mjs
import { defineComponent as defineComponent97, ref as ref81, reactive as reactive13, computed as computed101, watch as watch52, onMounted as onMounted36, onUpdated as onUpdated4, openBlock as openBlock83, createElementBlock as createElementBlock70, normalizeClass as normalizeClass69, unref as unref96, withModifiers as withModifiers19, withDirectives as withDirectives22, withKeys as withKeys8, createVNode as createVNode41, withCtx as withCtx46, createBlock as createBlock46, createCommentVNode as createCommentVNode41 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input-number/src/input-number.mjs
var inputNumberProps = buildProps({
  id: {
    type: String,
    default: void 0
  },
  step: {
    type: Number,
    default: 1
  },
  stepStrictly: Boolean,
  max: {
    type: Number,
    default: Number.POSITIVE_INFINITY
  },
  min: {
    type: Number,
    default: Number.NEGATIVE_INFINITY
  },
  modelValue: Number,
  readonly: Boolean,
  disabled: Boolean,
  size: useSizeProp,
  controls: {
    type: Boolean,
    default: true
  },
  controlsPosition: {
    type: String,
    default: "",
    values: ["", "right"]
  },
  valueOnClear: {
    type: [String, Number, null],
    validator: (val) => val === null || isNumber3(val) || ["min", "max"].includes(val),
    default: null
  },
  name: String,
  label: String,
  placeholder: String,
  precision: {
    type: Number,
    validator: (val) => val >= 0 && val === Number.parseInt(`${val}`, 10)
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var inputNumberEmits = {
  [CHANGE_EVENT]: (cur, prev) => prev !== cur,
  blur: (e) => e instanceof FocusEvent,
  focus: (e) => e instanceof FocusEvent,
  [INPUT_EVENT]: (val) => isNumber3(val) || isNil_default(val),
  [UPDATE_MODEL_EVENT]: (val) => isNumber3(val) || isNil_default(val)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input-number/src/input-number2.mjs
import { isString as isString19 } from "@vue/shared";
var _hoisted_140 = ["aria-label", "onKeydown"];
var _hoisted_226 = ["aria-label", "onKeydown"];
var __default__60 = defineComponent97({
  name: "ElInputNumber"
});
var _sfc_main87 = defineComponent97({
  ...__default__60,
  props: inputNumberProps,
  emits: inputNumberEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const { t } = useLocale();
    const ns = useNamespace("input-number");
    const input = ref81();
    const data = reactive13({
      currentValue: props.modelValue,
      userInput: null
    });
    const { formItem } = useFormItem();
    const minDisabled = computed101(() => isNumber3(props.modelValue) && props.modelValue <= props.min);
    const maxDisabled = computed101(() => isNumber3(props.modelValue) && props.modelValue >= props.max);
    const numPrecision = computed101(() => {
      const stepPrecision = getPrecision(props.step);
      if (!isUndefined2(props.precision)) {
        if (stepPrecision > props.precision) {
          debugWarn("InputNumber", "precision should not be less than the decimal places of step");
        }
        return props.precision;
      } else {
        return Math.max(getPrecision(props.modelValue), stepPrecision);
      }
    });
    const controlsAtRight = computed101(() => {
      return props.controls && props.controlsPosition === "right";
    });
    const inputNumberSize = useFormSize();
    const inputNumberDisabled = useFormDisabled();
    const displayValue = computed101(() => {
      if (data.userInput !== null) {
        return data.userInput;
      }
      let currentValue = data.currentValue;
      if (isNil_default(currentValue))
        return "";
      if (isNumber3(currentValue)) {
        if (Number.isNaN(currentValue))
          return "";
        if (!isUndefined2(props.precision)) {
          currentValue = currentValue.toFixed(props.precision);
        }
      }
      return currentValue;
    });
    const toPrecision = (num, pre) => {
      if (isUndefined2(pre))
        pre = numPrecision.value;
      if (pre === 0)
        return Math.round(num);
      let snum = String(num);
      const pointPos = snum.indexOf(".");
      if (pointPos === -1)
        return num;
      const nums = snum.replace(".", "").split("");
      const datum = nums[pointPos + pre];
      if (!datum)
        return num;
      const length = snum.length;
      if (snum.charAt(length - 1) === "5") {
        snum = `${snum.slice(0, Math.max(0, length - 1))}6`;
      }
      return Number.parseFloat(Number(snum).toFixed(pre));
    };
    const getPrecision = (value) => {
      if (isNil_default(value))
        return 0;
      const valueString = value.toString();
      const dotPosition = valueString.indexOf(".");
      let precision = 0;
      if (dotPosition !== -1) {
        precision = valueString.length - dotPosition - 1;
      }
      return precision;
    };
    const ensurePrecision = (val, coefficient = 1) => {
      if (!isNumber3(val))
        return data.currentValue;
      return toPrecision(val + props.step * coefficient);
    };
    const increase = () => {
      if (props.readonly || inputNumberDisabled.value || maxDisabled.value)
        return;
      const value = Number(displayValue.value) || 0;
      const newVal = ensurePrecision(value);
      setCurrentValue(newVal);
      emit(INPUT_EVENT, data.currentValue);
    };
    const decrease = () => {
      if (props.readonly || inputNumberDisabled.value || minDisabled.value)
        return;
      const value = Number(displayValue.value) || 0;
      const newVal = ensurePrecision(value, -1);
      setCurrentValue(newVal);
      emit(INPUT_EVENT, data.currentValue);
    };
    const verifyValue = (value, update2) => {
      const { max: max5, min: min5, step, precision, stepStrictly, valueOnClear } = props;
      if (max5 < min5) {
        throwError("InputNumber", "min should not be greater than max.");
      }
      let newVal = Number(value);
      if (isNil_default(value) || Number.isNaN(newVal)) {
        return null;
      }
      if (value === "") {
        if (valueOnClear === null) {
          return null;
        }
        newVal = isString19(valueOnClear) ? { min: min5, max: max5 }[valueOnClear] : valueOnClear;
      }
      if (stepStrictly) {
        newVal = toPrecision(Math.round(newVal / step) * step, precision);
      }
      if (!isUndefined2(precision)) {
        newVal = toPrecision(newVal, precision);
      }
      if (newVal > max5 || newVal < min5) {
        newVal = newVal > max5 ? max5 : min5;
        update2 && emit(UPDATE_MODEL_EVENT, newVal);
      }
      return newVal;
    };
    const setCurrentValue = (value, emitChange = true) => {
      var _a2;
      const oldVal = data.currentValue;
      const newVal = verifyValue(value);
      if (!emitChange) {
        emit(UPDATE_MODEL_EVENT, newVal);
        return;
      }
      if (oldVal === newVal)
        return;
      data.userInput = null;
      emit(UPDATE_MODEL_EVENT, newVal);
      emit(CHANGE_EVENT, newVal, oldVal);
      if (props.validateEvent) {
        (_a2 = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a2.call(formItem, "change").catch((err) => debugWarn(err));
      }
      data.currentValue = newVal;
    };
    const handleInput = (value) => {
      data.userInput = value;
      const newVal = value === "" ? null : Number(value);
      emit(INPUT_EVENT, newVal);
      setCurrentValue(newVal, false);
    };
    const handleInputChange = (value) => {
      const newVal = value !== "" ? Number(value) : "";
      if (isNumber3(newVal) && !Number.isNaN(newVal) || value === "") {
        setCurrentValue(newVal);
      }
      data.userInput = null;
    };
    const focus = () => {
      var _a2, _b;
      (_b = (_a2 = input.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
    };
    const blur = () => {
      var _a2, _b;
      (_b = (_a2 = input.value) == null ? void 0 : _a2.blur) == null ? void 0 : _b.call(_a2);
    };
    const handleFocus = (event) => {
      emit("focus", event);
    };
    const handleBlur = (event) => {
      var _a2;
      emit("blur", event);
      if (props.validateEvent) {
        (_a2 = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a2.call(formItem, "blur").catch((err) => debugWarn(err));
      }
    };
    watch52(() => props.modelValue, (value) => {
      const userInput = verifyValue(data.userInput);
      const newValue = verifyValue(value, true);
      if (!isNumber3(userInput) && (!userInput || userInput !== newValue)) {
        data.currentValue = newValue;
        data.userInput = null;
      }
    }, { immediate: true });
    onMounted36(() => {
      var _a2;
      const { min: min5, max: max5, modelValue } = props;
      const innerInput = (_a2 = input.value) == null ? void 0 : _a2.input;
      innerInput.setAttribute("role", "spinbutton");
      if (Number.isFinite(max5)) {
        innerInput.setAttribute("aria-valuemax", String(max5));
      } else {
        innerInput.removeAttribute("aria-valuemax");
      }
      if (Number.isFinite(min5)) {
        innerInput.setAttribute("aria-valuemin", String(min5));
      } else {
        innerInput.removeAttribute("aria-valuemin");
      }
      innerInput.setAttribute("aria-valuenow", String(data.currentValue));
      innerInput.setAttribute("aria-disabled", String(inputNumberDisabled.value));
      if (!isNumber3(modelValue) && modelValue != null) {
        let val = Number(modelValue);
        if (Number.isNaN(val)) {
          val = null;
        }
        emit(UPDATE_MODEL_EVENT, val);
      }
    });
    onUpdated4(() => {
      var _a2;
      const innerInput = (_a2 = input.value) == null ? void 0 : _a2.input;
      innerInput == null ? void 0 : innerInput.setAttribute("aria-valuenow", `${data.currentValue}`);
    });
    expose({
      focus,
      blur
    });
    return (_ctx, _cache) => {
      return openBlock83(), createElementBlock70("div", {
        class: normalizeClass69([
          unref96(ns).b(),
          unref96(ns).m(unref96(inputNumberSize)),
          unref96(ns).is("disabled", unref96(inputNumberDisabled)),
          unref96(ns).is("without-controls", !_ctx.controls),
          unref96(ns).is("controls-right", unref96(controlsAtRight))
        ]),
        onDragstart: _cache[1] || (_cache[1] = withModifiers19(() => {
        }, ["prevent"]))
      }, [
        _ctx.controls ? withDirectives22((openBlock83(), createElementBlock70("span", {
          key: 0,
          role: "button",
          "aria-label": unref96(t)("el.inputNumber.decrease"),
          class: normalizeClass69([unref96(ns).e("decrease"), unref96(ns).is("disabled", unref96(minDisabled))]),
          onKeydown: withKeys8(decrease, ["enter"])
        }, [
          createVNode41(unref96(ElIcon), null, {
            default: withCtx46(() => [
              unref96(controlsAtRight) ? (openBlock83(), createBlock46(unref96(arrow_down_default), { key: 0 })) : (openBlock83(), createBlock46(unref96(minus_default), { key: 1 }))
            ]),
            _: 1
          })
        ], 42, _hoisted_140)), [
          [unref96(vRepeatClick), decrease]
        ]) : createCommentVNode41("v-if", true),
        _ctx.controls ? withDirectives22((openBlock83(), createElementBlock70("span", {
          key: 1,
          role: "button",
          "aria-label": unref96(t)("el.inputNumber.increase"),
          class: normalizeClass69([unref96(ns).e("increase"), unref96(ns).is("disabled", unref96(maxDisabled))]),
          onKeydown: withKeys8(increase, ["enter"])
        }, [
          createVNode41(unref96(ElIcon), null, {
            default: withCtx46(() => [
              unref96(controlsAtRight) ? (openBlock83(), createBlock46(unref96(arrow_up_default), { key: 0 })) : (openBlock83(), createBlock46(unref96(plus_default), { key: 1 }))
            ]),
            _: 1
          })
        ], 42, _hoisted_226)), [
          [unref96(vRepeatClick), increase]
        ]) : createCommentVNode41("v-if", true),
        createVNode41(unref96(ElInput), {
          id: _ctx.id,
          ref_key: "input",
          ref: input,
          type: "number",
          step: _ctx.step,
          "model-value": unref96(displayValue),
          placeholder: _ctx.placeholder,
          readonly: _ctx.readonly,
          disabled: unref96(inputNumberDisabled),
          size: unref96(inputNumberSize),
          max: _ctx.max,
          min: _ctx.min,
          name: _ctx.name,
          label: _ctx.label,
          "validate-event": false,
          onWheel: _cache[0] || (_cache[0] = withModifiers19(() => {
          }, ["prevent"])),
          onKeydown: [
            withKeys8(withModifiers19(increase, ["prevent"]), ["up"]),
            withKeys8(withModifiers19(decrease, ["prevent"]), ["down"])
          ],
          onBlur: handleBlur,
          onFocus: handleFocus,
          onInput: handleInput,
          onChange: handleInputChange
        }, null, 8, ["id", "step", "model-value", "placeholder", "readonly", "disabled", "size", "max", "min", "name", "label", "onKeydown"])
      ], 34);
    };
  }
});
var InputNumber = _export_sfc(_sfc_main87, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/input-number/src/input-number.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/input-number/index.mjs
var ElInputNumber = withInstall(InputNumber);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/link/src/link2.mjs
import { defineComponent as defineComponent98, computed as computed102, openBlock as openBlock84, createElementBlock as createElementBlock71, normalizeClass as normalizeClass70, unref as unref97, createBlock as createBlock47, withCtx as withCtx47, resolveDynamicComponent as resolveDynamicComponent16, createCommentVNode as createCommentVNode42, renderSlot as renderSlot70 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/link/src/link.mjs
var linkProps = buildProps({
  type: {
    type: String,
    values: ["primary", "success", "warning", "info", "danger", "default"],
    default: "default"
  },
  underline: {
    type: Boolean,
    default: true
  },
  disabled: { type: Boolean, default: false },
  href: { type: String, default: "" },
  icon: {
    type: iconPropType
  }
});
var linkEmits = {
  click: (evt) => evt instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/link/src/link2.mjs
var _hoisted_141 = ["href"];
var __default__61 = defineComponent98({
  name: "ElLink"
});
var _sfc_main88 = defineComponent98({
  ...__default__61,
  props: linkProps,
  emits: linkEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("link");
    const linkKls = computed102(() => [
      ns.b(),
      ns.m(props.type),
      ns.is("disabled", props.disabled),
      ns.is("underline", props.underline && !props.disabled)
    ]);
    function handleClick(event) {
      if (!props.disabled)
        emit("click", event);
    }
    return (_ctx, _cache) => {
      return openBlock84(), createElementBlock71("a", {
        class: normalizeClass70(unref97(linkKls)),
        href: _ctx.disabled || !_ctx.href ? void 0 : _ctx.href,
        onClick: handleClick
      }, [
        _ctx.icon ? (openBlock84(), createBlock47(unref97(ElIcon), { key: 0 }, {
          default: withCtx47(() => [
            (openBlock84(), createBlock47(resolveDynamicComponent16(_ctx.icon)))
          ]),
          _: 1
        })) : createCommentVNode42("v-if", true),
        _ctx.$slots.default ? (openBlock84(), createElementBlock71("span", {
          key: 1,
          class: normalizeClass70(unref97(ns).e("inner"))
        }, [
          renderSlot70(_ctx.$slots, "default")
        ], 2)) : createCommentVNode42("v-if", true),
        _ctx.$slots.icon ? renderSlot70(_ctx.$slots, "icon", { key: 2 }) : createCommentVNode42("v-if", true)
      ], 10, _hoisted_141);
    };
  }
});
var Link = _export_sfc(_sfc_main88, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/link/src/link.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/link/index.mjs
var ElLink = withInstall(Link);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu.mjs
import { defineComponent as defineComponent101, getCurrentInstance as getCurrentInstance24, ref as ref83, computed as computed107, nextTick as nextTick28, watch as watch54, watchEffect as watchEffect7, provide as provide30, reactive as reactive15, onMounted as onMounted38, h as h7 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/utils/submenu.mjs
var SubMenu = class {
  constructor(parent2, domNode) {
    this.parent = parent2;
    this.domNode = domNode;
    this.subIndex = 0;
    this.subIndex = 0;
    this.init();
  }
  init() {
    this.subMenuItems = this.domNode.querySelectorAll("li");
    this.addListeners();
  }
  gotoSubIndex(idx) {
    if (idx === this.subMenuItems.length) {
      idx = 0;
    } else if (idx < 0) {
      idx = this.subMenuItems.length - 1;
    }
    ;
    this.subMenuItems[idx].focus();
    this.subIndex = idx;
  }
  addListeners() {
    const parentNode = this.parent.domNode;
    Array.prototype.forEach.call(this.subMenuItems, (el) => {
      el.addEventListener("keydown", (event) => {
        let prevDef = false;
        switch (event.code) {
          case EVENT_CODE.down: {
            this.gotoSubIndex(this.subIndex + 1);
            prevDef = true;
            break;
          }
          case EVENT_CODE.up: {
            this.gotoSubIndex(this.subIndex - 1);
            prevDef = true;
            break;
          }
          case EVENT_CODE.tab: {
            triggerEvent(parentNode, "mouseleave");
            break;
          }
          case EVENT_CODE.enter:
          case EVENT_CODE.space: {
            prevDef = true;
            event.currentTarget.click();
            break;
          }
        }
        if (prevDef) {
          event.preventDefault();
          event.stopPropagation();
        }
        return false;
      });
    });
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/utils/menu-item.mjs
var MenuItem = class {
  constructor(domNode, namespace) {
    this.domNode = domNode;
    this.submenu = null;
    this.submenu = null;
    this.init(namespace);
  }
  init(namespace) {
    this.domNode.setAttribute("tabindex", "0");
    const menuChild = this.domNode.querySelector(`.${namespace}-menu`);
    if (menuChild) {
      this.submenu = new SubMenu(this, menuChild);
    }
    this.addListeners();
  }
  addListeners() {
    this.domNode.addEventListener("keydown", (event) => {
      let prevDef = false;
      switch (event.code) {
        case EVENT_CODE.down: {
          triggerEvent(event.currentTarget, "mouseenter");
          this.submenu && this.submenu.gotoSubIndex(0);
          prevDef = true;
          break;
        }
        case EVENT_CODE.up: {
          triggerEvent(event.currentTarget, "mouseenter");
          this.submenu && this.submenu.gotoSubIndex(this.submenu.subMenuItems.length - 1);
          prevDef = true;
          break;
        }
        case EVENT_CODE.tab: {
          triggerEvent(event.currentTarget, "mouseleave");
          break;
        }
        case EVENT_CODE.enter:
        case EVENT_CODE.space: {
          prevDef = true;
          event.currentTarget.click();
          break;
        }
      }
      if (prevDef) {
        event.preventDefault();
      }
    });
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/utils/menu-bar.mjs
var Menu = class {
  constructor(domNode, namespace) {
    this.domNode = domNode;
    this.init(namespace);
  }
  init(namespace) {
    const menuChildren = this.domNode.childNodes;
    Array.from(menuChildren).forEach((child) => {
      if (child.nodeType === 1) {
        new MenuItem(child, namespace);
      }
    });
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-collapse-transition.mjs
import { defineComponent as defineComponent99, openBlock as openBlock85, createBlock as createBlock48, Transition as Transition13, mergeProps as mergeProps19, withCtx as withCtx48, renderSlot as renderSlot71 } from "vue";
var _sfc_main89 = defineComponent99({
  name: "ElMenuCollapseTransition",
  setup() {
    const ns = useNamespace("menu");
    const listeners = {
      onBeforeEnter: (el) => el.style.opacity = "0.2",
      onEnter(el, done) {
        addClass(el, `${ns.namespace.value}-opacity-transition`);
        el.style.opacity = "1";
        done();
      },
      onAfterEnter(el) {
        removeClass(el, `${ns.namespace.value}-opacity-transition`);
        el.style.opacity = "";
      },
      onBeforeLeave(el) {
        if (!el.dataset) {
          ;
          el.dataset = {};
        }
        if (hasClass(el, ns.m("collapse"))) {
          removeClass(el, ns.m("collapse"));
          el.dataset.oldOverflow = el.style.overflow;
          el.dataset.scrollWidth = el.clientWidth.toString();
          addClass(el, ns.m("collapse"));
        } else {
          addClass(el, ns.m("collapse"));
          el.dataset.oldOverflow = el.style.overflow;
          el.dataset.scrollWidth = el.clientWidth.toString();
          removeClass(el, ns.m("collapse"));
        }
        el.style.width = `${el.scrollWidth}px`;
        el.style.overflow = "hidden";
      },
      onLeave(el) {
        addClass(el, "horizontal-collapse-transition");
        el.style.width = `${el.dataset.scrollWidth}px`;
      }
    };
    return {
      listeners
    };
  }
});
function _sfc_render18(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock85(), createBlock48(Transition13, mergeProps19({ mode: "out-in" }, _ctx.listeners), {
    default: withCtx48(() => [
      renderSlot71(_ctx.$slots, "default")
    ]),
    _: 3
  }, 16);
}
var ElMenuCollapseTransition = _export_sfc(_sfc_main89, [["render", _sfc_render18], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-collapse-transition.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/sub-menu.mjs
import { defineComponent as defineComponent100, computed as computed106, getCurrentInstance as getCurrentInstance23, inject as inject53, ref as ref82, reactive as reactive14, watch as watch53, provide as provide29, onMounted as onMounted37, onBeforeUnmount as onBeforeUnmount17, h as h6, Fragment as Fragment30, withDirectives as withDirectives23, vShow as vShow15 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/use-menu.mjs
import { computed as computed103 } from "vue";
function useMenu(instance, currentIndex) {
  const indexPath = computed103(() => {
    let parent2 = instance.parent;
    const path = [currentIndex.value];
    while (parent2.type.name !== "ElMenu") {
      if (parent2.props.index) {
        path.unshift(parent2.props.index);
      }
      parent2 = parent2.parent;
    }
    return path;
  });
  const parentMenu = computed103(() => {
    let parent2 = instance.parent;
    while (parent2 && !["ElMenu", "ElSubMenu"].includes(parent2.type.name)) {
      parent2 = parent2.parent;
    }
    return parent2;
  });
  return {
    parentMenu,
    indexPath
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/use-menu-css-var.mjs
import { computed as computed105 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/use-menu-color.mjs
import { computed as computed104 } from "vue";
function useMenuColor(props) {
  const menuBarColor = computed104(() => {
    const color = props.backgroundColor;
    if (!color) {
      return "";
    } else {
      return new TinyColor(color).shade(20).toString();
    }
  });
  return menuBarColor;
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/use-menu-css-var.mjs
var useMenuCssVar = (props, level) => {
  const ns = useNamespace("menu");
  return computed105(() => {
    return ns.cssVarBlock({
      "text-color": props.textColor || "",
      "hover-text-color": props.textColor || "",
      "bg-color": props.backgroundColor || "",
      "hover-bg-color": useMenuColor(props).value || "",
      "active-color": props.activeTextColor || "",
      level: `${level}`
    });
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/sub-menu.mjs
import { isString as isString20 } from "@vue/shared";
var subMenuProps = buildProps({
  index: {
    type: String,
    required: true
  },
  showTimeout: {
    type: Number,
    default: 300
  },
  hideTimeout: {
    type: Number,
    default: 300
  },
  popperClass: String,
  disabled: Boolean,
  popperAppendToBody: {
    type: Boolean,
    default: void 0
  },
  teleported: {
    type: Boolean,
    default: void 0
  },
  popperOffset: {
    type: Number,
    default: 6
  },
  expandCloseIcon: {
    type: iconPropType
  },
  expandOpenIcon: {
    type: iconPropType
  },
  collapseCloseIcon: {
    type: iconPropType
  },
  collapseOpenIcon: {
    type: iconPropType
  }
});
var COMPONENT_NAME13 = "ElSubMenu";
var SubMenu2 = defineComponent100({
  name: COMPONENT_NAME13,
  props: subMenuProps,
  setup(props, { slots, expose }) {
    useDeprecated({
      from: "popper-append-to-body",
      replacement: "teleported",
      scope: COMPONENT_NAME13,
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/menu.html#submenu-attributes"
    }, computed106(() => props.popperAppendToBody !== void 0));
    const instance = getCurrentInstance23();
    const { indexPath, parentMenu } = useMenu(instance, computed106(() => props.index));
    const nsMenu = useNamespace("menu");
    const nsSubMenu = useNamespace("sub-menu");
    const rootMenu = inject53("rootMenu");
    if (!rootMenu)
      throwError(COMPONENT_NAME13, "can not inject root menu");
    const subMenu = inject53(`subMenu:${parentMenu.value.uid}`);
    if (!subMenu)
      throwError(COMPONENT_NAME13, "can not inject sub menu");
    const items = ref82({});
    const subMenus = ref82({});
    let timeout;
    const mouseInChild = ref82(false);
    const verticalTitleRef = ref82();
    const vPopper = ref82(null);
    const currentPlacement = computed106(() => mode.value === "horizontal" && isFirstLevel.value ? "bottom-start" : "right-start");
    const subMenuTitleIcon = computed106(() => {
      return mode.value === "horizontal" && isFirstLevel.value || mode.value === "vertical" && !rootMenu.props.collapse ? props.expandCloseIcon && props.expandOpenIcon ? opened.value ? props.expandOpenIcon : props.expandCloseIcon : arrow_down_default : props.collapseCloseIcon && props.collapseOpenIcon ? opened.value ? props.collapseOpenIcon : props.collapseCloseIcon : arrow_right_default;
    });
    const isFirstLevel = computed106(() => {
      return subMenu.level === 0;
    });
    const appendToBody = computed106(() => {
      var _a2;
      const value = (_a2 = props.teleported) != null ? _a2 : props.popperAppendToBody;
      return value === void 0 ? isFirstLevel.value : value;
    });
    const menuTransitionName = computed106(() => rootMenu.props.collapse ? `${nsMenu.namespace.value}-zoom-in-left` : `${nsMenu.namespace.value}-zoom-in-top`);
    const fallbackPlacements = computed106(() => mode.value === "horizontal" && isFirstLevel.value ? [
      "bottom-start",
      "bottom-end",
      "top-start",
      "top-end",
      "right-start",
      "left-start"
    ] : [
      "right-start",
      "left-start",
      "bottom-start",
      "bottom-end",
      "top-start",
      "top-end"
    ]);
    const opened = computed106(() => rootMenu.openedMenus.includes(props.index));
    const active = computed106(() => {
      let isActive = false;
      Object.values(items.value).forEach((item2) => {
        if (item2.active) {
          isActive = true;
        }
      });
      Object.values(subMenus.value).forEach((subItem) => {
        if (subItem.active) {
          isActive = true;
        }
      });
      return isActive;
    });
    const backgroundColor = computed106(() => rootMenu.props.backgroundColor || "");
    const activeTextColor = computed106(() => rootMenu.props.activeTextColor || "");
    const textColor = computed106(() => rootMenu.props.textColor || "");
    const mode = computed106(() => rootMenu.props.mode);
    const item = reactive14({
      index: props.index,
      indexPath,
      active
    });
    const ulStyle = useMenuCssVar(rootMenu.props, subMenu.level + 1);
    const titleStyle = computed106(() => {
      if (mode.value !== "horizontal") {
        return {
          color: textColor.value
        };
      }
      return {
        borderBottomColor: active.value ? rootMenu.props.activeTextColor ? activeTextColor.value : "" : "transparent",
        color: active.value ? activeTextColor.value : textColor.value
      };
    });
    const doDestroy = () => {
      var _a2, _b, _c;
      return (_c = (_b = (_a2 = vPopper.value) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.popperInstanceRef) == null ? void 0 : _c.destroy();
    };
    const handleCollapseToggle = (value) => {
      if (!value) {
        doDestroy();
      }
    };
    const handleClick = () => {
      if (rootMenu.props.menuTrigger === "hover" && rootMenu.props.mode === "horizontal" || rootMenu.props.collapse && rootMenu.props.mode === "vertical" || props.disabled)
        return;
      rootMenu.handleSubMenuClick({
        index: props.index,
        indexPath: indexPath.value,
        active: active.value
      });
    };
    const handleMouseenter = (event, showTimeout = props.showTimeout) => {
      var _a2;
      if (event.type === "focus") {
        return;
      }
      if (rootMenu.props.menuTrigger === "click" && rootMenu.props.mode === "horizontal" || !rootMenu.props.collapse && rootMenu.props.mode === "vertical" || props.disabled) {
        return;
      }
      subMenu.mouseInChild.value = true;
      timeout == null ? void 0 : timeout();
      ({ stop: timeout } = useTimeoutFn(() => {
        rootMenu.openMenu(props.index, indexPath.value);
      }, showTimeout));
      if (appendToBody.value) {
        (_a2 = parentMenu.value.vnode.el) == null ? void 0 : _a2.dispatchEvent(new MouseEvent("mouseenter"));
      }
    };
    const handleMouseleave = (deepDispatch = false) => {
      var _a2, _b;
      if (rootMenu.props.menuTrigger === "click" && rootMenu.props.mode === "horizontal" || !rootMenu.props.collapse && rootMenu.props.mode === "vertical") {
        return;
      }
      timeout == null ? void 0 : timeout();
      subMenu.mouseInChild.value = false;
      ({ stop: timeout } = useTimeoutFn(() => !mouseInChild.value && rootMenu.closeMenu(props.index, indexPath.value), props.hideTimeout));
      if (appendToBody.value && deepDispatch) {
        if (((_a2 = instance.parent) == null ? void 0 : _a2.type.name) === "ElSubMenu") {
          (_b = subMenu.handleMouseleave) == null ? void 0 : _b.call(subMenu, true);
        }
      }
    };
    watch53(() => rootMenu.props.collapse, (value) => handleCollapseToggle(Boolean(value)));
    {
      const addSubMenu = (item2) => {
        subMenus.value[item2.index] = item2;
      };
      const removeSubMenu = (item2) => {
        delete subMenus.value[item2.index];
      };
      provide29(`subMenu:${instance.uid}`, {
        addSubMenu,
        removeSubMenu,
        handleMouseleave,
        mouseInChild,
        level: subMenu.level + 1
      });
    }
    expose({
      opened
    });
    onMounted37(() => {
      rootMenu.addSubMenu(item);
      subMenu.addSubMenu(item);
    });
    onBeforeUnmount17(() => {
      subMenu.removeSubMenu(item);
      rootMenu.removeSubMenu(item);
    });
    return () => {
      var _a2;
      const titleTag = [
        (_a2 = slots.title) == null ? void 0 : _a2.call(slots),
        h6(ElIcon, {
          class: nsSubMenu.e("icon-arrow"),
          style: {
            transform: opened.value ? props.expandCloseIcon && props.expandOpenIcon || props.collapseCloseIcon && props.collapseOpenIcon && rootMenu.props.collapse ? "none" : "rotateZ(180deg)" : "none"
          }
        }, {
          default: () => isString20(subMenuTitleIcon.value) ? h6(instance.appContext.components[subMenuTitleIcon.value]) : h6(subMenuTitleIcon.value)
        })
      ];
      const child = rootMenu.isMenuPopup ? h6(ElTooltip, {
        ref: vPopper,
        visible: opened.value,
        effect: "light",
        pure: true,
        offset: props.popperOffset,
        showArrow: false,
        persistent: true,
        popperClass: props.popperClass,
        placement: currentPlacement.value,
        teleported: appendToBody.value,
        fallbackPlacements: fallbackPlacements.value,
        transition: menuTransitionName.value,
        gpuAcceleration: false
      }, {
        content: () => {
          var _a22;
          return h6("div", {
            class: [
              nsMenu.m(mode.value),
              nsMenu.m("popup-container"),
              props.popperClass
            ],
            onMouseenter: (evt) => handleMouseenter(evt, 100),
            onMouseleave: () => handleMouseleave(true),
            onFocus: (evt) => handleMouseenter(evt, 100)
          }, [
            h6("ul", {
              class: [
                nsMenu.b(),
                nsMenu.m("popup"),
                nsMenu.m(`popup-${currentPlacement.value}`)
              ],
              style: ulStyle.value
            }, [(_a22 = slots.default) == null ? void 0 : _a22.call(slots)])
          ]);
        },
        default: () => h6("div", {
          class: nsSubMenu.e("title"),
          style: [
            titleStyle.value,
            { backgroundColor: backgroundColor.value }
          ],
          onClick: handleClick
        }, titleTag)
      }) : h6(Fragment30, {}, [
        h6("div", {
          class: nsSubMenu.e("title"),
          style: [
            titleStyle.value,
            { backgroundColor: backgroundColor.value }
          ],
          ref: verticalTitleRef,
          onClick: handleClick
        }, titleTag),
        h6(_CollapseTransition, {}, {
          default: () => {
            var _a22;
            return withDirectives23(h6("ul", {
              role: "menu",
              class: [nsMenu.b(), nsMenu.m("inline")],
              style: ulStyle.value
            }, [(_a22 = slots.default) == null ? void 0 : _a22.call(slots)]), [[vShow15, opened.value]]);
          }
        })
      ]);
      return h6("li", {
        class: [
          nsSubMenu.b(),
          nsSubMenu.is("active", active.value),
          nsSubMenu.is("opened", opened.value),
          nsSubMenu.is("disabled", props.disabled)
        ],
        role: "menuitem",
        ariaHaspopup: true,
        ariaExpanded: opened.value,
        onMouseenter: handleMouseenter,
        onMouseleave: () => handleMouseleave(true),
        onFocus: handleMouseenter
      }, [child]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu.mjs
import { isString as isString21, isObject as isObject16 } from "@vue/shared";
var menuProps = buildProps({
  mode: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "vertical"
  },
  defaultActive: {
    type: String,
    default: ""
  },
  defaultOpeneds: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  uniqueOpened: Boolean,
  router: Boolean,
  menuTrigger: {
    type: String,
    values: ["hover", "click"],
    default: "hover"
  },
  collapse: Boolean,
  backgroundColor: String,
  textColor: String,
  activeTextColor: String,
  collapseTransition: {
    type: Boolean,
    default: true
  },
  ellipsis: {
    type: Boolean,
    default: true
  },
  popperEffect: {
    type: String,
    values: ["dark", "light"],
    default: "dark"
  }
});
var checkIndexPath = (indexPath) => Array.isArray(indexPath) && indexPath.every((path) => isString21(path));
var menuEmits = {
  close: (index, indexPath) => isString21(index) && checkIndexPath(indexPath),
  open: (index, indexPath) => isString21(index) && checkIndexPath(indexPath),
  select: (index, indexPath, item, routerResult) => isString21(index) && checkIndexPath(indexPath) && isObject16(item) && (routerResult === void 0 || routerResult instanceof Promise)
};
var Menu2 = defineComponent101({
  name: "ElMenu",
  props: menuProps,
  emits: menuEmits,
  setup(props, { emit, slots, expose }) {
    const instance = getCurrentInstance24();
    const router = instance.appContext.config.globalProperties.$router;
    const menu = ref83();
    const nsMenu = useNamespace("menu");
    const nsSubMenu = useNamespace("sub-menu");
    const sliceIndex = ref83(-1);
    const openedMenus = ref83(props.defaultOpeneds && !props.collapse ? props.defaultOpeneds.slice(0) : []);
    const activeIndex = ref83(props.defaultActive);
    const items = ref83({});
    const subMenus = ref83({});
    const isMenuPopup = computed107(() => {
      return props.mode === "horizontal" || props.mode === "vertical" && props.collapse;
    });
    const initMenu = () => {
      const activeItem = activeIndex.value && items.value[activeIndex.value];
      if (!activeItem || props.mode === "horizontal" || props.collapse)
        return;
      const indexPath = activeItem.indexPath;
      indexPath.forEach((index) => {
        const subMenu = subMenus.value[index];
        subMenu && openMenu(index, subMenu.indexPath);
      });
    };
    const openMenu = (index, indexPath) => {
      if (openedMenus.value.includes(index))
        return;
      if (props.uniqueOpened) {
        openedMenus.value = openedMenus.value.filter((index2) => indexPath.includes(index2));
      }
      openedMenus.value.push(index);
      emit("open", index, indexPath);
    };
    const close2 = (index) => {
      const i = openedMenus.value.indexOf(index);
      if (i !== -1) {
        openedMenus.value.splice(i, 1);
      }
    };
    const closeMenu = (index, indexPath) => {
      close2(index);
      emit("close", index, indexPath);
    };
    const handleSubMenuClick = ({
      index,
      indexPath
    }) => {
      const isOpened = openedMenus.value.includes(index);
      if (isOpened) {
        closeMenu(index, indexPath);
      } else {
        openMenu(index, indexPath);
      }
    };
    const handleMenuItemClick = (menuItem) => {
      if (props.mode === "horizontal" || props.collapse) {
        openedMenus.value = [];
      }
      const { index, indexPath } = menuItem;
      if (isNil_default(index) || isNil_default(indexPath))
        return;
      if (props.router && router) {
        const route = menuItem.route || index;
        const routerResult = router.push(route).then((res) => {
          if (!res)
            activeIndex.value = index;
          return res;
        });
        emit("select", index, indexPath, { index, indexPath, route }, routerResult);
      } else {
        activeIndex.value = index;
        emit("select", index, indexPath, { index, indexPath });
      }
    };
    const updateActiveIndex = (val) => {
      const itemsInData = items.value;
      const item = itemsInData[val] || activeIndex.value && itemsInData[activeIndex.value] || itemsInData[props.defaultActive];
      if (item) {
        activeIndex.value = item.index;
      } else {
        activeIndex.value = val;
      }
    };
    const calcSliceIndex = () => {
      var _a2, _b;
      if (!menu.value)
        return -1;
      const items2 = Array.from((_b = (_a2 = menu.value) == null ? void 0 : _a2.childNodes) != null ? _b : []).filter((item) => item.nodeName !== "#comment" && (item.nodeName !== "#text" || item.nodeValue));
      const moreItemWidth = 64;
      const paddingLeft = Number.parseInt(getComputedStyle(menu.value).paddingLeft, 10);
      const paddingRight = Number.parseInt(getComputedStyle(menu.value).paddingRight, 10);
      const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight;
      let calcWidth = 0;
      let sliceIndex2 = 0;
      items2.forEach((item, index) => {
        calcWidth += item.offsetWidth || 0;
        if (calcWidth <= menuWidth - moreItemWidth) {
          sliceIndex2 = index + 1;
        }
      });
      return sliceIndex2 === items2.length ? -1 : sliceIndex2;
    };
    const debounce2 = (fn2, wait = 33.34) => {
      let timmer;
      return () => {
        timmer && clearTimeout(timmer);
        timmer = setTimeout(() => {
          fn2();
        }, wait);
      };
    };
    let isFirstTimeRender = true;
    const handleResize = () => {
      const callback = () => {
        sliceIndex.value = -1;
        nextTick28(() => {
          sliceIndex.value = calcSliceIndex();
        });
      };
      isFirstTimeRender ? callback() : debounce2(callback)();
      isFirstTimeRender = false;
    };
    watch54(() => props.defaultActive, (currentActive) => {
      if (!items.value[currentActive]) {
        activeIndex.value = "";
      }
      updateActiveIndex(currentActive);
    });
    watch54(() => props.collapse, (value) => {
      if (value)
        openedMenus.value = [];
    });
    watch54(items.value, initMenu);
    let resizeStopper;
    watchEffect7(() => {
      if (props.mode === "horizontal" && props.ellipsis)
        resizeStopper = useResizeObserver(menu, handleResize).stop;
      else
        resizeStopper == null ? void 0 : resizeStopper();
    });
    {
      const addSubMenu = (item) => {
        subMenus.value[item.index] = item;
      };
      const removeSubMenu = (item) => {
        delete subMenus.value[item.index];
      };
      const addMenuItem = (item) => {
        items.value[item.index] = item;
      };
      const removeMenuItem = (item) => {
        delete items.value[item.index];
      };
      provide30("rootMenu", reactive15({
        props,
        openedMenus,
        items,
        subMenus,
        activeIndex,
        isMenuPopup,
        addMenuItem,
        removeMenuItem,
        addSubMenu,
        removeSubMenu,
        openMenu,
        closeMenu,
        handleMenuItemClick,
        handleSubMenuClick
      }));
      provide30(`subMenu:${instance.uid}`, {
        addSubMenu,
        removeSubMenu,
        mouseInChild: ref83(false),
        level: 0
      });
    }
    onMounted38(() => {
      if (props.mode === "horizontal") {
        new Menu(instance.vnode.el, nsMenu.namespace.value);
      }
    });
    {
      const open = (index) => {
        const { indexPath } = subMenus.value[index];
        indexPath.forEach((i) => openMenu(i, indexPath));
      };
      expose({
        open,
        close: close2,
        handleResize
      });
    }
    return () => {
      var _a2, _b;
      let slot = (_b = (_a2 = slots.default) == null ? void 0 : _a2.call(slots)) != null ? _b : [];
      const vShowMore = [];
      if (props.mode === "horizontal" && menu.value) {
        const originalSlot = flattedChildren(slot);
        const slotDefault = sliceIndex.value === -1 ? originalSlot : originalSlot.slice(0, sliceIndex.value);
        const slotMore = sliceIndex.value === -1 ? [] : originalSlot.slice(sliceIndex.value);
        if ((slotMore == null ? void 0 : slotMore.length) && props.ellipsis) {
          slot = slotDefault;
          vShowMore.push(h7(SubMenu2, {
            index: "sub-menu-more",
            class: nsSubMenu.e("hide-arrow")
          }, {
            title: () => h7(ElIcon, {
              class: nsSubMenu.e("icon-more")
            }, { default: () => h7(more_default) }),
            default: () => slotMore
          }));
        }
      }
      const ulStyle = useMenuCssVar(props, 0);
      const vMenu = h7("ul", {
        key: String(props.collapse),
        role: "menubar",
        ref: menu,
        style: ulStyle.value,
        class: {
          [nsMenu.b()]: true,
          [nsMenu.m(props.mode)]: true,
          [nsMenu.m("collapse")]: props.collapse
        }
      }, [...slot, ...vShowMore]);
      if (props.collapseTransition && props.mode === "vertical") {
        return h7(ElMenuCollapseTransition, () => vMenu);
      }
      return vMenu;
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-item2.mjs
import { defineComponent as defineComponent102, getCurrentInstance as getCurrentInstance25, inject as inject54, toRef as toRef14, computed as computed108, reactive as reactive16, onMounted as onMounted39, onBeforeUnmount as onBeforeUnmount18, resolveComponent as resolveComponent10, openBlock as openBlock86, createElementBlock as createElementBlock72, normalizeClass as normalizeClass71, createBlock as createBlock49, withCtx as withCtx49, renderSlot as renderSlot72, createElementVNode as createElementVNode46, Fragment as Fragment31 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-item.mjs
import { isString as isString22 } from "@vue/shared";
var menuItemProps = buildProps({
  index: {
    type: definePropType([String, null]),
    default: null
  },
  route: {
    type: definePropType([String, Object])
  },
  disabled: Boolean
});
var menuItemEmits = {
  click: (item) => isString22(item.index) && Array.isArray(item.indexPath)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-item2.mjs
var COMPONENT_NAME14 = "ElMenuItem";
var _sfc_main90 = defineComponent102({
  name: COMPONENT_NAME14,
  components: {
    ElTooltip
  },
  props: menuItemProps,
  emits: menuItemEmits,
  setup(props, { emit }) {
    const instance = getCurrentInstance25();
    const rootMenu = inject54("rootMenu");
    const nsMenu = useNamespace("menu");
    const nsMenuItem = useNamespace("menu-item");
    if (!rootMenu)
      throwError(COMPONENT_NAME14, "can not inject root menu");
    const { parentMenu, indexPath } = useMenu(instance, toRef14(props, "index"));
    const subMenu = inject54(`subMenu:${parentMenu.value.uid}`);
    if (!subMenu)
      throwError(COMPONENT_NAME14, "can not inject sub menu");
    const active = computed108(() => props.index === rootMenu.activeIndex);
    const item = reactive16({
      index: props.index,
      indexPath,
      active
    });
    const handleClick = () => {
      if (!props.disabled) {
        rootMenu.handleMenuItemClick({
          index: props.index,
          indexPath: indexPath.value,
          route: props.route
        });
        emit("click", item);
      }
    };
    onMounted39(() => {
      subMenu.addSubMenu(item);
      rootMenu.addMenuItem(item);
    });
    onBeforeUnmount18(() => {
      subMenu.removeSubMenu(item);
      rootMenu.removeMenuItem(item);
    });
    return {
      parentMenu,
      rootMenu,
      active,
      nsMenu,
      nsMenuItem,
      handleClick
    };
  }
});
function _sfc_render19(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tooltip = resolveComponent10("el-tooltip");
  return openBlock86(), createElementBlock72("li", {
    class: normalizeClass71([
      _ctx.nsMenuItem.b(),
      _ctx.nsMenuItem.is("active", _ctx.active),
      _ctx.nsMenuItem.is("disabled", _ctx.disabled)
    ]),
    role: "menuitem",
    tabindex: "-1",
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
  }, [
    _ctx.parentMenu.type.name === "ElMenu" && _ctx.rootMenu.props.collapse && _ctx.$slots.title ? (openBlock86(), createBlock49(_component_el_tooltip, {
      key: 0,
      effect: _ctx.rootMenu.props.popperEffect,
      placement: "right",
      "fallback-placements": ["left"],
      persistent: ""
    }, {
      content: withCtx49(() => [
        renderSlot72(_ctx.$slots, "title")
      ]),
      default: withCtx49(() => [
        createElementVNode46("div", {
          class: normalizeClass71(_ctx.nsMenu.be("tooltip", "trigger"))
        }, [
          renderSlot72(_ctx.$slots, "default")
        ], 2)
      ]),
      _: 3
    }, 8, ["effect"])) : (openBlock86(), createElementBlock72(Fragment31, { key: 1 }, [
      renderSlot72(_ctx.$slots, "default"),
      renderSlot72(_ctx.$slots, "title")
    ], 64))
  ], 2);
}
var MenuItem2 = _export_sfc(_sfc_main90, [["render", _sfc_render19], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-item-group2.mjs
import { defineComponent as defineComponent103, openBlock as openBlock87, createElementBlock as createElementBlock73, normalizeClass as normalizeClass72, createElementVNode as createElementVNode47, Fragment as Fragment32, createTextVNode as createTextVNode17, toDisplayString as toDisplayString35, renderSlot as renderSlot73 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-item-group.mjs
var menuItemGroupProps = {
  title: String
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/src/menu-item-group2.mjs
var COMPONENT_NAME15 = "ElMenuItemGroup";
var _sfc_main91 = defineComponent103({
  name: COMPONENT_NAME15,
  props: menuItemGroupProps,
  setup() {
    const ns = useNamespace("menu-item-group");
    return {
      ns
    };
  }
});
function _sfc_render20(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock87(), createElementBlock73("li", {
    class: normalizeClass72(_ctx.ns.b())
  }, [
    createElementVNode47("div", {
      class: normalizeClass72(_ctx.ns.e("title"))
    }, [
      !_ctx.$slots.title ? (openBlock87(), createElementBlock73(Fragment32, { key: 0 }, [
        createTextVNode17(toDisplayString35(_ctx.title), 1)
      ], 64)) : renderSlot73(_ctx.$slots, "title", { key: 1 })
    ], 2),
    createElementVNode47("ul", null, [
      renderSlot73(_ctx.$slots, "default")
    ])
  ], 2);
}
var MenuItemGroup = _export_sfc(_sfc_main91, [["render", _sfc_render20], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item-group.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/menu/index.mjs
var ElMenu = withInstall(Menu2, {
  MenuItem: MenuItem2,
  MenuItemGroup,
  SubMenu: SubMenu2
});
var ElMenuItem = withNoopInstall(MenuItem2);
var ElMenuItemGroup = withNoopInstall(MenuItemGroup);
var ElSubMenu = withNoopInstall(SubMenu2);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/page-header/src/page-header2.mjs
import { defineComponent as defineComponent104, useSlots as useSlots13, computed as computed109, openBlock as openBlock88, createElementBlock as createElementBlock74, normalizeClass as normalizeClass73, unref as unref98, renderSlot as renderSlot74, createCommentVNode as createCommentVNode43, createElementVNode as createElementVNode48, createBlock as createBlock50, withCtx as withCtx50, resolveDynamicComponent as resolveDynamicComponent17, createTextVNode as createTextVNode18, toDisplayString as toDisplayString36, createVNode as createVNode42 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/page-header/src/page-header.mjs
var pageHeaderProps = buildProps({
  icon: {
    type: iconPropType,
    default: () => back_default
  },
  title: String,
  content: {
    type: String,
    default: ""
  }
});
var pageHeaderEmits = {
  back: () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/page-header/src/page-header2.mjs
var _hoisted_143 = ["aria-label"];
var __default__62 = defineComponent104({
  name: "ElPageHeader"
});
var _sfc_main92 = defineComponent104({
  ...__default__62,
  props: pageHeaderProps,
  emits: pageHeaderEmits,
  setup(__props, { emit }) {
    const slots = useSlots13();
    const { t } = useLocale();
    const ns = useNamespace("page-header");
    const kls = computed109(() => {
      return [
        ns.b(),
        {
          [ns.m("has-breadcrumb")]: !!slots.breadcrumb,
          [ns.m("has-extra")]: !!slots.extra,
          [ns.is("contentful")]: !!slots.default
        }
      ];
    });
    function handleClick() {
      emit("back");
    }
    return (_ctx, _cache) => {
      return openBlock88(), createElementBlock74("div", {
        class: normalizeClass73(unref98(kls))
      }, [
        _ctx.$slots.breadcrumb ? (openBlock88(), createElementBlock74("div", {
          key: 0,
          class: normalizeClass73(unref98(ns).e("breadcrumb"))
        }, [
          renderSlot74(_ctx.$slots, "breadcrumb")
        ], 2)) : createCommentVNode43("v-if", true),
        createElementVNode48("div", {
          class: normalizeClass73(unref98(ns).e("header"))
        }, [
          createElementVNode48("div", {
            class: normalizeClass73(unref98(ns).e("left"))
          }, [
            createElementVNode48("div", {
              class: normalizeClass73(unref98(ns).e("back")),
              role: "button",
              tabindex: "0",
              onClick: handleClick
            }, [
              _ctx.icon || _ctx.$slots.icon ? (openBlock88(), createElementBlock74("div", {
                key: 0,
                "aria-label": _ctx.title || unref98(t)("el.pageHeader.title"),
                class: normalizeClass73(unref98(ns).e("icon"))
              }, [
                renderSlot74(_ctx.$slots, "icon", {}, () => [
                  _ctx.icon ? (openBlock88(), createBlock50(unref98(ElIcon), { key: 0 }, {
                    default: withCtx50(() => [
                      (openBlock88(), createBlock50(resolveDynamicComponent17(_ctx.icon)))
                    ]),
                    _: 1
                  })) : createCommentVNode43("v-if", true)
                ])
              ], 10, _hoisted_143)) : createCommentVNode43("v-if", true),
              createElementVNode48("div", {
                class: normalizeClass73(unref98(ns).e("title"))
              }, [
                renderSlot74(_ctx.$slots, "title", {}, () => [
                  createTextVNode18(toDisplayString36(_ctx.title || unref98(t)("el.pageHeader.title")), 1)
                ])
              ], 2)
            ], 2),
            createVNode42(unref98(ElDivider), { direction: "vertical" }),
            createElementVNode48("div", {
              class: normalizeClass73(unref98(ns).e("content"))
            }, [
              renderSlot74(_ctx.$slots, "content", {}, () => [
                createTextVNode18(toDisplayString36(_ctx.content), 1)
              ])
            ], 2)
          ], 2),
          _ctx.$slots.extra ? (openBlock88(), createElementBlock74("div", {
            key: 0,
            class: normalizeClass73(unref98(ns).e("extra"))
          }, [
            renderSlot74(_ctx.$slots, "extra")
          ], 2)) : createCommentVNode43("v-if", true)
        ], 2),
        _ctx.$slots.default ? (openBlock88(), createElementBlock74("div", {
          key: 1,
          class: normalizeClass73(unref98(ns).e("main"))
        }, [
          renderSlot74(_ctx.$slots, "default")
        ], 2)) : createCommentVNode43("v-if", true)
      ], 2);
    };
  }
});
var PageHeader = _export_sfc(_sfc_main92, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/page-header/src/page-header.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/page-header/index.mjs
var ElPageHeader = withInstall(PageHeader);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/pagination.mjs
import { defineComponent as defineComponent116, getCurrentInstance as getCurrentInstance29, computed as computed119, ref as ref90, watch as watch59, provide as provide33, h as h8 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/constants.mjs
var elPaginationKey = Symbol("elPaginationKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/prev2.mjs
import { defineComponent as defineComponent105, computed as computed110, openBlock as openBlock89, createElementBlock as createElementBlock75, unref as unref99, toDisplayString as toDisplayString37, createBlock as createBlock51, withCtx as withCtx51, resolveDynamicComponent as resolveDynamicComponent18 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/prev.mjs
var paginationPrevProps = buildProps({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  prevText: {
    type: String
  },
  prevIcon: {
    type: iconPropType
  }
});
var paginationPrevEmits = {
  click: (evt) => evt instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/prev2.mjs
var _hoisted_144 = ["disabled", "aria-label", "aria-disabled"];
var _hoisted_227 = { key: 0 };
var __default__63 = defineComponent105({
  name: "ElPaginationPrev"
});
var _sfc_main93 = defineComponent105({
  ...__default__63,
  props: paginationPrevProps,
  emits: paginationPrevEmits,
  setup(__props) {
    const props = __props;
    const { t } = useLocale();
    const internalDisabled = computed110(() => props.disabled || props.currentPage <= 1);
    return (_ctx, _cache) => {
      return openBlock89(), createElementBlock75("button", {
        type: "button",
        class: "btn-prev",
        disabled: unref99(internalDisabled),
        "aria-label": _ctx.prevText || unref99(t)("el.pagination.prev"),
        "aria-disabled": unref99(internalDisabled),
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("click", $event))
      }, [
        _ctx.prevText ? (openBlock89(), createElementBlock75("span", _hoisted_227, toDisplayString37(_ctx.prevText), 1)) : (openBlock89(), createBlock51(unref99(ElIcon), { key: 1 }, {
          default: withCtx51(() => [
            (openBlock89(), createBlock51(resolveDynamicComponent18(_ctx.prevIcon)))
          ]),
          _: 1
        }))
      ], 8, _hoisted_144);
    };
  }
});
var Prev = _export_sfc(_sfc_main93, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/prev.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/next2.mjs
import { defineComponent as defineComponent106, computed as computed111, openBlock as openBlock90, createElementBlock as createElementBlock76, unref as unref100, toDisplayString as toDisplayString38, createBlock as createBlock52, withCtx as withCtx52, resolveDynamicComponent as resolveDynamicComponent19 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/next.mjs
var paginationNextProps = buildProps({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    default: 50
  },
  nextText: {
    type: String
  },
  nextIcon: {
    type: iconPropType
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/next2.mjs
var _hoisted_145 = ["disabled", "aria-label", "aria-disabled"];
var _hoisted_228 = { key: 0 };
var __default__64 = defineComponent106({
  name: "ElPaginationNext"
});
var _sfc_main94 = defineComponent106({
  ...__default__64,
  props: paginationNextProps,
  emits: ["click"],
  setup(__props) {
    const props = __props;
    const { t } = useLocale();
    const internalDisabled = computed111(() => props.disabled || props.currentPage === props.pageCount || props.pageCount === 0);
    return (_ctx, _cache) => {
      return openBlock90(), createElementBlock76("button", {
        type: "button",
        class: "btn-next",
        disabled: unref100(internalDisabled),
        "aria-label": _ctx.nextText || unref100(t)("el.pagination.next"),
        "aria-disabled": unref100(internalDisabled),
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("click", $event))
      }, [
        _ctx.nextText ? (openBlock90(), createElementBlock76("span", _hoisted_228, toDisplayString38(_ctx.nextText), 1)) : (openBlock90(), createBlock52(unref100(ElIcon), { key: 1 }, {
          default: withCtx52(() => [
            (openBlock90(), createBlock52(resolveDynamicComponent19(_ctx.nextIcon)))
          ]),
          _: 1
        }))
      ], 8, _hoisted_145);
    };
  }
});
var Next = _export_sfc(_sfc_main94, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/next.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/sizes2.mjs
import { defineComponent as defineComponent112, ref as ref87, watch as watch58, computed as computed116, openBlock as openBlock95, createElementBlock as createElementBlock81, normalizeClass as normalizeClass78, unref as unref103, createVNode as createVNode44, withCtx as withCtx54, Fragment as Fragment34, renderList as renderList20, createBlock as createBlock54 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/select.mjs
import { defineComponent as defineComponent110, toRefs as toRefs8, computed as computed115, unref as unref102, provide as provide31, reactive as reactive19, onMounted as onMounted41, nextTick as nextTick31, resolveComponent as resolveComponent11, resolveDirective, withDirectives as withDirectives25, openBlock as openBlock93, createElementBlock as createElementBlock79, normalizeClass as normalizeClass76, withModifiers as withModifiers21, createVNode as createVNode43, withCtx as withCtx53, createElementVNode as createElementVNode50, normalizeStyle as normalizeStyle36, createBlock as createBlock53, Transition as Transition14, Fragment as Fragment33, renderList as renderList19, toDisplayString as toDisplayString40, createCommentVNode as createCommentVNode44, withKeys as withKeys9, vModelText as vModelText2, createSlots as createSlots5, resolveDynamicComponent as resolveDynamicComponent20, renderSlot as renderSlot77, vShow as vShow17 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/option.mjs
import { defineComponent as defineComponent107, reactive as reactive17, toRefs as toRefs7, getCurrentInstance as getCurrentInstance27, onBeforeUnmount as onBeforeUnmount19, nextTick as nextTick29, withDirectives as withDirectives24, openBlock as openBlock91, createElementBlock as createElementBlock77, normalizeClass as normalizeClass74, withModifiers as withModifiers20, renderSlot as renderSlot75, createElementVNode as createElementVNode49, toDisplayString as toDisplayString39, vShow as vShow16 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/useOption.mjs
import { inject as inject55, computed as computed112, getCurrentInstance as getCurrentInstance26, toRaw as toRaw3, watch as watch55, unref as unref101 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/token.mjs
var selectGroupKey = Symbol("ElSelectGroup");
var selectKey = Symbol("ElSelect");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/useOption.mjs
function useOption(props, states) {
  const select = inject55(selectKey);
  const selectGroup = inject55(selectGroupKey, { disabled: false });
  const isObject30 = computed112(() => {
    return Object.prototype.toString.call(props.value).toLowerCase() === "[object object]";
  });
  const itemSelected = computed112(() => {
    if (!select.props.multiple) {
      return isEqual3(props.value, select.props.modelValue);
    } else {
      return contains(select.props.modelValue, props.value);
    }
  });
  const limitReached = computed112(() => {
    if (select.props.multiple) {
      const modelValue = select.props.modelValue || [];
      return !itemSelected.value && modelValue.length >= select.props.multipleLimit && select.props.multipleLimit > 0;
    } else {
      return false;
    }
  });
  const currentLabel = computed112(() => {
    return props.label || (isObject30.value ? "" : props.value);
  });
  const currentValue = computed112(() => {
    return props.value || props.label || "";
  });
  const isDisabled = computed112(() => {
    return props.disabled || states.groupDisabled || limitReached.value;
  });
  const instance = getCurrentInstance26();
  const contains = (arr = [], target2) => {
    if (!isObject30.value) {
      return arr && arr.includes(target2);
    } else {
      const valueKey = select.props.valueKey;
      return arr && arr.some((item) => {
        return toRaw3(get_default(item, valueKey)) === get_default(target2, valueKey);
      });
    }
  };
  const isEqual3 = (a2, b2) => {
    if (!isObject30.value) {
      return a2 === b2;
    } else {
      const { valueKey } = select.props;
      return get_default(a2, valueKey) === get_default(b2, valueKey);
    }
  };
  const hoverItem = () => {
    if (!props.disabled && !selectGroup.disabled) {
      select.hoverIndex = select.optionsArray.indexOf(instance.proxy);
    }
  };
  watch55(() => currentLabel.value, () => {
    if (!props.created && !select.props.remote)
      select.setSelected();
  });
  watch55(() => props.value, (val, oldVal) => {
    const { remote, valueKey } = select.props;
    if (!Object.is(val, oldVal)) {
      select.onOptionDestroy(oldVal, instance.proxy);
      select.onOptionCreate(instance.proxy);
    }
    if (!props.created && !remote) {
      if (valueKey && typeof val === "object" && typeof oldVal === "object" && val[valueKey] === oldVal[valueKey]) {
        return;
      }
      select.setSelected();
    }
  });
  watch55(() => selectGroup.disabled, () => {
    states.groupDisabled = selectGroup.disabled;
  }, { immediate: true });
  const { queryChange } = toRaw3(select);
  watch55(queryChange, (changes) => {
    const { query } = unref101(changes);
    const regexp4 = new RegExp(escapeStringRegexp(query), "i");
    states.visible = regexp4.test(currentLabel.value) || props.created;
    if (!states.visible) {
      select.filteredOptionsCount--;
    }
  }, { immediate: true });
  return {
    select,
    currentLabel,
    currentValue,
    itemSelected,
    isDisabled,
    hoverItem
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/option.mjs
var _sfc_main95 = defineComponent107({
  name: "ElOption",
  componentName: "ElOption",
  props: {
    value: {
      required: true,
      type: [String, Number, Boolean, Object]
    },
    label: [String, Number],
    created: Boolean,
    disabled: {
      type: Boolean,
      default: false
    }
  },
  setup(props) {
    const ns = useNamespace("select");
    const states = reactive17({
      index: -1,
      groupDisabled: false,
      visible: true,
      hitState: false,
      hover: false
    });
    const { currentLabel, itemSelected, isDisabled, select, hoverItem } = useOption(props, states);
    const { visible, hover } = toRefs7(states);
    const vm = getCurrentInstance27().proxy;
    select.onOptionCreate(vm);
    onBeforeUnmount19(() => {
      const key = vm.value;
      const { selected } = select;
      const selectedOptions = select.props.multiple ? selected : [selected];
      const doesSelected = selectedOptions.some((item) => {
        return item.value === vm.value;
      });
      nextTick29(() => {
        if (select.cachedOptions.get(key) === vm && !doesSelected) {
          select.cachedOptions.delete(key);
        }
      });
      select.onOptionDestroy(key, vm);
    });
    function selectOptionClick() {
      if (props.disabled !== true && states.groupDisabled !== true) {
        select.handleOptionSelect(vm);
      }
    }
    return {
      ns,
      currentLabel,
      itemSelected,
      isDisabled,
      select,
      hoverItem,
      visible,
      hover,
      selectOptionClick,
      states
    };
  }
});
function _sfc_render21(_ctx, _cache, $props, $setup, $data, $options) {
  return withDirectives24((openBlock91(), createElementBlock77("li", {
    class: normalizeClass74([
      _ctx.ns.be("dropdown", "item"),
      _ctx.ns.is("disabled", _ctx.isDisabled),
      {
        selected: _ctx.itemSelected,
        hover: _ctx.hover
      }
    ]),
    onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.hoverItem && _ctx.hoverItem(...args)),
    onClick: _cache[1] || (_cache[1] = withModifiers20((...args) => _ctx.selectOptionClick && _ctx.selectOptionClick(...args), ["stop"]))
  }, [
    renderSlot75(_ctx.$slots, "default", {}, () => [
      createElementVNode49("span", null, toDisplayString39(_ctx.currentLabel), 1)
    ])
  ], 34)), [
    [vShow16, _ctx.visible]
  ]);
}
var Option = _export_sfc(_sfc_main95, [["render", _sfc_render21], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/option.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/select-dropdown.mjs
import { defineComponent as defineComponent108, inject as inject56, computed as computed113, ref as ref84, onMounted as onMounted40, openBlock as openBlock92, createElementBlock as createElementBlock78, normalizeClass as normalizeClass75, normalizeStyle as normalizeStyle35, renderSlot as renderSlot76 } from "vue";
var _sfc_main96 = defineComponent108({
  name: "ElSelectDropdown",
  componentName: "ElSelectDropdown",
  setup() {
    const select = inject56(selectKey);
    const ns = useNamespace("select");
    const popperClass = computed113(() => select.props.popperClass);
    const isMultiple = computed113(() => select.props.multiple);
    const isFitInputWidth = computed113(() => select.props.fitInputWidth);
    const minWidth = ref84("");
    function updateMinWidth() {
      var _a2;
      minWidth.value = `${(_a2 = select.selectWrapper) == null ? void 0 : _a2.offsetWidth}px`;
    }
    onMounted40(() => {
      updateMinWidth();
      useResizeObserver(select.selectWrapper, updateMinWidth);
    });
    return {
      ns,
      minWidth,
      popperClass,
      isMultiple,
      isFitInputWidth
    };
  }
});
function _sfc_render22(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock92(), createElementBlock78("div", {
    class: normalizeClass75([_ctx.ns.b("dropdown"), _ctx.ns.is("multiple", _ctx.isMultiple), _ctx.popperClass]),
    style: normalizeStyle35({ [_ctx.isFitInputWidth ? "width" : "minWidth"]: _ctx.minWidth })
  }, [
    renderSlot76(_ctx.$slots, "default")
  ], 6);
}
var ElSelectMenu = _export_sfc(_sfc_main96, [["render", _sfc_render22], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/select-dropdown.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/useSelect.mjs
import { reactive as reactive18, computed as computed114, ref as ref85, shallowRef as shallowRef11, watch as watch56, nextTick as nextTick30, triggerRef, toRaw as toRaw4 } from "vue";
import { isFunction as isFunction14, toRawType as toRawType2, isString as isString23, isObject as isObject17 } from "@vue/shared";
function useSelectStates(props) {
  const { t } = useLocale();
  return reactive18({
    options: /* @__PURE__ */ new Map(),
    cachedOptions: /* @__PURE__ */ new Map(),
    createdLabel: null,
    createdSelected: false,
    selected: props.multiple ? [] : {},
    inputLength: 20,
    inputWidth: 0,
    optionsCount: 0,
    filteredOptionsCount: 0,
    visible: false,
    selectedLabel: "",
    hoverIndex: -1,
    query: "",
    previousQuery: null,
    inputHovering: false,
    cachedPlaceHolder: "",
    currentPlaceholder: t("el.select.placeholder"),
    menuVisibleOnFocus: false,
    isOnComposition: false,
    prefixWidth: 11,
    mouseEnter: false
  });
}
var ignoreFocusEvent = false;
var useSelect = (props, states, ctx) => {
  const { t } = useLocale();
  const ns = useNamespace("select");
  useDeprecated({
    from: "suffixTransition",
    replacement: "override style scheme",
    version: "2.3.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/select.html#select-attributes"
  }, computed114(() => props.suffixTransition === false));
  const reference = ref85(null);
  const input = ref85(null);
  const iOSInput = ref85(null);
  const tooltipRef = ref85(null);
  const tags = ref85(null);
  const selectWrapper = ref85(null);
  const scrollbar = ref85(null);
  const hoverOption = ref85(-1);
  const queryChange = shallowRef11({ query: "" });
  const groupQueryChange = shallowRef11("");
  const optionList = ref85([]);
  let originClientHeight = 0;
  const { form, formItem } = useFormItem();
  const readonly6 = computed114(() => !props.filterable || props.multiple || !states.visible);
  const selectDisabled = computed114(() => props.disabled || (form == null ? void 0 : form.disabled));
  const showClose = computed114(() => {
    const hasValue = props.multiple ? Array.isArray(props.modelValue) && props.modelValue.length > 0 : props.modelValue !== void 0 && props.modelValue !== null && props.modelValue !== "";
    const criteria = props.clearable && !selectDisabled.value && states.inputHovering && hasValue;
    return criteria;
  });
  const iconComponent = computed114(() => props.remote && props.filterable && !props.remoteShowSuffix ? "" : props.suffixIcon);
  const iconReverse = computed114(() => ns.is("reverse", iconComponent.value && states.visible && props.suffixTransition));
  const debounce$1 = computed114(() => props.remote ? 300 : 0);
  const emptyText = computed114(() => {
    if (props.loading) {
      return props.loadingText || t("el.select.loading");
    } else {
      if (props.remote && states.query === "" && states.options.size === 0)
        return false;
      if (props.filterable && states.query && states.options.size > 0 && states.filteredOptionsCount === 0) {
        return props.noMatchText || t("el.select.noMatch");
      }
      if (states.options.size === 0) {
        return props.noDataText || t("el.select.noData");
      }
    }
    return null;
  });
  const optionsArray = computed114(() => {
    const list = Array.from(states.options.values());
    const newList = [];
    optionList.value.forEach((item) => {
      const index = list.findIndex((i) => i.currentLabel === item);
      if (index > -1) {
        newList.push(list[index]);
      }
    });
    return newList.length ? newList : list;
  });
  const cachedOptionsArray = computed114(() => Array.from(states.cachedOptions.values()));
  const showNewOption = computed114(() => {
    const hasExistingOption = optionsArray.value.filter((option) => {
      return !option.created;
    }).some((option) => {
      return option.currentLabel === states.query;
    });
    return props.filterable && props.allowCreate && states.query !== "" && !hasExistingOption;
  });
  const selectSize = useFormSize();
  const collapseTagSize = computed114(() => ["small"].includes(selectSize.value) ? "small" : "default");
  const dropMenuVisible = computed114({
    get() {
      return states.visible && emptyText.value !== false;
    },
    set(val) {
      states.visible = val;
    }
  });
  watch56([() => selectDisabled.value, () => selectSize.value, () => form == null ? void 0 : form.size], () => {
    nextTick30(() => {
      resetInputHeight();
    });
  });
  watch56(() => props.placeholder, (val) => {
    states.cachedPlaceHolder = states.currentPlaceholder = val;
    const hasValue = props.multiple && Array.isArray(props.modelValue) && props.modelValue.length > 0;
    if (hasValue) {
      states.currentPlaceholder = "";
    }
  });
  watch56(() => props.modelValue, (val, oldVal) => {
    if (props.multiple) {
      resetInputHeight();
      if (val && val.length > 0 || input.value && states.query !== "") {
        states.currentPlaceholder = "";
      } else {
        states.currentPlaceholder = states.cachedPlaceHolder;
      }
      if (props.filterable && !props.reserveKeyword) {
        states.query = "";
        handleQueryChange(states.query);
      }
    }
    setSelected();
    if (props.filterable && !props.multiple) {
      states.inputLength = 20;
    }
    if (!isEqual_default(val, oldVal) && props.validateEvent) {
      formItem == null ? void 0 : formItem.validate("change").catch((err) => debugWarn(err));
    }
  }, {
    flush: "post",
    deep: true
  });
  watch56(() => states.visible, (val) => {
    var _a2, _b, _c, _d, _e;
    if (!val) {
      if (props.filterable) {
        if (isFunction14(props.filterMethod)) {
          props.filterMethod("");
        }
        if (isFunction14(props.remoteMethod)) {
          props.remoteMethod("");
        }
      }
      input.value && input.value.blur();
      states.query = "";
      states.previousQuery = null;
      states.selectedLabel = "";
      states.inputLength = 20;
      states.menuVisibleOnFocus = false;
      resetHoverIndex();
      nextTick30(() => {
        if (input.value && input.value.value === "" && states.selected.length === 0) {
          states.currentPlaceholder = states.cachedPlaceHolder;
        }
      });
      if (!props.multiple) {
        if (states.selected) {
          if (props.filterable && props.allowCreate && states.createdSelected && states.createdLabel) {
            states.selectedLabel = states.createdLabel;
          } else {
            states.selectedLabel = states.selected.currentLabel;
          }
          if (props.filterable)
            states.query = states.selectedLabel;
        }
        if (props.filterable) {
          states.currentPlaceholder = states.cachedPlaceHolder;
        }
      }
    } else {
      (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
      if (props.filterable) {
        states.filteredOptionsCount = states.optionsCount;
        states.query = props.remote ? "" : states.selectedLabel;
        (_d = (_c = iOSInput.value) == null ? void 0 : _c.focus) == null ? void 0 : _d.call(_c);
        if (props.multiple) {
          (_e = input.value) == null ? void 0 : _e.focus();
        } else {
          if (states.selectedLabel) {
            states.currentPlaceholder = `${states.selectedLabel}`;
            states.selectedLabel = "";
          }
        }
        handleQueryChange(states.query);
        if (!props.multiple && !props.remote) {
          queryChange.value.query = "";
          triggerRef(queryChange);
          triggerRef(groupQueryChange);
        }
      }
    }
    ctx.emit("visible-change", val);
  });
  watch56(() => states.options.entries(), () => {
    var _a2, _b, _c;
    if (!isClient)
      return;
    (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
    if (props.multiple) {
      resetInputHeight();
    }
    const inputs = ((_c = selectWrapper.value) == null ? void 0 : _c.querySelectorAll("input")) || [];
    if (!Array.from(inputs).includes(document.activeElement)) {
      setSelected();
    }
    if (props.defaultFirstOption && (props.filterable || props.remote) && states.filteredOptionsCount) {
      checkDefaultFirstOption();
    }
  }, {
    flush: "post"
  });
  watch56(() => states.hoverIndex, (val) => {
    if (isNumber3(val) && val > -1) {
      hoverOption.value = optionsArray.value[val] || {};
    } else {
      hoverOption.value = {};
    }
    optionsArray.value.forEach((option) => {
      option.hover = hoverOption.value === option;
    });
  });
  const resetInputHeight = () => {
    nextTick30(() => {
      var _a2, _b;
      if (!reference.value)
        return;
      const input2 = reference.value.$el.querySelector("input");
      originClientHeight = originClientHeight || (input2.clientHeight > 0 ? input2.clientHeight + 2 : 0);
      const _tags = tags.value;
      const gotSize = getComponentSize(selectSize.value || (form == null ? void 0 : form.size));
      const sizeInMap = selectSize.value || gotSize === originClientHeight || originClientHeight <= 0 ? gotSize : originClientHeight;
      const isElHidden = input2.offsetParent === null;
      !isElHidden && (input2.style.height = `${(states.selected.length === 0 ? sizeInMap : Math.max(_tags ? _tags.clientHeight + (_tags.clientHeight > sizeInMap ? 6 : 0) : 0, sizeInMap)) - 2}px`);
      if (states.visible && emptyText.value !== false) {
        (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
      }
    });
  };
  const handleQueryChange = async (val) => {
    if (states.previousQuery === val || states.isOnComposition)
      return;
    if (states.previousQuery === null && (isFunction14(props.filterMethod) || isFunction14(props.remoteMethod))) {
      states.previousQuery = val;
      return;
    }
    states.previousQuery = val;
    nextTick30(() => {
      var _a2, _b;
      if (states.visible)
        (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
    });
    states.hoverIndex = -1;
    if (props.multiple && props.filterable) {
      nextTick30(() => {
        const length = input.value.value.length * 15 + 20;
        states.inputLength = props.collapseTags ? Math.min(50, length) : length;
        managePlaceholder();
        resetInputHeight();
      });
    }
    if (props.remote && isFunction14(props.remoteMethod)) {
      states.hoverIndex = -1;
      props.remoteMethod(val);
    } else if (isFunction14(props.filterMethod)) {
      props.filterMethod(val);
      triggerRef(groupQueryChange);
    } else {
      states.filteredOptionsCount = states.optionsCount;
      queryChange.value.query = val;
      triggerRef(queryChange);
      triggerRef(groupQueryChange);
    }
    if (props.defaultFirstOption && (props.filterable || props.remote) && states.filteredOptionsCount) {
      await nextTick30();
      checkDefaultFirstOption();
    }
  };
  const managePlaceholder = () => {
    if (states.currentPlaceholder !== "") {
      states.currentPlaceholder = input.value.value ? "" : states.cachedPlaceHolder;
    }
  };
  const checkDefaultFirstOption = () => {
    const optionsInDropdown = optionsArray.value.filter((n) => n.visible && !n.disabled && !n.states.groupDisabled);
    const userCreatedOption = optionsInDropdown.find((n) => n.created);
    const firstOriginOption = optionsInDropdown[0];
    states.hoverIndex = getValueIndex(optionsArray.value, userCreatedOption || firstOriginOption);
  };
  const setSelected = () => {
    var _a2;
    if (!props.multiple) {
      const option = getOption(props.modelValue);
      if ((_a2 = option.props) == null ? void 0 : _a2.created) {
        states.createdLabel = option.props.value;
        states.createdSelected = true;
      } else {
        states.createdSelected = false;
      }
      states.selectedLabel = option.currentLabel;
      states.selected = option;
      if (props.filterable)
        states.query = states.selectedLabel;
      return;
    } else {
      states.selectedLabel = "";
    }
    const result2 = [];
    if (Array.isArray(props.modelValue)) {
      props.modelValue.forEach((value) => {
        result2.push(getOption(value));
      });
    }
    states.selected = result2;
    nextTick30(() => {
      resetInputHeight();
    });
  };
  const getOption = (value) => {
    let option;
    const isObjectValue = toRawType2(value).toLowerCase() === "object";
    const isNull2 = toRawType2(value).toLowerCase() === "null";
    const isUndefined3 = toRawType2(value).toLowerCase() === "undefined";
    for (let i = states.cachedOptions.size - 1; i >= 0; i--) {
      const cachedOption = cachedOptionsArray.value[i];
      const isEqualValue = isObjectValue ? get_default(cachedOption.value, props.valueKey) === get_default(value, props.valueKey) : cachedOption.value === value;
      if (isEqualValue) {
        option = {
          value,
          currentLabel: cachedOption.currentLabel,
          isDisabled: cachedOption.isDisabled
        };
        break;
      }
    }
    if (option)
      return option;
    const label = isObjectValue ? value.label : !isNull2 && !isUndefined3 ? value : "";
    const newOption = {
      value,
      currentLabel: label
    };
    if (props.multiple) {
      ;
      newOption.hitState = false;
    }
    return newOption;
  };
  const resetHoverIndex = () => {
    setTimeout(() => {
      const valueKey = props.valueKey;
      if (!props.multiple) {
        states.hoverIndex = optionsArray.value.findIndex((item) => {
          return getValueKey(item) === getValueKey(states.selected);
        });
      } else {
        if (states.selected.length > 0) {
          states.hoverIndex = Math.min.apply(null, states.selected.map((selected) => {
            return optionsArray.value.findIndex((item) => {
              return get_default(item, valueKey) === get_default(selected, valueKey);
            });
          }));
        } else {
          states.hoverIndex = -1;
        }
      }
    }, 300);
  };
  const handleResize = () => {
    var _a2, _b;
    resetInputWidth();
    (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
    props.multiple && resetInputHeight();
  };
  const resetInputWidth = () => {
    var _a2;
    states.inputWidth = (_a2 = reference.value) == null ? void 0 : _a2.$el.offsetWidth;
  };
  const onInputChange = () => {
    if (props.filterable && states.query !== states.selectedLabel) {
      states.query = states.selectedLabel;
      handleQueryChange(states.query);
    }
  };
  const debouncedOnInputChange = debounce_default(() => {
    onInputChange();
  }, debounce$1.value);
  const debouncedQueryChange = debounce_default((e) => {
    handleQueryChange(e.target.value);
  }, debounce$1.value);
  const emitChange = (val) => {
    if (!isEqual_default(props.modelValue, val)) {
      ctx.emit(CHANGE_EVENT, val);
    }
  };
  const deletePrevTag = (e) => {
    if (e.code === EVENT_CODE.delete)
      return;
    if (e.target.value.length <= 0 && !toggleLastOptionHitState()) {
      const value = props.modelValue.slice();
      value.pop();
      ctx.emit(UPDATE_MODEL_EVENT, value);
      emitChange(value);
    }
    if (e.target.value.length === 1 && props.modelValue.length === 0) {
      states.currentPlaceholder = states.cachedPlaceHolder;
    }
  };
  const deleteTag = (event, tag) => {
    const index = states.selected.indexOf(tag);
    if (index > -1 && !selectDisabled.value) {
      const value = props.modelValue.slice();
      value.splice(index, 1);
      ctx.emit(UPDATE_MODEL_EVENT, value);
      emitChange(value);
      ctx.emit("remove-tag", tag.value);
    }
    event.stopPropagation();
  };
  const deleteSelected = (event) => {
    event.stopPropagation();
    const value = props.multiple ? [] : "";
    if (!isString23(value)) {
      for (const item of states.selected) {
        if (item.isDisabled)
          value.push(item.value);
      }
    }
    ctx.emit(UPDATE_MODEL_EVENT, value);
    emitChange(value);
    states.hoverIndex = -1;
    states.visible = false;
    ctx.emit("clear");
  };
  const handleOptionSelect = (option) => {
    var _a2;
    if (props.multiple) {
      const value = (props.modelValue || []).slice();
      const optionIndex = getValueIndex(value, option.value);
      if (optionIndex > -1) {
        value.splice(optionIndex, 1);
      } else if (props.multipleLimit <= 0 || value.length < props.multipleLimit) {
        value.push(option.value);
      }
      ctx.emit(UPDATE_MODEL_EVENT, value);
      emitChange(value);
      if (option.created) {
        states.query = "";
        handleQueryChange("");
        states.inputLength = 20;
      }
      if (props.filterable)
        (_a2 = input.value) == null ? void 0 : _a2.focus();
    } else {
      ctx.emit(UPDATE_MODEL_EVENT, option.value);
      emitChange(option.value);
      states.visible = false;
    }
    setSoftFocus();
    if (states.visible)
      return;
    nextTick30(() => {
      scrollToOption(option);
    });
  };
  const getValueIndex = (arr = [], value) => {
    if (!isObject17(value))
      return arr.indexOf(value);
    const valueKey = props.valueKey;
    let index = -1;
    arr.some((item, i) => {
      if (toRaw4(get_default(item, valueKey)) === get_default(value, valueKey)) {
        index = i;
        return true;
      }
      return false;
    });
    return index;
  };
  const setSoftFocus = () => {
    const _input = input.value || reference.value;
    if (_input) {
      _input == null ? void 0 : _input.focus();
    }
  };
  const scrollToOption = (option) => {
    var _a2, _b, _c, _d, _e;
    const targetOption = Array.isArray(option) ? option[0] : option;
    let target2 = null;
    if (targetOption == null ? void 0 : targetOption.value) {
      const options = optionsArray.value.filter((item) => item.value === targetOption.value);
      if (options.length > 0) {
        target2 = options[0].$el;
      }
    }
    if (tooltipRef.value && target2) {
      const menu = (_d = (_c = (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.contentRef) == null ? void 0 : _c.querySelector) == null ? void 0 : _d.call(_c, `.${ns.be("dropdown", "wrap")}`);
      if (menu) {
        scrollIntoView(menu, target2);
      }
    }
    (_e = scrollbar.value) == null ? void 0 : _e.handleScroll();
  };
  const onOptionCreate = (vm) => {
    states.optionsCount++;
    states.filteredOptionsCount++;
    states.options.set(vm.value, vm);
    states.cachedOptions.set(vm.value, vm);
  };
  const onOptionDestroy = (key, vm) => {
    if (states.options.get(key) === vm) {
      states.optionsCount--;
      states.filteredOptionsCount--;
      states.options.delete(key);
    }
  };
  const resetInputState = (e) => {
    if (e.code !== EVENT_CODE.backspace)
      toggleLastOptionHitState(false);
    states.inputLength = input.value.value.length * 15 + 20;
    resetInputHeight();
  };
  const toggleLastOptionHitState = (hit) => {
    if (!Array.isArray(states.selected))
      return;
    const option = states.selected[states.selected.length - 1];
    if (!option)
      return;
    if (hit === true || hit === false) {
      option.hitState = hit;
      return hit;
    }
    option.hitState = !option.hitState;
    return option.hitState;
  };
  const handleComposition = (event) => {
    const text = event.target.value;
    if (event.type === "compositionend") {
      states.isOnComposition = false;
      nextTick30(() => handleQueryChange(text));
    } else {
      const lastCharacter = text[text.length - 1] || "";
      states.isOnComposition = !isKorean(lastCharacter);
    }
  };
  const handleMenuEnter = () => {
    nextTick30(() => scrollToOption(states.selected));
  };
  const handleFocus = (event) => {
    if (!ignoreFocusEvent) {
      if (props.automaticDropdown || props.filterable) {
        if (props.filterable && !states.visible) {
          states.menuVisibleOnFocus = true;
        }
        states.visible = true;
      }
      ctx.emit("focus", event);
    } else {
      ignoreFocusEvent = false;
    }
  };
  const blur = () => {
    var _a2, _b, _c;
    states.visible = false;
    (_a2 = reference.value) == null ? void 0 : _a2.blur();
    (_c = (_b = iOSInput.value) == null ? void 0 : _b.blur) == null ? void 0 : _c.call(_b);
  };
  const handleBlur = (event) => {
    setTimeout(() => {
      var _a2;
      if ((_a2 = tooltipRef.value) == null ? void 0 : _a2.isFocusInsideContent()) {
        ignoreFocusEvent = true;
        return;
      }
      states.visible && handleClose();
      ctx.emit("blur", event);
    });
  };
  const handleClearClick = (event) => {
    deleteSelected(event);
  };
  const handleClose = () => {
    states.visible = false;
  };
  const handleKeydownEscape = (event) => {
    if (states.visible) {
      event.preventDefault();
      event.stopPropagation();
      states.visible = false;
    }
  };
  const toggleMenu = (e) => {
    var _a2;
    if (e && !states.mouseEnter) {
      return;
    }
    if (!selectDisabled.value) {
      if (states.menuVisibleOnFocus) {
        states.menuVisibleOnFocus = false;
      } else {
        if (!tooltipRef.value || !tooltipRef.value.isFocusInsideContent()) {
          states.visible = !states.visible;
        }
      }
      if (states.visible) {
        ;
        (_a2 = input.value || reference.value) == null ? void 0 : _a2.focus();
      }
    }
  };
  const selectOption = () => {
    if (!states.visible) {
      toggleMenu();
    } else {
      if (optionsArray.value[states.hoverIndex]) {
        handleOptionSelect(optionsArray.value[states.hoverIndex]);
      }
    }
  };
  const getValueKey = (item) => {
    return isObject17(item.value) ? get_default(item.value, props.valueKey) : item.value;
  };
  const optionsAllDisabled = computed114(() => optionsArray.value.filter((option) => option.visible).every((option) => option.disabled));
  const showTagList = computed114(() => states.selected.slice(0, props.maxCollapseTags));
  const collapseTagList = computed114(() => states.selected.slice(props.maxCollapseTags));
  const navigateOptions = (direction2) => {
    if (!states.visible) {
      states.visible = true;
      return;
    }
    if (states.options.size === 0 || states.filteredOptionsCount === 0)
      return;
    if (states.isOnComposition)
      return;
    if (!optionsAllDisabled.value) {
      if (direction2 === "next") {
        states.hoverIndex++;
        if (states.hoverIndex === states.options.size) {
          states.hoverIndex = 0;
        }
      } else if (direction2 === "prev") {
        states.hoverIndex--;
        if (states.hoverIndex < 0) {
          states.hoverIndex = states.options.size - 1;
        }
      }
      const option = optionsArray.value[states.hoverIndex];
      if (option.disabled === true || option.states.groupDisabled === true || !option.visible) {
        navigateOptions(direction2);
      }
      nextTick30(() => scrollToOption(hoverOption.value));
    }
  };
  const handleMouseEnter = () => {
    states.mouseEnter = true;
  };
  const handleMouseLeave = () => {
    states.mouseEnter = false;
  };
  return {
    optionList,
    optionsArray,
    selectSize,
    handleResize,
    debouncedOnInputChange,
    debouncedQueryChange,
    deletePrevTag,
    deleteTag,
    deleteSelected,
    handleOptionSelect,
    scrollToOption,
    readonly: readonly6,
    resetInputHeight,
    showClose,
    iconComponent,
    iconReverse,
    showNewOption,
    collapseTagSize,
    setSelected,
    managePlaceholder,
    selectDisabled,
    emptyText,
    toggleLastOptionHitState,
    resetInputState,
    handleComposition,
    onOptionCreate,
    onOptionDestroy,
    handleMenuEnter,
    handleFocus,
    blur,
    handleBlur,
    handleClearClick,
    handleClose,
    handleKeydownEscape,
    toggleMenu,
    selectOption,
    getValueKey,
    navigateOptions,
    dropMenuVisible,
    queryChange,
    groupQueryChange,
    showTagList,
    collapseTagList,
    reference,
    input,
    iOSInput,
    tooltipRef,
    tags,
    selectWrapper,
    scrollbar,
    handleMouseEnter,
    handleMouseLeave
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/options.mjs
import { defineComponent as defineComponent109 } from "vue";
import { isString as isString24, isFunction as isFunction15 } from "@vue/shared";
var ElOptions = defineComponent109({
  name: "ElOptions",
  emits: ["update-options"],
  setup(_2, { slots, emit }) {
    let cachedOptions = [];
    function isSameOptions(a2, b2) {
      if (a2.length !== b2.length)
        return false;
      for (const [index] of a2.entries()) {
        if (a2[index] != b2[index]) {
          return false;
        }
      }
      return true;
    }
    return () => {
      var _a2, _b;
      const children = (_a2 = slots.default) == null ? void 0 : _a2.call(slots);
      const filteredOptions = [];
      function filterOptions(children2) {
        if (!Array.isArray(children2))
          return;
        children2.forEach((item) => {
          var _a22, _b2, _c, _d;
          const name = (_a22 = (item == null ? void 0 : item.type) || {}) == null ? void 0 : _a22.name;
          if (name === "ElOptionGroup") {
            filterOptions(!isString24(item.children) && !Array.isArray(item.children) && isFunction15((_b2 = item.children) == null ? void 0 : _b2.default) ? (_c = item.children) == null ? void 0 : _c.default() : item.children);
          } else if (name === "ElOption") {
            filteredOptions.push((_d = item.props) == null ? void 0 : _d.label);
          } else if (Array.isArray(item.children)) {
            filterOptions(item.children);
          }
        });
      }
      if (children.length) {
        filterOptions((_b = children[0]) == null ? void 0 : _b.children);
      }
      if (!isSameOptions(filteredOptions, cachedOptions)) {
        cachedOptions = filteredOptions;
        emit("update-options", filteredOptions);
      }
      return children;
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/select.mjs
var COMPONENT_NAME16 = "ElSelect";
var _sfc_main97 = defineComponent110({
  name: COMPONENT_NAME16,
  componentName: COMPONENT_NAME16,
  components: {
    ElInput,
    ElSelectMenu,
    ElOption: Option,
    ElOptions,
    ElTag,
    ElScrollbar,
    ElTooltip,
    ElIcon
  },
  directives: { ClickOutside },
  props: {
    name: String,
    id: String,
    modelValue: {
      type: [Array, String, Number, Boolean, Object],
      default: void 0
    },
    autocomplete: {
      type: String,
      default: "off"
    },
    automaticDropdown: Boolean,
    size: {
      type: String,
      validator: isValidComponentSize
    },
    effect: {
      type: String,
      default: "light"
    },
    disabled: Boolean,
    clearable: Boolean,
    filterable: Boolean,
    allowCreate: Boolean,
    loading: Boolean,
    popperClass: {
      type: String,
      default: ""
    },
    popperOptions: {
      type: Object,
      default: () => ({})
    },
    remote: Boolean,
    loadingText: String,
    noMatchText: String,
    noDataText: String,
    remoteMethod: Function,
    filterMethod: Function,
    multiple: Boolean,
    multipleLimit: {
      type: Number,
      default: 0
    },
    placeholder: {
      type: String
    },
    defaultFirstOption: Boolean,
    reserveKeyword: {
      type: Boolean,
      default: true
    },
    valueKey: {
      type: String,
      default: "value"
    },
    collapseTags: Boolean,
    collapseTagsTooltip: {
      type: Boolean,
      default: false
    },
    maxCollapseTags: {
      type: Number,
      default: 1
    },
    teleported: useTooltipContentProps.teleported,
    persistent: {
      type: Boolean,
      default: true
    },
    clearIcon: {
      type: iconPropType,
      default: circle_close_default
    },
    fitInputWidth: {
      type: Boolean,
      default: false
    },
    suffixIcon: {
      type: iconPropType,
      default: arrow_down_default
    },
    tagType: { ...tagProps.type, default: "info" },
    validateEvent: {
      type: Boolean,
      default: true
    },
    remoteShowSuffix: {
      type: Boolean,
      default: false
    },
    suffixTransition: {
      type: Boolean,
      default: true
    },
    placement: {
      type: String,
      values: Ee,
      default: "bottom-start"
    }
  },
  emits: [
    UPDATE_MODEL_EVENT,
    CHANGE_EVENT,
    "remove-tag",
    "clear",
    "visible-change",
    "focus",
    "blur"
  ],
  setup(props, ctx) {
    const nsSelect = useNamespace("select");
    const nsInput = useNamespace("input");
    const { t } = useLocale();
    const states = useSelectStates(props);
    const {
      optionList,
      optionsArray,
      selectSize,
      readonly: readonly6,
      handleResize,
      collapseTagSize,
      debouncedOnInputChange,
      debouncedQueryChange,
      deletePrevTag,
      deleteTag,
      deleteSelected,
      handleOptionSelect,
      scrollToOption,
      setSelected,
      resetInputHeight,
      managePlaceholder,
      showClose,
      selectDisabled,
      iconComponent,
      iconReverse,
      showNewOption,
      emptyText,
      toggleLastOptionHitState,
      resetInputState,
      handleComposition,
      onOptionCreate,
      onOptionDestroy,
      handleMenuEnter,
      handleFocus,
      blur,
      handleBlur,
      handleClearClick,
      handleClose,
      handleKeydownEscape,
      toggleMenu,
      selectOption,
      getValueKey,
      navigateOptions,
      dropMenuVisible,
      reference,
      input,
      iOSInput,
      tooltipRef,
      tags,
      selectWrapper,
      scrollbar,
      queryChange,
      groupQueryChange,
      handleMouseEnter,
      handleMouseLeave,
      showTagList,
      collapseTagList
    } = useSelect(props, states, ctx);
    const { focus } = useFocus(reference);
    const {
      inputWidth,
      selected,
      inputLength,
      filteredOptionsCount,
      visible,
      selectedLabel,
      hoverIndex,
      query,
      inputHovering,
      currentPlaceholder,
      menuVisibleOnFocus,
      isOnComposition,
      options,
      cachedOptions,
      optionsCount,
      prefixWidth
    } = toRefs8(states);
    const wrapperKls = computed115(() => {
      const classList = [nsSelect.b()];
      const _selectSize = unref102(selectSize);
      if (_selectSize) {
        classList.push(nsSelect.m(_selectSize));
      }
      if (props.disabled) {
        classList.push(nsSelect.m("disabled"));
      }
      return classList;
    });
    const selectTagsStyle = computed115(() => ({
      maxWidth: `${unref102(inputWidth) - 32}px`,
      width: "100%"
    }));
    const tagTextStyle = computed115(() => {
      const maxWidth = unref102(inputWidth) > 123 ? unref102(inputWidth) - 123 : unref102(inputWidth) - 75;
      return { maxWidth: `${maxWidth}px` };
    });
    provide31(selectKey, reactive19({
      props,
      options,
      optionsArray,
      cachedOptions,
      optionsCount,
      filteredOptionsCount,
      hoverIndex,
      handleOptionSelect,
      onOptionCreate,
      onOptionDestroy,
      selectWrapper,
      selected,
      setSelected,
      queryChange,
      groupQueryChange
    }));
    onMounted41(() => {
      states.cachedPlaceHolder = currentPlaceholder.value = props.placeholder || (() => t("el.select.placeholder"));
      if (props.multiple && Array.isArray(props.modelValue) && props.modelValue.length > 0) {
        currentPlaceholder.value = "";
      }
      useResizeObserver(selectWrapper, handleResize);
      if (props.remote && props.multiple) {
        resetInputHeight();
      }
      nextTick31(() => {
        const refEl = reference.value && reference.value.$el;
        if (!refEl)
          return;
        inputWidth.value = refEl.getBoundingClientRect().width;
        if (ctx.slots.prefix) {
          const prefix = refEl.querySelector(`.${nsInput.e("prefix")}`);
          prefixWidth.value = Math.max(prefix.getBoundingClientRect().width + 11, 30);
        }
      });
      setSelected();
    });
    if (props.multiple && !Array.isArray(props.modelValue)) {
      ctx.emit(UPDATE_MODEL_EVENT, []);
    }
    if (!props.multiple && Array.isArray(props.modelValue)) {
      ctx.emit(UPDATE_MODEL_EVENT, "");
    }
    const popperPaneRef = computed115(() => {
      var _a2, _b;
      return (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.contentRef;
    });
    const onOptionsRendered = (v2) => {
      optionList.value = v2;
    };
    return {
      isIOS,
      onOptionsRendered,
      prefixWidth,
      selectSize,
      readonly: readonly6,
      handleResize,
      collapseTagSize,
      debouncedOnInputChange,
      debouncedQueryChange,
      deletePrevTag,
      deleteTag,
      deleteSelected,
      handleOptionSelect,
      scrollToOption,
      inputWidth,
      selected,
      inputLength,
      filteredOptionsCount,
      visible,
      selectedLabel,
      hoverIndex,
      query,
      inputHovering,
      currentPlaceholder,
      menuVisibleOnFocus,
      isOnComposition,
      options,
      resetInputHeight,
      managePlaceholder,
      showClose,
      selectDisabled,
      iconComponent,
      iconReverse,
      showNewOption,
      emptyText,
      toggleLastOptionHitState,
      resetInputState,
      handleComposition,
      handleMenuEnter,
      handleFocus,
      blur,
      handleBlur,
      handleClearClick,
      handleClose,
      handleKeydownEscape,
      toggleMenu,
      selectOption,
      getValueKey,
      navigateOptions,
      dropMenuVisible,
      focus,
      reference,
      input,
      iOSInput,
      tooltipRef,
      popperPaneRef,
      tags,
      selectWrapper,
      scrollbar,
      wrapperKls,
      selectTagsStyle,
      nsSelect,
      tagTextStyle,
      handleMouseEnter,
      handleMouseLeave,
      showTagList,
      collapseTagList
    };
  }
});
var _hoisted_146 = ["disabled", "autocomplete"];
var _hoisted_229 = ["disabled"];
var _hoisted_314 = { style: { "height": "100%", "display": "flex", "justify-content": "center", "align-items": "center" } };
function _sfc_render23(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tag = resolveComponent11("el-tag");
  const _component_el_tooltip = resolveComponent11("el-tooltip");
  const _component_el_icon = resolveComponent11("el-icon");
  const _component_el_input = resolveComponent11("el-input");
  const _component_el_option = resolveComponent11("el-option");
  const _component_el_options = resolveComponent11("el-options");
  const _component_el_scrollbar = resolveComponent11("el-scrollbar");
  const _component_el_select_menu = resolveComponent11("el-select-menu");
  const _directive_click_outside = resolveDirective("click-outside");
  return withDirectives25((openBlock93(), createElementBlock79("div", {
    ref: "selectWrapper",
    class: normalizeClass76(_ctx.wrapperKls),
    onMouseenter: _cache[21] || (_cache[21] = (...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args)),
    onMouseleave: _cache[22] || (_cache[22] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args)),
    onClick: _cache[23] || (_cache[23] = withModifiers21((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), ["stop"]))
  }, [
    createVNode43(_component_el_tooltip, {
      ref: "tooltipRef",
      visible: _ctx.dropMenuVisible,
      placement: _ctx.placement,
      teleported: _ctx.teleported,
      "popper-class": [_ctx.nsSelect.e("popper"), _ctx.popperClass],
      "popper-options": _ctx.popperOptions,
      "fallback-placements": ["bottom-start", "top-start", "right", "left"],
      effect: _ctx.effect,
      pure: "",
      trigger: "click",
      transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,
      "stop-popper-mouse-event": false,
      "gpu-acceleration": false,
      persistent: _ctx.persistent,
      onShow: _ctx.handleMenuEnter
    }, {
      default: withCtx53(() => [
        createElementVNode50("div", {
          class: "select-trigger",
          onMouseenter: _cache[19] || (_cache[19] = ($event) => _ctx.inputHovering = true),
          onMouseleave: _cache[20] || (_cache[20] = ($event) => _ctx.inputHovering = false)
        }, [
          _ctx.multiple ? (openBlock93(), createElementBlock79("div", {
            key: 0,
            ref: "tags",
            class: normalizeClass76([
              _ctx.nsSelect.e("tags"),
              _ctx.nsSelect.is("disabled", _ctx.selectDisabled)
            ]),
            style: normalizeStyle36(_ctx.selectTagsStyle)
          }, [
            _ctx.collapseTags && _ctx.selected.length ? (openBlock93(), createBlock53(Transition14, {
              key: 0,
              onAfterLeave: _ctx.resetInputHeight
            }, {
              default: withCtx53(() => [
                createElementVNode50("span", {
                  class: normalizeClass76([
                    _ctx.nsSelect.b("tags-wrapper"),
                    { "has-prefix": _ctx.prefixWidth && _ctx.selected.length }
                  ])
                }, [
                  (openBlock93(true), createElementBlock79(Fragment33, null, renderList19(_ctx.showTagList, (item) => {
                    return openBlock93(), createBlock53(_component_el_tag, {
                      key: _ctx.getValueKey(item),
                      closable: !_ctx.selectDisabled && !item.isDisabled,
                      size: _ctx.collapseTagSize,
                      hit: item.hitState,
                      type: _ctx.tagType,
                      "disable-transitions": "",
                      onClose: ($event) => _ctx.deleteTag($event, item)
                    }, {
                      default: withCtx53(() => [
                        createElementVNode50("span", {
                          class: normalizeClass76(_ctx.nsSelect.e("tags-text")),
                          style: normalizeStyle36(_ctx.tagTextStyle)
                        }, toDisplayString40(item.currentLabel), 7)
                      ]),
                      _: 2
                    }, 1032, ["closable", "size", "hit", "type", "onClose"]);
                  }), 128)),
                  _ctx.selected.length > _ctx.maxCollapseTags ? (openBlock93(), createBlock53(_component_el_tag, {
                    key: 0,
                    closable: false,
                    size: _ctx.collapseTagSize,
                    type: _ctx.tagType,
                    "disable-transitions": ""
                  }, {
                    default: withCtx53(() => [
                      _ctx.collapseTagsTooltip ? (openBlock93(), createBlock53(_component_el_tooltip, {
                        key: 0,
                        disabled: _ctx.dropMenuVisible,
                        "fallback-placements": ["bottom", "top", "right", "left"],
                        effect: _ctx.effect,
                        placement: "bottom",
                        teleported: _ctx.teleported
                      }, {
                        default: withCtx53(() => [
                          createElementVNode50("span", {
                            class: normalizeClass76(_ctx.nsSelect.e("tags-text"))
                          }, "+ " + toDisplayString40(_ctx.selected.length - _ctx.maxCollapseTags), 3)
                        ]),
                        content: withCtx53(() => [
                          createElementVNode50("div", {
                            class: normalizeClass76(_ctx.nsSelect.e("collapse-tags"))
                          }, [
                            (openBlock93(true), createElementBlock79(Fragment33, null, renderList19(_ctx.collapseTagList, (item) => {
                              return openBlock93(), createElementBlock79("div", {
                                key: _ctx.getValueKey(item),
                                class: normalizeClass76(_ctx.nsSelect.e("collapse-tag"))
                              }, [
                                createVNode43(_component_el_tag, {
                                  class: "in-tooltip",
                                  closable: !_ctx.selectDisabled && !item.isDisabled,
                                  size: _ctx.collapseTagSize,
                                  hit: item.hitState,
                                  type: _ctx.tagType,
                                  "disable-transitions": "",
                                  style: { margin: "2px" },
                                  onClose: ($event) => _ctx.deleteTag($event, item)
                                }, {
                                  default: withCtx53(() => [
                                    createElementVNode50("span", {
                                      class: normalizeClass76(_ctx.nsSelect.e("tags-text")),
                                      style: normalizeStyle36({
                                        maxWidth: _ctx.inputWidth - 75 + "px"
                                      })
                                    }, toDisplayString40(item.currentLabel), 7)
                                  ]),
                                  _: 2
                                }, 1032, ["closable", "size", "hit", "type", "onClose"])
                              ], 2);
                            }), 128))
                          ], 2)
                        ]),
                        _: 1
                      }, 8, ["disabled", "effect", "teleported"])) : (openBlock93(), createElementBlock79("span", {
                        key: 1,
                        class: normalizeClass76(_ctx.nsSelect.e("tags-text"))
                      }, "+ " + toDisplayString40(_ctx.selected.length - _ctx.maxCollapseTags), 3))
                    ]),
                    _: 1
                  }, 8, ["size", "type"])) : createCommentVNode44("v-if", true)
                ], 2)
              ]),
              _: 1
            }, 8, ["onAfterLeave"])) : createCommentVNode44("v-if", true),
            !_ctx.collapseTags ? (openBlock93(), createBlock53(Transition14, {
              key: 1,
              onAfterLeave: _ctx.resetInputHeight
            }, {
              default: withCtx53(() => [
                createElementVNode50("span", {
                  class: normalizeClass76([
                    _ctx.nsSelect.b("tags-wrapper"),
                    { "has-prefix": _ctx.prefixWidth && _ctx.selected.length }
                  ]),
                  style: normalizeStyle36(_ctx.prefixWidth && _ctx.selected.length ? { marginLeft: `${_ctx.prefixWidth}px` } : "")
                }, [
                  (openBlock93(true), createElementBlock79(Fragment33, null, renderList19(_ctx.selected, (item) => {
                    return openBlock93(), createBlock53(_component_el_tag, {
                      key: _ctx.getValueKey(item),
                      closable: !_ctx.selectDisabled && !item.isDisabled,
                      size: _ctx.collapseTagSize,
                      hit: item.hitState,
                      type: _ctx.tagType,
                      "disable-transitions": "",
                      onClose: ($event) => _ctx.deleteTag($event, item)
                    }, {
                      default: withCtx53(() => [
                        createElementVNode50("span", {
                          class: normalizeClass76(_ctx.nsSelect.e("tags-text")),
                          style: normalizeStyle36({ maxWidth: _ctx.inputWidth - 75 + "px" })
                        }, toDisplayString40(item.currentLabel), 7)
                      ]),
                      _: 2
                    }, 1032, ["closable", "size", "hit", "type", "onClose"]);
                  }), 128))
                ], 6)
              ]),
              _: 1
            }, 8, ["onAfterLeave"])) : createCommentVNode44("v-if", true),
            _ctx.filterable && !_ctx.selectDisabled ? withDirectives25((openBlock93(), createElementBlock79("input", {
              key: 2,
              ref: "input",
              "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.query = $event),
              type: "text",
              class: normalizeClass76([
                _ctx.nsSelect.e("input"),
                _ctx.nsSelect.is(_ctx.selectSize),
                _ctx.nsSelect.is("disabled", _ctx.selectDisabled)
              ]),
              disabled: _ctx.selectDisabled,
              autocomplete: _ctx.autocomplete,
              style: normalizeStyle36({
                marginLeft: `${_ctx.prefixWidth}px`,
                flexGrow: 1,
                width: `${_ctx.inputLength / (_ctx.inputWidth - 32)}%`,
                maxWidth: `${_ctx.inputWidth - 42}px`
              }),
              onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),
              onBlur: _cache[2] || (_cache[2] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),
              onKeyup: _cache[3] || (_cache[3] = (...args) => _ctx.managePlaceholder && _ctx.managePlaceholder(...args)),
              onKeydown: [
                _cache[4] || (_cache[4] = (...args) => _ctx.resetInputState && _ctx.resetInputState(...args)),
                _cache[5] || (_cache[5] = withKeys9(withModifiers21(($event) => _ctx.navigateOptions("next"), ["prevent"]), ["down"])),
                _cache[6] || (_cache[6] = withKeys9(withModifiers21(($event) => _ctx.navigateOptions("prev"), ["prevent"]), ["up"])),
                _cache[7] || (_cache[7] = withKeys9((...args) => _ctx.handleKeydownEscape && _ctx.handleKeydownEscape(...args), ["esc"])),
                _cache[8] || (_cache[8] = withKeys9(withModifiers21((...args) => _ctx.selectOption && _ctx.selectOption(...args), ["stop", "prevent"]), ["enter"])),
                _cache[9] || (_cache[9] = withKeys9((...args) => _ctx.deletePrevTag && _ctx.deletePrevTag(...args), ["delete"])),
                _cache[10] || (_cache[10] = withKeys9(($event) => _ctx.visible = false, ["tab"]))
              ],
              onCompositionstart: _cache[11] || (_cache[11] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),
              onCompositionupdate: _cache[12] || (_cache[12] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),
              onCompositionend: _cache[13] || (_cache[13] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),
              onInput: _cache[14] || (_cache[14] = (...args) => _ctx.debouncedQueryChange && _ctx.debouncedQueryChange(...args))
            }, null, 46, _hoisted_146)), [
              [vModelText2, _ctx.query]
            ]) : createCommentVNode44("v-if", true)
          ], 6)) : createCommentVNode44("v-if", true),
          createCommentVNode44(" fix: https://github.com/element-plus/element-plus/issues/11415 "),
          _ctx.isIOS && !_ctx.multiple && _ctx.filterable && _ctx.readonly ? (openBlock93(), createElementBlock79("input", {
            key: 1,
            ref: "iOSInput",
            class: normalizeClass76([
              _ctx.nsSelect.e("input"),
              _ctx.nsSelect.is(_ctx.selectSize),
              _ctx.nsSelect.em("input", "iOS")
            ]),
            disabled: _ctx.selectDisabled,
            type: "text"
          }, null, 10, _hoisted_229)) : createCommentVNode44("v-if", true),
          createVNode43(_component_el_input, {
            id: _ctx.id,
            ref: "reference",
            modelValue: _ctx.selectedLabel,
            "onUpdate:modelValue": _cache[15] || (_cache[15] = ($event) => _ctx.selectedLabel = $event),
            type: "text",
            placeholder: typeof _ctx.currentPlaceholder === "function" ? _ctx.currentPlaceholder() : _ctx.currentPlaceholder,
            name: _ctx.name,
            autocomplete: _ctx.autocomplete,
            size: _ctx.selectSize,
            disabled: _ctx.selectDisabled,
            readonly: _ctx.readonly,
            "validate-event": false,
            class: normalizeClass76([_ctx.nsSelect.is("focus", _ctx.visible)]),
            tabindex: _ctx.multiple && _ctx.filterable ? -1 : void 0,
            onFocus: _ctx.handleFocus,
            onBlur: _ctx.handleBlur,
            onInput: _ctx.debouncedOnInputChange,
            onPaste: _ctx.debouncedOnInputChange,
            onCompositionstart: _ctx.handleComposition,
            onCompositionupdate: _ctx.handleComposition,
            onCompositionend: _ctx.handleComposition,
            onKeydown: [
              _cache[16] || (_cache[16] = withKeys9(withModifiers21(($event) => _ctx.navigateOptions("next"), ["stop", "prevent"]), ["down"])),
              _cache[17] || (_cache[17] = withKeys9(withModifiers21(($event) => _ctx.navigateOptions("prev"), ["stop", "prevent"]), ["up"])),
              withKeys9(withModifiers21(_ctx.selectOption, ["stop", "prevent"]), ["enter"]),
              withKeys9(_ctx.handleKeydownEscape, ["esc"]),
              _cache[18] || (_cache[18] = withKeys9(($event) => _ctx.visible = false, ["tab"]))
            ]
          }, createSlots5({
            suffix: withCtx53(() => [
              _ctx.iconComponent && !_ctx.showClose ? (openBlock93(), createBlock53(_component_el_icon, {
                key: 0,
                class: normalizeClass76([_ctx.nsSelect.e("caret"), _ctx.nsSelect.e("icon"), _ctx.iconReverse])
              }, {
                default: withCtx53(() => [
                  (openBlock93(), createBlock53(resolveDynamicComponent20(_ctx.iconComponent)))
                ]),
                _: 1
              }, 8, ["class"])) : createCommentVNode44("v-if", true),
              _ctx.showClose && _ctx.clearIcon ? (openBlock93(), createBlock53(_component_el_icon, {
                key: 1,
                class: normalizeClass76([_ctx.nsSelect.e("caret"), _ctx.nsSelect.e("icon")]),
                onClick: _ctx.handleClearClick
              }, {
                default: withCtx53(() => [
                  (openBlock93(), createBlock53(resolveDynamicComponent20(_ctx.clearIcon)))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : createCommentVNode44("v-if", true)
            ]),
            _: 2
          }, [
            _ctx.$slots.prefix ? {
              name: "prefix",
              fn: withCtx53(() => [
                createElementVNode50("div", _hoisted_314, [
                  renderSlot77(_ctx.$slots, "prefix")
                ])
              ])
            } : void 0
          ]), 1032, ["id", "modelValue", "placeholder", "name", "autocomplete", "size", "disabled", "readonly", "class", "tabindex", "onFocus", "onBlur", "onInput", "onPaste", "onCompositionstart", "onCompositionupdate", "onCompositionend", "onKeydown"])
        ], 32)
      ]),
      content: withCtx53(() => [
        createVNode43(_component_el_select_menu, null, {
          default: withCtx53(() => [
            withDirectives25(createVNode43(_component_el_scrollbar, {
              ref: "scrollbar",
              tag: "ul",
              "wrap-class": _ctx.nsSelect.be("dropdown", "wrap"),
              "view-class": _ctx.nsSelect.be("dropdown", "list"),
              class: normalizeClass76([
                _ctx.nsSelect.is("empty", !_ctx.allowCreate && Boolean(_ctx.query) && _ctx.filteredOptionsCount === 0)
              ])
            }, {
              default: withCtx53(() => [
                _ctx.showNewOption ? (openBlock93(), createBlock53(_component_el_option, {
                  key: 0,
                  value: _ctx.query,
                  created: true
                }, null, 8, ["value"])) : createCommentVNode44("v-if", true),
                createVNode43(_component_el_options, { onUpdateOptions: _ctx.onOptionsRendered }, {
                  default: withCtx53(() => [
                    renderSlot77(_ctx.$slots, "default")
                  ]),
                  _: 3
                }, 8, ["onUpdateOptions"])
              ]),
              _: 3
            }, 8, ["wrap-class", "view-class", "class"]), [
              [vShow17, _ctx.options.size > 0 && !_ctx.loading]
            ]),
            _ctx.emptyText && (!_ctx.allowCreate || _ctx.loading || _ctx.allowCreate && _ctx.options.size === 0) ? (openBlock93(), createElementBlock79(Fragment33, { key: 0 }, [
              _ctx.$slots.empty ? renderSlot77(_ctx.$slots, "empty", { key: 0 }) : (openBlock93(), createElementBlock79("p", {
                key: 1,
                class: normalizeClass76(_ctx.nsSelect.be("dropdown", "empty"))
              }, toDisplayString40(_ctx.emptyText), 3))
            ], 64)) : createCommentVNode44("v-if", true)
          ]),
          _: 3
        })
      ]),
      _: 3
    }, 8, ["visible", "placement", "teleported", "popper-class", "popper-options", "effect", "transition", "persistent", "onShow"])
  ], 34)), [
    [_directive_click_outside, _ctx.handleClose, _ctx.popperPaneRef]
  ]);
}
var Select = _export_sfc(_sfc_main97, [["render", _sfc_render23], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/select.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/src/option-group.mjs
import { defineComponent as defineComponent111, ref as ref86, getCurrentInstance as getCurrentInstance28, provide as provide32, reactive as reactive20, toRefs as toRefs9, inject as inject57, onMounted as onMounted42, toRaw as toRaw5, watch as watch57, withDirectives as withDirectives26, openBlock as openBlock94, createElementBlock as createElementBlock80, normalizeClass as normalizeClass77, createElementVNode as createElementVNode51, toDisplayString as toDisplayString41, renderSlot as renderSlot78, vShow as vShow18 } from "vue";
var _sfc_main98 = defineComponent111({
  name: "ElOptionGroup",
  componentName: "ElOptionGroup",
  props: {
    label: String,
    disabled: {
      type: Boolean,
      default: false
    }
  },
  setup(props) {
    const ns = useNamespace("select");
    const visible = ref86(true);
    const instance = getCurrentInstance28();
    const children = ref86([]);
    provide32(selectGroupKey, reactive20({
      ...toRefs9(props)
    }));
    const select = inject57(selectKey);
    onMounted42(() => {
      children.value = flattedChildren2(instance.subTree);
    });
    const flattedChildren2 = (node) => {
      const children2 = [];
      if (Array.isArray(node.children)) {
        node.children.forEach((child) => {
          var _a2;
          if (child.type && child.type.name === "ElOption" && child.component && child.component.proxy) {
            children2.push(child.component.proxy);
          } else if ((_a2 = child.children) == null ? void 0 : _a2.length) {
            children2.push(...flattedChildren2(child));
          }
        });
      }
      return children2;
    };
    const { groupQueryChange } = toRaw5(select);
    watch57(groupQueryChange, () => {
      visible.value = children.value.some((option) => option.visible === true);
    }, { flush: "post" });
    return {
      visible,
      ns
    };
  }
});
function _sfc_render24(_ctx, _cache, $props, $setup, $data, $options) {
  return withDirectives26((openBlock94(), createElementBlock80("ul", {
    class: normalizeClass77(_ctx.ns.be("group", "wrap"))
  }, [
    createElementVNode51("li", {
      class: normalizeClass77(_ctx.ns.be("group", "title"))
    }, toDisplayString41(_ctx.label), 3),
    createElementVNode51("li", null, [
      createElementVNode51("ul", {
        class: normalizeClass77(_ctx.ns.b("group"))
      }, [
        renderSlot78(_ctx.$slots, "default")
      ], 2)
    ])
  ], 2)), [
    [vShow18, _ctx.visible]
  ]);
}
var OptionGroup = _export_sfc(_sfc_main98, [["render", _sfc_render24], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/option-group.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select/index.mjs
var ElSelect = withInstall(Select, {
  Option,
  OptionGroup
});
var ElOption = withNoopInstall(Option);
var ElOptionGroup = withNoopInstall(OptionGroup);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/usePagination.mjs
import { inject as inject58 } from "vue";
var usePagination = () => inject58(elPaginationKey, {});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/sizes.mjs
var paginationSizesProps = buildProps({
  pageSize: {
    type: Number,
    required: true
  },
  pageSizes: {
    type: definePropType(Array),
    default: () => mutable([10, 20, 30, 40, 50, 100])
  },
  popperClass: {
    type: String
  },
  disabled: Boolean,
  size: {
    type: String,
    values: componentSizes
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/sizes2.mjs
var __default__65 = defineComponent112({
  name: "ElPaginationSizes"
});
var _sfc_main99 = defineComponent112({
  ...__default__65,
  props: paginationSizesProps,
  emits: ["page-size-change"],
  setup(__props, { emit }) {
    const props = __props;
    const { t } = useLocale();
    const ns = useNamespace("pagination");
    const pagination = usePagination();
    const innerPageSize = ref87(props.pageSize);
    watch58(() => props.pageSizes, (newVal, oldVal) => {
      if (isEqual_default(newVal, oldVal))
        return;
      if (Array.isArray(newVal)) {
        const pageSize = newVal.includes(props.pageSize) ? props.pageSize : props.pageSizes[0];
        emit("page-size-change", pageSize);
      }
    });
    watch58(() => props.pageSize, (newVal) => {
      innerPageSize.value = newVal;
    });
    const innerPageSizes = computed116(() => props.pageSizes);
    function handleChange(val) {
      var _a2;
      if (val !== innerPageSize.value) {
        innerPageSize.value = val;
        (_a2 = pagination.handleSizeChange) == null ? void 0 : _a2.call(pagination, Number(val));
      }
    }
    return (_ctx, _cache) => {
      return openBlock95(), createElementBlock81("span", {
        class: normalizeClass78(unref103(ns).e("sizes"))
      }, [
        createVNode44(unref103(ElSelect), {
          "model-value": innerPageSize.value,
          disabled: _ctx.disabled,
          "popper-class": _ctx.popperClass,
          size: _ctx.size,
          "validate-event": false,
          onChange: handleChange
        }, {
          default: withCtx54(() => [
            (openBlock95(true), createElementBlock81(Fragment34, null, renderList20(unref103(innerPageSizes), (item) => {
              return openBlock95(), createBlock54(unref103(ElOption), {
                key: item,
                value: item,
                label: item + unref103(t)("el.pagination.pagesize")
              }, null, 8, ["value", "label"]);
            }), 128))
          ]),
          _: 1
        }, 8, ["model-value", "disabled", "popper-class", "size"])
      ], 2);
    };
  }
});
var Sizes = _export_sfc(_sfc_main99, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/sizes.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/jumper2.mjs
import { defineComponent as defineComponent113, ref as ref88, computed as computed117, openBlock as openBlock96, createElementBlock as createElementBlock82, normalizeClass as normalizeClass79, unref as unref104, createElementVNode as createElementVNode52, toDisplayString as toDisplayString42, createVNode as createVNode45 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/jumper.mjs
var paginationJumperProps = buildProps({
  size: {
    type: String,
    values: componentSizes
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/jumper2.mjs
var _hoisted_147 = ["disabled"];
var __default__66 = defineComponent113({
  name: "ElPaginationJumper"
});
var _sfc_main100 = defineComponent113({
  ...__default__66,
  props: paginationJumperProps,
  setup(__props) {
    const { t } = useLocale();
    const ns = useNamespace("pagination");
    const { pageCount, disabled, currentPage, changeEvent } = usePagination();
    const userInput = ref88();
    const innerValue = computed117(() => {
      var _a2;
      return (_a2 = userInput.value) != null ? _a2 : currentPage == null ? void 0 : currentPage.value;
    });
    function handleInput(val) {
      userInput.value = val ? +val : "";
    }
    function handleChange(val) {
      val = Math.trunc(+val);
      changeEvent == null ? void 0 : changeEvent(val);
      userInput.value = void 0;
    }
    return (_ctx, _cache) => {
      return openBlock96(), createElementBlock82("span", {
        class: normalizeClass79(unref104(ns).e("jump")),
        disabled: unref104(disabled)
      }, [
        createElementVNode52("span", {
          class: normalizeClass79([unref104(ns).e("goto")])
        }, toDisplayString42(unref104(t)("el.pagination.goto")), 3),
        createVNode45(unref104(ElInput), {
          size: _ctx.size,
          class: normalizeClass79([unref104(ns).e("editor"), unref104(ns).is("in-pagination")]),
          min: 1,
          max: unref104(pageCount),
          disabled: unref104(disabled),
          "model-value": unref104(innerValue),
          "validate-event": false,
          label: unref104(t)("el.pagination.page"),
          type: "number",
          "onUpdate:modelValue": handleInput,
          onChange: handleChange
        }, null, 8, ["size", "class", "max", "disabled", "model-value", "label"]),
        createElementVNode52("span", {
          class: normalizeClass79([unref104(ns).e("classifier")])
        }, toDisplayString42(unref104(t)("el.pagination.pageClassifier")), 3)
      ], 10, _hoisted_147);
    };
  }
});
var Jumper = _export_sfc(_sfc_main100, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/jumper.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/total2.mjs
import { defineComponent as defineComponent114, openBlock as openBlock97, createElementBlock as createElementBlock83, normalizeClass as normalizeClass80, unref as unref105, toDisplayString as toDisplayString43 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/total.mjs
var paginationTotalProps = buildProps({
  total: {
    type: Number,
    default: 1e3
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/total2.mjs
var _hoisted_148 = ["disabled"];
var __default__67 = defineComponent114({
  name: "ElPaginationTotal"
});
var _sfc_main101 = defineComponent114({
  ...__default__67,
  props: paginationTotalProps,
  setup(__props) {
    const { t } = useLocale();
    const ns = useNamespace("pagination");
    const { disabled } = usePagination();
    return (_ctx, _cache) => {
      return openBlock97(), createElementBlock83("span", {
        class: normalizeClass80(unref105(ns).e("total")),
        disabled: unref105(disabled)
      }, toDisplayString43(unref105(t)("el.pagination.total", {
        total: _ctx.total
      })), 11, _hoisted_148);
    };
  }
});
var Total = _export_sfc(_sfc_main101, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/total.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/pager2.mjs
import { defineComponent as defineComponent115, ref as ref89, computed as computed118, watchEffect as watchEffect8, openBlock as openBlock98, createElementBlock as createElementBlock84, normalizeClass as normalizeClass81, unref as unref106, withKeys as withKeys10, createCommentVNode as createCommentVNode45, createBlock as createBlock55, Fragment as Fragment35, renderList as renderList21, toDisplayString as toDisplayString44 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/pager.mjs
var paginationPagerProps = buildProps({
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    required: true
  },
  pagerCount: {
    type: Number,
    default: 7
  },
  disabled: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/components/pager2.mjs
var _hoisted_149 = ["onKeyup"];
var _hoisted_230 = ["aria-current", "aria-label", "tabindex"];
var _hoisted_315 = ["tabindex", "aria-label"];
var _hoisted_47 = ["aria-current", "aria-label", "tabindex"];
var _hoisted_54 = ["tabindex", "aria-label"];
var _hoisted_62 = ["aria-current", "aria-label", "tabindex"];
var __default__68 = defineComponent115({
  name: "ElPaginationPager"
});
var _sfc_main102 = defineComponent115({
  ...__default__68,
  props: paginationPagerProps,
  emits: ["change"],
  setup(__props, { emit }) {
    const props = __props;
    const nsPager = useNamespace("pager");
    const nsIcon = useNamespace("icon");
    const { t } = useLocale();
    const showPrevMore = ref89(false);
    const showNextMore = ref89(false);
    const quickPrevHover = ref89(false);
    const quickNextHover = ref89(false);
    const quickPrevFocus = ref89(false);
    const quickNextFocus = ref89(false);
    const pagers = computed118(() => {
      const pagerCount = props.pagerCount;
      const halfPagerCount = (pagerCount - 1) / 2;
      const currentPage = Number(props.currentPage);
      const pageCount = Number(props.pageCount);
      let showPrevMore2 = false;
      let showNextMore2 = false;
      if (pageCount > pagerCount) {
        if (currentPage > pagerCount - halfPagerCount) {
          showPrevMore2 = true;
        }
        if (currentPage < pageCount - halfPagerCount) {
          showNextMore2 = true;
        }
      }
      const array4 = [];
      if (showPrevMore2 && !showNextMore2) {
        const startPage = pageCount - (pagerCount - 2);
        for (let i = startPage; i < pageCount; i++) {
          array4.push(i);
        }
      } else if (!showPrevMore2 && showNextMore2) {
        for (let i = 2; i < pagerCount; i++) {
          array4.push(i);
        }
      } else if (showPrevMore2 && showNextMore2) {
        const offset2 = Math.floor(pagerCount / 2) - 1;
        for (let i = currentPage - offset2; i <= currentPage + offset2; i++) {
          array4.push(i);
        }
      } else {
        for (let i = 2; i < pageCount; i++) {
          array4.push(i);
        }
      }
      return array4;
    });
    const prevMoreKls = computed118(() => [
      "more",
      "btn-quickprev",
      nsIcon.b(),
      nsPager.is("disabled", props.disabled)
    ]);
    const nextMoreKls = computed118(() => [
      "more",
      "btn-quicknext",
      nsIcon.b(),
      nsPager.is("disabled", props.disabled)
    ]);
    const tabindex = computed118(() => props.disabled ? -1 : 0);
    watchEffect8(() => {
      const halfPagerCount = (props.pagerCount - 1) / 2;
      showPrevMore.value = false;
      showNextMore.value = false;
      if (props.pageCount > props.pagerCount) {
        if (props.currentPage > props.pagerCount - halfPagerCount) {
          showPrevMore.value = true;
        }
        if (props.currentPage < props.pageCount - halfPagerCount) {
          showNextMore.value = true;
        }
      }
    });
    function onMouseEnter(forward = false) {
      if (props.disabled)
        return;
      if (forward) {
        quickPrevHover.value = true;
      } else {
        quickNextHover.value = true;
      }
    }
    function onFocus(forward = false) {
      if (forward) {
        quickPrevFocus.value = true;
      } else {
        quickNextFocus.value = true;
      }
    }
    function onEnter(e) {
      const target2 = e.target;
      if (target2.tagName.toLowerCase() === "li" && Array.from(target2.classList).includes("number")) {
        const newPage = Number(target2.textContent);
        if (newPage !== props.currentPage) {
          emit("change", newPage);
        }
      } else if (target2.tagName.toLowerCase() === "li" && Array.from(target2.classList).includes("more")) {
        onPagerClick(e);
      }
    }
    function onPagerClick(event) {
      const target2 = event.target;
      if (target2.tagName.toLowerCase() === "ul" || props.disabled) {
        return;
      }
      let newPage = Number(target2.textContent);
      const pageCount = props.pageCount;
      const currentPage = props.currentPage;
      const pagerCountOffset = props.pagerCount - 2;
      if (target2.className.includes("more")) {
        if (target2.className.includes("quickprev")) {
          newPage = currentPage - pagerCountOffset;
        } else if (target2.className.includes("quicknext")) {
          newPage = currentPage + pagerCountOffset;
        }
      }
      if (!Number.isNaN(+newPage)) {
        if (newPage < 1) {
          newPage = 1;
        }
        if (newPage > pageCount) {
          newPage = pageCount;
        }
      }
      if (newPage !== currentPage) {
        emit("change", newPage);
      }
    }
    return (_ctx, _cache) => {
      return openBlock98(), createElementBlock84("ul", {
        class: normalizeClass81(unref106(nsPager).b()),
        onClick: onPagerClick,
        onKeyup: withKeys10(onEnter, ["enter"])
      }, [
        _ctx.pageCount > 0 ? (openBlock98(), createElementBlock84("li", {
          key: 0,
          class: normalizeClass81([[
            unref106(nsPager).is("active", _ctx.currentPage === 1),
            unref106(nsPager).is("disabled", _ctx.disabled)
          ], "number"]),
          "aria-current": _ctx.currentPage === 1,
          "aria-label": unref106(t)("el.pagination.currentPage", { pager: 1 }),
          tabindex: unref106(tabindex)
        }, " 1 ", 10, _hoisted_230)) : createCommentVNode45("v-if", true),
        showPrevMore.value ? (openBlock98(), createElementBlock84("li", {
          key: 1,
          class: normalizeClass81(unref106(prevMoreKls)),
          tabindex: unref106(tabindex),
          "aria-label": unref106(t)("el.pagination.prevPages", { pager: _ctx.pagerCount - 2 }),
          onMouseenter: _cache[0] || (_cache[0] = ($event) => onMouseEnter(true)),
          onMouseleave: _cache[1] || (_cache[1] = ($event) => quickPrevHover.value = false),
          onFocus: _cache[2] || (_cache[2] = ($event) => onFocus(true)),
          onBlur: _cache[3] || (_cache[3] = ($event) => quickPrevFocus.value = false)
        }, [
          (quickPrevHover.value || quickPrevFocus.value) && !_ctx.disabled ? (openBlock98(), createBlock55(unref106(d_arrow_left_default), { key: 0 })) : (openBlock98(), createBlock55(unref106(more_filled_default), { key: 1 }))
        ], 42, _hoisted_315)) : createCommentVNode45("v-if", true),
        (openBlock98(true), createElementBlock84(Fragment35, null, renderList21(unref106(pagers), (pager) => {
          return openBlock98(), createElementBlock84("li", {
            key: pager,
            class: normalizeClass81([[
              unref106(nsPager).is("active", _ctx.currentPage === pager),
              unref106(nsPager).is("disabled", _ctx.disabled)
            ], "number"]),
            "aria-current": _ctx.currentPage === pager,
            "aria-label": unref106(t)("el.pagination.currentPage", { pager }),
            tabindex: unref106(tabindex)
          }, toDisplayString44(pager), 11, _hoisted_47);
        }), 128)),
        showNextMore.value ? (openBlock98(), createElementBlock84("li", {
          key: 2,
          class: normalizeClass81(unref106(nextMoreKls)),
          tabindex: unref106(tabindex),
          "aria-label": unref106(t)("el.pagination.nextPages", { pager: _ctx.pagerCount - 2 }),
          onMouseenter: _cache[4] || (_cache[4] = ($event) => onMouseEnter()),
          onMouseleave: _cache[5] || (_cache[5] = ($event) => quickNextHover.value = false),
          onFocus: _cache[6] || (_cache[6] = ($event) => onFocus()),
          onBlur: _cache[7] || (_cache[7] = ($event) => quickNextFocus.value = false)
        }, [
          (quickNextHover.value || quickNextFocus.value) && !_ctx.disabled ? (openBlock98(), createBlock55(unref106(d_arrow_right_default), { key: 0 })) : (openBlock98(), createBlock55(unref106(more_filled_default), { key: 1 }))
        ], 42, _hoisted_54)) : createCommentVNode45("v-if", true),
        _ctx.pageCount > 1 ? (openBlock98(), createElementBlock84("li", {
          key: 3,
          class: normalizeClass81([[
            unref106(nsPager).is("active", _ctx.currentPage === _ctx.pageCount),
            unref106(nsPager).is("disabled", _ctx.disabled)
          ], "number"]),
          "aria-current": _ctx.currentPage === _ctx.pageCount,
          "aria-label": unref106(t)("el.pagination.currentPage", { pager: _ctx.pageCount }),
          tabindex: unref106(tabindex)
        }, toDisplayString44(_ctx.pageCount), 11, _hoisted_62)) : createCommentVNode45("v-if", true)
      ], 42, _hoisted_149);
    };
  }
});
var Pager = _export_sfc(_sfc_main102, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/pager.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/src/pagination.mjs
var isAbsent = (v2) => typeof v2 !== "number";
var paginationProps = buildProps({
  pageSize: Number,
  defaultPageSize: Number,
  total: Number,
  pageCount: Number,
  pagerCount: {
    type: Number,
    validator: (value) => {
      return isNumber3(value) && Math.trunc(value) === value && value > 4 && value < 22 && value % 2 === 1;
    },
    default: 7
  },
  currentPage: Number,
  defaultCurrentPage: Number,
  layout: {
    type: String,
    default: ["prev", "pager", "next", "jumper", "->", "total"].join(", ")
  },
  pageSizes: {
    type: definePropType(Array),
    default: () => mutable([10, 20, 30, 40, 50, 100])
  },
  popperClass: {
    type: String,
    default: ""
  },
  prevText: {
    type: String,
    default: ""
  },
  prevIcon: {
    type: iconPropType,
    default: () => arrow_left_default
  },
  nextText: {
    type: String,
    default: ""
  },
  nextIcon: {
    type: iconPropType,
    default: () => arrow_right_default
  },
  small: Boolean,
  background: Boolean,
  disabled: Boolean,
  hideOnSinglePage: Boolean
});
var paginationEmits = {
  "update:current-page": (val) => isNumber3(val),
  "update:page-size": (val) => isNumber3(val),
  "size-change": (val) => isNumber3(val),
  "current-change": (val) => isNumber3(val),
  "prev-click": (val) => isNumber3(val),
  "next-click": (val) => isNumber3(val)
};
var componentName = "ElPagination";
var Pagination = defineComponent116({
  name: componentName,
  props: paginationProps,
  emits: paginationEmits,
  setup(props, { emit, slots }) {
    const { t } = useLocale();
    const ns = useNamespace("pagination");
    const vnodeProps = getCurrentInstance29().vnode.props || {};
    const hasCurrentPageListener = "onUpdate:currentPage" in vnodeProps || "onUpdate:current-page" in vnodeProps || "onCurrentChange" in vnodeProps;
    const hasPageSizeListener = "onUpdate:pageSize" in vnodeProps || "onUpdate:page-size" in vnodeProps || "onSizeChange" in vnodeProps;
    const assertValidUsage = computed119(() => {
      if (isAbsent(props.total) && isAbsent(props.pageCount))
        return false;
      if (!isAbsent(props.currentPage) && !hasCurrentPageListener)
        return false;
      if (props.layout.includes("sizes")) {
        if (!isAbsent(props.pageCount)) {
          if (!hasPageSizeListener)
            return false;
        } else if (!isAbsent(props.total)) {
          if (!isAbsent(props.pageSize)) {
            if (!hasPageSizeListener) {
              return false;
            }
          } else {
          }
        }
      }
      return true;
    });
    const innerPageSize = ref90(isAbsent(props.defaultPageSize) ? 10 : props.defaultPageSize);
    const innerCurrentPage = ref90(isAbsent(props.defaultCurrentPage) ? 1 : props.defaultCurrentPage);
    const pageSizeBridge = computed119({
      get() {
        return isAbsent(props.pageSize) ? innerPageSize.value : props.pageSize;
      },
      set(v2) {
        if (isAbsent(props.pageSize)) {
          innerPageSize.value = v2;
        }
        if (hasPageSizeListener) {
          emit("update:page-size", v2);
          emit("size-change", v2);
        }
      }
    });
    const pageCountBridge = computed119(() => {
      let pageCount = 0;
      if (!isAbsent(props.pageCount)) {
        pageCount = props.pageCount;
      } else if (!isAbsent(props.total)) {
        pageCount = Math.max(1, Math.ceil(props.total / pageSizeBridge.value));
      }
      return pageCount;
    });
    const currentPageBridge = computed119({
      get() {
        return isAbsent(props.currentPage) ? innerCurrentPage.value : props.currentPage;
      },
      set(v2) {
        let newCurrentPage = v2;
        if (v2 < 1) {
          newCurrentPage = 1;
        } else if (v2 > pageCountBridge.value) {
          newCurrentPage = pageCountBridge.value;
        }
        if (isAbsent(props.currentPage)) {
          innerCurrentPage.value = newCurrentPage;
        }
        if (hasCurrentPageListener) {
          emit("update:current-page", newCurrentPage);
          emit("current-change", newCurrentPage);
        }
      }
    });
    watch59(pageCountBridge, (val) => {
      if (currentPageBridge.value > val)
        currentPageBridge.value = val;
    });
    function handleCurrentChange2(val) {
      currentPageBridge.value = val;
    }
    function handleSizeChange(val) {
      pageSizeBridge.value = val;
      const newPageCount = pageCountBridge.value;
      if (currentPageBridge.value > newPageCount) {
        currentPageBridge.value = newPageCount;
      }
    }
    function prev() {
      if (props.disabled)
        return;
      currentPageBridge.value -= 1;
      emit("prev-click", currentPageBridge.value);
    }
    function next() {
      if (props.disabled)
        return;
      currentPageBridge.value += 1;
      emit("next-click", currentPageBridge.value);
    }
    function addClass2(element, cls) {
      if (element) {
        if (!element.props) {
          element.props = {};
        }
        element.props.class = [element.props.class, cls].join(" ");
      }
    }
    provide33(elPaginationKey, {
      pageCount: pageCountBridge,
      disabled: computed119(() => props.disabled),
      currentPage: currentPageBridge,
      changeEvent: handleCurrentChange2,
      handleSizeChange
    });
    return () => {
      var _a2, _b;
      if (!assertValidUsage.value) {
        debugWarn(componentName, t("el.pagination.deprecationWarning"));
        return null;
      }
      if (!props.layout)
        return null;
      if (props.hideOnSinglePage && pageCountBridge.value <= 1)
        return null;
      const rootChildren = [];
      const rightWrapperChildren = [];
      const rightWrapperRoot = h8("div", { class: ns.e("rightwrapper") }, rightWrapperChildren);
      const TEMPLATE_MAP = {
        prev: h8(Prev, {
          disabled: props.disabled,
          currentPage: currentPageBridge.value,
          prevText: props.prevText,
          prevIcon: props.prevIcon,
          onClick: prev
        }),
        jumper: h8(Jumper, {
          size: props.small ? "small" : "default"
        }),
        pager: h8(Pager, {
          currentPage: currentPageBridge.value,
          pageCount: pageCountBridge.value,
          pagerCount: props.pagerCount,
          onChange: handleCurrentChange2,
          disabled: props.disabled
        }),
        next: h8(Next, {
          disabled: props.disabled,
          currentPage: currentPageBridge.value,
          pageCount: pageCountBridge.value,
          nextText: props.nextText,
          nextIcon: props.nextIcon,
          onClick: next
        }),
        sizes: h8(Sizes, {
          pageSize: pageSizeBridge.value,
          pageSizes: props.pageSizes,
          popperClass: props.popperClass,
          disabled: props.disabled,
          size: props.small ? "small" : "default"
        }),
        slot: (_b = (_a2 = slots == null ? void 0 : slots.default) == null ? void 0 : _a2.call(slots)) != null ? _b : null,
        total: h8(Total, { total: isAbsent(props.total) ? 0 : props.total })
      };
      const components = props.layout.split(",").map((item) => item.trim());
      let haveRightWrapper = false;
      components.forEach((c2) => {
        if (c2 === "->") {
          haveRightWrapper = true;
          return;
        }
        if (!haveRightWrapper) {
          rootChildren.push(TEMPLATE_MAP[c2]);
        } else {
          rightWrapperChildren.push(TEMPLATE_MAP[c2]);
        }
      });
      addClass2(rootChildren[0], ns.is("first"));
      addClass2(rootChildren[rootChildren.length - 1], ns.is("last"));
      if (haveRightWrapper && rightWrapperChildren.length > 0) {
        addClass2(rightWrapperChildren[0], ns.is("first"));
        addClass2(rightWrapperChildren[rightWrapperChildren.length - 1], ns.is("last"));
        rootChildren.push(rightWrapperRoot);
      }
      return h8("div", {
        class: [
          ns.b(),
          ns.is("background", props.background),
          {
            [ns.m("small")]: props.small
          }
        ]
      }, rootChildren);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/pagination/index.mjs
var ElPagination = withInstall(Pagination);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popconfirm/src/popconfirm2.mjs
import { defineComponent as defineComponent117, ref as ref91, computed as computed120, openBlock as openBlock99, createBlock as createBlock56, unref as unref107, mergeProps as mergeProps20, withCtx as withCtx55, createElementVNode as createElementVNode53, normalizeClass as normalizeClass82, normalizeStyle as normalizeStyle37, resolveDynamicComponent as resolveDynamicComponent21, createCommentVNode as createCommentVNode46, createTextVNode as createTextVNode19, toDisplayString as toDisplayString45, createVNode as createVNode46, renderSlot as renderSlot79 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popconfirm/src/popconfirm.mjs
var popconfirmProps = buildProps({
  title: String,
  confirmButtonText: String,
  cancelButtonText: String,
  confirmButtonType: {
    type: String,
    values: buttonTypes,
    default: "primary"
  },
  cancelButtonType: {
    type: String,
    values: buttonTypes,
    default: "text"
  },
  icon: {
    type: iconPropType,
    default: () => question_filled_default
  },
  iconColor: {
    type: String,
    default: "#f90"
  },
  hideIcon: {
    type: Boolean,
    default: false
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  teleported: useTooltipContentProps.teleported,
  persistent: useTooltipContentProps.persistent,
  width: {
    type: [String, Number],
    default: 150
  }
});
var popconfirmEmits = {
  confirm: (e) => e instanceof MouseEvent,
  cancel: (e) => e instanceof MouseEvent
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popconfirm/src/popconfirm2.mjs
var __default__69 = defineComponent117({
  name: "ElPopconfirm"
});
var _sfc_main103 = defineComponent117({
  ...__default__69,
  props: popconfirmProps,
  emits: popconfirmEmits,
  setup(__props, { emit }) {
    const props = __props;
    const { t } = useLocale();
    const ns = useNamespace("popconfirm");
    const tooltipRef = ref91();
    const hidePopper = () => {
      var _a2, _b;
      (_b = (_a2 = tooltipRef.value) == null ? void 0 : _a2.onClose) == null ? void 0 : _b.call(_a2);
    };
    const style = computed120(() => {
      return {
        width: addUnit(props.width)
      };
    });
    const confirm = (e) => {
      emit("confirm", e);
      hidePopper();
    };
    const cancel = (e) => {
      emit("cancel", e);
      hidePopper();
    };
    const finalConfirmButtonText = computed120(() => props.confirmButtonText || t("el.popconfirm.confirmButtonText"));
    const finalCancelButtonText = computed120(() => props.cancelButtonText || t("el.popconfirm.cancelButtonText"));
    return (_ctx, _cache) => {
      return openBlock99(), createBlock56(unref107(ElTooltip), mergeProps20({
        ref_key: "tooltipRef",
        ref: tooltipRef,
        trigger: "click",
        effect: "light"
      }, _ctx.$attrs, {
        "popper-class": `${unref107(ns).namespace.value}-popover`,
        "popper-style": unref107(style),
        teleported: _ctx.teleported,
        "fallback-placements": ["bottom", "top", "right", "left"],
        "hide-after": _ctx.hideAfter,
        persistent: _ctx.persistent
      }), {
        content: withCtx55(() => [
          createElementVNode53("div", {
            class: normalizeClass82(unref107(ns).b())
          }, [
            createElementVNode53("div", {
              class: normalizeClass82(unref107(ns).e("main"))
            }, [
              !_ctx.hideIcon && _ctx.icon ? (openBlock99(), createBlock56(unref107(ElIcon), {
                key: 0,
                class: normalizeClass82(unref107(ns).e("icon")),
                style: normalizeStyle37({ color: _ctx.iconColor })
              }, {
                default: withCtx55(() => [
                  (openBlock99(), createBlock56(resolveDynamicComponent21(_ctx.icon)))
                ]),
                _: 1
              }, 8, ["class", "style"])) : createCommentVNode46("v-if", true),
              createTextVNode19(" " + toDisplayString45(_ctx.title), 1)
            ], 2),
            createElementVNode53("div", {
              class: normalizeClass82(unref107(ns).e("action"))
            }, [
              createVNode46(unref107(ElButton), {
                size: "small",
                type: _ctx.cancelButtonType === "text" ? "" : _ctx.cancelButtonType,
                text: _ctx.cancelButtonType === "text",
                onClick: cancel
              }, {
                default: withCtx55(() => [
                  createTextVNode19(toDisplayString45(unref107(finalCancelButtonText)), 1)
                ]),
                _: 1
              }, 8, ["type", "text"]),
              createVNode46(unref107(ElButton), {
                size: "small",
                type: _ctx.confirmButtonType === "text" ? "" : _ctx.confirmButtonType,
                text: _ctx.confirmButtonType === "text",
                onClick: confirm
              }, {
                default: withCtx55(() => [
                  createTextVNode19(toDisplayString45(unref107(finalConfirmButtonText)), 1)
                ]),
                _: 1
              }, 8, ["type", "text"])
            ], 2)
          ], 2)
        ]),
        default: withCtx55(() => [
          _ctx.$slots.reference ? renderSlot79(_ctx.$slots, "reference", { key: 0 }) : createCommentVNode46("v-if", true)
        ]),
        _: 3
      }, 16, ["popper-class", "popper-style", "teleported", "hide-after", "persistent"]);
    };
  }
});
var Popconfirm = _export_sfc(_sfc_main103, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popconfirm/src/popconfirm.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popconfirm/index.mjs
var ElPopconfirm = withInstall(Popconfirm);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popover/src/popover2.mjs
import { defineComponent as defineComponent118, computed as computed121, ref as ref92, unref as unref108, openBlock as openBlock100, createBlock as createBlock57, mergeProps as mergeProps21, withCtx as withCtx56, createElementBlock as createElementBlock85, normalizeClass as normalizeClass83, toDisplayString as toDisplayString46, createCommentVNode as createCommentVNode47, renderSlot as renderSlot80, createTextVNode as createTextVNode20 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popover/src/popover.mjs
var popoverProps = buildProps({
  trigger: useTooltipTriggerProps.trigger,
  placement: dropdownProps.placement,
  disabled: useTooltipTriggerProps.disabled,
  visible: useTooltipContentProps.visible,
  transition: useTooltipContentProps.transition,
  popperOptions: dropdownProps.popperOptions,
  tabindex: dropdownProps.tabindex,
  content: useTooltipContentProps.content,
  popperStyle: useTooltipContentProps.popperStyle,
  popperClass: useTooltipContentProps.popperClass,
  enterable: {
    ...useTooltipContentProps.enterable,
    default: true
  },
  effect: {
    ...useTooltipContentProps.effect,
    default: "light"
  },
  teleported: useTooltipContentProps.teleported,
  title: String,
  width: {
    type: [String, Number],
    default: 150
  },
  offset: {
    type: Number,
    default: void 0
  },
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  },
  showArrow: {
    type: Boolean,
    default: true
  },
  persistent: {
    type: Boolean,
    default: true
  },
  "onUpdate:visible": {
    type: Function
  }
});
var popoverEmits = {
  "update:visible": (value) => isBoolean2(value),
  "before-enter": () => true,
  "before-leave": () => true,
  "after-enter": () => true,
  "after-leave": () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popover/src/popover2.mjs
var updateEventKeyRaw = `onUpdate:visible`;
var __default__70 = defineComponent118({
  name: "ElPopover"
});
var _sfc_main104 = defineComponent118({
  ...__default__70,
  props: popoverProps,
  emits: popoverEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const onUpdateVisible = computed121(() => {
      return props[updateEventKeyRaw];
    });
    const ns = useNamespace("popover");
    const tooltipRef = ref92();
    const popperRef = computed121(() => {
      var _a2;
      return (_a2 = unref108(tooltipRef)) == null ? void 0 : _a2.popperRef;
    });
    const style = computed121(() => {
      return [
        {
          width: addUnit(props.width)
        },
        props.popperStyle
      ];
    });
    const kls = computed121(() => {
      return [ns.b(), props.popperClass, { [ns.m("plain")]: !!props.content }];
    });
    const gpuAcceleration = computed121(() => {
      return props.transition === `${ns.namespace.value}-fade-in-linear`;
    });
    const hide2 = () => {
      var _a2;
      (_a2 = tooltipRef.value) == null ? void 0 : _a2.hide();
    };
    const beforeEnter = () => {
      emit("before-enter");
    };
    const beforeLeave = () => {
      emit("before-leave");
    };
    const afterEnter = () => {
      emit("after-enter");
    };
    const afterLeave = () => {
      emit("update:visible", false);
      emit("after-leave");
    };
    expose({
      popperRef,
      hide: hide2
    });
    return (_ctx, _cache) => {
      return openBlock100(), createBlock57(unref108(ElTooltip), mergeProps21({
        ref_key: "tooltipRef",
        ref: tooltipRef
      }, _ctx.$attrs, {
        trigger: _ctx.trigger,
        placement: _ctx.placement,
        disabled: _ctx.disabled,
        visible: _ctx.visible,
        transition: _ctx.transition,
        "popper-options": _ctx.popperOptions,
        tabindex: _ctx.tabindex,
        content: _ctx.content,
        offset: _ctx.offset,
        "show-after": _ctx.showAfter,
        "hide-after": _ctx.hideAfter,
        "auto-close": _ctx.autoClose,
        "show-arrow": _ctx.showArrow,
        "aria-label": _ctx.title,
        effect: _ctx.effect,
        enterable: _ctx.enterable,
        "popper-class": unref108(kls),
        "popper-style": unref108(style),
        teleported: _ctx.teleported,
        persistent: _ctx.persistent,
        "gpu-acceleration": unref108(gpuAcceleration),
        "onUpdate:visible": unref108(onUpdateVisible),
        onBeforeShow: beforeEnter,
        onBeforeHide: beforeLeave,
        onShow: afterEnter,
        onHide: afterLeave
      }), {
        content: withCtx56(() => [
          _ctx.title ? (openBlock100(), createElementBlock85("div", {
            key: 0,
            class: normalizeClass83(unref108(ns).e("title")),
            role: "title"
          }, toDisplayString46(_ctx.title), 3)) : createCommentVNode47("v-if", true),
          renderSlot80(_ctx.$slots, "default", {}, () => [
            createTextVNode20(toDisplayString46(_ctx.content), 1)
          ])
        ]),
        default: withCtx56(() => [
          _ctx.$slots.reference ? renderSlot80(_ctx.$slots, "reference", { key: 0 }) : createCommentVNode47("v-if", true)
        ]),
        _: 3
      }, 16, ["trigger", "placement", "disabled", "visible", "transition", "popper-options", "tabindex", "content", "offset", "show-after", "hide-after", "auto-close", "show-arrow", "aria-label", "effect", "enterable", "popper-class", "popper-style", "teleported", "persistent", "gpu-acceleration", "onUpdate:visible"]);
    };
  }
});
var Popover = _export_sfc(_sfc_main104, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popover/src/popover.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popover/src/directive.mjs
var attachEvents = (el, binding) => {
  const popperComponent = binding.arg || binding.value;
  const popover = popperComponent == null ? void 0 : popperComponent.popperRef;
  if (popover) {
    popover.triggerRef = el;
  }
};
var PopoverDirective = {
  mounted(el, binding) {
    attachEvents(el, binding);
  },
  updated(el, binding) {
    attachEvents(el, binding);
  }
};
var VPopover = "popover";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/popover/index.mjs
var ElPopoverDirective = withInstallDirective(PopoverDirective, VPopover);
var ElPopover = withInstall(Popover, {
  directive: ElPopoverDirective
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/progress/src/progress2.mjs
import { defineComponent as defineComponent119, computed as computed122, openBlock as openBlock101, createElementBlock as createElementBlock86, normalizeClass as normalizeClass84, unref as unref109, createElementVNode as createElementVNode54, normalizeStyle as normalizeStyle38, renderSlot as renderSlot81, toDisplayString as toDisplayString47, createCommentVNode as createCommentVNode48, createBlock as createBlock58, withCtx as withCtx57, resolveDynamicComponent as resolveDynamicComponent22 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/progress/src/progress.mjs
var progressProps = buildProps({
  type: {
    type: String,
    default: "line",
    values: ["line", "circle", "dashboard"]
  },
  percentage: {
    type: Number,
    default: 0,
    validator: (val) => val >= 0 && val <= 100
  },
  status: {
    type: String,
    default: "",
    values: ["", "success", "exception", "warning"]
  },
  indeterminate: {
    type: Boolean,
    default: false
  },
  duration: {
    type: Number,
    default: 3
  },
  strokeWidth: {
    type: Number,
    default: 6
  },
  strokeLinecap: {
    type: definePropType(String),
    default: "round"
  },
  textInside: {
    type: Boolean,
    default: false
  },
  width: {
    type: Number,
    default: 126
  },
  showText: {
    type: Boolean,
    default: true
  },
  color: {
    type: definePropType([
      String,
      Array,
      Function
    ]),
    default: ""
  },
  striped: Boolean,
  stripedFlow: Boolean,
  format: {
    type: definePropType(Function),
    default: (percentage) => `${percentage}%`
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/progress/src/progress2.mjs
import { isString as isString25, isFunction as isFunction16 } from "@vue/shared";
var _hoisted_150 = ["aria-valuenow"];
var _hoisted_231 = { viewBox: "0 0 100 100" };
var _hoisted_316 = ["d", "stroke", "stroke-width"];
var _hoisted_48 = ["d", "stroke", "opacity", "stroke-linecap", "stroke-width"];
var _hoisted_55 = { key: 0 };
var __default__71 = defineComponent119({
  name: "ElProgress"
});
var _sfc_main105 = defineComponent119({
  ...__default__71,
  props: progressProps,
  setup(__props) {
    const props = __props;
    const STATUS_COLOR_MAP = {
      success: "#13ce66",
      exception: "#ff4949",
      warning: "#e6a23c",
      default: "#20a0ff"
    };
    const ns = useNamespace("progress");
    const barStyle = computed122(() => ({
      width: `${props.percentage}%`,
      animationDuration: `${props.duration}s`,
      backgroundColor: getCurrentColor(props.percentage)
    }));
    const relativeStrokeWidth = computed122(() => (props.strokeWidth / props.width * 100).toFixed(1));
    const radius = computed122(() => {
      if (["circle", "dashboard"].includes(props.type)) {
        return Number.parseInt(`${50 - Number.parseFloat(relativeStrokeWidth.value) / 2}`, 10);
      }
      return 0;
    });
    const trackPath = computed122(() => {
      const r = radius.value;
      const isDashboard = props.type === "dashboard";
      return `
          M 50 50
          m 0 ${isDashboard ? "" : "-"}${r}
          a ${r} ${r} 0 1 1 0 ${isDashboard ? "-" : ""}${r * 2}
          a ${r} ${r} 0 1 1 0 ${isDashboard ? "" : "-"}${r * 2}
          `;
    });
    const perimeter = computed122(() => 2 * Math.PI * radius.value);
    const rate = computed122(() => props.type === "dashboard" ? 0.75 : 1);
    const strokeDashoffset = computed122(() => {
      const offset2 = -1 * perimeter.value * (1 - rate.value) / 2;
      return `${offset2}px`;
    });
    const trailPathStyle = computed122(() => ({
      strokeDasharray: `${perimeter.value * rate.value}px, ${perimeter.value}px`,
      strokeDashoffset: strokeDashoffset.value
    }));
    const circlePathStyle = computed122(() => ({
      strokeDasharray: `${perimeter.value * rate.value * (props.percentage / 100)}px, ${perimeter.value}px`,
      strokeDashoffset: strokeDashoffset.value,
      transition: "stroke-dasharray 0.6s ease 0s, stroke 0.6s ease, opacity ease 0.6s"
    }));
    const stroke = computed122(() => {
      let ret;
      if (props.color) {
        ret = getCurrentColor(props.percentage);
      } else {
        ret = STATUS_COLOR_MAP[props.status] || STATUS_COLOR_MAP.default;
      }
      return ret;
    });
    const statusIcon = computed122(() => {
      if (props.status === "warning") {
        return warning_filled_default;
      }
      if (props.type === "line") {
        return props.status === "success" ? circle_check_default : circle_close_default;
      } else {
        return props.status === "success" ? check_default : close_default;
      }
    });
    const progressTextSize = computed122(() => {
      return props.type === "line" ? 12 + props.strokeWidth * 0.4 : props.width * 0.111111 + 2;
    });
    const content = computed122(() => props.format(props.percentage));
    function getColors(color) {
      const span = 100 / color.length;
      const seriesColors = color.map((seriesColor, index) => {
        if (isString25(seriesColor)) {
          return {
            color: seriesColor,
            percentage: (index + 1) * span
          };
        }
        return seriesColor;
      });
      return seriesColors.sort((a2, b2) => a2.percentage - b2.percentage);
    }
    const getCurrentColor = (percentage) => {
      var _a2;
      const { color } = props;
      if (isFunction16(color)) {
        return color(percentage);
      } else if (isString25(color)) {
        return color;
      } else {
        const colors = getColors(color);
        for (const color2 of colors) {
          if (color2.percentage > percentage)
            return color2.color;
        }
        return (_a2 = colors[colors.length - 1]) == null ? void 0 : _a2.color;
      }
    };
    return (_ctx, _cache) => {
      return openBlock101(), createElementBlock86("div", {
        class: normalizeClass84([
          unref109(ns).b(),
          unref109(ns).m(_ctx.type),
          unref109(ns).is(_ctx.status),
          {
            [unref109(ns).m("without-text")]: !_ctx.showText,
            [unref109(ns).m("text-inside")]: _ctx.textInside
          }
        ]),
        role: "progressbar",
        "aria-valuenow": _ctx.percentage,
        "aria-valuemin": "0",
        "aria-valuemax": "100"
      }, [
        _ctx.type === "line" ? (openBlock101(), createElementBlock86("div", {
          key: 0,
          class: normalizeClass84(unref109(ns).b("bar"))
        }, [
          createElementVNode54("div", {
            class: normalizeClass84(unref109(ns).be("bar", "outer")),
            style: normalizeStyle38({ height: `${_ctx.strokeWidth}px` })
          }, [
            createElementVNode54("div", {
              class: normalizeClass84([
                unref109(ns).be("bar", "inner"),
                { [unref109(ns).bem("bar", "inner", "indeterminate")]: _ctx.indeterminate },
                { [unref109(ns).bem("bar", "inner", "striped")]: _ctx.striped },
                { [unref109(ns).bem("bar", "inner", "striped-flow")]: _ctx.stripedFlow }
              ]),
              style: normalizeStyle38(unref109(barStyle))
            }, [
              (_ctx.showText || _ctx.$slots.default) && _ctx.textInside ? (openBlock101(), createElementBlock86("div", {
                key: 0,
                class: normalizeClass84(unref109(ns).be("bar", "innerText"))
              }, [
                renderSlot81(_ctx.$slots, "default", { percentage: _ctx.percentage }, () => [
                  createElementVNode54("span", null, toDisplayString47(unref109(content)), 1)
                ])
              ], 2)) : createCommentVNode48("v-if", true)
            ], 6)
          ], 6)
        ], 2)) : (openBlock101(), createElementBlock86("div", {
          key: 1,
          class: normalizeClass84(unref109(ns).b("circle")),
          style: normalizeStyle38({ height: `${_ctx.width}px`, width: `${_ctx.width}px` })
        }, [
          (openBlock101(), createElementBlock86("svg", _hoisted_231, [
            createElementVNode54("path", {
              class: normalizeClass84(unref109(ns).be("circle", "track")),
              d: unref109(trackPath),
              stroke: `var(${unref109(ns).cssVarName("fill-color-light")}, #e5e9f2)`,
              "stroke-width": unref109(relativeStrokeWidth),
              fill: "none",
              style: normalizeStyle38(unref109(trailPathStyle))
            }, null, 14, _hoisted_316),
            createElementVNode54("path", {
              class: normalizeClass84(unref109(ns).be("circle", "path")),
              d: unref109(trackPath),
              stroke: unref109(stroke),
              fill: "none",
              opacity: _ctx.percentage ? 1 : 0,
              "stroke-linecap": _ctx.strokeLinecap,
              "stroke-width": unref109(relativeStrokeWidth),
              style: normalizeStyle38(unref109(circlePathStyle))
            }, null, 14, _hoisted_48)
          ]))
        ], 6)),
        (_ctx.showText || _ctx.$slots.default) && !_ctx.textInside ? (openBlock101(), createElementBlock86("div", {
          key: 2,
          class: normalizeClass84(unref109(ns).e("text")),
          style: normalizeStyle38({ fontSize: `${unref109(progressTextSize)}px` })
        }, [
          renderSlot81(_ctx.$slots, "default", { percentage: _ctx.percentage }, () => [
            !_ctx.status ? (openBlock101(), createElementBlock86("span", _hoisted_55, toDisplayString47(unref109(content)), 1)) : (openBlock101(), createBlock58(unref109(ElIcon), { key: 1 }, {
              default: withCtx57(() => [
                (openBlock101(), createBlock58(resolveDynamicComponent22(unref109(statusIcon))))
              ]),
              _: 1
            }))
          ])
        ], 6)) : createCommentVNode48("v-if", true)
      ], 10, _hoisted_150);
    };
  }
});
var Progress = _export_sfc(_sfc_main105, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/progress/src/progress.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/progress/index.mjs
var ElProgress = withInstall(Progress);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/rate/src/rate2.mjs
import { defineComponent as defineComponent120, inject as inject59, ref as ref93, computed as computed123, markRaw as markRaw3, watch as watch60, openBlock as openBlock102, createElementBlock as createElementBlock87, unref as unref110, normalizeClass as normalizeClass85, normalizeStyle as normalizeStyle39, Fragment as Fragment36, renderList as renderList22, createVNode as createVNode47, withCtx as withCtx58, withDirectives as withDirectives27, createBlock as createBlock59, resolveDynamicComponent as resolveDynamicComponent23, vShow as vShow19, createCommentVNode as createCommentVNode49, toDisplayString as toDisplayString48 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/rate/src/rate.mjs
var rateProps = buildProps({
  modelValue: {
    type: Number,
    default: 0
  },
  id: {
    type: String,
    default: void 0
  },
  lowThreshold: {
    type: Number,
    default: 2
  },
  highThreshold: {
    type: Number,
    default: 4
  },
  max: {
    type: Number,
    default: 5
  },
  colors: {
    type: definePropType([Array, Object]),
    default: () => mutable(["", "", ""])
  },
  voidColor: {
    type: String,
    default: ""
  },
  disabledVoidColor: {
    type: String,
    default: ""
  },
  icons: {
    type: definePropType([Array, Object]),
    default: () => [star_filled_default, star_filled_default, star_filled_default]
  },
  voidIcon: {
    type: iconPropType,
    default: () => star_default
  },
  disabledVoidIcon: {
    type: iconPropType,
    default: () => star_filled_default
  },
  disabled: Boolean,
  allowHalf: Boolean,
  showText: Boolean,
  showScore: Boolean,
  textColor: {
    type: String,
    default: ""
  },
  texts: {
    type: definePropType(Array),
    default: () => mutable([
      "Extremely bad",
      "Disappointed",
      "Fair",
      "Satisfied",
      "Surprise"
    ])
  },
  scoreTemplate: {
    type: String,
    default: "{value}"
  },
  size: useSizeProp,
  label: {
    type: String,
    default: void 0
  },
  clearable: {
    type: Boolean,
    default: false
  }
});
var rateEmits = {
  [CHANGE_EVENT]: (value) => isNumber3(value),
  [UPDATE_MODEL_EVENT]: (value) => isNumber3(value)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/rate/src/rate2.mjs
import { isObject as isObject18, isArray as isArray24, isString as isString26 } from "@vue/shared";
var _hoisted_151 = ["id", "aria-label", "aria-labelledby", "aria-valuenow", "aria-valuetext", "aria-valuemax"];
var _hoisted_233 = ["onMousemove", "onClick"];
var __default__72 = defineComponent120({
  name: "ElRate"
});
var _sfc_main106 = defineComponent120({
  ...__default__72,
  props: rateProps,
  emits: rateEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    function getValueFromMap(value, map2) {
      const isExcludedObject = (val) => isObject18(val);
      const matchedKeys = Object.keys(map2).map((key) => +key).filter((key) => {
        const val = map2[key];
        const excluded = isExcludedObject(val) ? val.excluded : false;
        return excluded ? value < key : value <= key;
      }).sort((a2, b2) => a2 - b2);
      const matchedValue = map2[matchedKeys[0]];
      return isExcludedObject(matchedValue) && matchedValue.value || matchedValue;
    }
    const formContext = inject59(formContextKey, void 0);
    const formItemContext = inject59(formItemContextKey, void 0);
    const rateSize = useFormSize();
    const ns = useNamespace("rate");
    const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {
      formItemContext
    });
    const currentValue = ref93(props.modelValue);
    const hoverIndex = ref93(-1);
    const pointerAtLeftHalf = ref93(true);
    const rateClasses = computed123(() => [ns.b(), ns.m(rateSize.value)]);
    const rateDisabled = computed123(() => props.disabled || (formContext == null ? void 0 : formContext.disabled));
    const rateStyles = computed123(() => {
      return ns.cssVarBlock({
        "void-color": props.voidColor,
        "disabled-void-color": props.disabledVoidColor,
        "fill-color": activeColor.value
      });
    });
    const text = computed123(() => {
      let result2 = "";
      if (props.showScore) {
        result2 = props.scoreTemplate.replace(/\{\s*value\s*\}/, rateDisabled.value ? `${props.modelValue}` : `${currentValue.value}`);
      } else if (props.showText) {
        result2 = props.texts[Math.ceil(currentValue.value) - 1];
      }
      return result2;
    });
    const valueDecimal = computed123(() => props.modelValue * 100 - Math.floor(props.modelValue) * 100);
    const colorMap = computed123(() => isArray24(props.colors) ? {
      [props.lowThreshold]: props.colors[0],
      [props.highThreshold]: { value: props.colors[1], excluded: true },
      [props.max]: props.colors[2]
    } : props.colors);
    const activeColor = computed123(() => {
      const color = getValueFromMap(currentValue.value, colorMap.value);
      return isObject18(color) ? "" : color;
    });
    const decimalStyle = computed123(() => {
      let width = "";
      if (rateDisabled.value) {
        width = `${valueDecimal.value}%`;
      } else if (props.allowHalf) {
        width = "50%";
      }
      return {
        color: activeColor.value,
        width
      };
    });
    const componentMap = computed123(() => {
      let icons = isArray24(props.icons) ? [...props.icons] : { ...props.icons };
      icons = markRaw3(icons);
      return isArray24(icons) ? {
        [props.lowThreshold]: icons[0],
        [props.highThreshold]: {
          value: icons[1],
          excluded: true
        },
        [props.max]: icons[2]
      } : icons;
    });
    const decimalIconComponent = computed123(() => getValueFromMap(props.modelValue, componentMap.value));
    const voidComponent = computed123(() => rateDisabled.value ? isString26(props.disabledVoidIcon) ? props.disabledVoidIcon : markRaw3(props.disabledVoidIcon) : isString26(props.voidIcon) ? props.voidIcon : markRaw3(props.voidIcon));
    const activeComponent = computed123(() => getValueFromMap(currentValue.value, componentMap.value));
    function showDecimalIcon(item) {
      const showWhenDisabled = rateDisabled.value && valueDecimal.value > 0 && item - 1 < props.modelValue && item > props.modelValue;
      const showWhenAllowHalf = props.allowHalf && pointerAtLeftHalf.value && item - 0.5 <= currentValue.value && item > currentValue.value;
      return showWhenDisabled || showWhenAllowHalf;
    }
    function emitValue(value) {
      if (props.clearable && value === props.modelValue) {
        value = 0;
      }
      emit(UPDATE_MODEL_EVENT, value);
      if (props.modelValue !== value) {
        emit("change", value);
      }
    }
    function selectValue(value) {
      if (rateDisabled.value) {
        return;
      }
      if (props.allowHalf && pointerAtLeftHalf.value) {
        emitValue(currentValue.value);
      } else {
        emitValue(value);
      }
    }
    function handleKey(e) {
      if (rateDisabled.value) {
        return;
      }
      let _currentValue = currentValue.value;
      const code = e.code;
      if (code === EVENT_CODE.up || code === EVENT_CODE.right) {
        if (props.allowHalf) {
          _currentValue += 0.5;
        } else {
          _currentValue += 1;
        }
        e.stopPropagation();
        e.preventDefault();
      } else if (code === EVENT_CODE.left || code === EVENT_CODE.down) {
        if (props.allowHalf) {
          _currentValue -= 0.5;
        } else {
          _currentValue -= 1;
        }
        e.stopPropagation();
        e.preventDefault();
      }
      _currentValue = _currentValue < 0 ? 0 : _currentValue;
      _currentValue = _currentValue > props.max ? props.max : _currentValue;
      emit(UPDATE_MODEL_EVENT, _currentValue);
      emit("change", _currentValue);
      return _currentValue;
    }
    function setCurrentValue(value, event) {
      if (rateDisabled.value) {
        return;
      }
      if (props.allowHalf && event) {
        let target2 = event.target;
        if (hasClass(target2, ns.e("item"))) {
          target2 = target2.querySelector(`.${ns.e("icon")}`);
        }
        if (target2.clientWidth === 0 || hasClass(target2, ns.e("decimal"))) {
          target2 = target2.parentNode;
        }
        pointerAtLeftHalf.value = event.offsetX * 2 <= target2.clientWidth;
        currentValue.value = pointerAtLeftHalf.value ? value - 0.5 : value;
      } else {
        currentValue.value = value;
      }
      hoverIndex.value = value;
    }
    function resetCurrentValue() {
      if (rateDisabled.value) {
        return;
      }
      if (props.allowHalf) {
        pointerAtLeftHalf.value = props.modelValue !== Math.floor(props.modelValue);
      }
      currentValue.value = props.modelValue;
      hoverIndex.value = -1;
    }
    watch60(() => props.modelValue, (val) => {
      currentValue.value = val;
      pointerAtLeftHalf.value = props.modelValue !== Math.floor(props.modelValue);
    });
    if (!props.modelValue) {
      emit(UPDATE_MODEL_EVENT, 0);
    }
    expose({
      setCurrentValue,
      resetCurrentValue
    });
    return (_ctx, _cache) => {
      var _a2;
      return openBlock102(), createElementBlock87("div", {
        id: unref110(inputId),
        class: normalizeClass85([unref110(rateClasses), unref110(ns).is("disabled", unref110(rateDisabled))]),
        role: "slider",
        "aria-label": !unref110(isLabeledByFormItem) ? _ctx.label || "rating" : void 0,
        "aria-labelledby": unref110(isLabeledByFormItem) ? (_a2 = unref110(formItemContext)) == null ? void 0 : _a2.labelId : void 0,
        "aria-valuenow": currentValue.value,
        "aria-valuetext": unref110(text) || void 0,
        "aria-valuemin": "0",
        "aria-valuemax": _ctx.max,
        tabindex: "0",
        style: normalizeStyle39(unref110(rateStyles)),
        onKeydown: handleKey
      }, [
        (openBlock102(true), createElementBlock87(Fragment36, null, renderList22(_ctx.max, (item, key) => {
          return openBlock102(), createElementBlock87("span", {
            key,
            class: normalizeClass85(unref110(ns).e("item")),
            onMousemove: ($event) => setCurrentValue(item, $event),
            onMouseleave: resetCurrentValue,
            onClick: ($event) => selectValue(item)
          }, [
            createVNode47(unref110(ElIcon), {
              class: normalizeClass85([
                unref110(ns).e("icon"),
                { hover: hoverIndex.value === item },
                unref110(ns).is("active", item <= currentValue.value)
              ])
            }, {
              default: withCtx58(() => [
                !showDecimalIcon(item) ? (openBlock102(), createElementBlock87(Fragment36, { key: 0 }, [
                  withDirectives27((openBlock102(), createBlock59(resolveDynamicComponent23(unref110(activeComponent)), null, null, 512)), [
                    [vShow19, item <= currentValue.value]
                  ]),
                  withDirectives27((openBlock102(), createBlock59(resolveDynamicComponent23(unref110(voidComponent)), null, null, 512)), [
                    [vShow19, !(item <= currentValue.value)]
                  ])
                ], 64)) : createCommentVNode49("v-if", true),
                showDecimalIcon(item) ? (openBlock102(), createBlock59(unref110(ElIcon), {
                  key: 1,
                  style: normalizeStyle39(unref110(decimalStyle)),
                  class: normalizeClass85([unref110(ns).e("icon"), unref110(ns).e("decimal")])
                }, {
                  default: withCtx58(() => [
                    (openBlock102(), createBlock59(resolveDynamicComponent23(unref110(decimalIconComponent))))
                  ]),
                  _: 1
                }, 8, ["style", "class"])) : createCommentVNode49("v-if", true)
              ]),
              _: 2
            }, 1032, ["class"])
          ], 42, _hoisted_233);
        }), 128)),
        _ctx.showText || _ctx.showScore ? (openBlock102(), createElementBlock87("span", {
          key: 0,
          class: normalizeClass85(unref110(ns).e("text"))
        }, toDisplayString48(unref110(text)), 3)) : createCommentVNode49("v-if", true)
      ], 46, _hoisted_151);
    };
  }
});
var Rate = _export_sfc(_sfc_main106, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/rate/src/rate.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/rate/index.mjs
var ElRate = withInstall(Rate);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/result/src/result2.mjs
import { defineComponent as defineComponent121, computed as computed124, openBlock as openBlock103, createElementBlock as createElementBlock88, normalizeClass as normalizeClass86, unref as unref111, createElementVNode as createElementVNode55, renderSlot as renderSlot82, createBlock as createBlock60, resolveDynamicComponent as resolveDynamicComponent24, createCommentVNode as createCommentVNode50, toDisplayString as toDisplayString49 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/result/src/result.mjs
var IconMap = {
  success: "icon-success",
  warning: "icon-warning",
  error: "icon-error",
  info: "icon-info"
};
var IconComponentMap = {
  [IconMap.success]: circle_check_filled_default,
  [IconMap.warning]: warning_filled_default,
  [IconMap.error]: circle_close_filled_default,
  [IconMap.info]: info_filled_default
};
var resultProps = buildProps({
  title: {
    type: String,
    default: ""
  },
  subTitle: {
    type: String,
    default: ""
  },
  icon: {
    type: String,
    values: ["success", "warning", "info", "error"],
    default: "info"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/result/src/result2.mjs
var __default__73 = defineComponent121({
  name: "ElResult"
});
var _sfc_main107 = defineComponent121({
  ...__default__73,
  props: resultProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("result");
    const resultIcon = computed124(() => {
      const icon = props.icon;
      const iconClass = icon && IconMap[icon] ? IconMap[icon] : "icon-info";
      const iconComponent = IconComponentMap[iconClass] || IconComponentMap["icon-info"];
      return {
        class: iconClass,
        component: iconComponent
      };
    });
    return (_ctx, _cache) => {
      return openBlock103(), createElementBlock88("div", {
        class: normalizeClass86(unref111(ns).b())
      }, [
        createElementVNode55("div", {
          class: normalizeClass86(unref111(ns).e("icon"))
        }, [
          renderSlot82(_ctx.$slots, "icon", {}, () => [
            unref111(resultIcon).component ? (openBlock103(), createBlock60(resolveDynamicComponent24(unref111(resultIcon).component), {
              key: 0,
              class: normalizeClass86(unref111(resultIcon).class)
            }, null, 8, ["class"])) : createCommentVNode50("v-if", true)
          ])
        ], 2),
        _ctx.title || _ctx.$slots.title ? (openBlock103(), createElementBlock88("div", {
          key: 0,
          class: normalizeClass86(unref111(ns).e("title"))
        }, [
          renderSlot82(_ctx.$slots, "title", {}, () => [
            createElementVNode55("p", null, toDisplayString49(_ctx.title), 1)
          ])
        ], 2)) : createCommentVNode50("v-if", true),
        _ctx.subTitle || _ctx.$slots["sub-title"] ? (openBlock103(), createElementBlock88("div", {
          key: 1,
          class: normalizeClass86(unref111(ns).e("subtitle"))
        }, [
          renderSlot82(_ctx.$slots, "sub-title", {}, () => [
            createElementVNode55("p", null, toDisplayString49(_ctx.subTitle), 1)
          ])
        ], 2)) : createCommentVNode50("v-if", true),
        _ctx.$slots.extra ? (openBlock103(), createElementBlock88("div", {
          key: 2,
          class: normalizeClass86(unref111(ns).e("extra"))
        }, [
          renderSlot82(_ctx.$slots, "extra")
        ], 2)) : createCommentVNode50("v-if", true)
      ], 2);
    };
  }
});
var Result = _export_sfc(_sfc_main107, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/result/src/result.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/result/index.mjs
var ElResult = withInstall(Result);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/select.mjs
import { defineComponent as defineComponent128, vModelText as vModelText3, computed as computed132, reactive as reactive23, toRefs as toRefs10, provide as provide34, resolveComponent as resolveComponent12, resolveDirective as resolveDirective2, withDirectives as withDirectives28, openBlock as openBlock106, createElementBlock as createElementBlock91, normalizeClass as normalizeClass89, withModifiers as withModifiers24, createVNode as createVNode49, withCtx as withCtx59, createElementVNode as createElementVNode58, renderSlot as renderSlot84, createCommentVNode as createCommentVNode51, Fragment as Fragment37, renderList as renderList23, normalizeStyle as normalizeStyle42, toDisplayString as toDisplayString52, createBlock as createBlock61, withKeys as withKeys11, resolveDynamicComponent as resolveDynamicComponent27, vShow as vShow20, normalizeProps as normalizeProps3, guardReactiveProps as guardReactiveProps2 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/select-dropdown.mjs
import { defineComponent as defineComponent127, inject as inject60, ref as ref97, computed as computed129, watch as watch62, unref as unref115, createVNode as createVNode48, mergeProps as mergeProps22 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/builders/build-list.mjs
import { defineComponent as defineComponent123, getCurrentInstance as getCurrentInstance31, ref as ref95, computed as computed127, unref as unref113, nextTick as nextTick32, onMounted as onMounted43, onUpdated as onUpdated5, resolveDynamicComponent as resolveDynamicComponent25, h as h10 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/hooks/use-cache.mjs
import { getCurrentInstance as getCurrentInstance30, computed as computed125 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/memoize-one/dist/memoize-one.esm.js
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual2(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual2(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual3) {
  if (isEqual3 === void 0) {
    isEqual3 = areInputsEqual;
  }
  var cache2 = null;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (cache2 && cache2.lastThis === this && isEqual3(newArgs, cache2.lastArgs)) {
      return cache2.lastResult;
    }
    var lastResult = resultFn.apply(this, newArgs);
    cache2 = {
      lastResult,
      lastArgs: newArgs,
      lastThis: this
    };
    return lastResult;
  }
  memoized.clear = function clear2() {
    cache2 = null;
  };
  return memoized;
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/hooks/use-cache.mjs
var useCache = () => {
  const vm = getCurrentInstance30();
  const props = vm.proxy.$props;
  return computed125(() => {
    const _getItemStyleCache = (_2, __, ___) => ({});
    return props.perfMode ? memoize_default(_getItemStyleCache) : memoizeOne(_getItemStyleCache);
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/defaults.mjs
var DEFAULT_DYNAMIC_LIST_ITEM_SIZE = 50;
var ITEM_RENDER_EVT = "itemRendered";
var SCROLL_EVT = "scroll";
var FORWARD = "forward";
var BACKWARD = "backward";
var AUTO_ALIGNMENT = "auto";
var SMART_ALIGNMENT = "smart";
var START_ALIGNMENT = "start";
var CENTERED_ALIGNMENT = "center";
var END_ALIGNMENT = "end";
var HORIZONTAL = "horizontal";
var VERTICAL = "vertical";
var LTR = "ltr";
var RTL = "rtl";
var RTL_OFFSET_NAG = "negative";
var RTL_OFFSET_POS_ASC = "positive-ascending";
var RTL_OFFSET_POS_DESC = "positive-descending";
var PageKey = {
  [HORIZONTAL]: "pageX",
  [VERTICAL]: "pageY"
};
var ScrollbarSizeKey = {
  [HORIZONTAL]: "height",
  [VERTICAL]: "width"
};
var ScrollbarDirKey = {
  [HORIZONTAL]: "left",
  [VERTICAL]: "top"
};
var SCROLLBAR_MIN_SIZE = 20;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/hooks/use-wheel.mjs
var LayoutKeys = {
  [HORIZONTAL]: "deltaX",
  [VERTICAL]: "deltaY"
};
var useWheel = ({ atEndEdge, atStartEdge, layout: layout2 }, onWheelDelta) => {
  let frameHandle;
  let offset2 = 0;
  const hasReachedEdge = (offset22) => {
    const edgeReached = offset22 < 0 && atStartEdge.value || offset22 > 0 && atEndEdge.value;
    return edgeReached;
  };
  const onWheel = (e) => {
    cAF(frameHandle);
    const newOffset = e[LayoutKeys[layout2.value]];
    if (hasReachedEdge(offset2) && hasReachedEdge(offset2 + newOffset))
      return;
    offset2 += newOffset;
    if (!isFirefox()) {
      e.preventDefault();
    }
    frameHandle = rAF(() => {
      onWheelDelta(offset2);
      offset2 = 0;
    });
  };
  return {
    hasReachedEdge,
    onWheel
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/components/scrollbar.mjs
import { defineComponent as defineComponent122, computed as computed126, ref as ref94, reactive as reactive21, unref as unref112, watch as watch61, onBeforeUnmount as onBeforeUnmount20, h as h9, withModifiers as withModifiers22 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/props.mjs
var itemSize = buildProp({
  type: definePropType([Number, Function]),
  required: true
});
var estimatedItemSize = buildProp({
  type: Number
});
var cache = buildProp({
  type: Number,
  default: 2
});
var direction = buildProp({
  type: String,
  values: ["ltr", "rtl"],
  default: "ltr"
});
var initScrollOffset = buildProp({
  type: Number,
  default: 0
});
var total = buildProp({
  type: Number,
  required: true
});
var layout = buildProp({
  type: String,
  values: ["horizontal", "vertical"],
  default: VERTICAL
});
var virtualizedProps = buildProps({
  className: {
    type: String,
    default: ""
  },
  containerElement: {
    type: definePropType([String, Object]),
    default: "div"
  },
  data: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  direction,
  height: {
    type: [String, Number],
    required: true
  },
  innerElement: {
    type: [String, Object],
    default: "div"
  },
  style: {
    type: definePropType([Object, String, Array])
  },
  useIsScrolling: {
    type: Boolean,
    default: false
  },
  width: {
    type: [Number, String],
    required: false
  },
  perfMode: {
    type: Boolean,
    default: true
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: false
  }
});
var virtualizedListProps = buildProps({
  cache,
  estimatedItemSize,
  layout,
  initScrollOffset,
  total,
  itemSize,
  ...virtualizedProps
});
var scrollbarSize = {
  type: Number,
  default: 6
};
var startGap = { type: Number, default: 0 };
var endGap = { type: Number, default: 2 };
var virtualizedGridProps = buildProps({
  columnCache: cache,
  columnWidth: itemSize,
  estimatedColumnWidth: estimatedItemSize,
  estimatedRowHeight: estimatedItemSize,
  initScrollLeft: initScrollOffset,
  initScrollTop: initScrollOffset,
  itemKey: {
    type: definePropType(Function),
    default: ({
      columnIndex,
      rowIndex
    }) => `${rowIndex}:${columnIndex}`
  },
  rowCache: cache,
  rowHeight: itemSize,
  totalColumn: total,
  totalRow: total,
  hScrollbarSize: scrollbarSize,
  vScrollbarSize: scrollbarSize,
  scrollbarStartGap: startGap,
  scrollbarEndGap: endGap,
  role: String,
  ...virtualizedProps
});
var virtualizedScrollbarProps = buildProps({
  alwaysOn: Boolean,
  class: String,
  layout,
  total,
  ratio: {
    type: Number,
    required: true
  },
  clientSize: {
    type: Number,
    required: true
  },
  scrollFrom: {
    type: Number,
    required: true
  },
  scrollbarSize,
  startGap,
  endGap,
  visible: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/utils.mjs
var getScrollDir = (prev, cur) => prev < cur ? FORWARD : BACKWARD;
var isHorizontal = (dir) => dir === LTR || dir === RTL || dir === HORIZONTAL;
var isRTL2 = (dir) => dir === RTL;
var cachedRTLResult = null;
function getRTLOffsetType(recalculate = false) {
  if (cachedRTLResult === null || recalculate) {
    const outerDiv = document.createElement("div");
    const outerStyle = outerDiv.style;
    outerStyle.width = "50px";
    outerStyle.height = "50px";
    outerStyle.overflow = "scroll";
    outerStyle.direction = "rtl";
    const innerDiv = document.createElement("div");
    const innerStyle = innerDiv.style;
    innerStyle.width = "100px";
    innerStyle.height = "100px";
    outerDiv.appendChild(innerDiv);
    document.body.appendChild(outerDiv);
    if (outerDiv.scrollLeft > 0) {
      cachedRTLResult = RTL_OFFSET_POS_DESC;
    } else {
      outerDiv.scrollLeft = 1;
      if (outerDiv.scrollLeft === 0) {
        cachedRTLResult = RTL_OFFSET_NAG;
      } else {
        cachedRTLResult = RTL_OFFSET_POS_ASC;
      }
    }
    document.body.removeChild(outerDiv);
    return cachedRTLResult;
  }
  return cachedRTLResult;
}
function renderThumbStyle2({ move, size: size4, bar }, layout2) {
  const style = {};
  const translate2 = `translate${bar.axis}(${move}px)`;
  style[bar.size] = size4;
  style.transform = translate2;
  style.msTransform = translate2;
  style.webkitTransform = translate2;
  if (layout2 === "horizontal") {
    style.height = "100%";
  } else {
    style.width = "100%";
  }
  return style;
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/components/scrollbar.mjs
var ScrollBar = defineComponent122({
  name: "ElVirtualScrollBar",
  props: virtualizedScrollbarProps,
  emits: ["scroll", "start-move", "stop-move"],
  setup(props, { emit }) {
    const GAP2 = computed126(() => props.startGap + props.endGap);
    const nsVirtualScrollbar = useNamespace("virtual-scrollbar");
    const nsScrollbar = useNamespace("scrollbar");
    const trackRef = ref94();
    const thumbRef = ref94();
    let frameHandle = null;
    let onselectstartStore = null;
    const state = reactive21({
      isDragging: false,
      traveled: 0
    });
    const bar = computed126(() => BAR_MAP[props.layout]);
    const trackSize = computed126(() => props.clientSize - unref112(GAP2));
    const trackStyle = computed126(() => ({
      position: "absolute",
      width: `${HORIZONTAL === props.layout ? trackSize.value : props.scrollbarSize}px`,
      height: `${HORIZONTAL === props.layout ? props.scrollbarSize : trackSize.value}px`,
      [ScrollbarDirKey[props.layout]]: "2px",
      right: "2px",
      bottom: "2px",
      borderRadius: "4px"
    }));
    const thumbSize = computed126(() => {
      const ratio = props.ratio;
      const clientSize = props.clientSize;
      if (ratio >= 100) {
        return Number.POSITIVE_INFINITY;
      }
      if (ratio >= 50) {
        return ratio * clientSize / 100;
      }
      const SCROLLBAR_MAX_SIZE = clientSize / 3;
      return Math.floor(Math.min(Math.max(ratio * clientSize, SCROLLBAR_MIN_SIZE), SCROLLBAR_MAX_SIZE));
    });
    const thumbStyle = computed126(() => {
      if (!Number.isFinite(thumbSize.value)) {
        return {
          display: "none"
        };
      }
      const thumb = `${thumbSize.value}px`;
      const style = renderThumbStyle2({
        bar: bar.value,
        size: thumb,
        move: state.traveled
      }, props.layout);
      return style;
    });
    const totalSteps = computed126(() => Math.floor(props.clientSize - thumbSize.value - unref112(GAP2)));
    const attachEvents2 = () => {
      window.addEventListener("mousemove", onMouseMove);
      window.addEventListener("mouseup", onMouseUp);
      const thumbEl = unref112(thumbRef);
      if (!thumbEl)
        return;
      onselectstartStore = document.onselectstart;
      document.onselectstart = () => false;
      thumbEl.addEventListener("touchmove", onMouseMove);
      thumbEl.addEventListener("touchend", onMouseUp);
    };
    const detachEvents = () => {
      window.removeEventListener("mousemove", onMouseMove);
      window.removeEventListener("mouseup", onMouseUp);
      document.onselectstart = onselectstartStore;
      onselectstartStore = null;
      const thumbEl = unref112(thumbRef);
      if (!thumbEl)
        return;
      thumbEl.removeEventListener("touchmove", onMouseMove);
      thumbEl.removeEventListener("touchend", onMouseUp);
    };
    const onThumbMouseDown = (e) => {
      e.stopImmediatePropagation();
      if (e.ctrlKey || [1, 2].includes(e.button)) {
        return;
      }
      state.isDragging = true;
      state[bar.value.axis] = e.currentTarget[bar.value.offset] - (e[bar.value.client] - e.currentTarget.getBoundingClientRect()[bar.value.direction]);
      emit("start-move");
      attachEvents2();
    };
    const onMouseUp = () => {
      state.isDragging = false;
      state[bar.value.axis] = 0;
      emit("stop-move");
      detachEvents();
    };
    const onMouseMove = (e) => {
      const { isDragging: isDragging2 } = state;
      if (!isDragging2)
        return;
      if (!thumbRef.value || !trackRef.value)
        return;
      const prevPage = state[bar.value.axis];
      if (!prevPage)
        return;
      cAF(frameHandle);
      const offset2 = (trackRef.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;
      const thumbClickPosition = thumbRef.value[bar.value.offset] - prevPage;
      const distance = offset2 - thumbClickPosition;
      frameHandle = rAF(() => {
        state.traveled = Math.max(props.startGap, Math.min(distance, totalSteps.value));
        emit("scroll", distance, totalSteps.value);
      });
    };
    const clickTrackHandler = (e) => {
      const offset2 = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);
      const thumbHalf = thumbRef.value[bar.value.offset] / 2;
      const distance = offset2 - thumbHalf;
      state.traveled = Math.max(0, Math.min(distance, totalSteps.value));
      emit("scroll", distance, totalSteps.value);
    };
    watch61(() => props.scrollFrom, (v2) => {
      if (state.isDragging)
        return;
      state.traveled = Math.ceil(v2 * totalSteps.value);
    });
    onBeforeUnmount20(() => {
      detachEvents();
    });
    return () => {
      return h9("div", {
        role: "presentation",
        ref: trackRef,
        class: [
          nsVirtualScrollbar.b(),
          props.class,
          (props.alwaysOn || state.isDragging) && "always-on"
        ],
        style: trackStyle.value,
        onMousedown: withModifiers22(clickTrackHandler, ["stop", "prevent"]),
        onTouchstartPrevent: onThumbMouseDown
      }, h9("div", {
        ref: thumbRef,
        class: nsScrollbar.e("thumb"),
        style: thumbStyle.value,
        onMousedown: onThumbMouseDown
      }, []));
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/builders/build-list.mjs
import { hasOwn as hasOwn8, isString as isString27 } from "@vue/shared";
var createList = ({
  name,
  getOffset: getOffset3,
  getItemSize,
  getItemOffset,
  getEstimatedTotalSize: getEstimatedTotalSize2,
  getStartIndexForOffset,
  getStopIndexForStartIndex,
  initCache,
  clearCache,
  validateProps
}) => {
  return defineComponent123({
    name: name != null ? name : "ElVirtualList",
    props: virtualizedListProps,
    emits: [ITEM_RENDER_EVT, SCROLL_EVT],
    setup(props, { emit, expose }) {
      validateProps(props);
      const instance = getCurrentInstance31();
      const ns = useNamespace("vl");
      const dynamicSizeCache = ref95(initCache(props, instance));
      const getItemStyleCache = useCache();
      const windowRef = ref95();
      const innerRef = ref95();
      const scrollbarRef = ref95();
      const states = ref95({
        isScrolling: false,
        scrollDir: "forward",
        scrollOffset: isNumber3(props.initScrollOffset) ? props.initScrollOffset : 0,
        updateRequested: false,
        isScrollbarDragging: false,
        scrollbarAlwaysOn: props.scrollbarAlwaysOn
      });
      const itemsToRender = computed127(() => {
        const { total: total2, cache: cache2 } = props;
        const { isScrolling, scrollDir, scrollOffset } = unref113(states);
        if (total2 === 0) {
          return [0, 0, 0, 0];
        }
        const startIndex = getStartIndexForOffset(props, scrollOffset, unref113(dynamicSizeCache));
        const stopIndex = getStopIndexForStartIndex(props, startIndex, scrollOffset, unref113(dynamicSizeCache));
        const cacheBackward = !isScrolling || scrollDir === BACKWARD ? Math.max(1, cache2) : 1;
        const cacheForward = !isScrolling || scrollDir === FORWARD ? Math.max(1, cache2) : 1;
        return [
          Math.max(0, startIndex - cacheBackward),
          Math.max(0, Math.min(total2 - 1, stopIndex + cacheForward)),
          startIndex,
          stopIndex
        ];
      });
      const estimatedTotalSize = computed127(() => getEstimatedTotalSize2(props, unref113(dynamicSizeCache)));
      const _isHorizontal = computed127(() => isHorizontal(props.layout));
      const windowStyle = computed127(() => [
        {
          position: "relative",
          [`overflow-${_isHorizontal.value ? "x" : "y"}`]: "scroll",
          WebkitOverflowScrolling: "touch",
          willChange: "transform"
        },
        {
          direction: props.direction,
          height: isNumber3(props.height) ? `${props.height}px` : props.height,
          width: isNumber3(props.width) ? `${props.width}px` : props.width
        },
        props.style
      ]);
      const innerStyle = computed127(() => {
        const size4 = unref113(estimatedTotalSize);
        const horizontal = unref113(_isHorizontal);
        return {
          height: horizontal ? "100%" : `${size4}px`,
          pointerEvents: unref113(states).isScrolling ? "none" : void 0,
          width: horizontal ? `${size4}px` : "100%"
        };
      });
      const clientSize = computed127(() => _isHorizontal.value ? props.width : props.height);
      const { onWheel } = useWheel({
        atStartEdge: computed127(() => states.value.scrollOffset <= 0),
        atEndEdge: computed127(() => states.value.scrollOffset >= estimatedTotalSize.value),
        layout: computed127(() => props.layout)
      }, (offset2) => {
        var _a2, _b;
        ;
        (_b = (_a2 = scrollbarRef.value).onMouseUp) == null ? void 0 : _b.call(_a2);
        scrollTo(Math.min(states.value.scrollOffset + offset2, estimatedTotalSize.value - clientSize.value));
      });
      const emitEvents = () => {
        const { total: total2 } = props;
        if (total2 > 0) {
          const [cacheStart, cacheEnd, visibleStart, visibleEnd] = unref113(itemsToRender);
          emit(ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd);
        }
        const { scrollDir, scrollOffset, updateRequested } = unref113(states);
        emit(SCROLL_EVT, scrollDir, scrollOffset, updateRequested);
      };
      const scrollVertically = (e) => {
        const { clientHeight, scrollHeight, scrollTop } = e.currentTarget;
        const _states = unref113(states);
        if (_states.scrollOffset === scrollTop) {
          return;
        }
        const scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));
        states.value = {
          ..._states,
          isScrolling: true,
          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),
          scrollOffset,
          updateRequested: false
        };
        nextTick32(resetIsScrolling);
      };
      const scrollHorizontally = (e) => {
        const { clientWidth, scrollLeft, scrollWidth } = e.currentTarget;
        const _states = unref113(states);
        if (_states.scrollOffset === scrollLeft) {
          return;
        }
        const { direction: direction2 } = props;
        let scrollOffset = scrollLeft;
        if (direction2 === RTL) {
          switch (getRTLOffsetType()) {
            case RTL_OFFSET_NAG: {
              scrollOffset = -scrollLeft;
              break;
            }
            case RTL_OFFSET_POS_DESC: {
              scrollOffset = scrollWidth - clientWidth - scrollLeft;
              break;
            }
          }
        }
        scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));
        states.value = {
          ..._states,
          isScrolling: true,
          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),
          scrollOffset,
          updateRequested: false
        };
        nextTick32(resetIsScrolling);
      };
      const onScroll = (e) => {
        unref113(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e);
        emitEvents();
      };
      const onScrollbarScroll = (distanceToGo, totalSteps) => {
        const offset2 = (estimatedTotalSize.value - clientSize.value) / totalSteps * distanceToGo;
        scrollTo(Math.min(estimatedTotalSize.value - clientSize.value, offset2));
      };
      const scrollTo = (offset2) => {
        offset2 = Math.max(offset2, 0);
        if (offset2 === unref113(states).scrollOffset) {
          return;
        }
        states.value = {
          ...unref113(states),
          scrollOffset: offset2,
          scrollDir: getScrollDir(unref113(states).scrollOffset, offset2),
          updateRequested: true
        };
        nextTick32(resetIsScrolling);
      };
      const scrollToItem = (idx, alignment = AUTO_ALIGNMENT) => {
        const { scrollOffset } = unref113(states);
        idx = Math.max(0, Math.min(idx, props.total - 1));
        scrollTo(getOffset3(props, idx, alignment, scrollOffset, unref113(dynamicSizeCache)));
      };
      const getItemStyle = (idx) => {
        const { direction: direction2, itemSize: itemSize3, layout: layout2 } = props;
        const itemStyleCache = getItemStyleCache.value(clearCache && itemSize3, clearCache && layout2, clearCache && direction2);
        let style;
        if (hasOwn8(itemStyleCache, String(idx))) {
          style = itemStyleCache[idx];
        } else {
          const offset2 = getItemOffset(props, idx, unref113(dynamicSizeCache));
          const size4 = getItemSize(props, idx, unref113(dynamicSizeCache));
          const horizontal = unref113(_isHorizontal);
          const isRtl = direction2 === RTL;
          const offsetHorizontal = horizontal ? offset2 : 0;
          itemStyleCache[idx] = style = {
            position: "absolute",
            left: isRtl ? void 0 : `${offsetHorizontal}px`,
            right: isRtl ? `${offsetHorizontal}px` : void 0,
            top: !horizontal ? `${offset2}px` : 0,
            height: !horizontal ? `${size4}px` : "100%",
            width: horizontal ? `${size4}px` : "100%"
          };
        }
        return style;
      };
      const resetIsScrolling = () => {
        states.value.isScrolling = false;
        nextTick32(() => {
          getItemStyleCache.value(-1, null, null);
        });
      };
      const resetScrollTop = () => {
        const window2 = windowRef.value;
        if (window2) {
          window2.scrollTop = 0;
        }
      };
      onMounted43(() => {
        if (!isClient)
          return;
        const { initScrollOffset: initScrollOffset2 } = props;
        const windowElement = unref113(windowRef);
        if (isNumber3(initScrollOffset2) && windowElement) {
          if (unref113(_isHorizontal)) {
            windowElement.scrollLeft = initScrollOffset2;
          } else {
            windowElement.scrollTop = initScrollOffset2;
          }
        }
        emitEvents();
      });
      onUpdated5(() => {
        const { direction: direction2, layout: layout2 } = props;
        const { scrollOffset, updateRequested } = unref113(states);
        const windowElement = unref113(windowRef);
        if (updateRequested && windowElement) {
          if (layout2 === HORIZONTAL) {
            if (direction2 === RTL) {
              switch (getRTLOffsetType()) {
                case RTL_OFFSET_NAG: {
                  windowElement.scrollLeft = -scrollOffset;
                  break;
                }
                case RTL_OFFSET_POS_ASC: {
                  windowElement.scrollLeft = scrollOffset;
                  break;
                }
                default: {
                  const { clientWidth, scrollWidth } = windowElement;
                  windowElement.scrollLeft = scrollWidth - clientWidth - scrollOffset;
                  break;
                }
              }
            } else {
              windowElement.scrollLeft = scrollOffset;
            }
          } else {
            windowElement.scrollTop = scrollOffset;
          }
        }
      });
      const api = {
        ns,
        clientSize,
        estimatedTotalSize,
        windowStyle,
        windowRef,
        innerRef,
        innerStyle,
        itemsToRender,
        scrollbarRef,
        states,
        getItemStyle,
        onScroll,
        onScrollbarScroll,
        onWheel,
        scrollTo,
        scrollToItem,
        resetScrollTop
      };
      expose({
        windowRef,
        innerRef,
        getItemStyleCache,
        scrollTo,
        scrollToItem,
        resetScrollTop,
        states
      });
      return api;
    },
    render(ctx) {
      var _a2;
      const {
        $slots,
        className,
        clientSize,
        containerElement,
        data,
        getItemStyle,
        innerElement,
        itemsToRender,
        innerStyle,
        layout: layout2,
        total: total2,
        onScroll,
        onScrollbarScroll,
        onWheel,
        states,
        useIsScrolling,
        windowStyle,
        ns
      } = ctx;
      const [start, end2] = itemsToRender;
      const Container2 = resolveDynamicComponent25(containerElement);
      const Inner = resolveDynamicComponent25(innerElement);
      const children = [];
      if (total2 > 0) {
        for (let i = start; i <= end2; i++) {
          children.push((_a2 = $slots.default) == null ? void 0 : _a2.call($slots, {
            data,
            key: i,
            index: i,
            isScrolling: useIsScrolling ? states.isScrolling : void 0,
            style: getItemStyle(i)
          }));
        }
      }
      const InnerNode = [
        h10(Inner, {
          style: innerStyle,
          ref: "innerRef"
        }, !isString27(Inner) ? {
          default: () => children
        } : children)
      ];
      const scrollbar = h10(ScrollBar, {
        ref: "scrollbarRef",
        clientSize,
        layout: layout2,
        onScroll: onScrollbarScroll,
        ratio: clientSize * 100 / this.estimatedTotalSize,
        scrollFrom: states.scrollOffset / (this.estimatedTotalSize - clientSize),
        total: total2
      });
      const listContainer = h10(Container2, {
        class: [ns.e("window"), className],
        style: windowStyle,
        onScroll,
        onWheel,
        ref: "windowRef",
        key: 0
      }, !isString27(Container2) ? { default: () => [InnerNode] } : [InnerNode]);
      return h10("div", {
        key: 0,
        class: [ns.e("wrapper"), states.scrollbarAlwaysOn ? "always-on" : ""]
      }, [listContainer, scrollbar]);
    }
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/components/fixed-size-list.mjs
import { isString as isString28 } from "@vue/shared";
var FixedSizeList = createList({
  name: "ElFixedSizeList",
  getItemOffset: ({ itemSize: itemSize3 }, index) => index * itemSize3,
  getItemSize: ({ itemSize: itemSize3 }) => itemSize3,
  getEstimatedTotalSize: ({ total: total2, itemSize: itemSize3 }) => itemSize3 * total2,
  getOffset: ({ height, total: total2, itemSize: itemSize3, layout: layout2, width }, index, alignment, scrollOffset) => {
    const size4 = isHorizontal(layout2) ? width : height;
    if (isString28(size4)) {
      throwError("[ElVirtualList]", `
        You should set
          width/height
        to number when your layout is
          horizontal/vertical
      `);
    }
    const lastItemOffset = Math.max(0, total2 * itemSize3 - size4);
    const maxOffset = Math.min(lastItemOffset, index * itemSize3);
    const minOffset = Math.max(0, (index + 1) * itemSize3 - size4);
    if (alignment === SMART_ALIGNMENT) {
      if (scrollOffset >= minOffset - size4 && scrollOffset <= maxOffset + size4) {
        alignment = AUTO_ALIGNMENT;
      } else {
        alignment = CENTERED_ALIGNMENT;
      }
    }
    switch (alignment) {
      case START_ALIGNMENT: {
        return maxOffset;
      }
      case END_ALIGNMENT: {
        return minOffset;
      }
      case CENTERED_ALIGNMENT: {
        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(size4 / 2)) {
          return 0;
        } else if (middleOffset > lastItemOffset + Math.floor(size4 / 2)) {
          return lastItemOffset;
        } else {
          return middleOffset;
        }
      }
      case AUTO_ALIGNMENT:
      default: {
        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
          return scrollOffset;
        } else if (scrollOffset < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
      }
    }
  },
  getStartIndexForOffset: ({ total: total2, itemSize: itemSize3 }, offset2) => Math.max(0, Math.min(total2 - 1, Math.floor(offset2 / itemSize3))),
  getStopIndexForStartIndex: ({ height, total: total2, itemSize: itemSize3, layout: layout2, width }, startIndex, scrollOffset) => {
    const offset2 = startIndex * itemSize3;
    const size4 = isHorizontal(layout2) ? width : height;
    const numVisibleItems = Math.ceil((size4 + scrollOffset - offset2) / itemSize3);
    return Math.max(0, Math.min(total2 - 1, startIndex + numVisibleItems - 1));
  },
  initCache() {
    return void 0;
  },
  clearCache: true,
  validateProps() {
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/components/dynamic-size-list.mjs
var SCOPE4 = "ElDynamicSizeList";
var getItemFromCache = (props, index, listCache) => {
  const { itemSize: itemSize3 } = props;
  const { items, lastVisitedIndex } = listCache;
  if (index > lastVisitedIndex) {
    let offset2 = 0;
    if (lastVisitedIndex >= 0) {
      const item = items[lastVisitedIndex];
      offset2 = item.offset + item.size;
    }
    for (let i = lastVisitedIndex + 1; i <= index; i++) {
      const size4 = itemSize3(i);
      items[i] = {
        offset: offset2,
        size: size4
      };
      offset2 += size4;
    }
    listCache.lastVisitedIndex = index;
  }
  return items[index];
};
var findItem = (props, listCache, offset2) => {
  const { items, lastVisitedIndex } = listCache;
  const lastVisitedOffset = lastVisitedIndex > 0 ? items[lastVisitedIndex].offset : 0;
  if (lastVisitedOffset >= offset2) {
    return bs(props, listCache, 0, lastVisitedIndex, offset2);
  }
  return es(props, listCache, Math.max(0, lastVisitedIndex), offset2);
};
var bs = (props, listCache, low, high, offset2) => {
  while (low <= high) {
    const mid = low + Math.floor((high - low) / 2);
    const currentOffset = getItemFromCache(props, mid, listCache).offset;
    if (currentOffset === offset2) {
      return mid;
    } else if (currentOffset < offset2) {
      low = mid + 1;
    } else if (currentOffset > offset2) {
      high = mid - 1;
    }
  }
  return Math.max(0, low - 1);
};
var es = (props, listCache, index, offset2) => {
  const { total: total2 } = props;
  let exponent = 1;
  while (index < total2 && getItemFromCache(props, index, listCache).offset < offset2) {
    index += exponent;
    exponent *= 2;
  }
  return bs(props, listCache, Math.floor(index / 2), Math.min(index, total2 - 1), offset2);
};
var getEstimatedTotalSize = ({ total: total2 }, { items, estimatedItemSize: estimatedItemSize2, lastVisitedIndex }) => {
  let totalSizeOfMeasuredItems = 0;
  if (lastVisitedIndex >= total2) {
    lastVisitedIndex = total2 - 1;
  }
  if (lastVisitedIndex >= 0) {
    const item = items[lastVisitedIndex];
    totalSizeOfMeasuredItems = item.offset + item.size;
  }
  const numUnmeasuredItems = total2 - lastVisitedIndex - 1;
  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize2;
  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;
};
var DynamicSizeList = createList({
  name: "ElDynamicSizeList",
  getItemOffset: (props, index, listCache) => getItemFromCache(props, index, listCache).offset,
  getItemSize: (_2, index, { items }) => items[index].size,
  getEstimatedTotalSize,
  getOffset: (props, index, alignment, scrollOffset, listCache) => {
    const { height, layout: layout2, width } = props;
    const size4 = isHorizontal(layout2) ? width : height;
    const item = getItemFromCache(props, index, listCache);
    const estimatedTotalSize = getEstimatedTotalSize(props, listCache);
    const maxOffset = Math.max(0, Math.min(estimatedTotalSize - size4, item.offset));
    const minOffset = Math.max(0, item.offset - size4 + item.size);
    if (alignment === SMART_ALIGNMENT) {
      if (scrollOffset >= minOffset - size4 && scrollOffset <= maxOffset + size4) {
        alignment = AUTO_ALIGNMENT;
      } else {
        alignment = CENTERED_ALIGNMENT;
      }
    }
    switch (alignment) {
      case START_ALIGNMENT: {
        return maxOffset;
      }
      case END_ALIGNMENT: {
        return minOffset;
      }
      case CENTERED_ALIGNMENT: {
        return Math.round(minOffset + (maxOffset - minOffset) / 2);
      }
      case AUTO_ALIGNMENT:
      default: {
        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
          return scrollOffset;
        } else if (scrollOffset < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
      }
    }
  },
  getStartIndexForOffset: (props, offset2, listCache) => findItem(props, listCache, offset2),
  getStopIndexForStartIndex: (props, startIndex, scrollOffset, listCache) => {
    const { height, total: total2, layout: layout2, width } = props;
    const size4 = isHorizontal(layout2) ? width : height;
    const item = getItemFromCache(props, startIndex, listCache);
    const maxOffset = scrollOffset + size4;
    let offset2 = item.offset + item.size;
    let stopIndex = startIndex;
    while (stopIndex < total2 - 1 && offset2 < maxOffset) {
      stopIndex++;
      offset2 += getItemFromCache(props, stopIndex, listCache).size;
    }
    return stopIndex;
  },
  initCache({ estimatedItemSize: estimatedItemSize2 = DEFAULT_DYNAMIC_LIST_ITEM_SIZE }, instance) {
    const cache2 = {
      items: {},
      estimatedItemSize: estimatedItemSize2,
      lastVisitedIndex: -1
    };
    cache2.clearCacheAfterIndex = (index, forceUpdate = true) => {
      var _a2, _b;
      cache2.lastVisitedIndex = Math.min(cache2.lastVisitedIndex, index - 1);
      (_a2 = instance.exposed) == null ? void 0 : _a2.getItemStyleCache(-1);
      if (forceUpdate) {
        (_b = instance.proxy) == null ? void 0 : _b.$forceUpdate();
      }
    };
    return cache2;
  },
  clearCache: false,
  validateProps: ({ itemSize: itemSize3 }) => {
    if (true) {
      if (typeof itemSize3 !== "function") {
        throwError(SCOPE4, `
          itemSize is required as function, but the given value was ${typeof itemSize3}
        `);
      }
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/builders/build-grid.mjs
import { defineComponent as defineComponent124, getCurrentInstance as getCurrentInstance32, ref as ref96, computed as computed128, unref as unref114, nextTick as nextTick33, onMounted as onMounted44, h as h11, resolveDynamicComponent as resolveDynamicComponent26 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/hooks/use-grid-wheel.mjs
var useGridWheel = ({ atXEndEdge, atXStartEdge, atYEndEdge, atYStartEdge }, onWheelDelta) => {
  let frameHandle = null;
  let xOffset = 0;
  let yOffset = 0;
  const hasReachedEdge = (x2, y) => {
    const xEdgeReached = x2 <= 0 && atXStartEdge.value || x2 >= 0 && atXEndEdge.value;
    const yEdgeReached = y <= 0 && atYStartEdge.value || y >= 0 && atYEndEdge.value;
    return xEdgeReached && yEdgeReached;
  };
  const onWheel = (e) => {
    cAF(frameHandle);
    let x2 = e.deltaX;
    let y = e.deltaY;
    if (Math.abs(x2) > Math.abs(y)) {
      y = 0;
    } else {
      x2 = 0;
    }
    if (e.shiftKey && y !== 0) {
      x2 = y;
      y = 0;
    }
    if (hasReachedEdge(xOffset, yOffset) && hasReachedEdge(xOffset + x2, yOffset + y))
      return;
    xOffset += x2;
    yOffset += y;
    e.preventDefault();
    frameHandle = rAF(() => {
      onWheelDelta(xOffset, yOffset);
      xOffset = 0;
      yOffset = 0;
    });
  };
  return {
    hasReachedEdge,
    onWheel
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/builders/build-grid.mjs
import { hasOwn as hasOwn9, isString as isString29 } from "@vue/shared";
var createGrid = ({
  name,
  clearCache,
  getColumnPosition,
  getColumnStartIndexForOffset,
  getColumnStopIndexForStartIndex,
  getEstimatedTotalHeight: getEstimatedTotalHeight2,
  getEstimatedTotalWidth: getEstimatedTotalWidth2,
  getColumnOffset,
  getRowOffset,
  getRowPosition,
  getRowStartIndexForOffset,
  getRowStopIndexForStartIndex,
  initCache,
  injectToInstance,
  validateProps
}) => {
  return defineComponent124({
    name: name != null ? name : "ElVirtualList",
    props: virtualizedGridProps,
    emits: [ITEM_RENDER_EVT, SCROLL_EVT],
    setup(props, { emit, expose, slots }) {
      const ns = useNamespace("vl");
      validateProps(props);
      const instance = getCurrentInstance32();
      const cache2 = ref96(initCache(props, instance));
      injectToInstance == null ? void 0 : injectToInstance(instance, cache2);
      const windowRef = ref96();
      const hScrollbar = ref96();
      const vScrollbar = ref96();
      const innerRef = ref96(null);
      const states = ref96({
        isScrolling: false,
        scrollLeft: isNumber3(props.initScrollLeft) ? props.initScrollLeft : 0,
        scrollTop: isNumber3(props.initScrollTop) ? props.initScrollTop : 0,
        updateRequested: false,
        xAxisScrollDir: FORWARD,
        yAxisScrollDir: FORWARD
      });
      const getItemStyleCache = useCache();
      const parsedHeight = computed128(() => Number.parseInt(`${props.height}`, 10));
      const parsedWidth = computed128(() => Number.parseInt(`${props.width}`, 10));
      const columnsToRender = computed128(() => {
        const { totalColumn, totalRow, columnCache } = props;
        const { isScrolling, xAxisScrollDir, scrollLeft } = unref114(states);
        if (totalColumn === 0 || totalRow === 0) {
          return [0, 0, 0, 0];
        }
        const startIndex = getColumnStartIndexForOffset(props, scrollLeft, unref114(cache2));
        const stopIndex = getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, unref114(cache2));
        const cacheBackward = !isScrolling || xAxisScrollDir === BACKWARD ? Math.max(1, columnCache) : 1;
        const cacheForward = !isScrolling || xAxisScrollDir === FORWARD ? Math.max(1, columnCache) : 1;
        return [
          Math.max(0, startIndex - cacheBackward),
          Math.max(0, Math.min(totalColumn - 1, stopIndex + cacheForward)),
          startIndex,
          stopIndex
        ];
      });
      const rowsToRender = computed128(() => {
        const { totalColumn, totalRow, rowCache } = props;
        const { isScrolling, yAxisScrollDir, scrollTop } = unref114(states);
        if (totalColumn === 0 || totalRow === 0) {
          return [0, 0, 0, 0];
        }
        const startIndex = getRowStartIndexForOffset(props, scrollTop, unref114(cache2));
        const stopIndex = getRowStopIndexForStartIndex(props, startIndex, scrollTop, unref114(cache2));
        const cacheBackward = !isScrolling || yAxisScrollDir === BACKWARD ? Math.max(1, rowCache) : 1;
        const cacheForward = !isScrolling || yAxisScrollDir === FORWARD ? Math.max(1, rowCache) : 1;
        return [
          Math.max(0, startIndex - cacheBackward),
          Math.max(0, Math.min(totalRow - 1, stopIndex + cacheForward)),
          startIndex,
          stopIndex
        ];
      });
      const estimatedTotalHeight = computed128(() => getEstimatedTotalHeight2(props, unref114(cache2)));
      const estimatedTotalWidth = computed128(() => getEstimatedTotalWidth2(props, unref114(cache2)));
      const windowStyle = computed128(() => {
        var _a2;
        return [
          {
            position: "relative",
            overflow: "hidden",
            WebkitOverflowScrolling: "touch",
            willChange: "transform"
          },
          {
            direction: props.direction,
            height: isNumber3(props.height) ? `${props.height}px` : props.height,
            width: isNumber3(props.width) ? `${props.width}px` : props.width
          },
          (_a2 = props.style) != null ? _a2 : {}
        ];
      });
      const innerStyle = computed128(() => {
        const width = `${unref114(estimatedTotalWidth)}px`;
        const height = `${unref114(estimatedTotalHeight)}px`;
        return {
          height,
          pointerEvents: unref114(states).isScrolling ? "none" : void 0,
          width
        };
      });
      const emitEvents = () => {
        const { totalColumn, totalRow } = props;
        if (totalColumn > 0 && totalRow > 0) {
          const [
            columnCacheStart,
            columnCacheEnd,
            columnVisibleStart,
            columnVisibleEnd
          ] = unref114(columnsToRender);
          const [rowCacheStart, rowCacheEnd, rowVisibleStart, rowVisibleEnd] = unref114(rowsToRender);
          emit(ITEM_RENDER_EVT, {
            columnCacheStart,
            columnCacheEnd,
            rowCacheStart,
            rowCacheEnd,
            columnVisibleStart,
            columnVisibleEnd,
            rowVisibleStart,
            rowVisibleEnd
          });
        }
        const {
          scrollLeft,
          scrollTop,
          updateRequested,
          xAxisScrollDir,
          yAxisScrollDir
        } = unref114(states);
        emit(SCROLL_EVT, {
          xAxisScrollDir,
          scrollLeft,
          yAxisScrollDir,
          scrollTop,
          updateRequested
        });
      };
      const onScroll = (e) => {
        const {
          clientHeight,
          clientWidth,
          scrollHeight,
          scrollLeft,
          scrollTop,
          scrollWidth
        } = e.currentTarget;
        const _states = unref114(states);
        if (_states.scrollTop === scrollTop && _states.scrollLeft === scrollLeft) {
          return;
        }
        let _scrollLeft = scrollLeft;
        if (isRTL2(props.direction)) {
          switch (getRTLOffsetType()) {
            case RTL_OFFSET_NAG:
              _scrollLeft = -scrollLeft;
              break;
            case RTL_OFFSET_POS_DESC:
              _scrollLeft = scrollWidth - clientWidth - scrollLeft;
              break;
          }
        }
        states.value = {
          ..._states,
          isScrolling: true,
          scrollLeft: _scrollLeft,
          scrollTop: Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight)),
          updateRequested: true,
          xAxisScrollDir: getScrollDir(_states.scrollLeft, _scrollLeft),
          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop)
        };
        nextTick33(() => resetIsScrolling());
        onUpdated9();
        emitEvents();
      };
      const onVerticalScroll = (distance, totalSteps) => {
        const height = unref114(parsedHeight);
        const offset2 = (estimatedTotalHeight.value - height) / totalSteps * distance;
        scrollTo({
          scrollTop: Math.min(estimatedTotalHeight.value - height, offset2)
        });
      };
      const onHorizontalScroll = (distance, totalSteps) => {
        const width = unref114(parsedWidth);
        const offset2 = (estimatedTotalWidth.value - width) / totalSteps * distance;
        scrollTo({
          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset2)
        });
      };
      const { onWheel } = useGridWheel({
        atXStartEdge: computed128(() => states.value.scrollLeft <= 0),
        atXEndEdge: computed128(() => states.value.scrollLeft >= estimatedTotalWidth.value - unref114(parsedWidth)),
        atYStartEdge: computed128(() => states.value.scrollTop <= 0),
        atYEndEdge: computed128(() => states.value.scrollTop >= estimatedTotalHeight.value - unref114(parsedHeight))
      }, (x2, y) => {
        var _a2, _b, _c, _d;
        (_b = (_a2 = hScrollbar.value) == null ? void 0 : _a2.onMouseUp) == null ? void 0 : _b.call(_a2);
        (_d = (_c = hScrollbar.value) == null ? void 0 : _c.onMouseUp) == null ? void 0 : _d.call(_c);
        const width = unref114(parsedWidth);
        const height = unref114(parsedHeight);
        scrollTo({
          scrollLeft: Math.min(states.value.scrollLeft + x2, estimatedTotalWidth.value - width),
          scrollTop: Math.min(states.value.scrollTop + y, estimatedTotalHeight.value - height)
        });
      });
      const scrollTo = ({
        scrollLeft = states.value.scrollLeft,
        scrollTop = states.value.scrollTop
      }) => {
        scrollLeft = Math.max(scrollLeft, 0);
        scrollTop = Math.max(scrollTop, 0);
        const _states = unref114(states);
        if (scrollTop === _states.scrollTop && scrollLeft === _states.scrollLeft) {
          return;
        }
        states.value = {
          ..._states,
          xAxisScrollDir: getScrollDir(_states.scrollLeft, scrollLeft),
          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),
          scrollLeft,
          scrollTop,
          updateRequested: true
        };
        nextTick33(() => resetIsScrolling());
        onUpdated9();
        emitEvents();
      };
      const scrollToItem = (rowIndex = 0, columnIdx = 0, alignment = AUTO_ALIGNMENT) => {
        const _states = unref114(states);
        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn - 1));
        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow - 1));
        const scrollBarWidth2 = getScrollBarWidth(ns.namespace.value);
        const _cache = unref114(cache2);
        const estimatedHeight = getEstimatedTotalHeight2(props, _cache);
        const estimatedWidth = getEstimatedTotalWidth2(props, _cache);
        scrollTo({
          scrollLeft: getColumnOffset(props, columnIdx, alignment, _states.scrollLeft, _cache, estimatedWidth > props.width ? scrollBarWidth2 : 0),
          scrollTop: getRowOffset(props, rowIndex, alignment, _states.scrollTop, _cache, estimatedHeight > props.height ? scrollBarWidth2 : 0)
        });
      };
      const getItemStyle = (rowIndex, columnIndex) => {
        const { columnWidth, direction: direction2, rowHeight } = props;
        const itemStyleCache = getItemStyleCache.value(clearCache && columnWidth, clearCache && rowHeight, clearCache && direction2);
        const key = `${rowIndex},${columnIndex}`;
        if (hasOwn9(itemStyleCache, key)) {
          return itemStyleCache[key];
        } else {
          const [, left2] = getColumnPosition(props, columnIndex, unref114(cache2));
          const _cache = unref114(cache2);
          const rtl = isRTL2(direction2);
          const [height, top] = getRowPosition(props, rowIndex, _cache);
          const [width] = getColumnPosition(props, columnIndex, _cache);
          itemStyleCache[key] = {
            position: "absolute",
            left: rtl ? void 0 : `${left2}px`,
            right: rtl ? `${left2}px` : void 0,
            top: `${top}px`,
            height: `${height}px`,
            width: `${width}px`
          };
          return itemStyleCache[key];
        }
      };
      const resetIsScrolling = () => {
        states.value.isScrolling = false;
        nextTick33(() => {
          getItemStyleCache.value(-1, null, null);
        });
      };
      onMounted44(() => {
        if (!isClient)
          return;
        const { initScrollLeft, initScrollTop } = props;
        const windowElement = unref114(windowRef);
        if (windowElement) {
          if (isNumber3(initScrollLeft)) {
            windowElement.scrollLeft = initScrollLeft;
          }
          if (isNumber3(initScrollTop)) {
            windowElement.scrollTop = initScrollTop;
          }
        }
        emitEvents();
      });
      const onUpdated9 = () => {
        const { direction: direction2 } = props;
        const { scrollLeft, scrollTop, updateRequested } = unref114(states);
        const windowElement = unref114(windowRef);
        if (updateRequested && windowElement) {
          if (direction2 === RTL) {
            switch (getRTLOffsetType()) {
              case RTL_OFFSET_NAG: {
                windowElement.scrollLeft = -scrollLeft;
                break;
              }
              case RTL_OFFSET_POS_ASC: {
                windowElement.scrollLeft = scrollLeft;
                break;
              }
              default: {
                const { clientWidth, scrollWidth } = windowElement;
                windowElement.scrollLeft = scrollWidth - clientWidth - scrollLeft;
                break;
              }
            }
          } else {
            windowElement.scrollLeft = Math.max(0, scrollLeft);
          }
          windowElement.scrollTop = Math.max(0, scrollTop);
        }
      };
      const { resetAfterColumnIndex, resetAfterRowIndex, resetAfter } = instance.proxy;
      expose({
        windowRef,
        innerRef,
        getItemStyleCache,
        scrollTo,
        scrollToItem,
        states,
        resetAfterColumnIndex,
        resetAfterRowIndex,
        resetAfter
      });
      const renderScrollbars = () => {
        const {
          scrollbarAlwaysOn,
          scrollbarStartGap,
          scrollbarEndGap,
          totalColumn,
          totalRow
        } = props;
        const width = unref114(parsedWidth);
        const height = unref114(parsedHeight);
        const estimatedWidth = unref114(estimatedTotalWidth);
        const estimatedHeight = unref114(estimatedTotalHeight);
        const { scrollLeft, scrollTop } = unref114(states);
        const horizontalScrollbar = h11(ScrollBar, {
          ref: hScrollbar,
          alwaysOn: scrollbarAlwaysOn,
          startGap: scrollbarStartGap,
          endGap: scrollbarEndGap,
          class: ns.e("horizontal"),
          clientSize: width,
          layout: "horizontal",
          onScroll: onHorizontalScroll,
          ratio: width * 100 / estimatedWidth,
          scrollFrom: scrollLeft / (estimatedWidth - width),
          total: totalRow,
          visible: true
        });
        const verticalScrollbar = h11(ScrollBar, {
          ref: vScrollbar,
          alwaysOn: scrollbarAlwaysOn,
          startGap: scrollbarStartGap,
          endGap: scrollbarEndGap,
          class: ns.e("vertical"),
          clientSize: height,
          layout: "vertical",
          onScroll: onVerticalScroll,
          ratio: height * 100 / estimatedHeight,
          scrollFrom: scrollTop / (estimatedHeight - height),
          total: totalColumn,
          visible: true
        });
        return {
          horizontalScrollbar,
          verticalScrollbar
        };
      };
      const renderItems = () => {
        var _a2;
        const [columnStart, columnEnd] = unref114(columnsToRender);
        const [rowStart, rowEnd] = unref114(rowsToRender);
        const { data, totalColumn, totalRow, useIsScrolling, itemKey } = props;
        const children = [];
        if (totalRow > 0 && totalColumn > 0) {
          for (let row = rowStart; row <= rowEnd; row++) {
            for (let column2 = columnStart; column2 <= columnEnd; column2++) {
              children.push((_a2 = slots.default) == null ? void 0 : _a2.call(slots, {
                columnIndex: column2,
                data,
                key: itemKey({ columnIndex: column2, data, rowIndex: row }),
                isScrolling: useIsScrolling ? unref114(states).isScrolling : void 0,
                style: getItemStyle(row, column2),
                rowIndex: row
              }));
            }
          }
        }
        return children;
      };
      const renderInner = () => {
        const Inner = resolveDynamicComponent26(props.innerElement);
        const children = renderItems();
        return [
          h11(Inner, {
            style: unref114(innerStyle),
            ref: innerRef
          }, !isString29(Inner) ? {
            default: () => children
          } : children)
        ];
      };
      const renderWindow = () => {
        const Container2 = resolveDynamicComponent26(props.containerElement);
        const { horizontalScrollbar, verticalScrollbar } = renderScrollbars();
        const Inner = renderInner();
        return h11("div", {
          key: 0,
          class: ns.e("wrapper"),
          role: props.role
        }, [
          h11(Container2, {
            class: props.className,
            style: unref114(windowStyle),
            onScroll,
            onWheel,
            ref: windowRef
          }, !isString29(Container2) ? { default: () => Inner } : Inner),
          horizontalScrollbar,
          verticalScrollbar
        ]);
      };
      return renderWindow;
    }
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/components/fixed-size-grid.mjs
var SCOPE5 = "ElFixedSizeGrid";
var FixedSizeGrid = createGrid({
  name: "ElFixedSizeGrid",
  getColumnPosition: ({ columnWidth }, index) => [
    columnWidth,
    index * columnWidth
  ],
  getRowPosition: ({ rowHeight }, index) => [
    rowHeight,
    index * rowHeight
  ],
  getEstimatedTotalHeight: ({ totalRow, rowHeight }) => rowHeight * totalRow,
  getEstimatedTotalWidth: ({ totalColumn, columnWidth }) => columnWidth * totalColumn,
  getColumnOffset: ({ totalColumn, columnWidth, width }, columnIndex, alignment, scrollLeft, _2, scrollBarWidth2) => {
    width = Number(width);
    const lastColumnOffset = Math.max(0, totalColumn * columnWidth - width);
    const maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);
    const minOffset = Math.max(0, columnIndex * columnWidth - width + scrollBarWidth2 + columnWidth);
    if (alignment === "smart") {
      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {
        alignment = AUTO_ALIGNMENT;
      } else {
        alignment = CENTERED_ALIGNMENT;
      }
    }
    switch (alignment) {
      case START_ALIGNMENT:
        return maxOffset;
      case END_ALIGNMENT:
        return minOffset;
      case CENTERED_ALIGNMENT: {
        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(width / 2)) {
          return 0;
        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {
          return lastColumnOffset;
        } else {
          return middleOffset;
        }
      }
      case AUTO_ALIGNMENT:
      default:
        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {
          return scrollLeft;
        } else if (minOffset > maxOffset) {
          return minOffset;
        } else if (scrollLeft < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getRowOffset: ({ rowHeight, height, totalRow }, rowIndex, align, scrollTop, _2, scrollBarWidth2) => {
    height = Number(height);
    const lastRowOffset = Math.max(0, totalRow * rowHeight - height);
    const maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);
    const minOffset = Math.max(0, rowIndex * rowHeight - height + scrollBarWidth2 + rowHeight);
    if (align === SMART_ALIGNMENT) {
      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {
        align = AUTO_ALIGNMENT;
      } else {
        align = CENTERED_ALIGNMENT;
      }
    }
    switch (align) {
      case START_ALIGNMENT:
        return maxOffset;
      case END_ALIGNMENT:
        return minOffset;
      case CENTERED_ALIGNMENT: {
        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(height / 2)) {
          return 0;
        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {
          return lastRowOffset;
        } else {
          return middleOffset;
        }
      }
      case AUTO_ALIGNMENT:
      default:
        if (scrollTop >= minOffset && scrollTop <= maxOffset) {
          return scrollTop;
        } else if (minOffset > maxOffset) {
          return minOffset;
        } else if (scrollTop < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getColumnStartIndexForOffset: ({ columnWidth, totalColumn }, scrollLeft) => Math.max(0, Math.min(totalColumn - 1, Math.floor(scrollLeft / columnWidth))),
  getColumnStopIndexForStartIndex: ({ columnWidth, totalColumn, width }, startIndex, scrollLeft) => {
    const left2 = startIndex * columnWidth;
    const visibleColumnsCount = Math.ceil((width + scrollLeft - left2) / columnWidth);
    return Math.max(0, Math.min(totalColumn - 1, startIndex + visibleColumnsCount - 1));
  },
  getRowStartIndexForOffset: ({ rowHeight, totalRow }, scrollTop) => Math.max(0, Math.min(totalRow - 1, Math.floor(scrollTop / rowHeight))),
  getRowStopIndexForStartIndex: ({ rowHeight, totalRow, height }, startIndex, scrollTop) => {
    const top = startIndex * rowHeight;
    const numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);
    return Math.max(0, Math.min(totalRow - 1, startIndex + numVisibleRows - 1));
  },
  initCache: () => void 0,
  clearCache: true,
  validateProps: ({ columnWidth, rowHeight }) => {
    if (true) {
      if (!isNumber3(columnWidth)) {
        throwError(SCOPE5, `
          "columnWidth" must be passed as number,
            instead ${typeof columnWidth} was given.
        `);
      }
      if (!isNumber3(rowHeight)) {
        throwError(SCOPE5, `
          "columnWidth" must be passed as number,
            instead ${typeof rowHeight} was given.
        `);
      }
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/virtual-list/src/components/dynamic-size-grid.mjs
import { isFunction as isFunction17 } from "@vue/shared";
var { max: max4, min: min4, floor: floor2 } = Math;
var SCOPE6 = "ElDynamicSizeGrid";
var ACCESS_SIZER_KEY_MAP = {
  column: "columnWidth",
  row: "rowHeight"
};
var ACCESS_LAST_VISITED_KEY_MAP = {
  column: "lastVisitedColumnIndex",
  row: "lastVisitedRowIndex"
};
var getItemFromCache2 = (props, index, gridCache, type4) => {
  const [cachedItems, sizer, lastVisited] = [
    gridCache[type4],
    props[ACCESS_SIZER_KEY_MAP[type4]],
    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type4]]
  ];
  if (index > lastVisited) {
    let offset2 = 0;
    if (lastVisited >= 0) {
      const item = cachedItems[lastVisited];
      offset2 = item.offset + item.size;
    }
    for (let i = lastVisited + 1; i <= index; i++) {
      const size4 = sizer(i);
      cachedItems[i] = {
        offset: offset2,
        size: size4
      };
      offset2 += size4;
    }
    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type4]] = index;
  }
  return cachedItems[index];
};
var bs2 = (props, gridCache, low, high, offset2, type4) => {
  while (low <= high) {
    const mid = low + floor2((high - low) / 2);
    const currentOffset = getItemFromCache2(props, mid, gridCache, type4).offset;
    if (currentOffset === offset2) {
      return mid;
    } else if (currentOffset < offset2) {
      low = mid + 1;
    } else {
      high = mid - 1;
    }
  }
  return max4(0, low - 1);
};
var es2 = (props, gridCache, idx, offset2, type4) => {
  const total2 = type4 === "column" ? props.totalColumn : props.totalRow;
  let exponent = 1;
  while (idx < total2 && getItemFromCache2(props, idx, gridCache, type4).offset < offset2) {
    idx += exponent;
    exponent *= 2;
  }
  return bs2(props, gridCache, floor2(idx / 2), min4(idx, total2 - 1), offset2, type4);
};
var findItem2 = (props, gridCache, offset2, type4) => {
  const [cache2, lastVisitedIndex] = [
    gridCache[type4],
    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type4]]
  ];
  const lastVisitedItemOffset = lastVisitedIndex > 0 ? cache2[lastVisitedIndex].offset : 0;
  if (lastVisitedItemOffset >= offset2) {
    return bs2(props, gridCache, 0, lastVisitedIndex, offset2, type4);
  }
  return es2(props, gridCache, max4(0, lastVisitedIndex), offset2, type4);
};
var getEstimatedTotalHeight = ({ totalRow }, { estimatedRowHeight, lastVisitedRowIndex, row }) => {
  let sizeOfVisitedRows = 0;
  if (lastVisitedRowIndex >= totalRow) {
    lastVisitedRowIndex = totalRow - 1;
  }
  if (lastVisitedRowIndex >= 0) {
    const item = row[lastVisitedRowIndex];
    sizeOfVisitedRows = item.offset + item.size;
  }
  const unvisitedItems = totalRow - lastVisitedRowIndex - 1;
  const sizeOfUnvisitedItems = unvisitedItems * estimatedRowHeight;
  return sizeOfVisitedRows + sizeOfUnvisitedItems;
};
var getEstimatedTotalWidth = ({ totalColumn }, { column: column2, estimatedColumnWidth, lastVisitedColumnIndex }) => {
  let sizeOfVisitedColumns = 0;
  if (lastVisitedColumnIndex > totalColumn) {
    lastVisitedColumnIndex = totalColumn - 1;
  }
  if (lastVisitedColumnIndex >= 0) {
    const item = column2[lastVisitedColumnIndex];
    sizeOfVisitedColumns = item.offset + item.size;
  }
  const unvisitedItems = totalColumn - lastVisitedColumnIndex - 1;
  const sizeOfUnvisitedItems = unvisitedItems * estimatedColumnWidth;
  return sizeOfVisitedColumns + sizeOfUnvisitedItems;
};
var ACCESS_ESTIMATED_SIZE_KEY_MAP = {
  column: getEstimatedTotalWidth,
  row: getEstimatedTotalHeight
};
var getOffset = (props, index, alignment, scrollOffset, cache2, type4, scrollBarWidth2) => {
  const [size4, estimatedSizeAssociates] = [
    type4 === "row" ? props.height : props.width,
    ACCESS_ESTIMATED_SIZE_KEY_MAP[type4]
  ];
  const item = getItemFromCache2(props, index, cache2, type4);
  const estimatedSize = estimatedSizeAssociates(props, cache2);
  const maxOffset = max4(0, min4(estimatedSize - size4, item.offset));
  const minOffset = max4(0, item.offset - size4 + scrollBarWidth2 + item.size);
  if (alignment === SMART_ALIGNMENT) {
    if (scrollOffset >= minOffset - size4 && scrollOffset <= maxOffset + size4) {
      alignment = AUTO_ALIGNMENT;
    } else {
      alignment = CENTERED_ALIGNMENT;
    }
  }
  switch (alignment) {
    case START_ALIGNMENT: {
      return maxOffset;
    }
    case END_ALIGNMENT: {
      return minOffset;
    }
    case CENTERED_ALIGNMENT: {
      return Math.round(minOffset + (maxOffset - minOffset) / 2);
    }
    case AUTO_ALIGNMENT:
    default: {
      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
        return scrollOffset;
      } else if (minOffset > maxOffset) {
        return minOffset;
      } else if (scrollOffset < minOffset) {
        return minOffset;
      } else {
        return maxOffset;
      }
    }
  }
};
var DynamicSizeGrid = createGrid({
  name: "ElDynamicSizeGrid",
  getColumnPosition: (props, idx, cache2) => {
    const item = getItemFromCache2(props, idx, cache2, "column");
    return [item.size, item.offset];
  },
  getRowPosition: (props, idx, cache2) => {
    const item = getItemFromCache2(props, idx, cache2, "row");
    return [item.size, item.offset];
  },
  getColumnOffset: (props, columnIndex, alignment, scrollLeft, cache2, scrollBarWidth2) => getOffset(props, columnIndex, alignment, scrollLeft, cache2, "column", scrollBarWidth2),
  getRowOffset: (props, rowIndex, alignment, scrollTop, cache2, scrollBarWidth2) => getOffset(props, rowIndex, alignment, scrollTop, cache2, "row", scrollBarWidth2),
  getColumnStartIndexForOffset: (props, scrollLeft, cache2) => findItem2(props, cache2, scrollLeft, "column"),
  getColumnStopIndexForStartIndex: (props, startIndex, scrollLeft, cache2) => {
    const item = getItemFromCache2(props, startIndex, cache2, "column");
    const maxOffset = scrollLeft + props.width;
    let offset2 = item.offset + item.size;
    let stopIndex = startIndex;
    while (stopIndex < props.totalColumn - 1 && offset2 < maxOffset) {
      stopIndex++;
      offset2 += getItemFromCache2(props, startIndex, cache2, "column").size;
    }
    return stopIndex;
  },
  getEstimatedTotalHeight,
  getEstimatedTotalWidth,
  getRowStartIndexForOffset: (props, scrollTop, cache2) => findItem2(props, cache2, scrollTop, "row"),
  getRowStopIndexForStartIndex: (props, startIndex, scrollTop, cache2) => {
    const { totalRow, height } = props;
    const item = getItemFromCache2(props, startIndex, cache2, "row");
    const maxOffset = scrollTop + height;
    let offset2 = item.size + item.offset;
    let stopIndex = startIndex;
    while (stopIndex < totalRow - 1 && offset2 < maxOffset) {
      stopIndex++;
      offset2 += getItemFromCache2(props, stopIndex, cache2, "row").size;
    }
    return stopIndex;
  },
  injectToInstance: (instance, cache2) => {
    const resetAfter = ({ columnIndex, rowIndex }, forceUpdate) => {
      var _a2, _b;
      forceUpdate = isUndefined2(forceUpdate) ? true : forceUpdate;
      if (isNumber3(columnIndex)) {
        cache2.value.lastVisitedColumnIndex = Math.min(cache2.value.lastVisitedColumnIndex, columnIndex - 1);
      }
      if (isNumber3(rowIndex)) {
        cache2.value.lastVisitedRowIndex = Math.min(cache2.value.lastVisitedRowIndex, rowIndex - 1);
      }
      (_a2 = instance.exposed) == null ? void 0 : _a2.getItemStyleCache.value(-1, null, null);
      if (forceUpdate)
        (_b = instance.proxy) == null ? void 0 : _b.$forceUpdate();
    };
    const resetAfterColumnIndex = (columnIndex, forceUpdate) => {
      resetAfter({
        columnIndex
      }, forceUpdate);
    };
    const resetAfterRowIndex = (rowIndex, forceUpdate) => {
      resetAfter({
        rowIndex
      }, forceUpdate);
    };
    Object.assign(instance.proxy, {
      resetAfterColumnIndex,
      resetAfterRowIndex,
      resetAfter
    });
  },
  initCache: ({
    estimatedColumnWidth = DEFAULT_DYNAMIC_LIST_ITEM_SIZE,
    estimatedRowHeight = DEFAULT_DYNAMIC_LIST_ITEM_SIZE
  }) => {
    const cache2 = {
      column: {},
      estimatedColumnWidth,
      estimatedRowHeight,
      lastVisitedColumnIndex: -1,
      lastVisitedRowIndex: -1,
      row: {}
    };
    return cache2;
  },
  clearCache: false,
  validateProps: ({ columnWidth, rowHeight }) => {
    if (true) {
      if (!isFunction17(columnWidth)) {
        throwError(SCOPE6, `
          "columnWidth" must be passed as function,
            instead ${typeof columnWidth} was given.
        `);
      }
      if (!isFunction17(rowHeight)) {
        throwError(SCOPE6, `
          "rowHeight" must be passed as function,
            instead ${typeof rowHeight} was given.
        `);
      }
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/group-item.mjs
import { defineComponent as defineComponent125, openBlock as openBlock104, createElementBlock as createElementBlock89, normalizeClass as normalizeClass87, normalizeStyle as normalizeStyle40, toDisplayString as toDisplayString50, createElementVNode as createElementVNode56 } from "vue";
var _sfc_main108 = defineComponent125({
  props: {
    item: {
      type: Object,
      required: true
    },
    style: Object,
    height: Number
  },
  setup() {
    const ns = useNamespace("select");
    return {
      ns
    };
  }
});
function _sfc_render25(_ctx, _cache, $props, $setup, $data, $options) {
  return _ctx.item.isTitle ? (openBlock104(), createElementBlock89("div", {
    key: 0,
    class: normalizeClass87(_ctx.ns.be("group", "title")),
    style: normalizeStyle40([_ctx.style, { lineHeight: `${_ctx.height}px` }])
  }, toDisplayString50(_ctx.item.label), 7)) : (openBlock104(), createElementBlock89("div", {
    key: 1,
    class: normalizeClass87(_ctx.ns.be("group", "split")),
    style: normalizeStyle40(_ctx.style)
  }, [
    createElementVNode56("span", {
      class: normalizeClass87(_ctx.ns.be("group", "split-dash")),
      style: normalizeStyle40({ top: `${_ctx.height / 2}px` })
    }, null, 6)
  ], 6));
}
var GroupItem = _export_sfc(_sfc_main108, [["render", _sfc_render25], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/group-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/option-item.mjs
import { defineComponent as defineComponent126, openBlock as openBlock105, createElementBlock as createElementBlock90, normalizeStyle as normalizeStyle41, normalizeClass as normalizeClass88, withModifiers as withModifiers23, renderSlot as renderSlot83, createElementVNode as createElementVNode57, toDisplayString as toDisplayString51 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/useOption.mjs
function useOption2(props, { emit }) {
  return {
    hoverItem: () => {
      if (!props.disabled) {
        emit("hover", props.index);
      }
    },
    selectOptionClick: () => {
      if (!props.disabled) {
        emit("select", props.item, props.index);
      }
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/defaults.mjs
var SelectProps = {
  allowCreate: Boolean,
  autocomplete: {
    type: String,
    default: "none"
  },
  automaticDropdown: Boolean,
  clearable: Boolean,
  clearIcon: {
    type: [String, Object],
    default: circle_close_default
  },
  effect: {
    type: String,
    default: "light"
  },
  collapseTags: Boolean,
  collapseTagsTooltip: {
    type: Boolean,
    default: false
  },
  maxCollapseTags: {
    type: Number,
    default: 1
  },
  defaultFirstOption: Boolean,
  disabled: Boolean,
  estimatedOptionHeight: {
    type: Number,
    default: void 0
  },
  filterable: Boolean,
  filterMethod: Function,
  height: {
    type: Number,
    default: 170
  },
  itemHeight: {
    type: Number,
    default: 34
  },
  id: String,
  loading: Boolean,
  loadingText: String,
  label: String,
  modelValue: [Array, String, Number, Boolean, Object],
  multiple: Boolean,
  multipleLimit: {
    type: Number,
    default: 0
  },
  name: String,
  noDataText: String,
  noMatchText: String,
  remoteMethod: Function,
  reserveKeyword: {
    type: Boolean,
    default: true
  },
  options: {
    type: Array,
    required: true
  },
  placeholder: {
    type: String
  },
  teleported: useTooltipContentProps.teleported,
  persistent: {
    type: Boolean,
    default: true
  },
  popperClass: {
    type: String,
    default: ""
  },
  popperOptions: {
    type: Object,
    default: () => ({})
  },
  remote: Boolean,
  size: {
    type: String,
    validator: isValidComponentSize
  },
  valueKey: {
    type: String,
    default: "value"
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: false
  },
  validateEvent: {
    type: Boolean,
    default: true
  },
  placement: {
    type: definePropType(String),
    values: Ee,
    default: "bottom-start"
  }
};
var OptionProps = {
  data: Array,
  disabled: Boolean,
  hovering: Boolean,
  item: Object,
  index: Number,
  style: Object,
  selected: Boolean,
  created: Boolean
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/option-item.mjs
var _sfc_main109 = defineComponent126({
  props: OptionProps,
  emits: ["select", "hover"],
  setup(props, { emit }) {
    const ns = useNamespace("select");
    const { hoverItem, selectOptionClick } = useOption2(props, { emit });
    return {
      ns,
      hoverItem,
      selectOptionClick
    };
  }
});
var _hoisted_153 = ["aria-selected"];
function _sfc_render26(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock105(), createElementBlock90("li", {
    "aria-selected": _ctx.selected,
    style: normalizeStyle41(_ctx.style),
    class: normalizeClass88([
      _ctx.ns.be("dropdown", "option-item"),
      _ctx.ns.is("selected", _ctx.selected),
      _ctx.ns.is("disabled", _ctx.disabled),
      _ctx.ns.is("created", _ctx.created),
      { hover: _ctx.hovering }
    ]),
    onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.hoverItem && _ctx.hoverItem(...args)),
    onClick: _cache[1] || (_cache[1] = withModifiers23((...args) => _ctx.selectOptionClick && _ctx.selectOptionClick(...args), ["stop"]))
  }, [
    renderSlot83(_ctx.$slots, "default", {
      item: _ctx.item,
      index: _ctx.index,
      disabled: _ctx.disabled
    }, () => [
      createElementVNode57("span", null, toDisplayString51(_ctx.item.label), 1)
    ])
  ], 46, _hoisted_153);
}
var OptionItem = _export_sfc(_sfc_main109, [["render", _sfc_render26], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/option-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/token.mjs
var selectV2InjectionKey = Symbol("ElSelectV2Injection");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/select-dropdown.mjs
import { isObject as isObject19 } from "@vue/shared";
var ElSelectMenu2 = defineComponent127({
  name: "ElSelectDropdown",
  props: {
    data: {
      type: Array,
      required: true
    },
    hoveringIndex: Number,
    width: Number
  },
  setup(props, {
    slots,
    expose
  }) {
    const select = inject60(selectV2InjectionKey);
    const ns = useNamespace("select");
    const cachedHeights = ref97([]);
    const listRef = ref97();
    const size4 = computed129(() => props.data.length);
    watch62(() => size4.value, () => {
      var _a2, _b;
      (_b = (_a2 = select.popper.value).updatePopper) == null ? void 0 : _b.call(_a2);
    });
    const isSized = computed129(() => isUndefined2(select.props.estimatedOptionHeight));
    const listProps = computed129(() => {
      if (isSized.value) {
        return {
          itemSize: select.props.itemHeight
        };
      }
      return {
        estimatedSize: select.props.estimatedOptionHeight,
        itemSize: (idx) => cachedHeights.value[idx]
      };
    });
    const contains = (arr = [], target2) => {
      const {
        props: {
          valueKey
        }
      } = select;
      if (!isObject19(target2)) {
        return arr.includes(target2);
      }
      return arr && arr.some((item) => {
        return get_default(item, valueKey) === get_default(target2, valueKey);
      });
    };
    const isEqual3 = (selected, target2) => {
      if (!isObject19(target2)) {
        return selected === target2;
      } else {
        const {
          valueKey
        } = select.props;
        return get_default(selected, valueKey) === get_default(target2, valueKey);
      }
    };
    const isItemSelected = (modelValue, target2) => {
      const {
        valueKey
      } = select.props;
      if (select.props.multiple) {
        return contains(modelValue, get_default(target2, valueKey));
      }
      return isEqual3(modelValue, get_default(target2, valueKey));
    };
    const isItemDisabled = (modelValue, selected) => {
      const {
        disabled,
        multiple,
        multipleLimit
      } = select.props;
      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);
    };
    const isItemHovering = (target2) => props.hoveringIndex === target2;
    const scrollToItem = (index) => {
      const list = listRef.value;
      if (list) {
        list.scrollToItem(index);
      }
    };
    const resetScrollTop = () => {
      const list = listRef.value;
      if (list) {
        list.resetScrollTop();
      }
    };
    expose({
      listRef,
      isSized,
      isItemDisabled,
      isItemHovering,
      isItemSelected,
      scrollToItem,
      resetScrollTop
    });
    const Item = (itemProps) => {
      const {
        index,
        data,
        style
      } = itemProps;
      const sized = unref115(isSized);
      const {
        itemSize: itemSize3,
        estimatedSize
      } = unref115(listProps);
      const {
        modelValue
      } = select.props;
      const {
        onSelect,
        onHover
      } = select;
      const item = data[index];
      if (item.type === "Group") {
        return createVNode48(GroupItem, {
          "item": item,
          "style": style,
          "height": sized ? itemSize3 : estimatedSize
        }, null);
      }
      const isSelected = isItemSelected(modelValue, item);
      const isDisabled = isItemDisabled(modelValue, isSelected);
      const isHovering = isItemHovering(index);
      return createVNode48(OptionItem, mergeProps22(itemProps, {
        "selected": isSelected,
        "disabled": item.disabled || isDisabled,
        "created": !!item.created,
        "hovering": isHovering,
        "item": item,
        "onSelect": onSelect,
        "onHover": onHover
      }), {
        default: (props2) => {
          var _a2;
          return ((_a2 = slots.default) == null ? void 0 : _a2.call(slots, props2)) || createVNode48("span", null, [item.label]);
        }
      });
    };
    const {
      onKeyboardNavigate,
      onKeyboardSelect
    } = select;
    const onForward = () => {
      onKeyboardNavigate("forward");
    };
    const onBackward = () => {
      onKeyboardNavigate("backward");
    };
    const onEscOrTab = () => {
      select.expanded = false;
    };
    const onKeydown = (e) => {
      const {
        code
      } = e;
      const {
        tab,
        esc,
        down: down2,
        up: up2,
        enter
      } = EVENT_CODE;
      if (code !== tab) {
        e.preventDefault();
        e.stopPropagation();
      }
      switch (code) {
        case tab:
        case esc: {
          onEscOrTab();
          break;
        }
        case down2: {
          onForward();
          break;
        }
        case up2: {
          onBackward();
          break;
        }
        case enter: {
          onKeyboardSelect();
          break;
        }
      }
    };
    return () => {
      var _a2;
      const {
        data,
        width
      } = props;
      const {
        height,
        multiple,
        scrollbarAlwaysOn
      } = select.props;
      if (data.length === 0) {
        return createVNode48("div", {
          "class": ns.b("dropdown"),
          "style": {
            width: `${width}px`
          }
        }, [(_a2 = slots.empty) == null ? void 0 : _a2.call(slots)]);
      }
      const List = unref115(isSized) ? FixedSizeList : DynamicSizeList;
      return createVNode48("div", {
        "class": [ns.b("dropdown"), ns.is("multiple", multiple)]
      }, [createVNode48(List, mergeProps22({
        "ref": listRef
      }, unref115(listProps), {
        "className": ns.be("dropdown", "list"),
        "scrollbarAlwaysOn": scrollbarAlwaysOn,
        "data": data,
        "height": height,
        "width": width,
        "total": data.length,
        "onKeydown": onKeydown
      }), {
        default: (props2) => createVNode48(Item, props2, null)
      })]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/useSelect.mjs
import { reactive as reactive22, ref as ref100, computed as computed131, nextTick as nextTick34, watch as watch63, onMounted as onMounted45 } from "vue";
import { isArray as isArray26, isFunction as isFunction19, isObject as isObject20 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/useAllowCreate.mjs
import { ref as ref98, computed as computed130 } from "vue";
function useAllowCreate(props, states) {
  const createOptionCount = ref98(0);
  const cachedSelectedOption = ref98(null);
  const enableAllowCreateMode = computed130(() => {
    return props.allowCreate && props.filterable;
  });
  function hasExistingOption(query) {
    const hasValue = (option) => option.value === query;
    return props.options && props.options.some(hasValue) || states.createdOptions.some(hasValue);
  }
  function selectNewOption(option) {
    if (!enableAllowCreateMode.value) {
      return;
    }
    if (props.multiple && option.created) {
      createOptionCount.value++;
    } else {
      cachedSelectedOption.value = option;
    }
  }
  function createNewOption(query) {
    if (enableAllowCreateMode.value) {
      if (query && query.length > 0 && !hasExistingOption(query)) {
        const newOption = {
          value: query,
          label: query,
          created: true,
          disabled: false
        };
        if (states.createdOptions.length >= createOptionCount.value) {
          states.createdOptions[createOptionCount.value] = newOption;
        } else {
          states.createdOptions.push(newOption);
        }
      } else {
        if (props.multiple) {
          states.createdOptions.length = createOptionCount.value;
        } else {
          const selectedOption = cachedSelectedOption.value;
          states.createdOptions.length = 0;
          if (selectedOption && selectedOption.created) {
            states.createdOptions.push(selectedOption);
          }
        }
      }
    }
  }
  function removeNewOption(option) {
    if (!enableAllowCreateMode.value || !option || !option.created || option.created && props.reserveKeyword && states.inputValue === option.label) {
      return;
    }
    const idx = states.createdOptions.findIndex((it2) => it2.value === option.value);
    if (~idx) {
      states.createdOptions.splice(idx, 1);
      createOptionCount.value--;
    }
  }
  function clearAllNewOption() {
    if (enableAllowCreateMode.value) {
      states.createdOptions.length = 0;
      createOptionCount.value = 0;
    }
  }
  return {
    createNewOption,
    removeNewOption,
    selectNewOption,
    clearAllNewOption
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/util.mjs
import { isArray as isArray25 } from "@vue/shared";
var flattenOptions = (options) => {
  const flattened = [];
  options.forEach((option) => {
    if (isArray25(option.options)) {
      flattened.push({
        label: option.label,
        isTitle: true,
        type: "Group"
      });
      option.options.forEach((o2) => {
        flattened.push(o2);
      });
      flattened.push({
        type: "Group"
      });
    } else {
      flattened.push(option);
    }
  });
  return flattened;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/useInput.mjs
import { ref as ref99 } from "vue";
import { isFunction as isFunction18 } from "@vue/shared";
function useInput(handleInput) {
  const isComposing = ref99(false);
  const handleCompositionStart = () => {
    isComposing.value = true;
  };
  const handleCompositionUpdate = (event) => {
    const text = event.target.value;
    const lastCharacter = text[text.length - 1] || "";
    isComposing.value = !isKorean(lastCharacter);
  };
  const handleCompositionEnd = (event) => {
    if (isComposing.value) {
      isComposing.value = false;
      if (isFunction18(handleInput)) {
        handleInput(event);
      }
    }
  };
  return {
    handleCompositionStart,
    handleCompositionUpdate,
    handleCompositionEnd
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/useSelect.mjs
var DEFAULT_INPUT_PLACEHOLDER = "";
var MINIMUM_INPUT_WIDTH = 11;
var TAG_BASE_WIDTH = {
  larget: 51,
  default: 42,
  small: 33
};
var useSelect2 = (props, emit) => {
  const { t } = useLocale();
  const nsSelectV2 = useNamespace("select-v2");
  const nsInput = useNamespace("input");
  const { form: elForm, formItem: elFormItem } = useFormItem();
  const states = reactive22({
    inputValue: DEFAULT_INPUT_PLACEHOLDER,
    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,
    calculatedWidth: 0,
    cachedPlaceholder: "",
    cachedOptions: [],
    createdOptions: [],
    createdLabel: "",
    createdSelected: false,
    currentPlaceholder: "",
    hoveringIndex: -1,
    comboBoxHovering: false,
    isOnComposition: false,
    isSilentBlur: false,
    isComposing: false,
    inputLength: 20,
    selectWidth: 200,
    initialInputHeight: 0,
    previousQuery: null,
    previousValue: void 0,
    query: "",
    selectedLabel: "",
    softFocus: false,
    tagInMultiLine: false
  });
  const selectedIndex = ref100(-1);
  const popperSize = ref100(-1);
  const controlRef = ref100(null);
  const inputRef = ref100(null);
  const menuRef = ref100(null);
  const popper = ref100(null);
  const selectRef = ref100(null);
  const selectionRef = ref100(null);
  const calculatorRef = ref100(null);
  const expanded = ref100(false);
  const selectDisabled = computed131(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));
  const popupHeight = computed131(() => {
    const totalHeight = filteredOptions.value.length * 34;
    return totalHeight > props.height ? props.height : totalHeight;
  });
  const hasModelValue = computed131(() => {
    return !isNil_default(props.modelValue);
  });
  const showClearBtn = computed131(() => {
    const hasValue = props.multiple ? Array.isArray(props.modelValue) && props.modelValue.length > 0 : hasModelValue.value;
    const criteria = props.clearable && !selectDisabled.value && states.comboBoxHovering && hasValue;
    return criteria;
  });
  const iconComponent = computed131(() => props.remote && props.filterable ? "" : arrow_up_default);
  const iconReverse = computed131(() => iconComponent.value && nsSelectV2.is("reverse", expanded.value));
  const validateState = computed131(() => (elFormItem == null ? void 0 : elFormItem.validateState) || "");
  const validateIcon = computed131(() => ValidateComponentsMap[validateState.value]);
  const debounce$1 = computed131(() => props.remote ? 300 : 0);
  const emptyText = computed131(() => {
    const options = filteredOptions.value;
    if (props.loading) {
      return props.loadingText || t("el.select.loading");
    } else {
      if (props.remote && states.inputValue === "" && options.length === 0)
        return false;
      if (props.filterable && states.inputValue && options.length > 0) {
        return props.noMatchText || t("el.select.noMatch");
      }
      if (options.length === 0) {
        return props.noDataText || t("el.select.noData");
      }
    }
    return null;
  });
  const filteredOptions = computed131(() => {
    const isValidOption = (o2) => {
      const query = states.inputValue;
      const regexp4 = new RegExp(escapeStringRegexp(query), "i");
      const containsQueryString = query ? regexp4.test(o2.label || "") : true;
      return containsQueryString;
    };
    if (props.loading) {
      return [];
    }
    return flattenOptions(props.options.concat(states.createdOptions).map((v2) => {
      if (isArray26(v2.options)) {
        const filtered = v2.options.filter(isValidOption);
        if (filtered.length > 0) {
          return {
            ...v2,
            options: filtered
          };
        }
      } else {
        if (props.remote || isValidOption(v2)) {
          return v2;
        }
      }
      return null;
    }).filter((v2) => v2 !== null));
  });
  const filteredOptionsValueMap = computed131(() => {
    const valueMap = /* @__PURE__ */ new Map();
    filteredOptions.value.forEach((option, index) => {
      valueMap.set(getValueKey(option), { option, index });
    });
    return valueMap;
  });
  const optionsAllDisabled = computed131(() => filteredOptions.value.every((option) => option.disabled));
  const selectSize = useFormSize();
  const collapseTagSize = computed131(() => selectSize.value === "small" ? "small" : "default");
  const tagMaxWidth = computed131(() => {
    const select = selectionRef.value;
    const size4 = collapseTagSize.value || "default";
    const paddingLeft = select ? Number.parseInt(getComputedStyle(select).paddingLeft) : 0;
    const paddingRight = select ? Number.parseInt(getComputedStyle(select).paddingRight) : 0;
    return states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size4];
  });
  const calculatePopperSize = () => {
    var _a2;
    popperSize.value = ((_a2 = selectRef.value) == null ? void 0 : _a2.offsetWidth) || 200;
  };
  const inputWrapperStyle = computed131(() => {
    return {
      width: `${states.calculatedWidth === 0 ? MINIMUM_INPUT_WIDTH : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH}px`
    };
  });
  const shouldShowPlaceholder = computed131(() => {
    if (isArray26(props.modelValue)) {
      return props.modelValue.length === 0 && !states.displayInputValue;
    }
    return props.filterable ? states.displayInputValue.length === 0 : true;
  });
  const currentPlaceholder = computed131(() => {
    const _placeholder = props.placeholder || t("el.select.placeholder");
    return props.multiple || isNil_default(props.modelValue) ? _placeholder : states.selectedLabel;
  });
  const popperRef = computed131(() => {
    var _a2, _b;
    return (_b = (_a2 = popper.value) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.contentRef;
  });
  const indexRef = computed131(() => {
    if (props.multiple) {
      const len = props.modelValue.length;
      if (props.modelValue.length > 0 && filteredOptionsValueMap.value.has(props.modelValue[len - 1])) {
        const { index } = filteredOptionsValueMap.value.get(props.modelValue[len - 1]);
        return index;
      }
    } else {
      if (props.modelValue && filteredOptionsValueMap.value.has(props.modelValue)) {
        const { index } = filteredOptionsValueMap.value.get(props.modelValue);
        return index;
      }
    }
    return -1;
  });
  const dropdownMenuVisible = computed131({
    get() {
      return expanded.value && emptyText.value !== false;
    },
    set(val) {
      expanded.value = val;
    }
  });
  const showTagList = computed131(() => states.cachedOptions.slice(0, props.maxCollapseTags));
  const collapseTagList = computed131(() => states.cachedOptions.slice(props.maxCollapseTags));
  const {
    createNewOption,
    removeNewOption,
    selectNewOption,
    clearAllNewOption
  } = useAllowCreate(props, states);
  const {
    handleCompositionStart,
    handleCompositionUpdate,
    handleCompositionEnd
  } = useInput((e) => onInput(e));
  const focusAndUpdatePopup = () => {
    var _a2, _b, _c;
    (_b = (_a2 = inputRef.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
    (_c = popper.value) == null ? void 0 : _c.updatePopper();
  };
  const toggleMenu = () => {
    if (props.automaticDropdown)
      return;
    if (!selectDisabled.value) {
      if (states.isComposing)
        states.softFocus = true;
      return nextTick34(() => {
        var _a2, _b;
        expanded.value = !expanded.value;
        (_b = (_a2 = inputRef.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
      });
    }
  };
  const onInputChange = () => {
    if (props.filterable && states.inputValue !== states.selectedLabel) {
      states.query = states.selectedLabel;
    }
    handleQueryChange(states.inputValue);
    return nextTick34(() => {
      createNewOption(states.inputValue);
    });
  };
  const debouncedOnInputChange = debounce_default(onInputChange, debounce$1.value);
  const handleQueryChange = (val) => {
    if (states.previousQuery === val) {
      return;
    }
    states.previousQuery = val;
    if (props.filterable && isFunction19(props.filterMethod)) {
      props.filterMethod(val);
    } else if (props.filterable && props.remote && isFunction19(props.remoteMethod)) {
      props.remoteMethod(val);
    }
  };
  const emitChange = (val) => {
    if (!isEqual_default(props.modelValue, val)) {
      emit(CHANGE_EVENT, val);
    }
  };
  const update2 = (val) => {
    emit(UPDATE_MODEL_EVENT, val);
    emitChange(val);
    states.previousValue = val == null ? void 0 : val.toString();
  };
  const getValueIndex = (arr = [], value) => {
    if (!isObject20(value)) {
      return arr.indexOf(value);
    }
    const valueKey = props.valueKey;
    let index = -1;
    arr.some((item, i) => {
      if (get_default(item, valueKey) === get_default(value, valueKey)) {
        index = i;
        return true;
      }
      return false;
    });
    return index;
  };
  const getValueKey = (item) => {
    return isObject20(item) ? get_default(item, props.valueKey) : item;
  };
  const getLabel = (item) => {
    return isObject20(item) ? item.label : item;
  };
  const resetInputHeight = () => {
    return nextTick34(() => {
      var _a2, _b;
      if (!inputRef.value)
        return;
      const selection = selectionRef.value;
      selectRef.value.height = selection.offsetHeight;
      if (expanded.value && emptyText.value !== false) {
        (_b = (_a2 = popper.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
      }
    });
  };
  const handleResize = () => {
    var _a2, _b;
    resetInputWidth();
    calculatePopperSize();
    (_b = (_a2 = popper.value) == null ? void 0 : _a2.updatePopper) == null ? void 0 : _b.call(_a2);
    if (props.multiple) {
      return resetInputHeight();
    }
  };
  const resetInputWidth = () => {
    const select = selectionRef.value;
    if (select) {
      states.selectWidth = select.getBoundingClientRect().width;
    }
  };
  const onSelect = (option, idx, byClick = true) => {
    var _a2, _b;
    if (props.multiple) {
      let selectedOptions = props.modelValue.slice();
      const index = getValueIndex(selectedOptions, getValueKey(option));
      if (index > -1) {
        selectedOptions = [
          ...selectedOptions.slice(0, index),
          ...selectedOptions.slice(index + 1)
        ];
        states.cachedOptions.splice(index, 1);
        removeNewOption(option);
      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {
        selectedOptions = [...selectedOptions, getValueKey(option)];
        states.cachedOptions.push(option);
        selectNewOption(option);
        updateHoveringIndex(idx);
      }
      update2(selectedOptions);
      if (option.created) {
        states.query = "";
        handleQueryChange("");
        states.inputLength = 20;
      }
      if (props.filterable && !props.reserveKeyword) {
        (_b = (_a2 = inputRef.value).focus) == null ? void 0 : _b.call(_a2);
        onUpdateInputValue("");
      }
      if (props.filterable) {
        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;
      }
      resetInputHeight();
      setSoftFocus();
    } else {
      selectedIndex.value = idx;
      states.selectedLabel = option.label;
      update2(getValueKey(option));
      expanded.value = false;
      states.isComposing = false;
      states.isSilentBlur = byClick;
      selectNewOption(option);
      if (!option.created) {
        clearAllNewOption();
      }
      updateHoveringIndex(idx);
    }
  };
  const deleteTag = (event, tag) => {
    const { valueKey } = props;
    const index = props.modelValue.indexOf(get_default(tag, valueKey));
    if (index > -1 && !selectDisabled.value) {
      const value = [
        ...props.modelValue.slice(0, index),
        ...props.modelValue.slice(index + 1)
      ];
      states.cachedOptions.splice(index, 1);
      update2(value);
      emit("remove-tag", get_default(tag, valueKey));
      states.softFocus = true;
      removeNewOption(tag);
      return nextTick34(focusAndUpdatePopup);
    }
    event.stopPropagation();
  };
  const handleFocus = (event) => {
    const focused = states.isComposing;
    states.isComposing = true;
    if (!states.softFocus) {
      if (!focused)
        emit("focus", event);
    } else {
      states.softFocus = false;
    }
  };
  const handleBlur = (event) => {
    states.softFocus = false;
    return nextTick34(() => {
      var _a2, _b;
      (_b = (_a2 = inputRef.value) == null ? void 0 : _a2.blur) == null ? void 0 : _b.call(_a2);
      if (calculatorRef.value) {
        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;
      }
      if (states.isSilentBlur) {
        states.isSilentBlur = false;
      } else {
        if (states.isComposing) {
          emit("blur", event);
        }
      }
      states.isComposing = false;
    });
  };
  const handleEsc = () => {
    if (states.displayInputValue.length > 0) {
      onUpdateInputValue("");
    } else {
      expanded.value = false;
    }
  };
  const handleDel = (e) => {
    if (states.displayInputValue.length === 0) {
      e.preventDefault();
      const selected = props.modelValue.slice();
      selected.pop();
      removeNewOption(states.cachedOptions.pop());
      update2(selected);
    }
  };
  const handleClear = () => {
    let emptyValue;
    if (isArray26(props.modelValue)) {
      emptyValue = [];
    } else {
      emptyValue = void 0;
    }
    states.softFocus = true;
    if (props.multiple) {
      states.cachedOptions = [];
    } else {
      states.selectedLabel = "";
    }
    expanded.value = false;
    update2(emptyValue);
    emit("clear");
    clearAllNewOption();
    return nextTick34(focusAndUpdatePopup);
  };
  const onUpdateInputValue = (val) => {
    states.displayInputValue = val;
    states.inputValue = val;
  };
  const onKeyboardNavigate = (direction2, hoveringIndex = void 0) => {
    const options = filteredOptions.value;
    if (!["forward", "backward"].includes(direction2) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value) {
      return;
    }
    if (!expanded.value) {
      return toggleMenu();
    }
    if (hoveringIndex === void 0) {
      hoveringIndex = states.hoveringIndex;
    }
    let newIndex = -1;
    if (direction2 === "forward") {
      newIndex = hoveringIndex + 1;
      if (newIndex >= options.length) {
        newIndex = 0;
      }
    } else if (direction2 === "backward") {
      newIndex = hoveringIndex - 1;
      if (newIndex < 0 || newIndex >= options.length) {
        newIndex = options.length - 1;
      }
    }
    const option = options[newIndex];
    if (option.disabled || option.type === "Group") {
      return onKeyboardNavigate(direction2, newIndex);
    } else {
      updateHoveringIndex(newIndex);
      scrollToItem(newIndex);
    }
  };
  const onKeyboardSelect = () => {
    if (!expanded.value) {
      return toggleMenu();
    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {
      onSelect(filteredOptions.value[states.hoveringIndex], states.hoveringIndex, false);
    }
  };
  const updateHoveringIndex = (idx) => {
    states.hoveringIndex = idx;
  };
  const resetHoveringIndex = () => {
    states.hoveringIndex = -1;
  };
  const setSoftFocus = () => {
    var _a2;
    const _input = inputRef.value;
    if (_input) {
      (_a2 = _input.focus) == null ? void 0 : _a2.call(_input);
    }
  };
  const onInput = (event) => {
    const value = event.target.value;
    onUpdateInputValue(value);
    if (states.displayInputValue.length > 0 && !expanded.value) {
      expanded.value = true;
    }
    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;
    if (props.multiple) {
      resetInputHeight();
    }
    if (props.remote) {
      debouncedOnInputChange();
    } else {
      return onInputChange();
    }
  };
  const handleClickOutside = () => {
    expanded.value = false;
    return handleBlur();
  };
  const handleMenuEnter = () => {
    states.inputValue = states.displayInputValue;
    return nextTick34(() => {
      if (~indexRef.value) {
        updateHoveringIndex(indexRef.value);
        scrollToItem(states.hoveringIndex);
      }
    });
  };
  const scrollToItem = (index) => {
    menuRef.value.scrollToItem(index);
  };
  const initStates = () => {
    resetHoveringIndex();
    if (props.multiple) {
      if (props.modelValue.length > 0) {
        let initHovering = false;
        states.cachedOptions.length = 0;
        states.previousValue = props.modelValue.toString();
        for (const value of props.modelValue) {
          if (filteredOptionsValueMap.value.has(value)) {
            const { index, option } = filteredOptionsValueMap.value.get(value);
            states.cachedOptions.push(option);
            if (!initHovering) {
              updateHoveringIndex(index);
            }
            initHovering = true;
          }
        }
      } else {
        states.cachedOptions = [];
        states.previousValue = void 0;
      }
    } else {
      if (hasModelValue.value) {
        states.previousValue = props.modelValue;
        const options = filteredOptions.value;
        const selectedItemIndex = options.findIndex((option) => getValueKey(option) === getValueKey(props.modelValue));
        if (~selectedItemIndex) {
          states.selectedLabel = options[selectedItemIndex].label;
          updateHoveringIndex(selectedItemIndex);
        } else {
          states.selectedLabel = `${props.modelValue}`;
        }
      } else {
        states.selectedLabel = "";
        states.previousValue = void 0;
      }
    }
    clearAllNewOption();
    calculatePopperSize();
  };
  watch63(expanded, (val) => {
    var _a2, _b;
    emit("visible-change", val);
    if (val) {
      (_b = (_a2 = popper.value).update) == null ? void 0 : _b.call(_a2);
    } else {
      states.displayInputValue = "";
      states.previousQuery = null;
      createNewOption("");
    }
  });
  watch63(() => props.modelValue, (val, oldVal) => {
    var _a2;
    if (!val || val.toString() !== states.previousValue) {
      initStates();
    }
    if (!isEqual_default(val, oldVal) && props.validateEvent) {
      (_a2 = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a2.call(elFormItem, "change").catch((err) => debugWarn(err));
    }
  }, {
    deep: true
  });
  watch63(() => props.options, () => {
    const input = inputRef.value;
    if (!input || input && document.activeElement !== input) {
      initStates();
    }
  }, {
    deep: true
  });
  watch63(filteredOptions, () => {
    return nextTick34(menuRef.value.resetScrollTop);
  });
  watch63(() => dropdownMenuVisible.value, (val) => {
    if (!val) {
      resetHoveringIndex();
    }
  });
  onMounted45(() => {
    initStates();
  });
  useResizeObserver(selectRef, handleResize);
  return {
    collapseTagSize,
    currentPlaceholder,
    expanded,
    emptyText,
    popupHeight,
    debounce: debounce$1,
    filteredOptions,
    iconComponent,
    iconReverse,
    inputWrapperStyle,
    popperSize,
    dropdownMenuVisible,
    hasModelValue,
    shouldShowPlaceholder,
    selectDisabled,
    selectSize,
    showClearBtn,
    states,
    tagMaxWidth,
    nsSelectV2,
    nsInput,
    calculatorRef,
    controlRef,
    inputRef,
    menuRef,
    popper,
    selectRef,
    selectionRef,
    popperRef,
    validateState,
    validateIcon,
    showTagList,
    collapseTagList,
    debouncedOnInputChange,
    deleteTag,
    getLabel,
    getValueKey,
    handleBlur,
    handleClear,
    handleClickOutside,
    handleDel,
    handleEsc,
    handleFocus,
    handleMenuEnter,
    handleResize,
    toggleMenu,
    scrollTo: scrollToItem,
    onInput,
    onKeyboardNavigate,
    onKeyboardSelect,
    onSelect,
    onHover: updateHoveringIndex,
    onUpdateInputValue,
    handleCompositionStart,
    handleCompositionEnd,
    handleCompositionUpdate
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/src/select.mjs
import { isArray as isArray27 } from "@vue/shared";
var _sfc_main110 = defineComponent128({
  name: "ElSelectV2",
  components: {
    ElSelectMenu: ElSelectMenu2,
    ElTag,
    ElTooltip,
    ElIcon
  },
  directives: { ClickOutside, ModelText: vModelText3 },
  props: SelectProps,
  emits: [
    UPDATE_MODEL_EVENT,
    CHANGE_EVENT,
    "remove-tag",
    "clear",
    "visible-change",
    "focus",
    "blur"
  ],
  setup(props, { emit }) {
    const modelValue = computed132(() => {
      const { modelValue: rawModelValue, multiple } = props;
      const fallback = multiple ? [] : void 0;
      if (isArray27(rawModelValue)) {
        return multiple ? rawModelValue : fallback;
      }
      return multiple ? fallback : rawModelValue;
    });
    const API = useSelect2(reactive23({
      ...toRefs10(props),
      modelValue
    }), emit);
    provide34(selectV2InjectionKey, {
      props: reactive23({
        ...toRefs10(props),
        height: API.popupHeight,
        modelValue
      }),
      popper: API.popper,
      onSelect: API.onSelect,
      onHover: API.onHover,
      onKeyboardNavigate: API.onKeyboardNavigate,
      onKeyboardSelect: API.onKeyboardSelect
    });
    return {
      ...API,
      modelValue
    };
  }
});
var _hoisted_154 = { key: 0 };
var _hoisted_234 = ["id", "autocomplete", "aria-expanded", "aria-labelledby", "disabled", "readonly", "name", "unselectable"];
var _hoisted_317 = ["textContent"];
var _hoisted_49 = ["id", "aria-labelledby", "aria-expanded", "autocomplete", "disabled", "name", "readonly", "unselectable"];
var _hoisted_56 = ["textContent"];
function _sfc_render27(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tag = resolveComponent12("el-tag");
  const _component_el_tooltip = resolveComponent12("el-tooltip");
  const _component_el_icon = resolveComponent12("el-icon");
  const _component_el_select_menu = resolveComponent12("el-select-menu");
  const _directive_model_text = resolveDirective2("model-text");
  const _directive_click_outside = resolveDirective2("click-outside");
  return withDirectives28((openBlock106(), createElementBlock91("div", {
    ref: "selectRef",
    class: normalizeClass89([_ctx.nsSelectV2.b(), _ctx.nsSelectV2.m(_ctx.selectSize)]),
    onClick: _cache[24] || (_cache[24] = withModifiers24((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), ["stop"])),
    onMouseenter: _cache[25] || (_cache[25] = ($event) => _ctx.states.comboBoxHovering = true),
    onMouseleave: _cache[26] || (_cache[26] = ($event) => _ctx.states.comboBoxHovering = false)
  }, [
    createVNode49(_component_el_tooltip, {
      ref: "popper",
      visible: _ctx.dropdownMenuVisible,
      teleported: _ctx.teleported,
      "popper-class": [_ctx.nsSelectV2.e("popper"), _ctx.popperClass],
      "gpu-acceleration": false,
      "stop-popper-mouse-event": false,
      "popper-options": _ctx.popperOptions,
      "fallback-placements": ["bottom-start", "top-start", "right", "left"],
      effect: _ctx.effect,
      placement: _ctx.placement,
      pure: "",
      transition: `${_ctx.nsSelectV2.namespace.value}-zoom-in-top`,
      trigger: "click",
      persistent: _ctx.persistent,
      onBeforeShow: _ctx.handleMenuEnter,
      onHide: _cache[23] || (_cache[23] = ($event) => _ctx.states.inputValue = _ctx.states.displayInputValue)
    }, {
      default: withCtx59(() => [
        createElementVNode58("div", {
          ref: "selectionRef",
          class: normalizeClass89([
            _ctx.nsSelectV2.e("wrapper"),
            _ctx.nsSelectV2.is("focused", _ctx.states.isComposing || _ctx.expanded),
            _ctx.nsSelectV2.is("hovering", _ctx.states.comboBoxHovering),
            _ctx.nsSelectV2.is("filterable", _ctx.filterable),
            _ctx.nsSelectV2.is("disabled", _ctx.selectDisabled)
          ])
        }, [
          _ctx.$slots.prefix ? (openBlock106(), createElementBlock91("div", _hoisted_154, [
            renderSlot84(_ctx.$slots, "prefix")
          ])) : createCommentVNode51("v-if", true),
          _ctx.multiple ? (openBlock106(), createElementBlock91("div", {
            key: 1,
            class: normalizeClass89(_ctx.nsSelectV2.e("selection"))
          }, [
            _ctx.collapseTags && _ctx.modelValue.length > 0 ? (openBlock106(), createElementBlock91(Fragment37, { key: 0 }, [
              (openBlock106(true), createElementBlock91(Fragment37, null, renderList23(_ctx.showTagList, (item) => {
                return openBlock106(), createElementBlock91("div", {
                  key: _ctx.getValueKey(item),
                  class: normalizeClass89(_ctx.nsSelectV2.e("selected-item"))
                }, [
                  createVNode49(_component_el_tag, {
                    closable: !_ctx.selectDisabled && !(item == null ? void 0 : item.disable),
                    size: _ctx.collapseTagSize,
                    type: "info",
                    "disable-transitions": "",
                    onClose: ($event) => _ctx.deleteTag($event, item)
                  }, {
                    default: withCtx59(() => [
                      createElementVNode58("span", {
                        class: normalizeClass89(_ctx.nsSelectV2.e("tags-text")),
                        style: normalizeStyle42({
                          maxWidth: `${_ctx.tagMaxWidth}px`
                        })
                      }, toDisplayString52(item == null ? void 0 : item.label), 7)
                    ]),
                    _: 2
                  }, 1032, ["closable", "size", "onClose"])
                ], 2);
              }), 128)),
              createElementVNode58("div", {
                class: normalizeClass89(_ctx.nsSelectV2.e("selected-item"))
              }, [
                _ctx.modelValue.length > _ctx.maxCollapseTags ? (openBlock106(), createBlock61(_component_el_tag, {
                  key: 0,
                  closable: false,
                  size: _ctx.collapseTagSize,
                  type: "info",
                  "disable-transitions": ""
                }, {
                  default: withCtx59(() => [
                    _ctx.collapseTagsTooltip ? (openBlock106(), createBlock61(_component_el_tooltip, {
                      key: 0,
                      disabled: _ctx.dropdownMenuVisible,
                      "fallback-placements": ["bottom", "top", "right", "left"],
                      effect: _ctx.effect,
                      placement: "bottom",
                      teleported: false
                    }, {
                      default: withCtx59(() => [
                        createElementVNode58("span", {
                          class: normalizeClass89(_ctx.nsSelectV2.e("tags-text")),
                          style: normalizeStyle42({
                            maxWidth: `${_ctx.tagMaxWidth}px`
                          })
                        }, "+ " + toDisplayString52(_ctx.modelValue.length - _ctx.maxCollapseTags), 7)
                      ]),
                      content: withCtx59(() => [
                        createElementVNode58("div", {
                          class: normalizeClass89(_ctx.nsSelectV2.e("selection"))
                        }, [
                          (openBlock106(true), createElementBlock91(Fragment37, null, renderList23(_ctx.collapseTagList, (selected) => {
                            return openBlock106(), createElementBlock91("div", {
                              key: _ctx.getValueKey(selected),
                              class: normalizeClass89(_ctx.nsSelectV2.e("selected-item"))
                            }, [
                              createVNode49(_component_el_tag, {
                                closable: !_ctx.selectDisabled && !selected.disabled,
                                size: _ctx.collapseTagSize,
                                class: "in-tooltip",
                                type: "info",
                                "disable-transitions": "",
                                onClose: ($event) => _ctx.deleteTag($event, selected)
                              }, {
                                default: withCtx59(() => [
                                  createElementVNode58("span", {
                                    class: normalizeClass89(_ctx.nsSelectV2.e("tags-text")),
                                    style: normalizeStyle42({
                                      maxWidth: `${_ctx.tagMaxWidth}px`
                                    })
                                  }, toDisplayString52(_ctx.getLabel(selected)), 7)
                                ]),
                                _: 2
                              }, 1032, ["closable", "size", "onClose"])
                            ], 2);
                          }), 128))
                        ], 2)
                      ]),
                      _: 1
                    }, 8, ["disabled", "effect"])) : (openBlock106(), createElementBlock91("span", {
                      key: 1,
                      class: normalizeClass89(_ctx.nsSelectV2.e("tags-text")),
                      style: normalizeStyle42({
                        maxWidth: `${_ctx.tagMaxWidth}px`
                      })
                    }, "+ " + toDisplayString52(_ctx.modelValue.length - _ctx.maxCollapseTags), 7))
                  ]),
                  _: 1
                }, 8, ["size"])) : createCommentVNode51("v-if", true)
              ], 2)
            ], 64)) : (openBlock106(true), createElementBlock91(Fragment37, { key: 1 }, renderList23(_ctx.states.cachedOptions, (selected) => {
              return openBlock106(), createElementBlock91("div", {
                key: _ctx.getValueKey(selected),
                class: normalizeClass89(_ctx.nsSelectV2.e("selected-item"))
              }, [
                createVNode49(_component_el_tag, {
                  closable: !_ctx.selectDisabled && !selected.disabled,
                  size: _ctx.collapseTagSize,
                  type: "info",
                  "disable-transitions": "",
                  onClose: ($event) => _ctx.deleteTag($event, selected)
                }, {
                  default: withCtx59(() => [
                    createElementVNode58("span", {
                      class: normalizeClass89(_ctx.nsSelectV2.e("tags-text")),
                      style: normalizeStyle42({
                        maxWidth: `${_ctx.tagMaxWidth}px`
                      })
                    }, toDisplayString52(_ctx.getLabel(selected)), 7)
                  ]),
                  _: 2
                }, 1032, ["closable", "size", "onClose"])
              ], 2);
            }), 128)),
            createElementVNode58("div", {
              class: normalizeClass89([
                _ctx.nsSelectV2.e("selected-item"),
                _ctx.nsSelectV2.e("input-wrapper")
              ]),
              style: normalizeStyle42(_ctx.inputWrapperStyle)
            }, [
              withDirectives28(createElementVNode58("input", {
                id: _ctx.id,
                ref: "inputRef",
                autocomplete: _ctx.autocomplete,
                "aria-autocomplete": "list",
                "aria-haspopup": "listbox",
                autocapitalize: "off",
                "aria-expanded": _ctx.expanded,
                "aria-labelledby": _ctx.label,
                class: normalizeClass89([
                  _ctx.nsSelectV2.is(_ctx.selectSize),
                  _ctx.nsSelectV2.e("combobox-input")
                ]),
                disabled: _ctx.disabled,
                role: "combobox",
                readonly: !_ctx.filterable,
                spellcheck: "false",
                type: "text",
                name: _ctx.name,
                unselectable: _ctx.expanded ? "on" : void 0,
                "onUpdate:modelValue": _cache[0] || (_cache[0] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args)),
                onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),
                onBlur: _cache[2] || (_cache[2] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),
                onInput: _cache[3] || (_cache[3] = (...args) => _ctx.onInput && _ctx.onInput(...args)),
                onCompositionstart: _cache[4] || (_cache[4] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),
                onCompositionupdate: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),
                onCompositionend: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),
                onKeydown: [
                  _cache[7] || (_cache[7] = withKeys11(withModifiers24(($event) => _ctx.onKeyboardNavigate("backward"), ["stop", "prevent"]), ["up"])),
                  _cache[8] || (_cache[8] = withKeys11(withModifiers24(($event) => _ctx.onKeyboardNavigate("forward"), ["stop", "prevent"]), ["down"])),
                  _cache[9] || (_cache[9] = withKeys11(withModifiers24((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), ["stop", "prevent"]), ["enter"])),
                  _cache[10] || (_cache[10] = withKeys11(withModifiers24((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), ["stop", "prevent"]), ["esc"])),
                  _cache[11] || (_cache[11] = withKeys11(withModifiers24((...args) => _ctx.handleDel && _ctx.handleDel(...args), ["stop"]), ["delete"]))
                ]
              }, null, 42, _hoisted_234), [
                [_directive_model_text, _ctx.states.displayInputValue]
              ]),
              _ctx.filterable ? (openBlock106(), createElementBlock91("span", {
                key: 0,
                ref: "calculatorRef",
                "aria-hidden": "true",
                class: normalizeClass89(_ctx.nsSelectV2.e("input-calculator")),
                textContent: toDisplayString52(_ctx.states.displayInputValue)
              }, null, 10, _hoisted_317)) : createCommentVNode51("v-if", true)
            ], 6)
          ], 2)) : (openBlock106(), createElementBlock91(Fragment37, { key: 2 }, [
            createElementVNode58("div", {
              class: normalizeClass89([
                _ctx.nsSelectV2.e("selected-item"),
                _ctx.nsSelectV2.e("input-wrapper")
              ])
            }, [
              withDirectives28(createElementVNode58("input", {
                id: _ctx.id,
                ref: "inputRef",
                "aria-autocomplete": "list",
                "aria-haspopup": "listbox",
                "aria-labelledby": _ctx.label,
                "aria-expanded": _ctx.expanded,
                autocapitalize: "off",
                autocomplete: _ctx.autocomplete,
                class: normalizeClass89(_ctx.nsSelectV2.e("combobox-input")),
                disabled: _ctx.disabled,
                name: _ctx.name,
                role: "combobox",
                readonly: !_ctx.filterable,
                spellcheck: "false",
                type: "text",
                unselectable: _ctx.expanded ? "on" : void 0,
                onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),
                onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),
                onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),
                onFocus: _cache[15] || (_cache[15] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),
                onBlur: _cache[16] || (_cache[16] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),
                onInput: _cache[17] || (_cache[17] = (...args) => _ctx.onInput && _ctx.onInput(...args)),
                onKeydown: [
                  _cache[18] || (_cache[18] = withKeys11(withModifiers24(($event) => _ctx.onKeyboardNavigate("backward"), ["stop", "prevent"]), ["up"])),
                  _cache[19] || (_cache[19] = withKeys11(withModifiers24(($event) => _ctx.onKeyboardNavigate("forward"), ["stop", "prevent"]), ["down"])),
                  _cache[20] || (_cache[20] = withKeys11(withModifiers24((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), ["stop", "prevent"]), ["enter"])),
                  _cache[21] || (_cache[21] = withKeys11(withModifiers24((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), ["stop", "prevent"]), ["esc"]))
                ],
                "onUpdate:modelValue": _cache[22] || (_cache[22] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args))
              }, null, 42, _hoisted_49), [
                [_directive_model_text, _ctx.states.displayInputValue]
              ])
            ], 2),
            _ctx.filterable ? (openBlock106(), createElementBlock91("span", {
              key: 0,
              ref: "calculatorRef",
              "aria-hidden": "true",
              class: normalizeClass89([
                _ctx.nsSelectV2.e("selected-item"),
                _ctx.nsSelectV2.e("input-calculator")
              ]),
              textContent: toDisplayString52(_ctx.states.displayInputValue)
            }, null, 10, _hoisted_56)) : createCommentVNode51("v-if", true)
          ], 64)),
          _ctx.shouldShowPlaceholder ? (openBlock106(), createElementBlock91("span", {
            key: 3,
            class: normalizeClass89([
              _ctx.nsSelectV2.e("placeholder"),
              _ctx.nsSelectV2.is("transparent", _ctx.multiple ? _ctx.modelValue.length === 0 : !_ctx.hasModelValue)
            ])
          }, toDisplayString52(_ctx.currentPlaceholder), 3)) : createCommentVNode51("v-if", true),
          createElementVNode58("span", {
            class: normalizeClass89(_ctx.nsSelectV2.e("suffix"))
          }, [
            _ctx.iconComponent ? withDirectives28((openBlock106(), createBlock61(_component_el_icon, {
              key: 0,
              class: normalizeClass89([_ctx.nsSelectV2.e("caret"), _ctx.nsInput.e("icon"), _ctx.iconReverse])
            }, {
              default: withCtx59(() => [
                (openBlock106(), createBlock61(resolveDynamicComponent27(_ctx.iconComponent)))
              ]),
              _: 1
            }, 8, ["class"])), [
              [vShow20, !_ctx.showClearBtn]
            ]) : createCommentVNode51("v-if", true),
            _ctx.showClearBtn && _ctx.clearIcon ? (openBlock106(), createBlock61(_component_el_icon, {
              key: 1,
              class: normalizeClass89([_ctx.nsSelectV2.e("caret"), _ctx.nsInput.e("icon")]),
              onClick: withModifiers24(_ctx.handleClear, ["prevent", "stop"])
            }, {
              default: withCtx59(() => [
                (openBlock106(), createBlock61(resolveDynamicComponent27(_ctx.clearIcon)))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : createCommentVNode51("v-if", true),
            _ctx.validateState && _ctx.validateIcon ? (openBlock106(), createBlock61(_component_el_icon, {
              key: 2,
              class: normalizeClass89([_ctx.nsInput.e("icon"), _ctx.nsInput.e("validateIcon")])
            }, {
              default: withCtx59(() => [
                (openBlock106(), createBlock61(resolveDynamicComponent27(_ctx.validateIcon)))
              ]),
              _: 1
            }, 8, ["class"])) : createCommentVNode51("v-if", true)
          ], 2)
        ], 2)
      ]),
      content: withCtx59(() => [
        createVNode49(_component_el_select_menu, {
          ref: "menuRef",
          data: _ctx.filteredOptions,
          width: _ctx.popperSize,
          "hovering-index": _ctx.states.hoveringIndex,
          "scrollbar-always-on": _ctx.scrollbarAlwaysOn
        }, {
          default: withCtx59((scope) => [
            renderSlot84(_ctx.$slots, "default", normalizeProps3(guardReactiveProps2(scope)))
          ]),
          empty: withCtx59(() => [
            renderSlot84(_ctx.$slots, "empty", {}, () => [
              createElementVNode58("p", {
                class: normalizeClass89(_ctx.nsSelectV2.e("empty"))
              }, toDisplayString52(_ctx.emptyText ? _ctx.emptyText : ""), 3)
            ])
          ]),
          _: 3
        }, 8, ["data", "width", "hovering-index", "scrollbar-always-on"])
      ]),
      _: 3
    }, 8, ["visible", "teleported", "popper-class", "popper-options", "effect", "placement", "transition", "persistent", "onBeforeShow"])
  ], 34)), [
    [_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]
  ]);
}
var Select2 = _export_sfc(_sfc_main110, [["render", _sfc_render27], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/select.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/select-v2/index.mjs
Select2.install = (app) => {
  app.component(Select2.name, Select2);
};
var _Select = Select2;
var ElSelectV2 = _Select;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/src/skeleton2.mjs
import { defineComponent as defineComponent130, toRef as toRef15, unref as unref117, openBlock as openBlock108, createElementBlock as createElementBlock93, mergeProps as mergeProps23, Fragment as Fragment38, renderList as renderList24, renderSlot as renderSlot85, createVNode as createVNode50, normalizeClass as normalizeClass91, createBlock as createBlock63, createCommentVNode as createCommentVNode53, normalizeProps as normalizeProps4 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/src/skeleton.mjs
var skeletonProps = buildProps({
  animated: {
    type: Boolean,
    default: false
  },
  count: {
    type: Number,
    default: 1
  },
  rows: {
    type: Number,
    default: 3
  },
  loading: {
    type: Boolean,
    default: true
  },
  throttle: {
    type: Number
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/src/skeleton-item2.mjs
import { defineComponent as defineComponent129, openBlock as openBlock107, createElementBlock as createElementBlock92, normalizeClass as normalizeClass90, unref as unref116, createBlock as createBlock62, createCommentVNode as createCommentVNode52 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/src/skeleton-item.mjs
var skeletonItemProps = buildProps({
  variant: {
    type: String,
    values: [
      "circle",
      "rect",
      "h1",
      "h3",
      "text",
      "caption",
      "p",
      "image",
      "button"
    ],
    default: "text"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/src/skeleton-item2.mjs
var __default__74 = defineComponent129({
  name: "ElSkeletonItem"
});
var _sfc_main111 = defineComponent129({
  ...__default__74,
  props: skeletonItemProps,
  setup(__props) {
    const ns = useNamespace("skeleton");
    return (_ctx, _cache) => {
      return openBlock107(), createElementBlock92("div", {
        class: normalizeClass90([unref116(ns).e("item"), unref116(ns).e(_ctx.variant)])
      }, [
        _ctx.variant === "image" ? (openBlock107(), createBlock62(unref116(picture_filled_default), { key: 0 })) : createCommentVNode52("v-if", true)
      ], 2);
    };
  }
});
var SkeletonItem = _export_sfc(_sfc_main111, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/skeleton/src/skeleton-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/src/skeleton2.mjs
var __default__75 = defineComponent130({
  name: "ElSkeleton"
});
var _sfc_main112 = defineComponent130({
  ...__default__75,
  props: skeletonProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = useNamespace("skeleton");
    const uiLoading = useThrottleRender(toRef15(props, "loading"), props.throttle);
    expose({
      uiLoading
    });
    return (_ctx, _cache) => {
      return unref117(uiLoading) ? (openBlock108(), createElementBlock93("div", mergeProps23({
        key: 0,
        class: [unref117(ns).b(), unref117(ns).is("animated", _ctx.animated)]
      }, _ctx.$attrs), [
        (openBlock108(true), createElementBlock93(Fragment38, null, renderList24(_ctx.count, (i) => {
          return openBlock108(), createElementBlock93(Fragment38, { key: i }, [
            _ctx.loading ? renderSlot85(_ctx.$slots, "template", { key: i }, () => [
              createVNode50(SkeletonItem, {
                class: normalizeClass91(unref117(ns).is("first")),
                variant: "p"
              }, null, 8, ["class"]),
              (openBlock108(true), createElementBlock93(Fragment38, null, renderList24(_ctx.rows, (item) => {
                return openBlock108(), createBlock63(SkeletonItem, {
                  key: item,
                  class: normalizeClass91([
                    unref117(ns).e("paragraph"),
                    unref117(ns).is("last", item === _ctx.rows && _ctx.rows > 1)
                  ]),
                  variant: "p"
                }, null, 8, ["class"]);
              }), 128))
            ]) : createCommentVNode53("v-if", true)
          ], 64);
        }), 128))
      ], 16)) : renderSlot85(_ctx.$slots, "default", normalizeProps4(mergeProps23({ key: 1 }, _ctx.$attrs)));
    };
  }
});
var Skeleton = _export_sfc(_sfc_main112, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/skeleton/src/skeleton.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/skeleton/index.mjs
var ElSkeleton = withInstall(Skeleton, {
  SkeletonItem
});
var ElSkeletonItem = withNoopInstall(SkeletonItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/slider2.mjs
import { defineComponent as defineComponent133, reactive as reactive25, computed as computed138, toRefs as toRefs12, provide as provide35, openBlock as openBlock110, createElementBlock as createElementBlock95, unref as unref119, normalizeClass as normalizeClass93, createElementVNode as createElementVNode60, normalizeStyle as normalizeStyle44, createVNode as createVNode52, createBlock as createBlock64, createCommentVNode as createCommentVNode54, Fragment as Fragment39, renderList as renderList25 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/constants.mjs
var sliderContextKey = Symbol("sliderContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/slider.mjs
import { isArray as isArray28 } from "@vue/shared";
var sliderProps = buildProps({
  modelValue: {
    type: definePropType([Number, Array]),
    default: 0
  },
  id: {
    type: String,
    default: void 0
  },
  min: {
    type: Number,
    default: 0
  },
  max: {
    type: Number,
    default: 100
  },
  step: {
    type: Number,
    default: 1
  },
  showInput: Boolean,
  showInputControls: {
    type: Boolean,
    default: true
  },
  size: useSizeProp,
  inputSize: useSizeProp,
  showStops: Boolean,
  showTooltip: {
    type: Boolean,
    default: true
  },
  formatTooltip: {
    type: definePropType(Function),
    default: void 0
  },
  disabled: Boolean,
  range: Boolean,
  vertical: Boolean,
  height: String,
  debounce: {
    type: Number,
    default: 300
  },
  label: {
    type: String,
    default: void 0
  },
  rangeStartLabel: {
    type: String,
    default: void 0
  },
  rangeEndLabel: {
    type: String,
    default: void 0
  },
  formatValueText: {
    type: definePropType(Function),
    default: void 0
  },
  tooltipClass: {
    type: String,
    default: void 0
  },
  placement: {
    type: String,
    values: Ee,
    default: "top"
  },
  marks: {
    type: definePropType(Object)
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var isValidValue = (value) => isNumber3(value) || isArray28(value) && value.every(isNumber3);
var sliderEmits = {
  [UPDATE_MODEL_EVENT]: isValidValue,
  [INPUT_EVENT]: isValidValue,
  [CHANGE_EVENT]: isValidValue
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/button2.mjs
import { defineComponent as defineComponent131, reactive as reactive24, toRefs as toRefs11, openBlock as openBlock109, createElementBlock as createElementBlock94, normalizeClass as normalizeClass92, unref as unref118, normalizeStyle as normalizeStyle43, createVNode as createVNode51, withCtx as withCtx60, createElementVNode as createElementVNode59, toDisplayString as toDisplayString53 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/composables/use-lifecycle.mjs
import { ref as ref101, onMounted as onMounted46, nextTick as nextTick35 } from "vue";
var useLifecycle = (props, initData, resetSize) => {
  const sliderWrapper = ref101();
  onMounted46(async () => {
    if (props.range) {
      if (Array.isArray(props.modelValue)) {
        initData.firstValue = Math.max(props.min, props.modelValue[0]);
        initData.secondValue = Math.min(props.max, props.modelValue[1]);
      } else {
        initData.firstValue = props.min;
        initData.secondValue = props.max;
      }
      initData.oldValue = [initData.firstValue, initData.secondValue];
    } else {
      if (typeof props.modelValue !== "number" || Number.isNaN(props.modelValue)) {
        initData.firstValue = props.min;
      } else {
        initData.firstValue = Math.min(props.max, Math.max(props.min, props.modelValue));
      }
      initData.oldValue = initData.firstValue;
    }
    useEventListener(window, "resize", resetSize);
    await nextTick35();
    resetSize();
  });
  return {
    sliderWrapper
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/composables/use-marks.mjs
import { computed as computed133 } from "vue";
var useMarks = (props) => {
  return computed133(() => {
    if (!props.marks) {
      return [];
    }
    const marksKeys = Object.keys(props.marks);
    return marksKeys.map(Number.parseFloat).sort((a2, b2) => a2 - b2).filter((point) => point <= props.max && point >= props.min).map((point) => ({
      point,
      position: (point - props.min) * 100 / (props.max - props.min),
      mark: props.marks[point]
    }));
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/composables/use-slide.mjs
import { shallowRef as shallowRef12, ref as ref102, computed as computed134, nextTick as nextTick36 } from "vue";
var useSlide = (props, initData, emit) => {
  const { form: elForm, formItem: elFormItem } = useFormItem();
  const slider = shallowRef12();
  const firstButton = ref102();
  const secondButton = ref102();
  const buttonRefs = {
    firstButton,
    secondButton
  };
  const sliderDisabled = computed134(() => {
    return props.disabled || (elForm == null ? void 0 : elForm.disabled) || false;
  });
  const minValue = computed134(() => {
    return Math.min(initData.firstValue, initData.secondValue);
  });
  const maxValue = computed134(() => {
    return Math.max(initData.firstValue, initData.secondValue);
  });
  const barSize = computed134(() => {
    return props.range ? `${100 * (maxValue.value - minValue.value) / (props.max - props.min)}%` : `${100 * (initData.firstValue - props.min) / (props.max - props.min)}%`;
  });
  const barStart = computed134(() => {
    return props.range ? `${100 * (minValue.value - props.min) / (props.max - props.min)}%` : "0%";
  });
  const runwayStyle = computed134(() => {
    return props.vertical ? { height: props.height } : {};
  });
  const barStyle = computed134(() => {
    return props.vertical ? {
      height: barSize.value,
      bottom: barStart.value
    } : {
      width: barSize.value,
      left: barStart.value
    };
  });
  const resetSize = () => {
    if (slider.value) {
      initData.sliderSize = slider.value[`client${props.vertical ? "Height" : "Width"}`];
    }
  };
  const getButtonRefByPercent = (percent) => {
    const targetValue = props.min + percent * (props.max - props.min) / 100;
    if (!props.range) {
      return firstButton;
    }
    let buttonRefName;
    if (Math.abs(minValue.value - targetValue) < Math.abs(maxValue.value - targetValue)) {
      buttonRefName = initData.firstValue < initData.secondValue ? "firstButton" : "secondButton";
    } else {
      buttonRefName = initData.firstValue > initData.secondValue ? "firstButton" : "secondButton";
    }
    return buttonRefs[buttonRefName];
  };
  const setPosition = (percent) => {
    const buttonRef = getButtonRefByPercent(percent);
    buttonRef.value.setPosition(percent);
    return buttonRef;
  };
  const setFirstValue = (firstValue) => {
    initData.firstValue = firstValue;
    _emit(props.range ? [minValue.value, maxValue.value] : firstValue);
  };
  const setSecondValue = (secondValue) => {
    initData.secondValue = secondValue;
    if (props.range) {
      _emit([minValue.value, maxValue.value]);
    }
  };
  const _emit = (val) => {
    emit(UPDATE_MODEL_EVENT, val);
    emit(INPUT_EVENT, val);
  };
  const emitChange = async () => {
    await nextTick36();
    emit(CHANGE_EVENT, props.range ? [minValue.value, maxValue.value] : props.modelValue);
  };
  const handleSliderPointerEvent = (event) => {
    var _a2, _b, _c, _d, _e, _f;
    if (sliderDisabled.value || initData.dragging)
      return;
    resetSize();
    let newPercent = 0;
    if (props.vertical) {
      const clientY = (_c = (_b = (_a2 = event.touches) == null ? void 0 : _a2.item(0)) == null ? void 0 : _b.clientY) != null ? _c : event.clientY;
      const sliderOffsetBottom = slider.value.getBoundingClientRect().bottom;
      newPercent = (sliderOffsetBottom - clientY) / initData.sliderSize * 100;
    } else {
      const clientX = (_f = (_e = (_d = event.touches) == null ? void 0 : _d.item(0)) == null ? void 0 : _e.clientX) != null ? _f : event.clientX;
      const sliderOffsetLeft = slider.value.getBoundingClientRect().left;
      newPercent = (clientX - sliderOffsetLeft) / initData.sliderSize * 100;
    }
    if (newPercent < 0 || newPercent > 100)
      return;
    return setPosition(newPercent);
  };
  const onSliderWrapperPrevent = (event) => {
    var _a2, _b;
    if (((_a2 = buttonRefs["firstButton"].value) == null ? void 0 : _a2.dragging) || ((_b = buttonRefs["secondButton"].value) == null ? void 0 : _b.dragging)) {
      event.preventDefault();
    }
  };
  const onSliderDown = async (event) => {
    const buttonRef = handleSliderPointerEvent(event);
    if (buttonRef) {
      await nextTick36();
      buttonRef.value.onButtonDown(event);
    }
  };
  const onSliderClick = (event) => {
    const buttonRef = handleSliderPointerEvent(event);
    if (buttonRef) {
      emitChange();
    }
  };
  return {
    elFormItem,
    slider,
    firstButton,
    secondButton,
    sliderDisabled,
    minValue,
    maxValue,
    runwayStyle,
    barStyle,
    resetSize,
    setPosition,
    emitChange,
    onSliderWrapperPrevent,
    onSliderClick,
    onSliderDown,
    setFirstValue,
    setSecondValue
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/composables/use-slider-button.mjs
import { ref as ref103, computed as computed135, inject as inject61, nextTick as nextTick37, watch as watch64 } from "vue";
var { left, down, right, up, home, end, pageUp, pageDown } = EVENT_CODE;
var useTooltip = (props, formatTooltip, showTooltip) => {
  const tooltip = ref103();
  const tooltipVisible = ref103(false);
  const enableFormat = computed135(() => {
    return formatTooltip.value instanceof Function;
  });
  const formatValue = computed135(() => {
    return enableFormat.value && formatTooltip.value(props.modelValue) || props.modelValue;
  });
  const displayTooltip = debounce_default(() => {
    showTooltip.value && (tooltipVisible.value = true);
  }, 50);
  const hideTooltip = debounce_default(() => {
    showTooltip.value && (tooltipVisible.value = false);
  }, 50);
  return {
    tooltip,
    tooltipVisible,
    formatValue,
    displayTooltip,
    hideTooltip
  };
};
var useSliderButton = (props, initData, emit) => {
  const {
    disabled,
    min: min5,
    max: max5,
    step,
    showTooltip,
    precision,
    sliderSize,
    formatTooltip,
    emitChange,
    resetSize,
    updateDragging
  } = inject61(sliderContextKey);
  const { tooltip, tooltipVisible, formatValue, displayTooltip, hideTooltip } = useTooltip(props, formatTooltip, showTooltip);
  const button = ref103();
  const currentPosition = computed135(() => {
    return `${(props.modelValue - min5.value) / (max5.value - min5.value) * 100}%`;
  });
  const wrapperStyle = computed135(() => {
    return props.vertical ? { bottom: currentPosition.value } : { left: currentPosition.value };
  });
  const handleMouseEnter = () => {
    initData.hovering = true;
    displayTooltip();
  };
  const handleMouseLeave = () => {
    initData.hovering = false;
    if (!initData.dragging) {
      hideTooltip();
    }
  };
  const onButtonDown = (event) => {
    if (disabled.value)
      return;
    event.preventDefault();
    onDragStart(event);
    window.addEventListener("mousemove", onDragging);
    window.addEventListener("touchmove", onDragging);
    window.addEventListener("mouseup", onDragEnd);
    window.addEventListener("touchend", onDragEnd);
    window.addEventListener("contextmenu", onDragEnd);
    button.value.focus();
  };
  const incrementPosition = (amount) => {
    if (disabled.value)
      return;
    initData.newPosition = Number.parseFloat(currentPosition.value) + amount / (max5.value - min5.value) * 100;
    setPosition(initData.newPosition);
    emitChange();
  };
  const onLeftKeyDown = () => {
    incrementPosition(-step.value);
  };
  const onRightKeyDown = () => {
    incrementPosition(step.value);
  };
  const onPageDownKeyDown = () => {
    incrementPosition(-step.value * 4);
  };
  const onPageUpKeyDown = () => {
    incrementPosition(step.value * 4);
  };
  const onHomeKeyDown = () => {
    if (disabled.value)
      return;
    setPosition(0);
    emitChange();
  };
  const onEndKeyDown = () => {
    if (disabled.value)
      return;
    setPosition(100);
    emitChange();
  };
  const onKeyDown = (event) => {
    let isPreventDefault = true;
    if ([left, down].includes(event.key)) {
      onLeftKeyDown();
    } else if ([right, up].includes(event.key)) {
      onRightKeyDown();
    } else if (event.key === home) {
      onHomeKeyDown();
    } else if (event.key === end) {
      onEndKeyDown();
    } else if (event.key === pageDown) {
      onPageDownKeyDown();
    } else if (event.key === pageUp) {
      onPageUpKeyDown();
    } else {
      isPreventDefault = false;
    }
    isPreventDefault && event.preventDefault();
  };
  const getClientXY2 = (event) => {
    let clientX;
    let clientY;
    if (event.type.startsWith("touch")) {
      clientY = event.touches[0].clientY;
      clientX = event.touches[0].clientX;
    } else {
      clientY = event.clientY;
      clientX = event.clientX;
    }
    return {
      clientX,
      clientY
    };
  };
  const onDragStart = (event) => {
    initData.dragging = true;
    initData.isClick = true;
    const { clientX, clientY } = getClientXY2(event);
    if (props.vertical) {
      initData.startY = clientY;
    } else {
      initData.startX = clientX;
    }
    initData.startPosition = Number.parseFloat(currentPosition.value);
    initData.newPosition = initData.startPosition;
  };
  const onDragging = (event) => {
    if (initData.dragging) {
      initData.isClick = false;
      displayTooltip();
      resetSize();
      let diff;
      const { clientX, clientY } = getClientXY2(event);
      if (props.vertical) {
        initData.currentY = clientY;
        diff = (initData.startY - initData.currentY) / sliderSize.value * 100;
      } else {
        initData.currentX = clientX;
        diff = (initData.currentX - initData.startX) / sliderSize.value * 100;
      }
      initData.newPosition = initData.startPosition + diff;
      setPosition(initData.newPosition);
    }
  };
  const onDragEnd = () => {
    if (initData.dragging) {
      setTimeout(() => {
        initData.dragging = false;
        if (!initData.hovering) {
          hideTooltip();
        }
        if (!initData.isClick) {
          setPosition(initData.newPosition);
        }
        emitChange();
      }, 0);
      window.removeEventListener("mousemove", onDragging);
      window.removeEventListener("touchmove", onDragging);
      window.removeEventListener("mouseup", onDragEnd);
      window.removeEventListener("touchend", onDragEnd);
      window.removeEventListener("contextmenu", onDragEnd);
    }
  };
  const setPosition = async (newPosition) => {
    if (newPosition === null || Number.isNaN(+newPosition))
      return;
    if (newPosition < 0) {
      newPosition = 0;
    } else if (newPosition > 100) {
      newPosition = 100;
    }
    const lengthPerStep = 100 / ((max5.value - min5.value) / step.value);
    const steps = Math.round(newPosition / lengthPerStep);
    let value = steps * lengthPerStep * (max5.value - min5.value) * 0.01 + min5.value;
    value = Number.parseFloat(value.toFixed(precision.value));
    if (value !== props.modelValue) {
      emit(UPDATE_MODEL_EVENT, value);
    }
    if (!initData.dragging && props.modelValue !== initData.oldValue) {
      initData.oldValue = props.modelValue;
    }
    await nextTick37();
    initData.dragging && displayTooltip();
    tooltip.value.updatePopper();
  };
  watch64(() => initData.dragging, (val) => {
    updateDragging(val);
  });
  return {
    disabled,
    button,
    tooltip,
    tooltipVisible,
    showTooltip,
    wrapperStyle,
    formatValue,
    handleMouseEnter,
    handleMouseLeave,
    onButtonDown,
    onKeyDown,
    setPosition
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/composables/use-stops.mjs
import { computed as computed136 } from "vue";
var useStops = (props, initData, minValue, maxValue) => {
  const stops = computed136(() => {
    if (!props.showStops || props.min > props.max)
      return [];
    if (props.step === 0) {
      debugWarn("ElSlider", "step should not be 0.");
      return [];
    }
    const stopCount = (props.max - props.min) / props.step;
    const stepWidth = 100 * props.step / (props.max - props.min);
    const result2 = Array.from({ length: stopCount - 1 }).map((_2, index) => (index + 1) * stepWidth);
    if (props.range) {
      return result2.filter((step) => {
        return step < 100 * (minValue.value - props.min) / (props.max - props.min) || step > 100 * (maxValue.value - props.min) / (props.max - props.min);
      });
    } else {
      return result2.filter((step) => step > 100 * (initData.firstValue - props.min) / (props.max - props.min));
    }
  });
  const getStopStyle = (position) => {
    return props.vertical ? { bottom: `${position}%` } : { left: `${position}%` };
  };
  return {
    stops,
    getStopStyle
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/composables/use-watch.mjs
import { watch as watch65 } from "vue";
var useWatch = (props, initData, minValue, maxValue, emit, elFormItem) => {
  const _emit = (val) => {
    emit(UPDATE_MODEL_EVENT, val);
    emit(INPUT_EVENT, val);
  };
  const valueChanged = () => {
    if (props.range) {
      return ![minValue.value, maxValue.value].every((item, index) => item === initData.oldValue[index]);
    } else {
      return props.modelValue !== initData.oldValue;
    }
  };
  const setValues = () => {
    var _a2, _b;
    if (props.min > props.max) {
      throwError("Slider", "min should not be greater than max.");
    }
    const val = props.modelValue;
    if (props.range && Array.isArray(val)) {
      if (val[1] < props.min) {
        _emit([props.min, props.min]);
      } else if (val[0] > props.max) {
        _emit([props.max, props.max]);
      } else if (val[0] < props.min) {
        _emit([props.min, val[1]]);
      } else if (val[1] > props.max) {
        _emit([val[0], props.max]);
      } else {
        initData.firstValue = val[0];
        initData.secondValue = val[1];
        if (valueChanged()) {
          if (props.validateEvent) {
            (_a2 = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a2.call(elFormItem, "change").catch((err) => debugWarn(err));
          }
          initData.oldValue = val.slice();
        }
      }
    } else if (!props.range && typeof val === "number" && !Number.isNaN(val)) {
      if (val < props.min) {
        _emit(props.min);
      } else if (val > props.max) {
        _emit(props.max);
      } else {
        initData.firstValue = val;
        if (valueChanged()) {
          if (props.validateEvent) {
            (_b = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _b.call(elFormItem, "change").catch((err) => debugWarn(err));
          }
          initData.oldValue = val;
        }
      }
    }
  };
  setValues();
  watch65(() => initData.dragging, (val) => {
    if (!val) {
      setValues();
    }
  });
  watch65(() => props.modelValue, (val, oldVal) => {
    if (initData.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every((item, index) => item === oldVal[index]) && initData.firstValue === val[0] && initData.secondValue === val[1]) {
      return;
    }
    setValues();
  }, {
    deep: true
  });
  watch65(() => [props.min, props.max], () => {
    setValues();
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/button.mjs
var sliderButtonProps = buildProps({
  modelValue: {
    type: Number,
    default: 0
  },
  vertical: Boolean,
  tooltipClass: String,
  placement: {
    type: String,
    values: Ee,
    default: "top"
  }
});
var sliderButtonEmits = {
  [UPDATE_MODEL_EVENT]: (value) => isNumber3(value)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/button2.mjs
var _hoisted_155 = ["tabindex"];
var __default__76 = defineComponent131({
  name: "ElSliderButton"
});
var _sfc_main113 = defineComponent131({
  ...__default__76,
  props: sliderButtonProps,
  emits: sliderButtonEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const ns = useNamespace("slider");
    const initData = reactive24({
      hovering: false,
      dragging: false,
      isClick: false,
      startX: 0,
      currentX: 0,
      startY: 0,
      currentY: 0,
      startPosition: 0,
      newPosition: 0,
      oldValue: props.modelValue
    });
    const {
      disabled,
      button,
      tooltip,
      showTooltip,
      tooltipVisible,
      wrapperStyle,
      formatValue,
      handleMouseEnter,
      handleMouseLeave,
      onButtonDown,
      onKeyDown,
      setPosition
    } = useSliderButton(props, initData, emit);
    const { hovering, dragging } = toRefs11(initData);
    expose({
      onButtonDown,
      onKeyDown,
      setPosition,
      hovering,
      dragging
    });
    return (_ctx, _cache) => {
      return openBlock109(), createElementBlock94("div", {
        ref_key: "button",
        ref: button,
        class: normalizeClass92([unref118(ns).e("button-wrapper"), { hover: unref118(hovering), dragging: unref118(dragging) }]),
        style: normalizeStyle43(unref118(wrapperStyle)),
        tabindex: unref118(disabled) ? -1 : 0,
        onMouseenter: _cache[0] || (_cache[0] = (...args) => unref118(handleMouseEnter) && unref118(handleMouseEnter)(...args)),
        onMouseleave: _cache[1] || (_cache[1] = (...args) => unref118(handleMouseLeave) && unref118(handleMouseLeave)(...args)),
        onMousedown: _cache[2] || (_cache[2] = (...args) => unref118(onButtonDown) && unref118(onButtonDown)(...args)),
        onTouchstart: _cache[3] || (_cache[3] = (...args) => unref118(onButtonDown) && unref118(onButtonDown)(...args)),
        onFocus: _cache[4] || (_cache[4] = (...args) => unref118(handleMouseEnter) && unref118(handleMouseEnter)(...args)),
        onBlur: _cache[5] || (_cache[5] = (...args) => unref118(handleMouseLeave) && unref118(handleMouseLeave)(...args)),
        onKeydown: _cache[6] || (_cache[6] = (...args) => unref118(onKeyDown) && unref118(onKeyDown)(...args))
      }, [
        createVNode51(unref118(ElTooltip), {
          ref_key: "tooltip",
          ref: tooltip,
          visible: unref118(tooltipVisible),
          placement: _ctx.placement,
          "fallback-placements": ["top", "bottom", "right", "left"],
          "stop-popper-mouse-event": false,
          "popper-class": _ctx.tooltipClass,
          disabled: !unref118(showTooltip),
          persistent: ""
        }, {
          content: withCtx60(() => [
            createElementVNode59("span", null, toDisplayString53(unref118(formatValue)), 1)
          ]),
          default: withCtx60(() => [
            createElementVNode59("div", {
              class: normalizeClass92([unref118(ns).e("button"), { hover: unref118(hovering), dragging: unref118(dragging) }])
            }, null, 2)
          ]),
          _: 1
        }, 8, ["visible", "placement", "popper-class", "disabled"])
      ], 46, _hoisted_155);
    };
  }
});
var SliderButton = _export_sfc(_sfc_main113, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/slider/src/button.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/marker.mjs
import { defineComponent as defineComponent132, computed as computed137, h as h12 } from "vue";
import { isString as isString30 } from "@vue/shared";
var sliderMarkerProps = buildProps({
  mark: {
    type: definePropType([String, Object]),
    default: void 0
  }
});
var SliderMarker = defineComponent132({
  name: "ElSliderMarker",
  props: sliderMarkerProps,
  setup(props) {
    const ns = useNamespace("slider");
    const label = computed137(() => {
      return isString30(props.mark) ? props.mark : props.mark.label;
    });
    const style = computed137(() => isString30(props.mark) ? void 0 : props.mark.style);
    return () => h12("div", {
      class: ns.e("marks-text"),
      style: style.value
    }, label.value);
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/src/slider2.mjs
var _hoisted_156 = ["id", "role", "aria-label", "aria-labelledby"];
var _hoisted_235 = { key: 1 };
var __default__77 = defineComponent133({
  name: "ElSlider"
});
var _sfc_main114 = defineComponent133({
  ...__default__77,
  props: sliderProps,
  emits: sliderEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const ns = useNamespace("slider");
    const { t } = useLocale();
    const initData = reactive25({
      firstValue: 0,
      secondValue: 0,
      oldValue: 0,
      dragging: false,
      sliderSize: 1
    });
    const {
      elFormItem,
      slider,
      firstButton,
      secondButton,
      sliderDisabled,
      minValue,
      maxValue,
      runwayStyle,
      barStyle,
      resetSize,
      emitChange,
      onSliderWrapperPrevent,
      onSliderClick,
      onSliderDown,
      setFirstValue,
      setSecondValue
    } = useSlide(props, initData, emit);
    const { stops, getStopStyle } = useStops(props, initData, minValue, maxValue);
    const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {
      formItemContext: elFormItem
    });
    const sliderWrapperSize = useFormSize();
    const sliderInputSize = computed138(() => props.inputSize || sliderWrapperSize.value);
    const groupLabel = computed138(() => {
      return props.label || t("el.slider.defaultLabel", {
        min: props.min,
        max: props.max
      });
    });
    const firstButtonLabel = computed138(() => {
      if (props.range) {
        return props.rangeStartLabel || t("el.slider.defaultRangeStartLabel");
      } else {
        return groupLabel.value;
      }
    });
    const firstValueText = computed138(() => {
      return props.formatValueText ? props.formatValueText(firstValue.value) : `${firstValue.value}`;
    });
    const secondButtonLabel = computed138(() => {
      return props.rangeEndLabel || t("el.slider.defaultRangeEndLabel");
    });
    const secondValueText = computed138(() => {
      return props.formatValueText ? props.formatValueText(secondValue.value) : `${secondValue.value}`;
    });
    const sliderKls = computed138(() => [
      ns.b(),
      ns.m(sliderWrapperSize.value),
      ns.is("vertical", props.vertical),
      { [ns.m("with-input")]: props.showInput }
    ]);
    const markList = useMarks(props);
    useWatch(props, initData, minValue, maxValue, emit, elFormItem);
    const precision = computed138(() => {
      const precisions = [props.min, props.max, props.step].map((item) => {
        const decimal = `${item}`.split(".")[1];
        return decimal ? decimal.length : 0;
      });
      return Math.max.apply(null, precisions);
    });
    const { sliderWrapper } = useLifecycle(props, initData, resetSize);
    const { firstValue, secondValue, sliderSize } = toRefs12(initData);
    const updateDragging = (val) => {
      initData.dragging = val;
    };
    provide35(sliderContextKey, {
      ...toRefs12(props),
      sliderSize,
      disabled: sliderDisabled,
      precision,
      emitChange,
      resetSize,
      updateDragging
    });
    expose({
      onSliderClick
    });
    return (_ctx, _cache) => {
      var _a2, _b;
      return openBlock110(), createElementBlock95("div", {
        id: _ctx.range ? unref119(inputId) : void 0,
        ref_key: "sliderWrapper",
        ref: sliderWrapper,
        class: normalizeClass93(unref119(sliderKls)),
        role: _ctx.range ? "group" : void 0,
        "aria-label": _ctx.range && !unref119(isLabeledByFormItem) ? unref119(groupLabel) : void 0,
        "aria-labelledby": _ctx.range && unref119(isLabeledByFormItem) ? (_a2 = unref119(elFormItem)) == null ? void 0 : _a2.labelId : void 0,
        onTouchstart: _cache[2] || (_cache[2] = (...args) => unref119(onSliderWrapperPrevent) && unref119(onSliderWrapperPrevent)(...args)),
        onTouchmove: _cache[3] || (_cache[3] = (...args) => unref119(onSliderWrapperPrevent) && unref119(onSliderWrapperPrevent)(...args))
      }, [
        createElementVNode60("div", {
          ref_key: "slider",
          ref: slider,
          class: normalizeClass93([
            unref119(ns).e("runway"),
            { "show-input": _ctx.showInput && !_ctx.range },
            unref119(ns).is("disabled", unref119(sliderDisabled))
          ]),
          style: normalizeStyle44(unref119(runwayStyle)),
          onMousedown: _cache[0] || (_cache[0] = (...args) => unref119(onSliderDown) && unref119(onSliderDown)(...args)),
          onTouchstart: _cache[1] || (_cache[1] = (...args) => unref119(onSliderDown) && unref119(onSliderDown)(...args))
        }, [
          createElementVNode60("div", {
            class: normalizeClass93(unref119(ns).e("bar")),
            style: normalizeStyle44(unref119(barStyle))
          }, null, 6),
          createVNode52(SliderButton, {
            id: !_ctx.range ? unref119(inputId) : void 0,
            ref_key: "firstButton",
            ref: firstButton,
            "model-value": unref119(firstValue),
            vertical: _ctx.vertical,
            "tooltip-class": _ctx.tooltipClass,
            placement: _ctx.placement,
            role: "slider",
            "aria-label": _ctx.range || !unref119(isLabeledByFormItem) ? unref119(firstButtonLabel) : void 0,
            "aria-labelledby": !_ctx.range && unref119(isLabeledByFormItem) ? (_b = unref119(elFormItem)) == null ? void 0 : _b.labelId : void 0,
            "aria-valuemin": _ctx.min,
            "aria-valuemax": _ctx.range ? unref119(secondValue) : _ctx.max,
            "aria-valuenow": unref119(firstValue),
            "aria-valuetext": unref119(firstValueText),
            "aria-orientation": _ctx.vertical ? "vertical" : "horizontal",
            "aria-disabled": unref119(sliderDisabled),
            "onUpdate:modelValue": unref119(setFirstValue)
          }, null, 8, ["id", "model-value", "vertical", "tooltip-class", "placement", "aria-label", "aria-labelledby", "aria-valuemin", "aria-valuemax", "aria-valuenow", "aria-valuetext", "aria-orientation", "aria-disabled", "onUpdate:modelValue"]),
          _ctx.range ? (openBlock110(), createBlock64(SliderButton, {
            key: 0,
            ref_key: "secondButton",
            ref: secondButton,
            "model-value": unref119(secondValue),
            vertical: _ctx.vertical,
            "tooltip-class": _ctx.tooltipClass,
            placement: _ctx.placement,
            role: "slider",
            "aria-label": unref119(secondButtonLabel),
            "aria-valuemin": unref119(firstValue),
            "aria-valuemax": _ctx.max,
            "aria-valuenow": unref119(secondValue),
            "aria-valuetext": unref119(secondValueText),
            "aria-orientation": _ctx.vertical ? "vertical" : "horizontal",
            "aria-disabled": unref119(sliderDisabled),
            "onUpdate:modelValue": unref119(setSecondValue)
          }, null, 8, ["model-value", "vertical", "tooltip-class", "placement", "aria-label", "aria-valuemin", "aria-valuemax", "aria-valuenow", "aria-valuetext", "aria-orientation", "aria-disabled", "onUpdate:modelValue"])) : createCommentVNode54("v-if", true),
          _ctx.showStops ? (openBlock110(), createElementBlock95("div", _hoisted_235, [
            (openBlock110(true), createElementBlock95(Fragment39, null, renderList25(unref119(stops), (item, key) => {
              return openBlock110(), createElementBlock95("div", {
                key,
                class: normalizeClass93(unref119(ns).e("stop")),
                style: normalizeStyle44(unref119(getStopStyle)(item))
              }, null, 6);
            }), 128))
          ])) : createCommentVNode54("v-if", true),
          unref119(markList).length > 0 ? (openBlock110(), createElementBlock95(Fragment39, { key: 2 }, [
            createElementVNode60("div", null, [
              (openBlock110(true), createElementBlock95(Fragment39, null, renderList25(unref119(markList), (item, key) => {
                return openBlock110(), createElementBlock95("div", {
                  key,
                  style: normalizeStyle44(unref119(getStopStyle)(item.position)),
                  class: normalizeClass93([unref119(ns).e("stop"), unref119(ns).e("marks-stop")])
                }, null, 6);
              }), 128))
            ]),
            createElementVNode60("div", {
              class: normalizeClass93(unref119(ns).e("marks"))
            }, [
              (openBlock110(true), createElementBlock95(Fragment39, null, renderList25(unref119(markList), (item, key) => {
                return openBlock110(), createBlock64(unref119(SliderMarker), {
                  key,
                  mark: item.mark,
                  style: normalizeStyle44(unref119(getStopStyle)(item.position))
                }, null, 8, ["mark", "style"]);
              }), 128))
            ], 2)
          ], 64)) : createCommentVNode54("v-if", true)
        ], 38),
        _ctx.showInput && !_ctx.range ? (openBlock110(), createBlock64(unref119(ElInputNumber), {
          key: 0,
          ref: "input",
          "model-value": unref119(firstValue),
          class: normalizeClass93(unref119(ns).e("input")),
          step: _ctx.step,
          disabled: unref119(sliderDisabled),
          controls: _ctx.showInputControls,
          min: _ctx.min,
          max: _ctx.max,
          debounce: _ctx.debounce,
          size: unref119(sliderInputSize),
          "onUpdate:modelValue": unref119(setFirstValue),
          onChange: unref119(emitChange)
        }, null, 8, ["model-value", "class", "step", "disabled", "controls", "min", "max", "debounce", "size", "onUpdate:modelValue", "onChange"])) : createCommentVNode54("v-if", true)
      ], 42, _hoisted_156);
    };
  }
});
var Slider = _export_sfc(_sfc_main114, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/slider/src/slider.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/slider/index.mjs
var ElSlider = withInstall(Slider);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/space/src/space.mjs
import { isVNode as isVNode5, defineComponent as defineComponent135, createVNode as createVNode53, renderSlot as renderSlot87, createTextVNode as createTextVNode21 } from "vue";
import { isString as isString31, isArray as isArray30 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/space/src/item.mjs
import { defineComponent as defineComponent134, computed as computed139, h as h13, renderSlot as renderSlot86 } from "vue";
var spaceItemProps = buildProps({
  prefixCls: {
    type: String
  }
});
var SpaceItem = defineComponent134({
  name: "ElSpaceItem",
  props: spaceItemProps,
  setup(props, { slots }) {
    const ns = useNamespace("space");
    const classes = computed139(() => `${props.prefixCls || ns.b()}__item`);
    return () => h13("div", { class: classes.value }, renderSlot86(slots, "default"));
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/space/src/use-space.mjs
import { computed as computed140, ref as ref104, watchEffect as watchEffect9 } from "vue";
import { isArray as isArray29 } from "@vue/shared";
var SIZE_MAP = {
  small: 8,
  default: 12,
  large: 16
};
function useSpace(props) {
  const ns = useNamespace("space");
  const classes = computed140(() => [ns.b(), ns.m(props.direction), props.class]);
  const horizontalSize = ref104(0);
  const verticalSize = ref104(0);
  const containerStyle = computed140(() => {
    const wrapKls = props.wrap || props.fill ? { flexWrap: "wrap", marginBottom: `-${verticalSize.value}px` } : {};
    const alignment = {
      alignItems: props.alignment
    };
    return [wrapKls, alignment, props.style];
  });
  const itemStyle = computed140(() => {
    const itemBaseStyle = {
      paddingBottom: `${verticalSize.value}px`,
      marginRight: `${horizontalSize.value}px`
    };
    const fillStyle = props.fill ? { flexGrow: 1, minWidth: `${props.fillRatio}%` } : {};
    return [itemBaseStyle, fillStyle];
  });
  watchEffect9(() => {
    const { size: size4 = "small", wrap: wrap2, direction: dir, fill: fill2 } = props;
    if (isArray29(size4)) {
      const [h30 = 0, v2 = 0] = size4;
      horizontalSize.value = h30;
      verticalSize.value = v2;
    } else {
      let val;
      if (isNumber3(size4)) {
        val = size4;
      } else {
        val = SIZE_MAP[size4 || "small"] || SIZE_MAP.small;
      }
      if ((wrap2 || fill2) && dir === "horizontal") {
        horizontalSize.value = verticalSize.value = val;
      } else {
        if (dir === "horizontal") {
          horizontalSize.value = val;
          verticalSize.value = 0;
        } else {
          verticalSize.value = val;
          horizontalSize.value = 0;
        }
      }
    }
  });
  return {
    classes,
    containerStyle,
    itemStyle
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/space/src/space.mjs
var spaceProps = buildProps({
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  class: {
    type: definePropType([
      String,
      Object,
      Array
    ]),
    default: ""
  },
  style: {
    type: definePropType([String, Array, Object]),
    default: ""
  },
  alignment: {
    type: definePropType(String),
    default: "center"
  },
  prefixCls: {
    type: String
  },
  spacer: {
    type: definePropType([Object, String, Number, Array]),
    default: null,
    validator: (val) => isVNode5(val) || isNumber3(val) || isString31(val)
  },
  wrap: Boolean,
  fill: Boolean,
  fillRatio: {
    type: Number,
    default: 100
  },
  size: {
    type: [String, Array, Number],
    values: componentSizes,
    validator: (val) => {
      return isNumber3(val) || isArray30(val) && val.length === 2 && val.every(isNumber3);
    }
  }
});
var Space = defineComponent135({
  name: "ElSpace",
  props: spaceProps,
  setup(props, { slots }) {
    const { classes, containerStyle, itemStyle } = useSpace(props);
    function extractChildren(children, parentKey = "", extractedChildren = []) {
      const { prefixCls } = props;
      children.forEach((child, loopKey) => {
        if (isFragment(child)) {
          if (isArray30(child.children)) {
            child.children.forEach((nested, key) => {
              if (isFragment(nested) && isArray30(nested.children)) {
                extractChildren(nested.children, `${parentKey + key}-`, extractedChildren);
              } else {
                extractedChildren.push(createVNode53(SpaceItem, {
                  style: itemStyle.value,
                  prefixCls,
                  key: `nested-${parentKey + key}`
                }, {
                  default: () => [nested]
                }, PatchFlags.PROPS | PatchFlags.STYLE, ["style", "prefixCls"]));
              }
            });
          }
        } else if (isValidElementNode(child)) {
          extractedChildren.push(createVNode53(SpaceItem, {
            style: itemStyle.value,
            prefixCls,
            key: `LoopKey${parentKey + loopKey}`
          }, {
            default: () => [child]
          }, PatchFlags.PROPS | PatchFlags.STYLE, ["style", "prefixCls"]));
        }
      });
      return extractedChildren;
    }
    return () => {
      var _a2;
      const { spacer, direction: direction2 } = props;
      const children = renderSlot87(slots, "default", { key: 0 }, () => []);
      if (((_a2 = children.children) != null ? _a2 : []).length === 0)
        return null;
      if (isArray30(children.children)) {
        let extractedChildren = extractChildren(children.children);
        if (spacer) {
          const len = extractedChildren.length - 1;
          extractedChildren = extractedChildren.reduce((acc, child, idx) => {
            const children2 = [...acc, child];
            if (idx !== len) {
              children2.push(createVNode53("span", {
                style: [
                  itemStyle.value,
                  direction2 === "vertical" ? "width: 100%" : null
                ],
                key: idx
              }, [
                isVNode5(spacer) ? spacer : createTextVNode21(spacer, PatchFlags.TEXT)
              ], PatchFlags.STYLE));
            }
            return children2;
          }, []);
        }
        return createVNode53("div", {
          class: classes.value,
          style: containerStyle.value
        }, extractedChildren, PatchFlags.STYLE | PatchFlags.CLASS);
      }
      return children.children;
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/space/index.mjs
var ElSpace = withInstall(Space);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/statistic/src/statistic2.mjs
import { defineComponent as defineComponent136, computed as computed141, openBlock as openBlock111, createElementBlock as createElementBlock96, normalizeClass as normalizeClass94, unref as unref120, renderSlot as renderSlot88, createTextVNode as createTextVNode22, toDisplayString as toDisplayString54, createCommentVNode as createCommentVNode55, createElementVNode as createElementVNode61, normalizeStyle as normalizeStyle45 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/statistic/src/statistic.mjs
var statisticProps = buildProps({
  decimalSeparator: {
    type: String,
    default: "."
  },
  groupSeparator: {
    type: String,
    default: ","
  },
  precision: {
    type: Number,
    default: 0
  },
  formatter: Function,
  value: {
    type: definePropType([Number, Object]),
    default: 0
  },
  prefix: String,
  suffix: String,
  title: String,
  valueStyle: {
    type: definePropType([String, Object, Array])
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/statistic/src/statistic2.mjs
import { isFunction as isFunction20 } from "@vue/shared";
var __default__78 = defineComponent136({
  name: "ElStatistic"
});
var _sfc_main115 = defineComponent136({
  ...__default__78,
  props: statisticProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = useNamespace("statistic");
    const displayValue = computed141(() => {
      const { value, formatter: formatter2, precision, decimalSeparator, groupSeparator } = props;
      if (isFunction20(formatter2))
        return formatter2(value);
      if (!isNumber3(value))
        return value;
      let [integer4, decimal = ""] = String(value).split(".");
      decimal = decimal.padEnd(precision, "0").slice(0, precision > 0 ? precision : 0);
      integer4 = integer4.replace(/\B(?=(\d{3})+(?!\d))/g, groupSeparator);
      return [integer4, decimal].join(decimal ? decimalSeparator : "");
    });
    expose({
      displayValue
    });
    return (_ctx, _cache) => {
      return openBlock111(), createElementBlock96("div", {
        class: normalizeClass94(unref120(ns).b())
      }, [
        _ctx.$slots.title || _ctx.title ? (openBlock111(), createElementBlock96("div", {
          key: 0,
          class: normalizeClass94(unref120(ns).e("head"))
        }, [
          renderSlot88(_ctx.$slots, "title", {}, () => [
            createTextVNode22(toDisplayString54(_ctx.title), 1)
          ])
        ], 2)) : createCommentVNode55("v-if", true),
        createElementVNode61("div", {
          class: normalizeClass94(unref120(ns).e("content"))
        }, [
          _ctx.$slots.prefix || _ctx.prefix ? (openBlock111(), createElementBlock96("div", {
            key: 0,
            class: normalizeClass94(unref120(ns).e("prefix"))
          }, [
            renderSlot88(_ctx.$slots, "prefix", {}, () => [
              createElementVNode61("span", null, toDisplayString54(_ctx.prefix), 1)
            ])
          ], 2)) : createCommentVNode55("v-if", true),
          createElementVNode61("span", {
            class: normalizeClass94(unref120(ns).e("number")),
            style: normalizeStyle45(_ctx.valueStyle)
          }, toDisplayString54(unref120(displayValue)), 7),
          _ctx.$slots.suffix || _ctx.suffix ? (openBlock111(), createElementBlock96("div", {
            key: 1,
            class: normalizeClass94(unref120(ns).e("suffix"))
          }, [
            renderSlot88(_ctx.$slots, "suffix", {}, () => [
              createElementVNode61("span", null, toDisplayString54(_ctx.suffix), 1)
            ])
          ], 2)) : createCommentVNode55("v-if", true)
        ], 2)
      ], 2);
    };
  }
});
var Statistic = _export_sfc(_sfc_main115, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/statistic/src/statistic.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/statistic/index.mjs
var ElStatistic = withInstall(Statistic);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/countdown/src/countdown2.mjs
import { defineComponent as defineComponent137, ref as ref105, computed as computed142, watch as watch66, onBeforeUnmount as onBeforeUnmount21, openBlock as openBlock112, createBlock as createBlock65, unref as unref121, createSlots as createSlots6, renderList as renderList26, withCtx as withCtx61, renderSlot as renderSlot89 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/countdown/src/countdown.mjs
var countdownProps = buildProps({
  format: {
    type: String,
    default: "HH:mm:ss"
  },
  prefix: String,
  suffix: String,
  title: String,
  value: {
    type: definePropType([Number, Object]),
    default: 0
  },
  valueStyle: {
    type: definePropType([String, Object, Array])
  }
});
var countdownEmits = {
  finish: () => true,
  [CHANGE_EVENT]: (value) => isNumber3(value)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/countdown/src/utils.mjs
var timeUnits2 = [
  ["Y", 1e3 * 60 * 60 * 24 * 365],
  ["M", 1e3 * 60 * 60 * 24 * 30],
  ["D", 1e3 * 60 * 60 * 24],
  ["H", 1e3 * 60 * 60],
  ["m", 1e3 * 60],
  ["s", 1e3],
  ["S", 1]
];
var getTime = (value) => {
  return isNumber3(value) ? new Date(value).getTime() : value.valueOf();
};
var formatTime = (timestamp2, format2) => {
  let timeLeft = timestamp2;
  const escapeRegex = /\[([^\]]*)]/g;
  const replacedText = timeUnits2.reduce((current, [name, unit3]) => {
    const replaceRegex = new RegExp(`${name}+(?![^\\[\\]]*\\])`, "g");
    if (replaceRegex.test(current)) {
      const value = Math.floor(timeLeft / unit3);
      timeLeft -= value * unit3;
      return current.replace(replaceRegex, (match) => String(value).padStart(match.length, "0"));
    }
    return current;
  }, format2);
  return replacedText.replace(escapeRegex, "$1");
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/countdown/src/countdown2.mjs
var __default__79 = defineComponent137({
  name: "ElCountdown"
});
var _sfc_main116 = defineComponent137({
  ...__default__79,
  props: countdownProps,
  emits: countdownEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    let timer;
    const rawValue = ref105(getTime(props.value) - Date.now());
    const displayValue = computed142(() => formatTime(rawValue.value, props.format));
    const formatter2 = (val) => formatTime(val, props.format);
    const stopTimer = () => {
      if (timer) {
        cAF(timer);
        timer = void 0;
      }
    };
    const startTimer = () => {
      const timestamp2 = getTime(props.value);
      const frameFunc = () => {
        let diff = timestamp2 - Date.now();
        emit("change", diff);
        if (diff <= 0) {
          diff = 0;
          stopTimer();
          emit("finish");
        } else {
          timer = rAF(frameFunc);
        }
        rawValue.value = diff;
      };
      timer = rAF(frameFunc);
    };
    watch66(() => [props.value, props.format], () => {
      stopTimer();
      startTimer();
    }, {
      immediate: true
    });
    onBeforeUnmount21(() => {
      stopTimer();
    });
    expose({
      displayValue
    });
    return (_ctx, _cache) => {
      return openBlock112(), createBlock65(unref121(ElStatistic), {
        value: rawValue.value,
        title: _ctx.title,
        prefix: _ctx.prefix,
        suffix: _ctx.suffix,
        "value-style": _ctx.valueStyle,
        formatter: formatter2
      }, createSlots6({ _: 2 }, [
        renderList26(_ctx.$slots, (_2, name) => {
          return {
            name,
            fn: withCtx61(() => [
              renderSlot89(_ctx.$slots, name)
            ])
          };
        })
      ]), 1032, ["value", "title", "prefix", "suffix", "value-style"]);
    };
  }
});
var Countdown = _export_sfc(_sfc_main116, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/countdown/src/countdown.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/countdown/index.mjs
var ElCountdown = withInstall(Countdown);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/src/steps2.mjs
import { defineComponent as defineComponent138, getCurrentInstance as getCurrentInstance33, watch as watch67, provide as provide36, openBlock as openBlock113, createElementBlock as createElementBlock97, normalizeClass as normalizeClass95, unref as unref122, renderSlot as renderSlot90 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/src/steps.mjs
var stepsProps = buildProps({
  space: {
    type: [Number, String],
    default: ""
  },
  active: {
    type: Number,
    default: 0
  },
  direction: {
    type: String,
    default: "horizontal",
    values: ["horizontal", "vertical"]
  },
  alignCenter: {
    type: Boolean
  },
  simple: {
    type: Boolean
  },
  finishStatus: {
    type: String,
    values: ["wait", "process", "finish", "error", "success"],
    default: "finish"
  },
  processStatus: {
    type: String,
    values: ["wait", "process", "finish", "error", "success"],
    default: "process"
  }
});
var stepsEmits = {
  [CHANGE_EVENT]: (newVal, oldVal) => [newVal, oldVal].every(isNumber3)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/src/steps2.mjs
var __default__80 = defineComponent138({
  name: "ElSteps"
});
var _sfc_main117 = defineComponent138({
  ...__default__80,
  props: stepsProps,
  emits: stepsEmits,
  setup(__props, { emit }) {
    const props = __props;
    const ns = useNamespace("steps");
    const {
      children: steps,
      addChild: addStep,
      removeChild: removeStep
    } = useOrderedChildren(getCurrentInstance33(), "ElStep");
    watch67(steps, () => {
      steps.value.forEach((instance, index) => {
        instance.setIndex(index);
      });
    });
    provide36("ElSteps", { props, steps, addStep, removeStep });
    watch67(() => props.active, (newVal, oldVal) => {
      emit(CHANGE_EVENT, newVal, oldVal);
    });
    return (_ctx, _cache) => {
      return openBlock113(), createElementBlock97("div", {
        class: normalizeClass95([unref122(ns).b(), unref122(ns).m(_ctx.simple ? "simple" : _ctx.direction)])
      }, [
        renderSlot90(_ctx.$slots, "default")
      ], 2);
    };
  }
});
var Steps = _export_sfc(_sfc_main117, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/steps/src/steps.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/src/item2.mjs
import { defineComponent as defineComponent139, ref as ref106, inject as inject62, getCurrentInstance as getCurrentInstance34, onMounted as onMounted47, watch as watch68, onBeforeUnmount as onBeforeUnmount22, computed as computed143, reactive as reactive26, openBlock as openBlock114, createElementBlock as createElementBlock98, normalizeStyle as normalizeStyle46, unref as unref123, normalizeClass as normalizeClass96, createCommentVNode as createCommentVNode56, createElementVNode as createElementVNode62, renderSlot as renderSlot91, createBlock as createBlock66, withCtx as withCtx62, resolveDynamicComponent as resolveDynamicComponent28, createVNode as createVNode54, toDisplayString as toDisplayString55, createTextVNode as createTextVNode23 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/src/item.mjs
var stepProps = buildProps({
  title: {
    type: String,
    default: ""
  },
  icon: {
    type: iconPropType
  },
  description: {
    type: String,
    default: ""
  },
  status: {
    type: String,
    values: ["", "wait", "process", "finish", "error", "success"],
    default: ""
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/src/item2.mjs
var __default__81 = defineComponent139({
  name: "ElStep"
});
var _sfc_main118 = defineComponent139({
  ...__default__81,
  props: stepProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("step");
    const index = ref106(-1);
    const lineStyle = ref106({});
    const internalStatus = ref106("");
    const parent2 = inject62("ElSteps");
    const currentInstance = getCurrentInstance34();
    onMounted47(() => {
      watch68([
        () => parent2.props.active,
        () => parent2.props.processStatus,
        () => parent2.props.finishStatus
      ], ([active]) => {
        updateStatus(active);
      }, { immediate: true });
    });
    onBeforeUnmount22(() => {
      parent2.removeStep(stepItemState.uid);
    });
    const currentStatus = computed143(() => {
      return props.status || internalStatus.value;
    });
    const prevStatus = computed143(() => {
      const prevStep = parent2.steps.value[index.value - 1];
      return prevStep ? prevStep.currentStatus : "wait";
    });
    const isCenter = computed143(() => {
      return parent2.props.alignCenter;
    });
    const isVertical = computed143(() => {
      return parent2.props.direction === "vertical";
    });
    const isSimple = computed143(() => {
      return parent2.props.simple;
    });
    const stepsCount = computed143(() => {
      return parent2.steps.value.length;
    });
    const isLast = computed143(() => {
      var _a2;
      return ((_a2 = parent2.steps.value[stepsCount.value - 1]) == null ? void 0 : _a2.uid) === (currentInstance == null ? void 0 : currentInstance.uid);
    });
    const space = computed143(() => {
      return isSimple.value ? "" : parent2.props.space;
    });
    const containerKls = computed143(() => {
      return [
        ns.b(),
        ns.is(isSimple.value ? "simple" : parent2.props.direction),
        ns.is("flex", isLast.value && !space.value && !isCenter.value),
        ns.is("center", isCenter.value && !isVertical.value && !isSimple.value)
      ];
    });
    const style = computed143(() => {
      const style2 = {
        flexBasis: isNumber3(space.value) ? `${space.value}px` : space.value ? space.value : `${100 / (stepsCount.value - (isCenter.value ? 0 : 1))}%`
      };
      if (isVertical.value)
        return style2;
      if (isLast.value) {
        style2.maxWidth = `${100 / stepsCount.value}%`;
      }
      return style2;
    });
    const setIndex = (val) => {
      index.value = val;
    };
    const calcProgress = (status) => {
      const isWait = status === "wait";
      const style2 = {
        transitionDelay: `${isWait ? "-" : ""}${150 * index.value}ms`
      };
      const step = status === parent2.props.processStatus || isWait ? 0 : 100;
      style2.borderWidth = step && !isSimple.value ? "1px" : 0;
      style2[parent2.props.direction === "vertical" ? "height" : "width"] = `${step}%`;
      lineStyle.value = style2;
    };
    const updateStatus = (activeIndex) => {
      if (activeIndex > index.value) {
        internalStatus.value = parent2.props.finishStatus;
      } else if (activeIndex === index.value && prevStatus.value !== "error") {
        internalStatus.value = parent2.props.processStatus;
      } else {
        internalStatus.value = "wait";
      }
      const prevChild = parent2.steps.value[index.value - 1];
      if (prevChild)
        prevChild.calcProgress(internalStatus.value);
    };
    const stepItemState = reactive26({
      uid: currentInstance.uid,
      currentStatus,
      setIndex,
      calcProgress
    });
    parent2.addStep(stepItemState);
    return (_ctx, _cache) => {
      return openBlock114(), createElementBlock98("div", {
        style: normalizeStyle46(unref123(style)),
        class: normalizeClass96(unref123(containerKls))
      }, [
        createCommentVNode56(" icon & line "),
        createElementVNode62("div", {
          class: normalizeClass96([unref123(ns).e("head"), unref123(ns).is(unref123(currentStatus))])
        }, [
          !unref123(isSimple) ? (openBlock114(), createElementBlock98("div", {
            key: 0,
            class: normalizeClass96(unref123(ns).e("line"))
          }, [
            createElementVNode62("i", {
              class: normalizeClass96(unref123(ns).e("line-inner")),
              style: normalizeStyle46(lineStyle.value)
            }, null, 6)
          ], 2)) : createCommentVNode56("v-if", true),
          createElementVNode62("div", {
            class: normalizeClass96([unref123(ns).e("icon"), unref123(ns).is(_ctx.icon || _ctx.$slots.icon ? "icon" : "text")])
          }, [
            renderSlot91(_ctx.$slots, "icon", {}, () => [
              _ctx.icon ? (openBlock114(), createBlock66(unref123(ElIcon), {
                key: 0,
                class: normalizeClass96(unref123(ns).e("icon-inner"))
              }, {
                default: withCtx62(() => [
                  (openBlock114(), createBlock66(resolveDynamicComponent28(_ctx.icon)))
                ]),
                _: 1
              }, 8, ["class"])) : unref123(currentStatus) === "success" ? (openBlock114(), createBlock66(unref123(ElIcon), {
                key: 1,
                class: normalizeClass96([unref123(ns).e("icon-inner"), unref123(ns).is("status")])
              }, {
                default: withCtx62(() => [
                  createVNode54(unref123(check_default))
                ]),
                _: 1
              }, 8, ["class"])) : unref123(currentStatus) === "error" ? (openBlock114(), createBlock66(unref123(ElIcon), {
                key: 2,
                class: normalizeClass96([unref123(ns).e("icon-inner"), unref123(ns).is("status")])
              }, {
                default: withCtx62(() => [
                  createVNode54(unref123(close_default))
                ]),
                _: 1
              }, 8, ["class"])) : !unref123(isSimple) ? (openBlock114(), createElementBlock98("div", {
                key: 3,
                class: normalizeClass96(unref123(ns).e("icon-inner"))
              }, toDisplayString55(index.value + 1), 3)) : createCommentVNode56("v-if", true)
            ])
          ], 2)
        ], 2),
        createCommentVNode56(" title & description "),
        createElementVNode62("div", {
          class: normalizeClass96(unref123(ns).e("main"))
        }, [
          createElementVNode62("div", {
            class: normalizeClass96([unref123(ns).e("title"), unref123(ns).is(unref123(currentStatus))])
          }, [
            renderSlot91(_ctx.$slots, "title", {}, () => [
              createTextVNode23(toDisplayString55(_ctx.title), 1)
            ])
          ], 2),
          unref123(isSimple) ? (openBlock114(), createElementBlock98("div", {
            key: 0,
            class: normalizeClass96(unref123(ns).e("arrow"))
          }, null, 2)) : (openBlock114(), createElementBlock98("div", {
            key: 1,
            class: normalizeClass96([unref123(ns).e("description"), unref123(ns).is(unref123(currentStatus))])
          }, [
            renderSlot91(_ctx.$slots, "description", {}, () => [
              createTextVNode23(toDisplayString55(_ctx.description), 1)
            ])
          ], 2))
        ], 2)
      ], 6);
    };
  }
});
var Step = _export_sfc(_sfc_main118, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/steps/src/item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/steps/index.mjs
var ElSteps = withInstall(Steps, {
  Step
});
var ElStep = withNoopInstall(Step);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/switch/src/switch2.mjs
import { defineComponent as defineComponent140, getCurrentInstance as getCurrentInstance35, computed as computed144, ref as ref107, watch as watch69, nextTick as nextTick38, onMounted as onMounted48, openBlock as openBlock115, createElementBlock as createElementBlock99, normalizeClass as normalizeClass97, unref as unref124, normalizeStyle as normalizeStyle47, withModifiers as withModifiers25, createElementVNode as createElementVNode63, withKeys as withKeys12, createBlock as createBlock67, withCtx as withCtx63, resolveDynamicComponent as resolveDynamicComponent29, createCommentVNode as createCommentVNode57, toDisplayString as toDisplayString56, createVNode as createVNode55 } from "vue";
import { isPromise as isPromise4 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/switch/src/switch.mjs
import { isString as isString32 } from "@vue/shared";
var switchProps = buildProps({
  modelValue: {
    type: [Boolean, String, Number],
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  loading: {
    type: Boolean,
    default: false
  },
  size: {
    type: String,
    validator: isValidComponentSize
  },
  width: {
    type: [String, Number],
    default: ""
  },
  inlinePrompt: {
    type: Boolean,
    default: false
  },
  activeIcon: {
    type: iconPropType
  },
  inactiveIcon: {
    type: iconPropType
  },
  activeText: {
    type: String,
    default: ""
  },
  inactiveText: {
    type: String,
    default: ""
  },
  activeValue: {
    type: [Boolean, String, Number],
    default: true
  },
  inactiveValue: {
    type: [Boolean, String, Number],
    default: false
  },
  activeColor: {
    type: String,
    default: ""
  },
  inactiveColor: {
    type: String,
    default: ""
  },
  borderColor: {
    type: String,
    default: ""
  },
  name: {
    type: String,
    default: ""
  },
  validateEvent: {
    type: Boolean,
    default: true
  },
  beforeChange: {
    type: definePropType(Function)
  },
  id: String,
  tabindex: {
    type: [String, Number]
  },
  value: {
    type: [Boolean, String, Number],
    default: false
  }
});
var switchEmits = {
  [UPDATE_MODEL_EVENT]: (val) => isBoolean2(val) || isString32(val) || isNumber3(val),
  [CHANGE_EVENT]: (val) => isBoolean2(val) || isString32(val) || isNumber3(val),
  [INPUT_EVENT]: (val) => isBoolean2(val) || isString32(val) || isNumber3(val)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/switch/src/switch2.mjs
var _hoisted_157 = ["onClick"];
var _hoisted_236 = ["id", "aria-checked", "aria-disabled", "name", "true-value", "false-value", "disabled", "tabindex", "onKeydown"];
var _hoisted_318 = ["aria-hidden"];
var _hoisted_410 = ["aria-hidden"];
var _hoisted_57 = ["aria-hidden"];
var COMPONENT_NAME17 = "ElSwitch";
var __default__82 = defineComponent140({
  name: COMPONENT_NAME17
});
var _sfc_main119 = defineComponent140({
  ...__default__82,
  props: switchProps,
  emits: switchEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const vm = getCurrentInstance35();
    const { formItem } = useFormItem();
    const switchSize = useFormSize();
    const ns = useNamespace("switch");
    const useBatchDeprecated = (list) => {
      list.forEach((param) => {
        useDeprecated({
          from: param[0],
          replacement: param[1],
          scope: COMPONENT_NAME17,
          version: "2.3.0",
          ref: "https://element-plus.org/en-US/component/switch.html#attributes",
          type: "Attribute"
        }, computed144(() => {
          var _a2;
          return !!((_a2 = vm.vnode.props) == null ? void 0 : _a2[param[2]]);
        }));
      });
    };
    useBatchDeprecated([
      ['"value"', '"model-value" or "v-model"', "value"],
      ['"active-color"', "CSS var `--el-switch-on-color`", "activeColor"],
      ['"inactive-color"', "CSS var `--el-switch-off-color`", "inactiveColor"],
      ['"border-color"', "CSS var `--el-switch-border-color`", "borderColor"]
    ]);
    const { inputId } = useFormItemInputId(props, {
      formItemContext: formItem
    });
    const switchDisabled = useFormDisabled(computed144(() => props.loading));
    const isControlled = ref107(props.modelValue !== false);
    const input = ref107();
    const core = ref107();
    const switchKls = computed144(() => [
      ns.b(),
      ns.m(switchSize.value),
      ns.is("disabled", switchDisabled.value),
      ns.is("checked", checked.value)
    ]);
    const labelLeftKls = computed144(() => [
      ns.e("label"),
      ns.em("label", "left"),
      ns.is("active", !checked.value)
    ]);
    const labelRightKls = computed144(() => [
      ns.e("label"),
      ns.em("label", "right"),
      ns.is("active", checked.value)
    ]);
    const coreStyle = computed144(() => ({
      width: addUnit(props.width)
    }));
    watch69(() => props.modelValue, () => {
      isControlled.value = true;
    });
    watch69(() => props.value, () => {
      isControlled.value = false;
    });
    const actualValue = computed144(() => {
      return isControlled.value ? props.modelValue : props.value;
    });
    const checked = computed144(() => actualValue.value === props.activeValue);
    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {
      emit(UPDATE_MODEL_EVENT, props.inactiveValue);
      emit(CHANGE_EVENT, props.inactiveValue);
      emit(INPUT_EVENT, props.inactiveValue);
    }
    watch69(checked, (val) => {
      var _a2;
      input.value.checked = val;
      if (props.validateEvent) {
        (_a2 = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a2.call(formItem, "change").catch((err) => debugWarn(err));
      }
    });
    const handleChange = () => {
      const val = checked.value ? props.inactiveValue : props.activeValue;
      emit(UPDATE_MODEL_EVENT, val);
      emit(CHANGE_EVENT, val);
      emit(INPUT_EVENT, val);
      nextTick38(() => {
        input.value.checked = checked.value;
      });
    };
    const switchValue = () => {
      if (switchDisabled.value)
        return;
      const { beforeChange } = props;
      if (!beforeChange) {
        handleChange();
        return;
      }
      const shouldChange = beforeChange();
      const isPromiseOrBool = [
        isPromise4(shouldChange),
        isBoolean2(shouldChange)
      ].includes(true);
      if (!isPromiseOrBool) {
        throwError(COMPONENT_NAME17, "beforeChange must return type `Promise<boolean>` or `boolean`");
      }
      if (isPromise4(shouldChange)) {
        shouldChange.then((result2) => {
          if (result2) {
            handleChange();
          }
        }).catch((e) => {
          debugWarn(COMPONENT_NAME17, `some error occurred: ${e}`);
        });
      } else if (shouldChange) {
        handleChange();
      }
    };
    const styles = computed144(() => {
      return ns.cssVarBlock({
        ...props.activeColor ? { "on-color": props.activeColor } : null,
        ...props.inactiveColor ? { "off-color": props.inactiveColor } : null,
        ...props.borderColor ? { "border-color": props.borderColor } : null
      });
    });
    const focus = () => {
      var _a2, _b;
      (_b = (_a2 = input.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
    };
    onMounted48(() => {
      input.value.checked = checked.value;
    });
    expose({
      focus,
      checked
    });
    return (_ctx, _cache) => {
      return openBlock115(), createElementBlock99("div", {
        class: normalizeClass97(unref124(switchKls)),
        style: normalizeStyle47(unref124(styles)),
        onClick: withModifiers25(switchValue, ["prevent"])
      }, [
        createElementVNode63("input", {
          id: unref124(inputId),
          ref_key: "input",
          ref: input,
          class: normalizeClass97(unref124(ns).e("input")),
          type: "checkbox",
          role: "switch",
          "aria-checked": unref124(checked),
          "aria-disabled": unref124(switchDisabled),
          name: _ctx.name,
          "true-value": _ctx.activeValue,
          "false-value": _ctx.inactiveValue,
          disabled: unref124(switchDisabled),
          tabindex: _ctx.tabindex,
          onChange: handleChange,
          onKeydown: withKeys12(switchValue, ["enter"])
        }, null, 42, _hoisted_236),
        !_ctx.inlinePrompt && (_ctx.inactiveIcon || _ctx.inactiveText) ? (openBlock115(), createElementBlock99("span", {
          key: 0,
          class: normalizeClass97(unref124(labelLeftKls))
        }, [
          _ctx.inactiveIcon ? (openBlock115(), createBlock67(unref124(ElIcon), { key: 0 }, {
            default: withCtx63(() => [
              (openBlock115(), createBlock67(resolveDynamicComponent29(_ctx.inactiveIcon)))
            ]),
            _: 1
          })) : createCommentVNode57("v-if", true),
          !_ctx.inactiveIcon && _ctx.inactiveText ? (openBlock115(), createElementBlock99("span", {
            key: 1,
            "aria-hidden": unref124(checked)
          }, toDisplayString56(_ctx.inactiveText), 9, _hoisted_318)) : createCommentVNode57("v-if", true)
        ], 2)) : createCommentVNode57("v-if", true),
        createElementVNode63("span", {
          ref_key: "core",
          ref: core,
          class: normalizeClass97(unref124(ns).e("core")),
          style: normalizeStyle47(unref124(coreStyle))
        }, [
          _ctx.inlinePrompt ? (openBlock115(), createElementBlock99("div", {
            key: 0,
            class: normalizeClass97(unref124(ns).e("inner"))
          }, [
            _ctx.activeIcon || _ctx.inactiveIcon ? (openBlock115(), createBlock67(unref124(ElIcon), {
              key: 0,
              class: normalizeClass97(unref124(ns).is("icon"))
            }, {
              default: withCtx63(() => [
                (openBlock115(), createBlock67(resolveDynamicComponent29(unref124(checked) ? _ctx.activeIcon : _ctx.inactiveIcon)))
              ]),
              _: 1
            }, 8, ["class"])) : _ctx.activeText || _ctx.inactiveText ? (openBlock115(), createElementBlock99("span", {
              key: 1,
              class: normalizeClass97(unref124(ns).is("text")),
              "aria-hidden": !unref124(checked)
            }, toDisplayString56(unref124(checked) ? _ctx.activeText : _ctx.inactiveText), 11, _hoisted_410)) : createCommentVNode57("v-if", true)
          ], 2)) : createCommentVNode57("v-if", true),
          createElementVNode63("div", {
            class: normalizeClass97(unref124(ns).e("action"))
          }, [
            _ctx.loading ? (openBlock115(), createBlock67(unref124(ElIcon), {
              key: 0,
              class: normalizeClass97(unref124(ns).is("loading"))
            }, {
              default: withCtx63(() => [
                createVNode55(unref124(loading_default))
              ]),
              _: 1
            }, 8, ["class"])) : createCommentVNode57("v-if", true)
          ], 2)
        ], 6),
        !_ctx.inlinePrompt && (_ctx.activeIcon || _ctx.activeText) ? (openBlock115(), createElementBlock99("span", {
          key: 1,
          class: normalizeClass97(unref124(labelRightKls))
        }, [
          _ctx.activeIcon ? (openBlock115(), createBlock67(unref124(ElIcon), { key: 0 }, {
            default: withCtx63(() => [
              (openBlock115(), createBlock67(resolveDynamicComponent29(_ctx.activeIcon)))
            ]),
            _: 1
          })) : createCommentVNode57("v-if", true),
          !_ctx.activeIcon && _ctx.activeText ? (openBlock115(), createElementBlock99("span", {
            key: 1,
            "aria-hidden": !unref124(checked)
          }, toDisplayString56(_ctx.activeText), 9, _hoisted_57)) : createCommentVNode57("v-if", true)
        ], 2)) : createCommentVNode57("v-if", true)
      ], 14, _hoisted_157);
    };
  }
});
var Switch = _export_sfc(_sfc_main119, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/switch/index.mjs
var ElSwitch = withInstall(Switch);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table.mjs
import { defineComponent as defineComponent145, getCurrentInstance as getCurrentInstance46, provide as provide37, computed as computed152, resolveComponent as resolveComponent14, resolveDirective as resolveDirective4, openBlock as openBlock117, createElementBlock as createElementBlock101, normalizeClass as normalizeClass99, normalizeStyle as normalizeStyle48, createElementVNode as createElementVNode65, renderSlot as renderSlot92, withDirectives as withDirectives30, createVNode as createVNode57, createCommentVNode as createCommentVNode58, withCtx as withCtx65, createBlock as createBlock69, createTextVNode as createTextVNode25, toDisplayString as toDisplayString58, vShow as vShow21 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/helper.mjs
import { watch as watch72 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/index.mjs
import { getCurrentInstance as getCurrentInstance40, unref as unref128, nextTick as nextTick39 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/watcher.mjs
import { getCurrentInstance as getCurrentInstance39, toRefs as toRefs13, ref as ref111, watch as watch71, unref as unref127 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/util.mjs
var import_escape_html = __toESM(require_escape_html(), 1);
import { isObject as isObject21, hasOwn as hasOwn10, isArray as isArray31 } from "@vue/shared";
var getCell = function(event) {
  var _a2;
  return (_a2 = event.target) == null ? void 0 : _a2.closest("td");
};
var orderBy2 = function(array4, sortKey, reverse2, sortMethod, sortBy2) {
  if (!sortKey && !sortMethod && (!sortBy2 || Array.isArray(sortBy2) && !sortBy2.length)) {
    return array4;
  }
  if (typeof reverse2 === "string") {
    reverse2 = reverse2 === "descending" ? -1 : 1;
  } else {
    reverse2 = reverse2 && reverse2 < 0 ? -1 : 1;
  }
  const getKey = sortMethod ? null : function(value, index) {
    if (sortBy2) {
      if (!Array.isArray(sortBy2)) {
        sortBy2 = [sortBy2];
      }
      return sortBy2.map((by) => {
        if (typeof by === "string") {
          return get_default(value, by);
        } else {
          return by(value, index, array4);
        }
      });
    }
    if (sortKey !== "$key") {
      if (isObject21(value) && "$value" in value)
        value = value.$value;
    }
    return [isObject21(value) ? get_default(value, sortKey) : value];
  };
  const compare = function(a2, b2) {
    if (sortMethod) {
      return sortMethod(a2.value, b2.value);
    }
    for (let i = 0, len = a2.key.length; i < len; i++) {
      if (a2.key[i] < b2.key[i]) {
        return -1;
      }
      if (a2.key[i] > b2.key[i]) {
        return 1;
      }
    }
    return 0;
  };
  return array4.map((value, index) => {
    return {
      value,
      index,
      key: getKey ? getKey(value, index) : null
    };
  }).sort((a2, b2) => {
    let order = compare(a2, b2);
    if (!order) {
      order = a2.index - b2.index;
    }
    return order * +reverse2;
  }).map((item) => item.value);
};
var getColumnById = function(table, columnId) {
  let column2 = null;
  table.columns.forEach((item) => {
    if (item.id === columnId) {
      column2 = item;
    }
  });
  return column2;
};
var getColumnByKey = function(table, columnKey) {
  let column2 = null;
  for (let i = 0; i < table.columns.length; i++) {
    const item = table.columns[i];
    if (item.columnKey === columnKey) {
      column2 = item;
      break;
    }
  }
  if (!column2)
    throwError("ElTable", `No column matching with column-key: ${columnKey}`);
  return column2;
};
var getColumnByCell = function(table, cell, namespace) {
  const matches2 = (cell.className || "").match(new RegExp(`${namespace}-table_[^\\s]+`, "gm"));
  if (matches2) {
    return getColumnById(table, matches2[0]);
  }
  return null;
};
var getRowIdentity = (row, rowKey2) => {
  if (!row)
    throw new Error("Row is required when get row identity");
  if (typeof rowKey2 === "string") {
    if (!rowKey2.includes(".")) {
      return `${row[rowKey2]}`;
    }
    const key = rowKey2.split(".");
    let current = row;
    for (const element of key) {
      current = current[element];
    }
    return `${current}`;
  } else if (typeof rowKey2 === "function") {
    return rowKey2.call(null, row);
  }
};
var getKeysMap = function(array4, rowKey2) {
  const arrayMap2 = {};
  (array4 || []).forEach((row, index) => {
    arrayMap2[getRowIdentity(row, rowKey2)] = { row, index };
  });
  return arrayMap2;
};
function mergeOptions(defaults2, config) {
  const options = {};
  let key;
  for (key in defaults2) {
    options[key] = defaults2[key];
  }
  for (key in config) {
    if (hasOwn10(config, key)) {
      const value = config[key];
      if (typeof value !== "undefined") {
        options[key] = value;
      }
    }
  }
  return options;
}
function parseWidth(width) {
  if (width === "")
    return width;
  if (width !== void 0) {
    width = Number.parseInt(width, 10);
    if (Number.isNaN(width)) {
      width = "";
    }
  }
  return width;
}
function parseMinWidth(minWidth) {
  if (minWidth === "")
    return minWidth;
  if (minWidth !== void 0) {
    minWidth = parseWidth(minWidth);
    if (Number.isNaN(minWidth)) {
      minWidth = 80;
    }
  }
  return minWidth;
}
function parseHeight(height) {
  if (typeof height === "number") {
    return height;
  }
  if (typeof height === "string") {
    if (/^\d+(?:px)?$/.test(height)) {
      return Number.parseInt(height, 10);
    } else {
      return height;
    }
  }
  return null;
}
function compose(...funcs) {
  if (funcs.length === 0) {
    return (arg) => arg;
  }
  if (funcs.length === 1) {
    return funcs[0];
  }
  return funcs.reduce((a2, b2) => (...args) => a2(b2(...args)));
}
function toggleRowStatus(statusArr, row, newVal) {
  let changed = false;
  const index = statusArr.indexOf(row);
  const included = index !== -1;
  const toggleStatus = (type4) => {
    if (type4 === "add") {
      statusArr.push(row);
    } else {
      statusArr.splice(index, 1);
    }
    changed = true;
    if (isArray31(row.children)) {
      row.children.forEach((item) => {
        toggleRowStatus(statusArr, item, newVal != null ? newVal : !included);
      });
    }
  };
  if (isBoolean2(newVal)) {
    if (newVal && !included) {
      toggleStatus("add");
    } else if (!newVal && included) {
      toggleStatus("remove");
    }
  } else {
    included ? toggleStatus("remove") : toggleStatus("add");
  }
  return changed;
}
function walkTreeNode(root2, cb, childrenKey = "children", lazyKey = "hasChildren") {
  const isNil2 = (array4) => !(Array.isArray(array4) && array4.length);
  function _walker(parent2, children, level) {
    cb(parent2, children, level);
    children.forEach((item) => {
      if (item[lazyKey]) {
        cb(item, null, level + 1);
        return;
      }
      const children2 = item[childrenKey];
      if (!isNil2(children2)) {
        _walker(item, children2, level + 1);
      }
    });
  }
  root2.forEach((item) => {
    if (item[lazyKey]) {
      cb(item, null, 0);
      return;
    }
    const children = item[childrenKey];
    if (!isNil2(children)) {
      _walker(item, children, 0);
    }
  });
}
var removePopper;
function createTablePopper(parentNode, trigger2, popperContent, nextZIndex, tooltipOptions) {
  tooltipOptions = merge_default({
    enterable: true,
    showArrow: true
  }, tooltipOptions);
  const ns = parentNode == null ? void 0 : parentNode.dataset.prefix;
  const scrollContainer = parentNode == null ? void 0 : parentNode.querySelector(`.${ns}-scrollbar__wrap`);
  function renderContent() {
    const isLight = tooltipOptions.effect === "light";
    const content2 = document.createElement("div");
    content2.className = [
      `${ns}-popper`,
      isLight ? "is-light" : "is-dark",
      tooltipOptions.popperClass || ""
    ].join(" ");
    popperContent = (0, import_escape_html.default)(popperContent);
    content2.innerHTML = popperContent;
    content2.style.zIndex = String(nextZIndex());
    parentNode == null ? void 0 : parentNode.appendChild(content2);
    return content2;
  }
  function renderArrow() {
    const arrow2 = document.createElement("div");
    arrow2.className = `${ns}-popper__arrow`;
    return arrow2;
  }
  function showPopper() {
    popperInstance && popperInstance.update();
  }
  removePopper == null ? void 0 : removePopper();
  removePopper = () => {
    try {
      popperInstance && popperInstance.destroy();
      content && (parentNode == null ? void 0 : parentNode.removeChild(content));
      trigger2.removeEventListener("mouseenter", onOpen);
      trigger2.removeEventListener("mouseleave", onClose);
      scrollContainer == null ? void 0 : scrollContainer.removeEventListener("scroll", removePopper);
      removePopper = void 0;
    } catch (e) {
    }
  };
  let popperInstance = null;
  let onOpen = showPopper;
  let onClose = removePopper;
  if (tooltipOptions.enterable) {
    ;
    ({ onOpen, onClose } = useDelayedToggle({
      showAfter: tooltipOptions.showAfter,
      hideAfter: tooltipOptions.hideAfter,
      open: showPopper,
      close: removePopper
    }));
  }
  const content = renderContent();
  content.onmouseenter = onOpen;
  content.onmouseleave = onClose;
  const modifiers = [];
  if (tooltipOptions.offset) {
    modifiers.push({
      name: "offset",
      options: {
        offset: [0, tooltipOptions.offset]
      }
    });
  }
  if (tooltipOptions.showArrow) {
    const arrow2 = content.appendChild(renderArrow());
    modifiers.push({
      name: "arrow",
      options: {
        element: arrow2,
        padding: 10
      }
    });
  }
  const popperOptions = tooltipOptions.popperOptions || {};
  popperInstance = yn(trigger2, content, {
    placement: tooltipOptions.placement || "top",
    strategy: "fixed",
    ...popperOptions,
    modifiers: popperOptions.modifiers ? modifiers.concat(popperOptions.modifiers) : modifiers
  });
  trigger2.addEventListener("mouseenter", onOpen);
  trigger2.addEventListener("mouseleave", onClose);
  scrollContainer == null ? void 0 : scrollContainer.addEventListener("scroll", removePopper);
  return popperInstance;
}
function getCurrentColumns(column2) {
  if (column2.children) {
    return flatMap_default(column2.children, getCurrentColumns);
  } else {
    return [column2];
  }
}
function getColSpan(colSpan, column2) {
  return colSpan + column2.colSpan;
}
var isFixedColumn = (index, fixed, store, realColumns) => {
  let start = 0;
  let after2 = index;
  const columns2 = store.states.columns.value;
  if (realColumns) {
    const curColumns = getCurrentColumns(realColumns[index]);
    const preColumns = columns2.slice(0, columns2.indexOf(curColumns[0]));
    start = preColumns.reduce(getColSpan, 0);
    after2 = start + curColumns.reduce(getColSpan, 0) - 1;
  } else {
    start = index;
  }
  let fixedLayout;
  switch (fixed) {
    case "left":
      if (after2 < store.states.fixedLeafColumnsLength.value) {
        fixedLayout = "left";
      }
      break;
    case "right":
      if (start >= columns2.length - store.states.rightFixedLeafColumnsLength.value) {
        fixedLayout = "right";
      }
      break;
    default:
      if (after2 < store.states.fixedLeafColumnsLength.value) {
        fixedLayout = "left";
      } else if (start >= columns2.length - store.states.rightFixedLeafColumnsLength.value) {
        fixedLayout = "right";
      }
  }
  return fixedLayout ? {
    direction: fixedLayout,
    start,
    after: after2
  } : {};
};
var getFixedColumnsClass = (namespace, index, fixed, store, realColumns, offset2 = 0) => {
  const classes = [];
  const { direction: direction2, start, after: after2 } = isFixedColumn(index, fixed, store, realColumns);
  if (direction2) {
    const isLeft = direction2 === "left";
    classes.push(`${namespace}-fixed-column--${direction2}`);
    if (isLeft && after2 + offset2 === store.states.fixedLeafColumnsLength.value - 1) {
      classes.push("is-last-column");
    } else if (!isLeft && start - offset2 === store.states.columns.value.length - store.states.rightFixedLeafColumnsLength.value) {
      classes.push("is-first-column");
    }
  }
  return classes;
};
function getOffset2(offset2, column2) {
  return offset2 + (column2.realWidth === null || Number.isNaN(column2.realWidth) ? Number(column2.width) : column2.realWidth);
}
var getFixedColumnOffset = (index, fixed, store, realColumns) => {
  const {
    direction: direction2,
    start = 0,
    after: after2 = 0
  } = isFixedColumn(index, fixed, store, realColumns);
  if (!direction2) {
    return;
  }
  const styles = {};
  const isLeft = direction2 === "left";
  const columns2 = store.states.columns.value;
  if (isLeft) {
    styles.left = columns2.slice(0, start).reduce(getOffset2, 0);
  } else {
    styles.right = columns2.slice(after2 + 1).reverse().reduce(getOffset2, 0);
  }
  return styles;
};
var ensurePosition = (style, key) => {
  if (!style)
    return;
  if (!Number.isNaN(style[key])) {
    style[key] = `${style[key]}px`;
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/expand.mjs
import { getCurrentInstance as getCurrentInstance36, ref as ref108 } from "vue";
function useExpand(watcherData) {
  const instance = getCurrentInstance36();
  const defaultExpandAll = ref108(false);
  const expandRows = ref108([]);
  const updateExpandRows = () => {
    const data = watcherData.data.value || [];
    const rowKey2 = watcherData.rowKey.value;
    if (defaultExpandAll.value) {
      expandRows.value = data.slice();
    } else if (rowKey2) {
      const expandRowsMap = getKeysMap(expandRows.value, rowKey2);
      expandRows.value = data.reduce((prev, row) => {
        const rowId = getRowIdentity(row, rowKey2);
        const rowInfo = expandRowsMap[rowId];
        if (rowInfo) {
          prev.push(row);
        }
        return prev;
      }, []);
    } else {
      expandRows.value = [];
    }
  };
  const toggleRowExpansion = (row, expanded) => {
    const changed = toggleRowStatus(expandRows.value, row, expanded);
    if (changed) {
      instance.emit("expand-change", row, expandRows.value.slice());
    }
  };
  const setExpandRowKeys = (rowKeys) => {
    instance.store.assertRowKey();
    const data = watcherData.data.value || [];
    const rowKey2 = watcherData.rowKey.value;
    const keysMap = getKeysMap(data, rowKey2);
    expandRows.value = rowKeys.reduce((prev, cur) => {
      const info = keysMap[cur];
      if (info) {
        prev.push(info.row);
      }
      return prev;
    }, []);
  };
  const isRowExpanded = (row) => {
    const rowKey2 = watcherData.rowKey.value;
    if (rowKey2) {
      const expandMap = getKeysMap(expandRows.value, rowKey2);
      return !!expandMap[getRowIdentity(row, rowKey2)];
    }
    return expandRows.value.includes(row);
  };
  return {
    updateExpandRows,
    toggleRowExpansion,
    setExpandRowKeys,
    isRowExpanded,
    states: {
      expandRows,
      defaultExpandAll
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/current.mjs
import { getCurrentInstance as getCurrentInstance37, ref as ref109, unref as unref125 } from "vue";
function useCurrent(watcherData) {
  const instance = getCurrentInstance37();
  const _currentRowKey = ref109(null);
  const currentRow = ref109(null);
  const setCurrentRowKey = (key) => {
    instance.store.assertRowKey();
    _currentRowKey.value = key;
    setCurrentRowByKey(key);
  };
  const restoreCurrentRowKey = () => {
    _currentRowKey.value = null;
  };
  const setCurrentRowByKey = (key) => {
    const { data, rowKey: rowKey2 } = watcherData;
    let _currentRow = null;
    if (rowKey2.value) {
      _currentRow = (unref125(data) || []).find((item) => getRowIdentity(item, rowKey2.value) === key);
    }
    currentRow.value = _currentRow;
    instance.emit("current-change", currentRow.value, null);
  };
  const updateCurrentRow = (_currentRow) => {
    const oldCurrentRow = currentRow.value;
    if (_currentRow && _currentRow !== oldCurrentRow) {
      currentRow.value = _currentRow;
      instance.emit("current-change", currentRow.value, oldCurrentRow);
      return;
    }
    if (!_currentRow && oldCurrentRow) {
      currentRow.value = null;
      instance.emit("current-change", null, oldCurrentRow);
    }
  };
  const updateCurrentRowData = () => {
    const rowKey2 = watcherData.rowKey.value;
    const data = watcherData.data.value || [];
    const oldCurrentRow = currentRow.value;
    if (!data.includes(oldCurrentRow) && oldCurrentRow) {
      if (rowKey2) {
        const currentRowKey = getRowIdentity(oldCurrentRow, rowKey2);
        setCurrentRowByKey(currentRowKey);
      } else {
        currentRow.value = null;
      }
      if (currentRow.value === null) {
        instance.emit("current-change", null, oldCurrentRow);
      }
    } else if (_currentRowKey.value) {
      setCurrentRowByKey(_currentRowKey.value);
      restoreCurrentRowKey();
    }
  };
  return {
    setCurrentRowKey,
    restoreCurrentRowKey,
    setCurrentRowByKey,
    updateCurrentRow,
    updateCurrentRowData,
    states: {
      _currentRowKey,
      currentRow
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/tree.mjs
import { ref as ref110, getCurrentInstance as getCurrentInstance38, computed as computed145, unref as unref126, watch as watch70 } from "vue";
function useTree(watcherData) {
  const expandRowKeys = ref110([]);
  const treeData = ref110({});
  const indent = ref110(16);
  const lazy = ref110(false);
  const lazyTreeNodeMap = ref110({});
  const lazyColumnIdentifier = ref110("hasChildren");
  const childrenColumnName = ref110("children");
  const instance = getCurrentInstance38();
  const normalizedData = computed145(() => {
    if (!watcherData.rowKey.value)
      return {};
    const data = watcherData.data.value || [];
    return normalize(data);
  });
  const normalizedLazyNode = computed145(() => {
    const rowKey2 = watcherData.rowKey.value;
    const keys3 = Object.keys(lazyTreeNodeMap.value);
    const res = {};
    if (!keys3.length)
      return res;
    keys3.forEach((key) => {
      if (lazyTreeNodeMap.value[key].length) {
        const item = { children: [] };
        lazyTreeNodeMap.value[key].forEach((row) => {
          const currentRowKey = getRowIdentity(row, rowKey2);
          item.children.push(currentRowKey);
          if (row[lazyColumnIdentifier.value] && !res[currentRowKey]) {
            res[currentRowKey] = { children: [] };
          }
        });
        res[key] = item;
      }
    });
    return res;
  });
  const normalize = (data) => {
    const rowKey2 = watcherData.rowKey.value;
    const res = {};
    walkTreeNode(data, (parent2, children, level) => {
      const parentId = getRowIdentity(parent2, rowKey2);
      if (Array.isArray(children)) {
        res[parentId] = {
          children: children.map((row) => getRowIdentity(row, rowKey2)),
          level
        };
      } else if (lazy.value) {
        res[parentId] = {
          children: [],
          lazy: true,
          level
        };
      }
    }, childrenColumnName.value, lazyColumnIdentifier.value);
    return res;
  };
  const updateTreeData = (ifChangeExpandRowKeys = false, ifExpandAll = ((_a2) => (_a2 = instance.store) == null ? void 0 : _a2.states.defaultExpandAll.value)()) => {
    var _a2;
    const nested = normalizedData.value;
    const normalizedLazyNode_ = normalizedLazyNode.value;
    const keys3 = Object.keys(nested);
    const newTreeData = {};
    if (keys3.length) {
      const oldTreeData = unref126(treeData);
      const rootLazyRowKeys = [];
      const getExpanded = (oldValue, key) => {
        if (ifChangeExpandRowKeys) {
          if (expandRowKeys.value) {
            return ifExpandAll || expandRowKeys.value.includes(key);
          } else {
            return !!(ifExpandAll || (oldValue == null ? void 0 : oldValue.expanded));
          }
        } else {
          const included = ifExpandAll || expandRowKeys.value && expandRowKeys.value.includes(key);
          return !!((oldValue == null ? void 0 : oldValue.expanded) || included);
        }
      };
      keys3.forEach((key) => {
        const oldValue = oldTreeData[key];
        const newValue = { ...nested[key] };
        newValue.expanded = getExpanded(oldValue, key);
        if (newValue.lazy) {
          const { loaded = false, loading = false } = oldValue || {};
          newValue.loaded = !!loaded;
          newValue.loading = !!loading;
          rootLazyRowKeys.push(key);
        }
        newTreeData[key] = newValue;
      });
      const lazyKeys = Object.keys(normalizedLazyNode_);
      if (lazy.value && lazyKeys.length && rootLazyRowKeys.length) {
        lazyKeys.forEach((key) => {
          const oldValue = oldTreeData[key];
          const lazyNodeChildren = normalizedLazyNode_[key].children;
          if (rootLazyRowKeys.includes(key)) {
            if (newTreeData[key].children.length !== 0) {
              throw new Error("[ElTable]children must be an empty array.");
            }
            newTreeData[key].children = lazyNodeChildren;
          } else {
            const { loaded = false, loading = false } = oldValue || {};
            newTreeData[key] = {
              lazy: true,
              loaded: !!loaded,
              loading: !!loading,
              expanded: getExpanded(oldValue, key),
              children: lazyNodeChildren,
              level: ""
            };
          }
        });
      }
    }
    treeData.value = newTreeData;
    (_a2 = instance.store) == null ? void 0 : _a2.updateTableScrollY();
  };
  watch70(() => expandRowKeys.value, () => {
    updateTreeData(true);
  });
  watch70(() => normalizedData.value, () => {
    updateTreeData();
  });
  watch70(() => normalizedLazyNode.value, () => {
    updateTreeData();
  });
  const updateTreeExpandKeys = (value) => {
    expandRowKeys.value = value;
    updateTreeData();
  };
  const toggleTreeExpansion = (row, expanded) => {
    instance.store.assertRowKey();
    const rowKey2 = watcherData.rowKey.value;
    const id = getRowIdentity(row, rowKey2);
    const data = id && treeData.value[id];
    if (id && data && "expanded" in data) {
      const oldExpanded = data.expanded;
      expanded = typeof expanded === "undefined" ? !data.expanded : expanded;
      treeData.value[id].expanded = expanded;
      if (oldExpanded !== expanded) {
        instance.emit("expand-change", row, expanded);
      }
      instance.store.updateTableScrollY();
    }
  };
  const loadOrToggle = (row) => {
    instance.store.assertRowKey();
    const rowKey2 = watcherData.rowKey.value;
    const id = getRowIdentity(row, rowKey2);
    const data = treeData.value[id];
    if (lazy.value && data && "loaded" in data && !data.loaded) {
      loadData(row, id, data);
    } else {
      toggleTreeExpansion(row, void 0);
    }
  };
  const loadData = (row, key, treeNode) => {
    const { load } = instance.props;
    if (load && !treeData.value[key].loaded) {
      treeData.value[key].loading = true;
      load(row, treeNode, (data) => {
        if (!Array.isArray(data)) {
          throw new TypeError("[ElTable] data must be an array");
        }
        treeData.value[key].loading = false;
        treeData.value[key].loaded = true;
        treeData.value[key].expanded = true;
        if (data.length) {
          lazyTreeNodeMap.value[key] = data;
        }
        instance.emit("expand-change", row, true);
      });
    }
  };
  return {
    loadData,
    loadOrToggle,
    toggleTreeExpansion,
    updateTreeExpandKeys,
    updateTreeData,
    normalize,
    states: {
      expandRowKeys,
      treeData,
      indent,
      lazy,
      lazyTreeNodeMap,
      lazyColumnIdentifier,
      childrenColumnName
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/watcher.mjs
import { hasOwn as hasOwn11 } from "@vue/shared";
var sortData = (data, states) => {
  const sortingColumn = states.sortingColumn;
  if (!sortingColumn || typeof sortingColumn.sortable === "string") {
    return data;
  }
  return orderBy2(data, states.sortProp, states.sortOrder, sortingColumn.sortMethod, sortingColumn.sortBy);
};
var doFlattenColumns = (columns2) => {
  const result2 = [];
  columns2.forEach((column2) => {
    if (column2.children && column2.children.length > 0) {
      result2.push.apply(result2, doFlattenColumns(column2.children));
    } else {
      result2.push(column2);
    }
  });
  return result2;
};
function useWatcher() {
  var _a2;
  const instance = getCurrentInstance39();
  const { size: tableSize } = toRefs13((_a2 = instance.proxy) == null ? void 0 : _a2.$props);
  const rowKey2 = ref111(null);
  const data = ref111([]);
  const _data = ref111([]);
  const isComplex = ref111(false);
  const _columns = ref111([]);
  const originColumns = ref111([]);
  const columns2 = ref111([]);
  const fixedColumns = ref111([]);
  const rightFixedColumns = ref111([]);
  const leafColumns = ref111([]);
  const fixedLeafColumns = ref111([]);
  const rightFixedLeafColumns = ref111([]);
  const updateOrderFns = [];
  const leafColumnsLength = ref111(0);
  const fixedLeafColumnsLength = ref111(0);
  const rightFixedLeafColumnsLength = ref111(0);
  const isAllSelected = ref111(false);
  const selection = ref111([]);
  const reserveSelection = ref111(false);
  const selectOnIndeterminate = ref111(false);
  const selectable = ref111(null);
  const filters = ref111({});
  const filteredData = ref111(null);
  const sortingColumn = ref111(null);
  const sortProp = ref111(null);
  const sortOrder = ref111(null);
  const hoverRow = ref111(null);
  watch71(data, () => instance.state && scheduleLayout(false), {
    deep: true
  });
  const assertRowKey = () => {
    if (!rowKey2.value)
      throw new Error("[ElTable] prop row-key is required");
  };
  const updateChildFixed = (column2) => {
    var _a22;
    (_a22 = column2.children) == null ? void 0 : _a22.forEach((childColumn) => {
      childColumn.fixed = column2.fixed;
      updateChildFixed(childColumn);
    });
  };
  const updateColumns = () => {
    _columns.value.forEach((column2) => {
      updateChildFixed(column2);
    });
    fixedColumns.value = _columns.value.filter((column2) => column2.fixed === true || column2.fixed === "left");
    rightFixedColumns.value = _columns.value.filter((column2) => column2.fixed === "right");
    if (fixedColumns.value.length > 0 && _columns.value[0] && _columns.value[0].type === "selection" && !_columns.value[0].fixed) {
      _columns.value[0].fixed = true;
      fixedColumns.value.unshift(_columns.value[0]);
    }
    const notFixedColumns = _columns.value.filter((column2) => !column2.fixed);
    originColumns.value = [].concat(fixedColumns.value).concat(notFixedColumns).concat(rightFixedColumns.value);
    const leafColumns2 = doFlattenColumns(notFixedColumns);
    const fixedLeafColumns2 = doFlattenColumns(fixedColumns.value);
    const rightFixedLeafColumns2 = doFlattenColumns(rightFixedColumns.value);
    leafColumnsLength.value = leafColumns2.length;
    fixedLeafColumnsLength.value = fixedLeafColumns2.length;
    rightFixedLeafColumnsLength.value = rightFixedLeafColumns2.length;
    columns2.value = [].concat(fixedLeafColumns2).concat(leafColumns2).concat(rightFixedLeafColumns2);
    isComplex.value = fixedColumns.value.length > 0 || rightFixedColumns.value.length > 0;
  };
  const scheduleLayout = (needUpdateColumns, immediate = false) => {
    if (needUpdateColumns) {
      updateColumns();
    }
    if (immediate) {
      instance.state.doLayout();
    } else {
      instance.state.debouncedUpdateLayout();
    }
  };
  const isSelected = (row) => {
    return selection.value.includes(row);
  };
  const clearSelection = () => {
    isAllSelected.value = false;
    const oldSelection = selection.value;
    if (oldSelection.length) {
      selection.value = [];
      instance.emit("selection-change", []);
    }
  };
  const cleanSelection = () => {
    let deleted;
    if (rowKey2.value) {
      deleted = [];
      const selectedMap = getKeysMap(selection.value, rowKey2.value);
      const dataMap = getKeysMap(data.value, rowKey2.value);
      for (const key in selectedMap) {
        if (hasOwn11(selectedMap, key) && !dataMap[key]) {
          deleted.push(selectedMap[key].row);
        }
      }
    } else {
      deleted = selection.value.filter((item) => !data.value.includes(item));
    }
    if (deleted.length) {
      const newSelection = selection.value.filter((item) => !deleted.includes(item));
      selection.value = newSelection;
      instance.emit("selection-change", newSelection.slice());
    }
  };
  const getSelectionRows = () => {
    return (selection.value || []).slice();
  };
  const toggleRowSelection = (row, selected = void 0, emitChange = true) => {
    const changed = toggleRowStatus(selection.value, row, selected);
    if (changed) {
      const newSelection = (selection.value || []).slice();
      if (emitChange) {
        instance.emit("select", newSelection, row);
      }
      instance.emit("selection-change", newSelection);
    }
  };
  const _toggleAllSelection = () => {
    var _a22, _b;
    const value = selectOnIndeterminate.value ? !isAllSelected.value : !(isAllSelected.value || selection.value.length);
    isAllSelected.value = value;
    let selectionChanged = false;
    let childrenCount = 0;
    const rowKey22 = (_b = (_a22 = instance == null ? void 0 : instance.store) == null ? void 0 : _a22.states) == null ? void 0 : _b.rowKey.value;
    data.value.forEach((row, index) => {
      const rowIndex = index + childrenCount;
      if (selectable.value) {
        if (selectable.value.call(null, row, rowIndex) && toggleRowStatus(selection.value, row, value)) {
          selectionChanged = true;
        }
      } else {
        if (toggleRowStatus(selection.value, row, value)) {
          selectionChanged = true;
        }
      }
      childrenCount += getChildrenCount(getRowIdentity(row, rowKey22));
    });
    if (selectionChanged) {
      instance.emit("selection-change", selection.value ? selection.value.slice() : []);
    }
    instance.emit("select-all", selection.value);
  };
  const updateSelectionByRowKey = () => {
    const selectedMap = getKeysMap(selection.value, rowKey2.value);
    data.value.forEach((row) => {
      const rowId = getRowIdentity(row, rowKey2.value);
      const rowInfo = selectedMap[rowId];
      if (rowInfo) {
        selection.value[rowInfo.index] = row;
      }
    });
  };
  const updateAllSelected = () => {
    var _a22, _b, _c;
    if (((_a22 = data.value) == null ? void 0 : _a22.length) === 0) {
      isAllSelected.value = false;
      return;
    }
    let selectedMap;
    if (rowKey2.value) {
      selectedMap = getKeysMap(selection.value, rowKey2.value);
    }
    const isSelected2 = function(row) {
      if (selectedMap) {
        return !!selectedMap[getRowIdentity(row, rowKey2.value)];
      } else {
        return selection.value.includes(row);
      }
    };
    let isAllSelected_ = true;
    let selectedCount = 0;
    let childrenCount = 0;
    for (let i = 0, j = (data.value || []).length; i < j; i++) {
      const keyProp = (_c = (_b = instance == null ? void 0 : instance.store) == null ? void 0 : _b.states) == null ? void 0 : _c.rowKey.value;
      const rowIndex = i + childrenCount;
      const item = data.value[i];
      const isRowSelectable = selectable.value && selectable.value.call(null, item, rowIndex);
      if (!isSelected2(item)) {
        if (!selectable.value || isRowSelectable) {
          isAllSelected_ = false;
          break;
        }
      } else {
        selectedCount++;
      }
      childrenCount += getChildrenCount(getRowIdentity(item, keyProp));
    }
    if (selectedCount === 0)
      isAllSelected_ = false;
    isAllSelected.value = isAllSelected_;
  };
  const getChildrenCount = (rowKey22) => {
    var _a22;
    if (!instance || !instance.store)
      return 0;
    const { treeData } = instance.store.states;
    let count = 0;
    const children = (_a22 = treeData.value[rowKey22]) == null ? void 0 : _a22.children;
    if (children) {
      count += children.length;
      children.forEach((childKey) => {
        count += getChildrenCount(childKey);
      });
    }
    return count;
  };
  const updateFilters = (columns22, values2) => {
    if (!Array.isArray(columns22)) {
      columns22 = [columns22];
    }
    const filters_ = {};
    columns22.forEach((col) => {
      filters.value[col.id] = values2;
      filters_[col.columnKey || col.id] = values2;
    });
    return filters_;
  };
  const updateSort = (column2, prop, order) => {
    if (sortingColumn.value && sortingColumn.value !== column2) {
      sortingColumn.value.order = null;
    }
    sortingColumn.value = column2;
    sortProp.value = prop;
    sortOrder.value = order;
  };
  const execFilter = () => {
    let sourceData = unref127(_data);
    Object.keys(filters.value).forEach((columnId) => {
      const values2 = filters.value[columnId];
      if (!values2 || values2.length === 0)
        return;
      const column2 = getColumnById({
        columns: columns2.value
      }, columnId);
      if (column2 && column2.filterMethod) {
        sourceData = sourceData.filter((row) => {
          return values2.some((value) => column2.filterMethod.call(null, value, row, column2));
        });
      }
    });
    filteredData.value = sourceData;
  };
  const execSort = () => {
    data.value = sortData(filteredData.value, {
      sortingColumn: sortingColumn.value,
      sortProp: sortProp.value,
      sortOrder: sortOrder.value
    });
  };
  const execQuery = (ignore = void 0) => {
    if (!(ignore && ignore.filter)) {
      execFilter();
    }
    execSort();
  };
  const clearFilter = (columnKeys) => {
    const { tableHeaderRef } = instance.refs;
    if (!tableHeaderRef)
      return;
    const panels = Object.assign({}, tableHeaderRef.filterPanels);
    const keys3 = Object.keys(panels);
    if (!keys3.length)
      return;
    if (typeof columnKeys === "string") {
      columnKeys = [columnKeys];
    }
    if (Array.isArray(columnKeys)) {
      const columns_ = columnKeys.map((key) => getColumnByKey({
        columns: columns2.value
      }, key));
      keys3.forEach((key) => {
        const column2 = columns_.find((col) => col.id === key);
        if (column2) {
          column2.filteredValue = [];
        }
      });
      instance.store.commit("filterChange", {
        column: columns_,
        values: [],
        silent: true,
        multi: true
      });
    } else {
      keys3.forEach((key) => {
        const column2 = columns2.value.find((col) => col.id === key);
        if (column2) {
          column2.filteredValue = [];
        }
      });
      filters.value = {};
      instance.store.commit("filterChange", {
        column: {},
        values: [],
        silent: true
      });
    }
  };
  const clearSort = () => {
    if (!sortingColumn.value)
      return;
    updateSort(null, null, null);
    instance.store.commit("changeSortCondition", {
      silent: true
    });
  };
  const {
    setExpandRowKeys,
    toggleRowExpansion,
    updateExpandRows,
    states: expandStates,
    isRowExpanded
  } = useExpand({
    data,
    rowKey: rowKey2
  });
  const {
    updateTreeExpandKeys,
    toggleTreeExpansion,
    updateTreeData,
    loadOrToggle,
    states: treeStates
  } = useTree({
    data,
    rowKey: rowKey2
  });
  const {
    updateCurrentRowData,
    updateCurrentRow,
    setCurrentRowKey,
    states: currentData
  } = useCurrent({
    data,
    rowKey: rowKey2
  });
  const setExpandRowKeysAdapter = (val) => {
    setExpandRowKeys(val);
    updateTreeExpandKeys(val);
  };
  const toggleRowExpansionAdapter = (row, expanded) => {
    const hasExpandColumn = columns2.value.some(({ type: type4 }) => type4 === "expand");
    if (hasExpandColumn) {
      toggleRowExpansion(row, expanded);
    } else {
      toggleTreeExpansion(row, expanded);
    }
  };
  return {
    assertRowKey,
    updateColumns,
    scheduleLayout,
    isSelected,
    clearSelection,
    cleanSelection,
    getSelectionRows,
    toggleRowSelection,
    _toggleAllSelection,
    toggleAllSelection: null,
    updateSelectionByRowKey,
    updateAllSelected,
    updateFilters,
    updateCurrentRow,
    updateSort,
    execFilter,
    execSort,
    execQuery,
    clearFilter,
    clearSort,
    toggleRowExpansion,
    setExpandRowKeysAdapter,
    setCurrentRowKey,
    toggleRowExpansionAdapter,
    isRowExpanded,
    updateExpandRows,
    updateCurrentRowData,
    loadOrToggle,
    updateTreeData,
    states: {
      tableSize,
      rowKey: rowKey2,
      data,
      _data,
      isComplex,
      _columns,
      originColumns,
      columns: columns2,
      fixedColumns,
      rightFixedColumns,
      leafColumns,
      fixedLeafColumns,
      rightFixedLeafColumns,
      updateOrderFns,
      leafColumnsLength,
      fixedLeafColumnsLength,
      rightFixedLeafColumnsLength,
      isAllSelected,
      selection,
      reserveSelection,
      selectOnIndeterminate,
      selectable,
      filters,
      filteredData,
      sortingColumn,
      sortProp,
      sortOrder,
      hoverRow,
      ...expandStates,
      ...treeStates,
      ...currentData
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/index.mjs
function replaceColumn(array4, column2) {
  return array4.map((item) => {
    var _a2;
    if (item.id === column2.id) {
      return column2;
    } else if ((_a2 = item.children) == null ? void 0 : _a2.length) {
      item.children = replaceColumn(item.children, column2);
    }
    return item;
  });
}
function sortColumn(array4) {
  array4.forEach((item) => {
    var _a2, _b;
    item.no = (_a2 = item.getColumnIndex) == null ? void 0 : _a2.call(item);
    if ((_b = item.children) == null ? void 0 : _b.length) {
      sortColumn(item.children);
    }
  });
  array4.sort((cur, pre) => cur.no - pre.no);
}
function useStore() {
  const instance = getCurrentInstance40();
  const watcher = useWatcher();
  const ns = useNamespace("table");
  const mutations = {
    setData(states, data) {
      const dataInstanceChanged = unref128(states._data) !== data;
      states.data.value = data;
      states._data.value = data;
      instance.store.execQuery();
      instance.store.updateCurrentRowData();
      instance.store.updateExpandRows();
      instance.store.updateTreeData(instance.store.states.defaultExpandAll.value);
      if (unref128(states.reserveSelection)) {
        instance.store.assertRowKey();
        instance.store.updateSelectionByRowKey();
      } else {
        if (dataInstanceChanged) {
          instance.store.clearSelection();
        } else {
          instance.store.cleanSelection();
        }
      }
      instance.store.updateAllSelected();
      if (instance.$ready) {
        instance.store.scheduleLayout();
      }
    },
    insertColumn(states, column2, parent2, updateColumnOrder) {
      const array4 = unref128(states._columns);
      let newColumns = [];
      if (!parent2) {
        array4.push(column2);
        newColumns = array4;
      } else {
        if (parent2 && !parent2.children) {
          parent2.children = [];
        }
        parent2.children.push(column2);
        newColumns = replaceColumn(array4, parent2);
      }
      sortColumn(newColumns);
      states._columns.value = newColumns;
      states.updateOrderFns.push(updateColumnOrder);
      if (column2.type === "selection") {
        states.selectable.value = column2.selectable;
        states.reserveSelection.value = column2.reserveSelection;
      }
      if (instance.$ready) {
        instance.store.updateColumns();
        instance.store.scheduleLayout();
      }
    },
    updateColumnOrder(states, column2) {
      var _a2;
      const newColumnIndex = (_a2 = column2.getColumnIndex) == null ? void 0 : _a2.call(column2);
      if (newColumnIndex === column2.no)
        return;
      sortColumn(states._columns.value);
      if (instance.$ready) {
        instance.store.updateColumns();
      }
    },
    removeColumn(states, column2, parent2, updateColumnOrder) {
      const array4 = unref128(states._columns) || [];
      if (parent2) {
        parent2.children.splice(parent2.children.findIndex((item) => item.id === column2.id), 1);
        nextTick39(() => {
          var _a2;
          if (((_a2 = parent2.children) == null ? void 0 : _a2.length) === 0) {
            delete parent2.children;
          }
        });
        states._columns.value = replaceColumn(array4, parent2);
      } else {
        const index = array4.indexOf(column2);
        if (index > -1) {
          array4.splice(index, 1);
          states._columns.value = array4;
        }
      }
      const updateFnIndex = states.updateOrderFns.indexOf(updateColumnOrder);
      updateFnIndex > -1 && states.updateOrderFns.splice(updateFnIndex, 1);
      if (instance.$ready) {
        instance.store.updateColumns();
        instance.store.scheduleLayout();
      }
    },
    sort(states, options) {
      const { prop, order, init } = options;
      if (prop) {
        const column2 = unref128(states.columns).find((column22) => column22.property === prop);
        if (column2) {
          column2.order = order;
          instance.store.updateSort(column2, prop, order);
          instance.store.commit("changeSortCondition", { init });
        }
      }
    },
    changeSortCondition(states, options) {
      const { sortingColumn, sortProp, sortOrder } = states;
      const columnValue = unref128(sortingColumn), propValue = unref128(sortProp), orderValue = unref128(sortOrder);
      if (orderValue === null) {
        states.sortingColumn.value = null;
        states.sortProp.value = null;
      }
      const ignore = { filter: true };
      instance.store.execQuery(ignore);
      if (!options || !(options.silent || options.init)) {
        instance.emit("sort-change", {
          column: columnValue,
          prop: propValue,
          order: orderValue
        });
      }
      instance.store.updateTableScrollY();
    },
    filterChange(_states, options) {
      const { column: column2, values: values2, silent } = options;
      const newFilters = instance.store.updateFilters(column2, values2);
      instance.store.execQuery();
      if (!silent) {
        instance.emit("filter-change", newFilters);
      }
      instance.store.updateTableScrollY();
    },
    toggleAllSelection() {
      instance.store.toggleAllSelection();
    },
    rowSelectedChanged(_states, row) {
      instance.store.toggleRowSelection(row);
      instance.store.updateAllSelected();
    },
    setHoverRow(states, row) {
      states.hoverRow.value = row;
    },
    setCurrentRow(_states, row) {
      instance.store.updateCurrentRow(row);
    }
  };
  const commit = function(name, ...args) {
    const mutations2 = instance.store.mutations;
    if (mutations2[name]) {
      mutations2[name].apply(instance, [instance.store.states].concat(args));
    } else {
      throw new Error(`Action not found: ${name}`);
    }
  };
  const updateTableScrollY = function() {
    nextTick39(() => instance.layout.updateScrollY.apply(instance.layout));
  };
  return {
    ns,
    ...watcher,
    mutations,
    commit,
    updateTableScrollY
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/store/helper.mjs
var InitialStateMap = {
  rowKey: "rowKey",
  defaultExpandAll: "defaultExpandAll",
  selectOnIndeterminate: "selectOnIndeterminate",
  indent: "indent",
  lazy: "lazy",
  data: "data",
  ["treeProps.hasChildren"]: {
    key: "lazyColumnIdentifier",
    default: "hasChildren"
  },
  ["treeProps.children"]: {
    key: "childrenColumnName",
    default: "children"
  }
};
function createStore(table, props) {
  if (!table) {
    throw new Error("Table is required.");
  }
  const store = useStore();
  store.toggleAllSelection = debounce_default(store._toggleAllSelection, 10);
  Object.keys(InitialStateMap).forEach((key) => {
    handleValue(getArrKeysValue(props, key), key, store);
  });
  proxyTableProps(store, props);
  return store;
}
function proxyTableProps(store, props) {
  Object.keys(InitialStateMap).forEach((key) => {
    watch72(() => getArrKeysValue(props, key), (value) => {
      handleValue(value, key, store);
    });
  });
}
function handleValue(value, propsKey, store) {
  let newVal = value;
  let storeKey = InitialStateMap[propsKey];
  if (typeof InitialStateMap[propsKey] === "object") {
    storeKey = storeKey.key;
    newVal = newVal || InitialStateMap[propsKey].default;
  }
  store.states[storeKey].value = newVal;
}
function getArrKeysValue(props, keys3) {
  if (keys3.includes(".")) {
    const keyList = keys3.split(".");
    let value = props;
    keyList.forEach((key) => {
      value = value[key];
    });
    return value;
  } else {
    return props[keys3];
  }
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-layout.mjs
import { ref as ref112, isRef as isRef12, nextTick as nextTick40 } from "vue";
import { hasOwn as hasOwn12 } from "@vue/shared";
var TableLayout = class {
  constructor(options) {
    this.observers = [];
    this.table = null;
    this.store = null;
    this.columns = [];
    this.fit = true;
    this.showHeader = true;
    this.height = ref112(null);
    this.scrollX = ref112(false);
    this.scrollY = ref112(false);
    this.bodyWidth = ref112(null);
    this.fixedWidth = ref112(null);
    this.rightFixedWidth = ref112(null);
    this.gutterWidth = 0;
    for (const name in options) {
      if (hasOwn12(options, name)) {
        if (isRef12(this[name])) {
          this[name].value = options[name];
        } else {
          this[name] = options[name];
        }
      }
    }
    if (!this.table) {
      throw new Error("Table is required for Table Layout");
    }
    if (!this.store) {
      throw new Error("Store is required for Table Layout");
    }
  }
  updateScrollY() {
    const height = this.height.value;
    if (height === null)
      return false;
    const scrollBarRef = this.table.refs.scrollBarRef;
    if (this.table.vnode.el && (scrollBarRef == null ? void 0 : scrollBarRef.wrapRef)) {
      let scrollY = true;
      const prevScrollY = this.scrollY.value;
      scrollY = scrollBarRef.wrapRef.scrollHeight > scrollBarRef.wrapRef.clientHeight;
      this.scrollY.value = scrollY;
      return prevScrollY !== scrollY;
    }
    return false;
  }
  setHeight(value, prop = "height") {
    if (!isClient)
      return;
    const el = this.table.vnode.el;
    value = parseHeight(value);
    this.height.value = Number(value);
    if (!el && (value || value === 0))
      return nextTick40(() => this.setHeight(value, prop));
    if (typeof value === "number") {
      el.style[prop] = `${value}px`;
      this.updateElsHeight();
    } else if (typeof value === "string") {
      el.style[prop] = value;
      this.updateElsHeight();
    }
  }
  setMaxHeight(value) {
    this.setHeight(value, "max-height");
  }
  getFlattenColumns() {
    const flattenColumns = [];
    const columns2 = this.table.store.states.columns.value;
    columns2.forEach((column2) => {
      if (column2.isColumnGroup) {
        flattenColumns.push.apply(flattenColumns, column2.columns);
      } else {
        flattenColumns.push(column2);
      }
    });
    return flattenColumns;
  }
  updateElsHeight() {
    this.updateScrollY();
    this.notifyObservers("scrollable");
  }
  headerDisplayNone(elm) {
    if (!elm)
      return true;
    let headerChild = elm;
    while (headerChild.tagName !== "DIV") {
      if (getComputedStyle(headerChild).display === "none") {
        return true;
      }
      headerChild = headerChild.parentElement;
    }
    return false;
  }
  updateColumnsWidth() {
    if (!isClient)
      return;
    const fit = this.fit;
    const bodyWidth = this.table.vnode.el.clientWidth;
    let bodyMinWidth = 0;
    const flattenColumns = this.getFlattenColumns();
    const flexColumns = flattenColumns.filter((column2) => typeof column2.width !== "number");
    flattenColumns.forEach((column2) => {
      if (typeof column2.width === "number" && column2.realWidth)
        column2.realWidth = null;
    });
    if (flexColumns.length > 0 && fit) {
      flattenColumns.forEach((column2) => {
        bodyMinWidth += Number(column2.width || column2.minWidth || 80);
      });
      if (bodyMinWidth <= bodyWidth) {
        this.scrollX.value = false;
        const totalFlexWidth = bodyWidth - bodyMinWidth;
        if (flexColumns.length === 1) {
          flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth;
        } else {
          const allColumnsWidth = flexColumns.reduce((prev, column2) => prev + Number(column2.minWidth || 80), 0);
          const flexWidthPerPixel = totalFlexWidth / allColumnsWidth;
          let noneFirstWidth = 0;
          flexColumns.forEach((column2, index) => {
            if (index === 0)
              return;
            const flexWidth = Math.floor(Number(column2.minWidth || 80) * flexWidthPerPixel);
            noneFirstWidth += flexWidth;
            column2.realWidth = Number(column2.minWidth || 80) + flexWidth;
          });
          flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;
        }
      } else {
        this.scrollX.value = true;
        flexColumns.forEach((column2) => {
          column2.realWidth = Number(column2.minWidth);
        });
      }
      this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth);
      this.table.state.resizeState.value.width = this.bodyWidth.value;
    } else {
      flattenColumns.forEach((column2) => {
        if (!column2.width && !column2.minWidth) {
          column2.realWidth = 80;
        } else {
          column2.realWidth = Number(column2.width || column2.minWidth);
        }
        bodyMinWidth += column2.realWidth;
      });
      this.scrollX.value = bodyMinWidth > bodyWidth;
      this.bodyWidth.value = bodyMinWidth;
    }
    const fixedColumns = this.store.states.fixedColumns.value;
    if (fixedColumns.length > 0) {
      let fixedWidth = 0;
      fixedColumns.forEach((column2) => {
        fixedWidth += Number(column2.realWidth || column2.width);
      });
      this.fixedWidth.value = fixedWidth;
    }
    const rightFixedColumns = this.store.states.rightFixedColumns.value;
    if (rightFixedColumns.length > 0) {
      let rightFixedWidth = 0;
      rightFixedColumns.forEach((column2) => {
        rightFixedWidth += Number(column2.realWidth || column2.width);
      });
      this.rightFixedWidth.value = rightFixedWidth;
    }
    this.notifyObservers("columns");
  }
  addObserver(observer) {
    this.observers.push(observer);
  }
  removeObserver(observer) {
    const index = this.observers.indexOf(observer);
    if (index !== -1) {
      this.observers.splice(index, 1);
    }
  }
  notifyObservers(event) {
    const observers = this.observers;
    observers.forEach((observer) => {
      var _a2, _b;
      switch (event) {
        case "columns":
          (_a2 = observer.state) == null ? void 0 : _a2.onColumnsChange(this);
          break;
        case "scrollable":
          (_b = observer.state) == null ? void 0 : _b.onScrollableChange(this);
          break;
        default:
          throw new Error(`Table Layout don't have event ${event}.`);
      }
    });
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-header/index.mjs
import { defineComponent as defineComponent142, getCurrentInstance as getCurrentInstance44, inject as inject66, ref as ref115, onMounted as onMounted50, nextTick as nextTick41, h as h14 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/filter-panel.mjs
import { defineComponent as defineComponent141, getCurrentInstance as getCurrentInstance41, ref as ref113, computed as computed146, watch as watch73, resolveComponent as resolveComponent13, resolveDirective as resolveDirective3, openBlock as openBlock116, createBlock as createBlock68, withCtx as withCtx64, createElementBlock as createElementBlock100, createElementVNode as createElementVNode64, normalizeClass as normalizeClass98, createVNode as createVNode56, Fragment as Fragment40, renderList as renderList27, createTextVNode as createTextVNode24, toDisplayString as toDisplayString57, withDirectives as withDirectives29 } from "vue";
var { CheckboxGroup: ElCheckboxGroup2 } = ElCheckbox;
var _sfc_main120 = defineComponent141({
  name: "ElTableFilterPanel",
  components: {
    ElCheckbox,
    ElCheckboxGroup: ElCheckboxGroup2,
    ElScrollbar,
    ElTooltip,
    ElIcon,
    ArrowDown: arrow_down_default,
    ArrowUp: arrow_up_default
  },
  directives: { ClickOutside },
  props: {
    placement: {
      type: String,
      default: "bottom-start"
    },
    store: {
      type: Object
    },
    column: {
      type: Object
    },
    upDataColumn: {
      type: Function
    }
  },
  setup(props) {
    const instance = getCurrentInstance41();
    const { t } = useLocale();
    const ns = useNamespace("table-filter");
    const parent2 = instance == null ? void 0 : instance.parent;
    if (!parent2.filterPanels.value[props.column.id]) {
      parent2.filterPanels.value[props.column.id] = instance;
    }
    const tooltipVisible = ref113(false);
    const tooltip = ref113(null);
    const filters = computed146(() => {
      return props.column && props.column.filters;
    });
    const filterValue = computed146({
      get: () => {
        var _a2;
        return (((_a2 = props.column) == null ? void 0 : _a2.filteredValue) || [])[0];
      },
      set: (value) => {
        if (filteredValue.value) {
          if (typeof value !== "undefined" && value !== null) {
            filteredValue.value.splice(0, 1, value);
          } else {
            filteredValue.value.splice(0, 1);
          }
        }
      }
    });
    const filteredValue = computed146({
      get() {
        if (props.column) {
          return props.column.filteredValue || [];
        }
        return [];
      },
      set(value) {
        if (props.column) {
          props.upDataColumn("filteredValue", value);
        }
      }
    });
    const multiple = computed146(() => {
      if (props.column) {
        return props.column.filterMultiple;
      }
      return true;
    });
    const isActive = (filter2) => {
      return filter2.value === filterValue.value;
    };
    const hidden = () => {
      tooltipVisible.value = false;
    };
    const showFilterPanel = (e) => {
      e.stopPropagation();
      tooltipVisible.value = !tooltipVisible.value;
    };
    const hideFilterPanel = () => {
      tooltipVisible.value = false;
    };
    const handleConfirm = () => {
      confirmFilter(filteredValue.value);
      hidden();
    };
    const handleReset = () => {
      filteredValue.value = [];
      confirmFilter(filteredValue.value);
      hidden();
    };
    const handleSelect = (_filterValue) => {
      filterValue.value = _filterValue;
      if (typeof _filterValue !== "undefined" && _filterValue !== null) {
        confirmFilter(filteredValue.value);
      } else {
        confirmFilter([]);
      }
      hidden();
    };
    const confirmFilter = (filteredValue2) => {
      props.store.commit("filterChange", {
        column: props.column,
        values: filteredValue2
      });
      props.store.updateAllSelected();
    };
    watch73(tooltipVisible, (value) => {
      if (props.column) {
        props.upDataColumn("filterOpened", value);
      }
    }, {
      immediate: true
    });
    const popperPaneRef = computed146(() => {
      var _a2, _b;
      return (_b = (_a2 = tooltip.value) == null ? void 0 : _a2.popperRef) == null ? void 0 : _b.contentRef;
    });
    return {
      tooltipVisible,
      multiple,
      filteredValue,
      filterValue,
      filters,
      handleConfirm,
      handleReset,
      handleSelect,
      isActive,
      t,
      ns,
      showFilterPanel,
      hideFilterPanel,
      popperPaneRef,
      tooltip
    };
  }
});
var _hoisted_158 = { key: 0 };
var _hoisted_237 = ["disabled"];
var _hoisted_319 = ["label", "onClick"];
function _sfc_render28(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_checkbox = resolveComponent13("el-checkbox");
  const _component_el_checkbox_group = resolveComponent13("el-checkbox-group");
  const _component_el_scrollbar = resolveComponent13("el-scrollbar");
  const _component_arrow_up = resolveComponent13("arrow-up");
  const _component_arrow_down = resolveComponent13("arrow-down");
  const _component_el_icon = resolveComponent13("el-icon");
  const _component_el_tooltip = resolveComponent13("el-tooltip");
  const _directive_click_outside = resolveDirective3("click-outside");
  return openBlock116(), createBlock68(_component_el_tooltip, {
    ref: "tooltip",
    visible: _ctx.tooltipVisible,
    offset: 0,
    placement: _ctx.placement,
    "show-arrow": false,
    "stop-popper-mouse-event": false,
    teleported: "",
    effect: "light",
    pure: "",
    "popper-class": _ctx.ns.b(),
    persistent: ""
  }, {
    content: withCtx64(() => [
      _ctx.multiple ? (openBlock116(), createElementBlock100("div", _hoisted_158, [
        createElementVNode64("div", {
          class: normalizeClass98(_ctx.ns.e("content"))
        }, [
          createVNode56(_component_el_scrollbar, {
            "wrap-class": _ctx.ns.e("wrap")
          }, {
            default: withCtx64(() => [
              createVNode56(_component_el_checkbox_group, {
                modelValue: _ctx.filteredValue,
                "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.filteredValue = $event),
                class: normalizeClass98(_ctx.ns.e("checkbox-group"))
              }, {
                default: withCtx64(() => [
                  (openBlock116(true), createElementBlock100(Fragment40, null, renderList27(_ctx.filters, (filter2) => {
                    return openBlock116(), createBlock68(_component_el_checkbox, {
                      key: filter2.value,
                      label: filter2.value
                    }, {
                      default: withCtx64(() => [
                        createTextVNode24(toDisplayString57(filter2.text), 1)
                      ]),
                      _: 2
                    }, 1032, ["label"]);
                  }), 128))
                ]),
                _: 1
              }, 8, ["modelValue", "class"])
            ]),
            _: 1
          }, 8, ["wrap-class"])
        ], 2),
        createElementVNode64("div", {
          class: normalizeClass98(_ctx.ns.e("bottom"))
        }, [
          createElementVNode64("button", {
            class: normalizeClass98({ [_ctx.ns.is("disabled")]: _ctx.filteredValue.length === 0 }),
            disabled: _ctx.filteredValue.length === 0,
            type: "button",
            onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleConfirm && _ctx.handleConfirm(...args))
          }, toDisplayString57(_ctx.t("el.table.confirmFilter")), 11, _hoisted_237),
          createElementVNode64("button", {
            type: "button",
            onClick: _cache[2] || (_cache[2] = (...args) => _ctx.handleReset && _ctx.handleReset(...args))
          }, toDisplayString57(_ctx.t("el.table.resetFilter")), 1)
        ], 2)
      ])) : (openBlock116(), createElementBlock100("ul", {
        key: 1,
        class: normalizeClass98(_ctx.ns.e("list"))
      }, [
        createElementVNode64("li", {
          class: normalizeClass98([
            _ctx.ns.e("list-item"),
            {
              [_ctx.ns.is("active")]: _ctx.filterValue === void 0 || _ctx.filterValue === null
            }
          ]),
          onClick: _cache[3] || (_cache[3] = ($event) => _ctx.handleSelect(null))
        }, toDisplayString57(_ctx.t("el.table.clearFilter")), 3),
        (openBlock116(true), createElementBlock100(Fragment40, null, renderList27(_ctx.filters, (filter2) => {
          return openBlock116(), createElementBlock100("li", {
            key: filter2.value,
            class: normalizeClass98([_ctx.ns.e("list-item"), _ctx.ns.is("active", _ctx.isActive(filter2))]),
            label: filter2.value,
            onClick: ($event) => _ctx.handleSelect(filter2.value)
          }, toDisplayString57(filter2.text), 11, _hoisted_319);
        }), 128))
      ], 2))
    ]),
    default: withCtx64(() => [
      withDirectives29((openBlock116(), createElementBlock100("span", {
        class: normalizeClass98([
          `${_ctx.ns.namespace.value}-table__column-filter-trigger`,
          `${_ctx.ns.namespace.value}-none-outline`
        ]),
        onClick: _cache[4] || (_cache[4] = (...args) => _ctx.showFilterPanel && _ctx.showFilterPanel(...args))
      }, [
        createVNode56(_component_el_icon, null, {
          default: withCtx64(() => [
            _ctx.column.filterOpened ? (openBlock116(), createBlock68(_component_arrow_up, { key: 0 })) : (openBlock116(), createBlock68(_component_arrow_down, { key: 1 }))
          ]),
          _: 1
        })
      ], 2)), [
        [_directive_click_outside, _ctx.hideFilterPanel, _ctx.popperPaneRef]
      ])
    ]),
    _: 1
  }, 8, ["visible", "placement", "popper-class"]);
}
var FilterPanel = _export_sfc(_sfc_main120, [["render", _sfc_render28], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/table/src/filter-panel.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/layout-observer.mjs
import { getCurrentInstance as getCurrentInstance42, onBeforeMount as onBeforeMount3, onMounted as onMounted49, onUpdated as onUpdated6, onUnmounted as onUnmounted5, computed as computed147 } from "vue";
function useLayoutObserver(root2) {
  const instance = getCurrentInstance42();
  onBeforeMount3(() => {
    tableLayout.value.addObserver(instance);
  });
  onMounted49(() => {
    onColumnsChange(tableLayout.value);
    onScrollableChange(tableLayout.value);
  });
  onUpdated6(() => {
    onColumnsChange(tableLayout.value);
    onScrollableChange(tableLayout.value);
  });
  onUnmounted5(() => {
    tableLayout.value.removeObserver(instance);
  });
  const tableLayout = computed147(() => {
    const layout2 = root2.layout;
    if (!layout2) {
      throw new Error("Can not find table layout.");
    }
    return layout2;
  });
  const onColumnsChange = (layout2) => {
    var _a2;
    const cols = ((_a2 = root2.vnode.el) == null ? void 0 : _a2.querySelectorAll("colgroup > col")) || [];
    if (!cols.length)
      return;
    const flattenColumns = layout2.getFlattenColumns();
    const columnsMap = {};
    flattenColumns.forEach((column2) => {
      columnsMap[column2.id] = column2;
    });
    for (let i = 0, j = cols.length; i < j; i++) {
      const col = cols[i];
      const name = col.getAttribute("name");
      const column2 = columnsMap[name];
      if (column2) {
        col.setAttribute("width", column2.realWidth || column2.width);
      }
    }
  };
  const onScrollableChange = (layout2) => {
    var _a2, _b;
    const cols = ((_a2 = root2.vnode.el) == null ? void 0 : _a2.querySelectorAll("colgroup > col[name=gutter]")) || [];
    for (let i = 0, j = cols.length; i < j; i++) {
      const col = cols[i];
      col.setAttribute("width", layout2.scrollY.value ? layout2.gutterWidth : "0");
    }
    const ths = ((_b = root2.vnode.el) == null ? void 0 : _b.querySelectorAll("th.gutter")) || [];
    for (let i = 0, j = ths.length; i < j; i++) {
      const th = ths[i];
      th.style.width = layout2.scrollY.value ? `${layout2.gutterWidth}px` : "0";
      th.style.display = layout2.scrollY.value ? "" : "none";
    }
  };
  return {
    tableLayout: tableLayout.value,
    onColumnsChange,
    onScrollableChange
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/tokens.mjs
var TABLE_INJECTION_KEY = Symbol("ElTable");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-header/event-helper.mjs
import { getCurrentInstance as getCurrentInstance43, inject as inject63, ref as ref114 } from "vue";
function useEvent(props, emit) {
  const instance = getCurrentInstance43();
  const parent2 = inject63(TABLE_INJECTION_KEY);
  const handleFilterClick = (event) => {
    event.stopPropagation();
    return;
  };
  const handleHeaderClick = (event, column2) => {
    if (!column2.filters && column2.sortable) {
      handleSortClick(event, column2, false);
    } else if (column2.filterable && !column2.sortable) {
      handleFilterClick(event);
    }
    parent2 == null ? void 0 : parent2.emit("header-click", column2, event);
  };
  const handleHeaderContextMenu = (event, column2) => {
    parent2 == null ? void 0 : parent2.emit("header-contextmenu", column2, event);
  };
  const draggingColumn = ref114(null);
  const dragging = ref114(false);
  const dragState = ref114({});
  const handleMouseDown = (event, column2) => {
    if (!isClient)
      return;
    if (column2.children && column2.children.length > 0)
      return;
    if (draggingColumn.value && props.border) {
      dragging.value = true;
      const table = parent2;
      emit("set-drag-visible", true);
      const tableEl = table == null ? void 0 : table.vnode.el;
      const tableLeft = tableEl.getBoundingClientRect().left;
      const columnEl = instance.vnode.el.querySelector(`th.${column2.id}`);
      const columnRect = columnEl.getBoundingClientRect();
      const minLeft = columnRect.left - tableLeft + 30;
      addClass(columnEl, "noclick");
      dragState.value = {
        startMouseLeft: event.clientX,
        startLeft: columnRect.right - tableLeft,
        startColumnLeft: columnRect.left - tableLeft,
        tableLeft
      };
      const resizeProxy = table == null ? void 0 : table.refs.resizeProxy;
      resizeProxy.style.left = `${dragState.value.startLeft}px`;
      document.onselectstart = function() {
        return false;
      };
      document.ondragstart = function() {
        return false;
      };
      const handleMouseMove2 = (event2) => {
        const deltaLeft = event2.clientX - dragState.value.startMouseLeft;
        const proxyLeft = dragState.value.startLeft + deltaLeft;
        resizeProxy.style.left = `${Math.max(minLeft, proxyLeft)}px`;
      };
      const handleMouseUp = () => {
        if (dragging.value) {
          const { startColumnLeft, startLeft } = dragState.value;
          const finalLeft = Number.parseInt(resizeProxy.style.left, 10);
          const columnWidth = finalLeft - startColumnLeft;
          column2.width = column2.realWidth = columnWidth;
          table == null ? void 0 : table.emit("header-dragend", column2.width, startLeft - startColumnLeft, column2, event);
          requestAnimationFrame(() => {
            props.store.scheduleLayout(false, true);
          });
          document.body.style.cursor = "";
          dragging.value = false;
          draggingColumn.value = null;
          dragState.value = {};
          emit("set-drag-visible", false);
        }
        document.removeEventListener("mousemove", handleMouseMove2);
        document.removeEventListener("mouseup", handleMouseUp);
        document.onselectstart = null;
        document.ondragstart = null;
        setTimeout(() => {
          removeClass(columnEl, "noclick");
        }, 0);
      };
      document.addEventListener("mousemove", handleMouseMove2);
      document.addEventListener("mouseup", handleMouseUp);
    }
  };
  const handleMouseMove = (event, column2) => {
    if (column2.children && column2.children.length > 0)
      return;
    const el = event.target;
    if (!isElement2(el)) {
      return;
    }
    const target2 = el == null ? void 0 : el.closest("th");
    if (!column2 || !column2.resizable)
      return;
    if (!dragging.value && props.border) {
      const rect = target2.getBoundingClientRect();
      const bodyStyle = document.body.style;
      if (rect.width > 12 && rect.right - event.pageX < 8) {
        bodyStyle.cursor = "col-resize";
        if (hasClass(target2, "is-sortable")) {
          target2.style.cursor = "col-resize";
        }
        draggingColumn.value = column2;
      } else if (!dragging.value) {
        bodyStyle.cursor = "";
        if (hasClass(target2, "is-sortable")) {
          target2.style.cursor = "pointer";
        }
        draggingColumn.value = null;
      }
    }
  };
  const handleMouseOut = () => {
    if (!isClient)
      return;
    document.body.style.cursor = "";
  };
  const toggleOrder = ({ order, sortOrders }) => {
    if (order === "")
      return sortOrders[0];
    const index = sortOrders.indexOf(order || null);
    return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1];
  };
  const handleSortClick = (event, column2, givenOrder) => {
    var _a2;
    event.stopPropagation();
    const order = column2.order === givenOrder ? null : givenOrder || toggleOrder(column2);
    const target2 = (_a2 = event.target) == null ? void 0 : _a2.closest("th");
    if (target2) {
      if (hasClass(target2, "noclick")) {
        removeClass(target2, "noclick");
        return;
      }
    }
    if (!column2.sortable)
      return;
    const states = props.store.states;
    let sortProp = states.sortProp.value;
    let sortOrder;
    const sortingColumn = states.sortingColumn.value;
    if (sortingColumn !== column2 || sortingColumn === column2 && sortingColumn.order === null) {
      if (sortingColumn) {
        sortingColumn.order = null;
      }
      states.sortingColumn.value = column2;
      sortProp = column2.property;
    }
    if (!order) {
      sortOrder = column2.order = null;
    } else {
      sortOrder = column2.order = order;
    }
    states.sortProp.value = sortProp;
    states.sortOrder.value = sortOrder;
    parent2 == null ? void 0 : parent2.store.commit("changeSortCondition");
  };
  return {
    handleHeaderClick,
    handleHeaderContextMenu,
    handleMouseDown,
    handleMouseMove,
    handleMouseOut,
    handleSortClick,
    handleFilterClick
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-header/style.helper.mjs
import { inject as inject64 } from "vue";
function useStyle(props) {
  const parent2 = inject64(TABLE_INJECTION_KEY);
  const ns = useNamespace("table");
  const getHeaderRowStyle = (rowIndex) => {
    const headerRowStyle = parent2 == null ? void 0 : parent2.props.headerRowStyle;
    if (typeof headerRowStyle === "function") {
      return headerRowStyle.call(null, { rowIndex });
    }
    return headerRowStyle;
  };
  const getHeaderRowClass = (rowIndex) => {
    const classes = [];
    const headerRowClassName = parent2 == null ? void 0 : parent2.props.headerRowClassName;
    if (typeof headerRowClassName === "string") {
      classes.push(headerRowClassName);
    } else if (typeof headerRowClassName === "function") {
      classes.push(headerRowClassName.call(null, { rowIndex }));
    }
    return classes.join(" ");
  };
  const getHeaderCellStyle = (rowIndex, columnIndex, row, column2) => {
    var _a2;
    let headerCellStyles = (_a2 = parent2 == null ? void 0 : parent2.props.headerCellStyle) != null ? _a2 : {};
    if (typeof headerCellStyles === "function") {
      headerCellStyles = headerCellStyles.call(null, {
        rowIndex,
        columnIndex,
        row,
        column: column2
      });
    }
    const fixedStyle = getFixedColumnOffset(columnIndex, column2.fixed, props.store, row);
    ensurePosition(fixedStyle, "left");
    ensurePosition(fixedStyle, "right");
    return Object.assign({}, headerCellStyles, fixedStyle);
  };
  const getHeaderCellClass = (rowIndex, columnIndex, row, column2) => {
    const fixedClasses = getFixedColumnsClass(ns.b(), columnIndex, column2.fixed, props.store, row);
    const classes = [
      column2.id,
      column2.order,
      column2.headerAlign,
      column2.className,
      column2.labelClassName,
      ...fixedClasses
    ];
    if (!column2.children) {
      classes.push("is-leaf");
    }
    if (column2.sortable) {
      classes.push("is-sortable");
    }
    const headerCellClassName = parent2 == null ? void 0 : parent2.props.headerCellClassName;
    if (typeof headerCellClassName === "string") {
      classes.push(headerCellClassName);
    } else if (typeof headerCellClassName === "function") {
      classes.push(headerCellClassName.call(null, {
        rowIndex,
        columnIndex,
        row,
        column: column2
      }));
    }
    classes.push(ns.e("cell"));
    return classes.filter((className) => Boolean(className)).join(" ");
  };
  return {
    getHeaderRowStyle,
    getHeaderRowClass,
    getHeaderCellStyle,
    getHeaderCellClass
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-header/utils-helper.mjs
import { inject as inject65, computed as computed148 } from "vue";
var getAllColumns = (columns2) => {
  const result2 = [];
  columns2.forEach((column2) => {
    if (column2.children) {
      result2.push(column2);
      result2.push.apply(result2, getAllColumns(column2.children));
    } else {
      result2.push(column2);
    }
  });
  return result2;
};
var convertToRows = (originColumns) => {
  let maxLevel = 1;
  const traverse = (column2, parent2) => {
    if (parent2) {
      column2.level = parent2.level + 1;
      if (maxLevel < column2.level) {
        maxLevel = column2.level;
      }
    }
    if (column2.children) {
      let colSpan = 0;
      column2.children.forEach((subColumn) => {
        traverse(subColumn, column2);
        colSpan += subColumn.colSpan;
      });
      column2.colSpan = colSpan;
    } else {
      column2.colSpan = 1;
    }
  };
  originColumns.forEach((column2) => {
    column2.level = 1;
    traverse(column2, void 0);
  });
  const rows = [];
  for (let i = 0; i < maxLevel; i++) {
    rows.push([]);
  }
  const allColumns = getAllColumns(originColumns);
  allColumns.forEach((column2) => {
    if (!column2.children) {
      column2.rowSpan = maxLevel - column2.level + 1;
    } else {
      column2.rowSpan = 1;
      column2.children.forEach((col) => col.isSubColumn = true);
    }
    rows[column2.level - 1].push(column2);
  });
  return rows;
};
function useUtils(props) {
  const parent2 = inject65(TABLE_INJECTION_KEY);
  const columnRows = computed148(() => {
    return convertToRows(props.store.states.originColumns.value);
  });
  const isGroup = computed148(() => {
    const result2 = columnRows.value.length > 1;
    if (result2 && parent2) {
      parent2.state.isGroup.value = true;
    }
    return result2;
  });
  const toggleAllSelection = (event) => {
    event.stopPropagation();
    parent2 == null ? void 0 : parent2.store.commit("toggleAllSelection");
  };
  return {
    isGroup,
    toggleAllSelection,
    columnRows
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-header/index.mjs
var TableHeader = defineComponent142({
  name: "ElTableHeader",
  components: {
    ElCheckbox
  },
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: true,
      type: Object
    },
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => {
        return {
          prop: "",
          order: ""
        };
      }
    }
  },
  setup(props, { emit }) {
    const instance = getCurrentInstance44();
    const parent2 = inject66(TABLE_INJECTION_KEY);
    const ns = useNamespace("table");
    const filterPanels = ref115({});
    const { onColumnsChange, onScrollableChange } = useLayoutObserver(parent2);
    onMounted50(async () => {
      await nextTick41();
      await nextTick41();
      const { prop, order } = props.defaultSort;
      parent2 == null ? void 0 : parent2.store.commit("sort", { prop, order, init: true });
    });
    const {
      handleHeaderClick,
      handleHeaderContextMenu,
      handleMouseDown,
      handleMouseMove,
      handleMouseOut,
      handleSortClick,
      handleFilterClick
    } = useEvent(props, emit);
    const {
      getHeaderRowStyle,
      getHeaderRowClass,
      getHeaderCellStyle,
      getHeaderCellClass
    } = useStyle(props);
    const { isGroup, toggleAllSelection, columnRows } = useUtils(props);
    instance.state = {
      onColumnsChange,
      onScrollableChange
    };
    instance.filterPanels = filterPanels;
    return {
      ns,
      filterPanels,
      onColumnsChange,
      onScrollableChange,
      columnRows,
      getHeaderRowClass,
      getHeaderRowStyle,
      getHeaderCellClass,
      getHeaderCellStyle,
      handleHeaderClick,
      handleHeaderContextMenu,
      handleMouseDown,
      handleMouseMove,
      handleMouseOut,
      handleSortClick,
      handleFilterClick,
      isGroup,
      toggleAllSelection
    };
  },
  render() {
    const {
      ns,
      isGroup,
      columnRows,
      getHeaderCellStyle,
      getHeaderCellClass,
      getHeaderRowClass,
      getHeaderRowStyle,
      handleHeaderClick,
      handleHeaderContextMenu,
      handleMouseDown,
      handleMouseMove,
      handleSortClick,
      handleMouseOut,
      store,
      $parent
    } = this;
    let rowSpan = 1;
    return h14("thead", {
      class: { [ns.is("group")]: isGroup }
    }, columnRows.map((subColumns, rowIndex) => h14("tr", {
      class: getHeaderRowClass(rowIndex),
      key: rowIndex,
      style: getHeaderRowStyle(rowIndex)
    }, subColumns.map((column2, cellIndex) => {
      if (column2.rowSpan > rowSpan) {
        rowSpan = column2.rowSpan;
      }
      return h14("th", {
        class: getHeaderCellClass(rowIndex, cellIndex, subColumns, column2),
        colspan: column2.colSpan,
        key: `${column2.id}-thead`,
        rowspan: column2.rowSpan,
        style: getHeaderCellStyle(rowIndex, cellIndex, subColumns, column2),
        onClick: ($event) => handleHeaderClick($event, column2),
        onContextmenu: ($event) => handleHeaderContextMenu($event, column2),
        onMousedown: ($event) => handleMouseDown($event, column2),
        onMousemove: ($event) => handleMouseMove($event, column2),
        onMouseout: handleMouseOut
      }, [
        h14("div", {
          class: [
            "cell",
            column2.filteredValue && column2.filteredValue.length > 0 ? "highlight" : ""
          ]
        }, [
          column2.renderHeader ? column2.renderHeader({
            column: column2,
            $index: cellIndex,
            store,
            _self: $parent
          }) : column2.label,
          column2.sortable && h14("span", {
            onClick: ($event) => handleSortClick($event, column2),
            class: "caret-wrapper"
          }, [
            h14("i", {
              onClick: ($event) => handleSortClick($event, column2, "ascending"),
              class: "sort-caret ascending"
            }),
            h14("i", {
              onClick: ($event) => handleSortClick($event, column2, "descending"),
              class: "sort-caret descending"
            })
          ]),
          column2.filterable && h14(FilterPanel, {
            store,
            placement: column2.filterPlacement || "bottom-start",
            column: column2,
            upDataColumn: (key, value) => {
              column2[key] = value;
            }
          })
        ])
      ]);
    }))));
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/index.mjs
import { defineComponent as defineComponent143, getCurrentInstance as getCurrentInstance45, inject as inject70, watch as watch74, onUnmounted as onUnmounted6, h as h17 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/render-helper.mjs
import { inject as inject69, computed as computed149, h as h16 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/events-helper.mjs
import { inject as inject67, ref as ref116, h as h15 } from "vue";
function useEvents(props) {
  const parent2 = inject67(TABLE_INJECTION_KEY);
  const tooltipContent = ref116("");
  const tooltipTrigger = ref116(h15("div"));
  const { nextZIndex } = useZIndex();
  const handleEvent = (event, row, name) => {
    var _a2;
    const table = parent2;
    const cell = getCell(event);
    let column2;
    const namespace = (_a2 = table == null ? void 0 : table.vnode.el) == null ? void 0 : _a2.dataset.prefix;
    if (cell) {
      column2 = getColumnByCell({
        columns: props.store.states.columns.value
      }, cell, namespace);
      if (column2) {
        table == null ? void 0 : table.emit(`cell-${name}`, row, column2, cell, event);
      }
    }
    table == null ? void 0 : table.emit(`row-${name}`, row, column2, event);
  };
  const handleDoubleClick = (event, row) => {
    handleEvent(event, row, "dblclick");
  };
  const handleClick = (event, row) => {
    props.store.commit("setCurrentRow", row);
    handleEvent(event, row, "click");
  };
  const handleContextMenu = (event, row) => {
    handleEvent(event, row, "contextmenu");
  };
  const handleMouseEnter = debounce_default((index) => {
    props.store.commit("setHoverRow", index);
  }, 30);
  const handleMouseLeave = debounce_default(() => {
    props.store.commit("setHoverRow", null);
  }, 30);
  const handleCellMouseEnter = (event, row, tooltipOptions) => {
    var _a2;
    const table = parent2;
    const cell = getCell(event);
    const namespace = (_a2 = table == null ? void 0 : table.vnode.el) == null ? void 0 : _a2.dataset.prefix;
    if (cell) {
      const column2 = getColumnByCell({
        columns: props.store.states.columns.value
      }, cell, namespace);
      const hoverState = table.hoverState = { cell, column: column2, row };
      table == null ? void 0 : table.emit("cell-mouse-enter", hoverState.row, hoverState.column, hoverState.cell, event);
    }
    if (!tooltipOptions) {
      return;
    }
    const cellChild = event.target.querySelector(".cell");
    if (!(hasClass(cellChild, `${namespace}-tooltip`) && cellChild.childNodes.length)) {
      return;
    }
    const range4 = document.createRange();
    range4.setStart(cellChild, 0);
    range4.setEnd(cellChild, cellChild.childNodes.length);
    const rangeWidth = Math.round(range4.getBoundingClientRect().width);
    const padding = (Number.parseInt(getStyle(cellChild, "paddingLeft"), 10) || 0) + (Number.parseInt(getStyle(cellChild, "paddingRight"), 10) || 0);
    if (rangeWidth + padding > cellChild.offsetWidth || cellChild.scrollWidth > cellChild.offsetWidth) {
      createTablePopper(parent2 == null ? void 0 : parent2.refs.tableWrapper, cell, cell.innerText || cell.textContent, nextZIndex, tooltipOptions);
    }
  };
  const handleCellMouseLeave = (event) => {
    const cell = getCell(event);
    if (!cell)
      return;
    const oldHoverState = parent2 == null ? void 0 : parent2.hoverState;
    parent2 == null ? void 0 : parent2.emit("cell-mouse-leave", oldHoverState == null ? void 0 : oldHoverState.row, oldHoverState == null ? void 0 : oldHoverState.column, oldHoverState == null ? void 0 : oldHoverState.cell, event);
  };
  return {
    handleDoubleClick,
    handleClick,
    handleContextMenu,
    handleMouseEnter,
    handleMouseLeave,
    handleCellMouseEnter,
    handleCellMouseLeave,
    tooltipContent,
    tooltipTrigger
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/styles-helper.mjs
import { inject as inject68 } from "vue";
function useStyles(props) {
  const parent2 = inject68(TABLE_INJECTION_KEY);
  const ns = useNamespace("table");
  const getRowStyle = (row, rowIndex) => {
    const rowStyle = parent2 == null ? void 0 : parent2.props.rowStyle;
    if (typeof rowStyle === "function") {
      return rowStyle.call(null, {
        row,
        rowIndex
      });
    }
    return rowStyle || null;
  };
  const getRowClass = (row, rowIndex) => {
    const classes = [ns.e("row")];
    if ((parent2 == null ? void 0 : parent2.props.highlightCurrentRow) && row === props.store.states.currentRow.value) {
      classes.push("current-row");
    }
    if (props.stripe && rowIndex % 2 === 1) {
      classes.push(ns.em("row", "striped"));
    }
    const rowClassName = parent2 == null ? void 0 : parent2.props.rowClassName;
    if (typeof rowClassName === "string") {
      classes.push(rowClassName);
    } else if (typeof rowClassName === "function") {
      classes.push(rowClassName.call(null, {
        row,
        rowIndex
      }));
    }
    return classes;
  };
  const getCellStyle = (rowIndex, columnIndex, row, column2) => {
    const cellStyle = parent2 == null ? void 0 : parent2.props.cellStyle;
    let cellStyles = cellStyle != null ? cellStyle : {};
    if (typeof cellStyle === "function") {
      cellStyles = cellStyle.call(null, {
        rowIndex,
        columnIndex,
        row,
        column: column2
      });
    }
    const fixedStyle = getFixedColumnOffset(columnIndex, props == null ? void 0 : props.fixed, props.store);
    ensurePosition(fixedStyle, "left");
    ensurePosition(fixedStyle, "right");
    return Object.assign({}, cellStyles, fixedStyle);
  };
  const getCellClass = (rowIndex, columnIndex, row, column2, offset2) => {
    const fixedClasses = getFixedColumnsClass(ns.b(), columnIndex, props == null ? void 0 : props.fixed, props.store, void 0, offset2);
    const classes = [column2.id, column2.align, column2.className, ...fixedClasses];
    const cellClassName = parent2 == null ? void 0 : parent2.props.cellClassName;
    if (typeof cellClassName === "string") {
      classes.push(cellClassName);
    } else if (typeof cellClassName === "function") {
      classes.push(cellClassName.call(null, {
        rowIndex,
        columnIndex,
        row,
        column: column2
      }));
    }
    classes.push(ns.e("cell"));
    return classes.filter((className) => Boolean(className)).join(" ");
  };
  const getSpan = (row, column2, rowIndex, columnIndex) => {
    let rowspan = 1;
    let colspan = 1;
    const fn2 = parent2 == null ? void 0 : parent2.props.spanMethod;
    if (typeof fn2 === "function") {
      const result2 = fn2({
        row,
        column: column2,
        rowIndex,
        columnIndex
      });
      if (Array.isArray(result2)) {
        rowspan = result2[0];
        colspan = result2[1];
      } else if (typeof result2 === "object") {
        rowspan = result2.rowspan;
        colspan = result2.colspan;
      }
    }
    return { rowspan, colspan };
  };
  const getColspanRealWidth = (columns2, colspan, index) => {
    if (colspan < 1) {
      return columns2[index].realWidth;
    }
    const widthArr = columns2.map(({ realWidth, width }) => realWidth || width).slice(index, index + colspan);
    return Number(widthArr.reduce((acc, width) => Number(acc) + Number(width), -1));
  };
  return {
    getRowStyle,
    getRowClass,
    getCellStyle,
    getCellClass,
    getSpan,
    getColspanRealWidth
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/render-helper.mjs
function useRender(props) {
  const parent2 = inject69(TABLE_INJECTION_KEY);
  const ns = useNamespace("table");
  const {
    handleDoubleClick,
    handleClick,
    handleContextMenu,
    handleMouseEnter,
    handleMouseLeave,
    handleCellMouseEnter,
    handleCellMouseLeave,
    tooltipContent,
    tooltipTrigger
  } = useEvents(props);
  const {
    getRowStyle,
    getRowClass,
    getCellStyle,
    getCellClass,
    getSpan,
    getColspanRealWidth
  } = useStyles(props);
  const firstDefaultColumnIndex = computed149(() => {
    return props.store.states.columns.value.findIndex(({ type: type4 }) => type4 === "default");
  });
  const getKeyOfRow = (row, index) => {
    const rowKey2 = parent2.props.rowKey;
    if (rowKey2) {
      return getRowIdentity(row, rowKey2);
    }
    return index;
  };
  const rowRender = (row, $index, treeRowData, expanded = false) => {
    const { tooltipEffect, tooltipOptions, store } = props;
    const { indent, columns: columns2 } = store.states;
    const rowClasses = getRowClass(row, $index);
    let display = true;
    if (treeRowData) {
      rowClasses.push(ns.em("row", `level-${treeRowData.level}`));
      display = treeRowData.display;
    }
    const displayStyle = display ? null : {
      display: "none"
    };
    return h16("tr", {
      style: [displayStyle, getRowStyle(row, $index)],
      class: rowClasses,
      key: getKeyOfRow(row, $index),
      onDblclick: ($event) => handleDoubleClick($event, row),
      onClick: ($event) => handleClick($event, row),
      onContextmenu: ($event) => handleContextMenu($event, row),
      onMouseenter: () => handleMouseEnter($index),
      onMouseleave: handleMouseLeave
    }, columns2.value.map((column2, cellIndex) => {
      const { rowspan, colspan } = getSpan(row, column2, $index, cellIndex);
      if (!rowspan || !colspan) {
        return null;
      }
      const columnData = { ...column2 };
      columnData.realWidth = getColspanRealWidth(columns2.value, colspan, cellIndex);
      const data = {
        store: props.store,
        _self: props.context || parent2,
        column: columnData,
        row,
        $index,
        cellIndex,
        expanded
      };
      if (cellIndex === firstDefaultColumnIndex.value && treeRowData) {
        data.treeNode = {
          indent: treeRowData.level * indent.value,
          level: treeRowData.level
        };
        if (typeof treeRowData.expanded === "boolean") {
          data.treeNode.expanded = treeRowData.expanded;
          if ("loading" in treeRowData) {
            data.treeNode.loading = treeRowData.loading;
          }
          if ("noLazyChildren" in treeRowData) {
            data.treeNode.noLazyChildren = treeRowData.noLazyChildren;
          }
        }
      }
      const baseKey = `${$index},${cellIndex}`;
      const patchKey = columnData.columnKey || columnData.rawColumnKey || "";
      const tdChildren = cellChildren(cellIndex, column2, data);
      const mergedTooltipOptions = column2.showOverflowTooltip && merge_default({
        effect: tooltipEffect
      }, tooltipOptions, column2.showOverflowTooltip);
      return h16("td", {
        style: getCellStyle($index, cellIndex, row, column2),
        class: getCellClass($index, cellIndex, row, column2, colspan - 1),
        key: `${patchKey}${baseKey}`,
        rowspan,
        colspan,
        onMouseenter: ($event) => handleCellMouseEnter($event, row, mergedTooltipOptions),
        onMouseleave: handleCellMouseLeave
      }, [tdChildren]);
    }));
  };
  const cellChildren = (cellIndex, column2, data) => {
    return column2.renderCell(data);
  };
  const wrappedRowRender = (row, $index) => {
    const store = props.store;
    const { isRowExpanded, assertRowKey } = store;
    const { treeData, lazyTreeNodeMap, childrenColumnName, rowKey: rowKey2 } = store.states;
    const columns2 = store.states.columns.value;
    const hasExpandColumn = columns2.some(({ type: type4 }) => type4 === "expand");
    if (hasExpandColumn) {
      const expanded = isRowExpanded(row);
      const tr = rowRender(row, $index, void 0, expanded);
      const renderExpanded = parent2.renderExpanded;
      if (expanded) {
        if (!renderExpanded) {
          console.error("[Element Error]renderExpanded is required.");
          return tr;
        }
        return [
          [
            tr,
            h16("tr", {
              key: `expanded-row__${tr.key}`
            }, [
              h16("td", {
                colspan: columns2.length,
                class: `${ns.e("cell")} ${ns.e("expanded-cell")}`
              }, [renderExpanded({ row, $index, store, expanded })])
            ])
          ]
        ];
      } else {
        return [[tr]];
      }
    } else if (Object.keys(treeData.value).length) {
      assertRowKey();
      const key = getRowIdentity(row, rowKey2.value);
      let cur = treeData.value[key];
      let treeRowData = null;
      if (cur) {
        treeRowData = {
          expanded: cur.expanded,
          level: cur.level,
          display: true
        };
        if (typeof cur.lazy === "boolean") {
          if (typeof cur.loaded === "boolean" && cur.loaded) {
            treeRowData.noLazyChildren = !(cur.children && cur.children.length);
          }
          treeRowData.loading = cur.loading;
        }
      }
      const tmp = [rowRender(row, $index, treeRowData)];
      if (cur) {
        let i = 0;
        const traverse = (children, parent22) => {
          if (!(children && children.length && parent22))
            return;
          children.forEach((node) => {
            const innerTreeRowData = {
              display: parent22.display && parent22.expanded,
              level: parent22.level + 1,
              expanded: false,
              noLazyChildren: false,
              loading: false
            };
            const childKey = getRowIdentity(node, rowKey2.value);
            if (childKey === void 0 || childKey === null) {
              throw new Error("For nested data item, row-key is required.");
            }
            cur = { ...treeData.value[childKey] };
            if (cur) {
              innerTreeRowData.expanded = cur.expanded;
              cur.level = cur.level || innerTreeRowData.level;
              cur.display = !!(cur.expanded && innerTreeRowData.display);
              if (typeof cur.lazy === "boolean") {
                if (typeof cur.loaded === "boolean" && cur.loaded) {
                  innerTreeRowData.noLazyChildren = !(cur.children && cur.children.length);
                }
                innerTreeRowData.loading = cur.loading;
              }
            }
            i++;
            tmp.push(rowRender(node, $index + i, innerTreeRowData));
            if (cur) {
              const nodes2 = lazyTreeNodeMap.value[childKey] || node[childrenColumnName.value];
              traverse(nodes2, cur);
            }
          });
        };
        cur.display = true;
        const nodes = lazyTreeNodeMap.value[key] || row[childrenColumnName.value];
        traverse(nodes, cur);
      }
      return tmp;
    } else {
      return rowRender(row, $index, void 0);
    }
  };
  return {
    wrappedRowRender,
    tooltipContent,
    tooltipTrigger
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/defaults.mjs
var defaultProps = {
  store: {
    required: true,
    type: Object
  },
  stripe: Boolean,
  tooltipEffect: String,
  tooltipOptions: {
    type: Object
  },
  context: {
    default: () => ({}),
    type: Object
  },
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  fixed: {
    type: String,
    default: ""
  },
  highlight: Boolean
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-body/index.mjs
var TableBody = defineComponent143({
  name: "ElTableBody",
  props: defaultProps,
  setup(props) {
    const instance = getCurrentInstance45();
    const parent2 = inject70(TABLE_INJECTION_KEY);
    const ns = useNamespace("table");
    const { wrappedRowRender, tooltipContent, tooltipTrigger } = useRender(props);
    const { onColumnsChange, onScrollableChange } = useLayoutObserver(parent2);
    watch74(props.store.states.hoverRow, (newVal, oldVal) => {
      if (!props.store.states.isComplex.value || !isClient)
        return;
      let raf = window.requestAnimationFrame;
      if (!raf) {
        raf = (fn2) => window.setTimeout(fn2, 16);
      }
      raf(() => {
        const el = instance == null ? void 0 : instance.vnode.el;
        const rows = Array.from((el == null ? void 0 : el.children) || []).filter((e) => e == null ? void 0 : e.classList.contains(`${ns.e("row")}`));
        const oldRow = rows[oldVal];
        const newRow = rows[newVal];
        if (oldRow) {
          removeClass(oldRow, "hover-row");
        }
        if (newRow) {
          addClass(newRow, "hover-row");
        }
      });
    });
    onUnmounted6(() => {
      var _a2;
      (_a2 = removePopper) == null ? void 0 : _a2();
    });
    return {
      ns,
      onColumnsChange,
      onScrollableChange,
      wrappedRowRender,
      tooltipContent,
      tooltipTrigger
    };
  },
  render() {
    const { wrappedRowRender, store } = this;
    const data = store.states.data.value || [];
    return h17("tbody", {}, [
      data.reduce((acc, row) => {
        return acc.concat(wrappedRowRender(row, acc.length));
      }, [])
    ]);
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-footer/index.mjs
import { defineComponent as defineComponent144, h as h19 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/h-helper.mjs
import { h as h18 } from "vue";
function hColgroup(props) {
  const isAuto = props.tableLayout === "auto";
  let columns2 = props.columns || [];
  if (isAuto) {
    if (columns2.every((column2) => column2.width === void 0)) {
      columns2 = [];
    }
  }
  const getPropsData = (column2) => {
    const propsData = {
      key: `${props.tableLayout}_${column2.id}`,
      style: {},
      name: void 0
    };
    if (isAuto) {
      propsData.style = {
        width: `${column2.width}px`
      };
    } else {
      propsData.name = column2.id;
    }
    return propsData;
  };
  return h18("colgroup", {}, columns2.map((column2) => h18("col", getPropsData(column2))));
}
hColgroup.props = ["columns", "tableLayout"];

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-footer/mapState-helper.mjs
import { inject as inject71, computed as computed150 } from "vue";
function useMapState() {
  const table = inject71(TABLE_INJECTION_KEY);
  const store = table == null ? void 0 : table.store;
  const leftFixedLeafCount = computed150(() => {
    return store.states.fixedLeafColumnsLength.value;
  });
  const rightFixedLeafCount = computed150(() => {
    return store.states.rightFixedColumns.value.length;
  });
  const columnsCount = computed150(() => {
    return store.states.columns.value.length;
  });
  const leftFixedCount = computed150(() => {
    return store.states.fixedColumns.value.length;
  });
  const rightFixedCount = computed150(() => {
    return store.states.rightFixedColumns.value.length;
  });
  return {
    leftFixedLeafCount,
    rightFixedLeafCount,
    columnsCount,
    leftFixedCount,
    rightFixedCount,
    columns: store.states.columns
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-footer/style-helper.mjs
function useStyle2(props) {
  const { columns: columns2 } = useMapState();
  const ns = useNamespace("table");
  const getCellClasses = (columns22, cellIndex) => {
    const column2 = columns22[cellIndex];
    const classes = [
      ns.e("cell"),
      column2.id,
      column2.align,
      column2.labelClassName,
      ...getFixedColumnsClass(ns.b(), cellIndex, column2.fixed, props.store)
    ];
    if (column2.className) {
      classes.push(column2.className);
    }
    if (!column2.children) {
      classes.push(ns.is("leaf"));
    }
    return classes;
  };
  const getCellStyles = (column2, cellIndex) => {
    const fixedStyle = getFixedColumnOffset(cellIndex, column2.fixed, props.store);
    ensurePosition(fixedStyle, "left");
    ensurePosition(fixedStyle, "right");
    return fixedStyle;
  };
  return {
    getCellClasses,
    getCellStyles,
    columns: columns2
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-footer/index.mjs
var TableFooter = defineComponent144({
  name: "ElTableFooter",
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: true,
      type: Object
    },
    summaryMethod: Function,
    sumText: String,
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => {
        return {
          prop: "",
          order: ""
        };
      }
    }
  },
  setup(props) {
    const { getCellClasses, getCellStyles, columns: columns2 } = useStyle2(props);
    const ns = useNamespace("table");
    return {
      ns,
      getCellClasses,
      getCellStyles,
      columns: columns2
    };
  },
  render() {
    const {
      columns: columns2,
      getCellStyles,
      getCellClasses,
      summaryMethod,
      sumText,
      ns
    } = this;
    const data = this.store.states.data.value;
    let sums = [];
    if (summaryMethod) {
      sums = summaryMethod({
        columns: columns2,
        data
      });
    } else {
      columns2.forEach((column2, index) => {
        if (index === 0) {
          sums[index] = sumText;
          return;
        }
        const values2 = data.map((item) => Number(item[column2.property]));
        const precisions = [];
        let notNumber = true;
        values2.forEach((value) => {
          if (!Number.isNaN(+value)) {
            notNumber = false;
            const decimal = `${value}`.split(".")[1];
            precisions.push(decimal ? decimal.length : 0);
          }
        });
        const precision = Math.max.apply(null, precisions);
        if (!notNumber) {
          sums[index] = values2.reduce((prev, curr) => {
            const value = Number(curr);
            if (!Number.isNaN(+value)) {
              return Number.parseFloat((prev + curr).toFixed(Math.min(precision, 20)));
            } else {
              return prev;
            }
          }, 0);
        } else {
          sums[index] = "";
        }
      });
    }
    return h19("table", {
      class: ns.e("footer"),
      cellspacing: "0",
      cellpadding: "0",
      border: "0"
    }, [
      hColgroup({
        columns: columns2
      }),
      h19("tbody", [
        h19("tr", {}, [
          ...columns2.map((column2, cellIndex) => h19("td", {
            key: cellIndex,
            colspan: column2.colSpan,
            rowspan: column2.rowSpan,
            class: getCellClasses(columns2, cellIndex),
            style: getCellStyles(column2, cellIndex)
          }, [
            h19("div", {
              class: ["cell", column2.labelClassName]
            }, [sums[cellIndex]])
          ]))
        ])
      ])
    ]);
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table/utils-helper.mjs
function useUtils2(store) {
  const setCurrentRow = (row) => {
    store.commit("setCurrentRow", row);
  };
  const getSelectionRows = () => {
    return store.getSelectionRows();
  };
  const toggleRowSelection = (row, selected) => {
    store.toggleRowSelection(row, selected, false);
    store.updateAllSelected();
  };
  const clearSelection = () => {
    store.clearSelection();
  };
  const clearFilter = (columnKeys) => {
    store.clearFilter(columnKeys);
  };
  const toggleAllSelection = () => {
    store.commit("toggleAllSelection");
  };
  const toggleRowExpansion = (row, expanded) => {
    store.toggleRowExpansionAdapter(row, expanded);
  };
  const clearSort = () => {
    store.clearSort();
  };
  const sort = (prop, order) => {
    store.commit("sort", { prop, order });
  };
  return {
    setCurrentRow,
    getSelectionRows,
    toggleRowSelection,
    clearSelection,
    clearFilter,
    toggleAllSelection,
    toggleRowExpansion,
    clearSort,
    sort
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table/style-helper.mjs
import { ref as ref117, watchEffect as watchEffect10, watch as watch75, unref as unref129, computed as computed151, onMounted as onMounted51, nextTick as nextTick42 } from "vue";
function useStyle3(props, layout2, store, table) {
  const isHidden2 = ref117(false);
  const renderExpanded = ref117(null);
  const resizeProxyVisible = ref117(false);
  const setDragVisible = (visible) => {
    resizeProxyVisible.value = visible;
  };
  const resizeState = ref117({
    width: null,
    height: null,
    headerHeight: null
  });
  const isGroup = ref117(false);
  const scrollbarViewStyle = {
    display: "inline-block",
    verticalAlign: "middle"
  };
  const tableWidth = ref117();
  const tableScrollHeight = ref117(0);
  const bodyScrollHeight = ref117(0);
  const headerScrollHeight = ref117(0);
  const footerScrollHeight = ref117(0);
  const appendScrollHeight = ref117(0);
  watchEffect10(() => {
    layout2.setHeight(props.height);
  });
  watchEffect10(() => {
    layout2.setMaxHeight(props.maxHeight);
  });
  watch75(() => [props.currentRowKey, store.states.rowKey], ([currentRowKey, rowKey2]) => {
    if (!unref129(rowKey2) || !unref129(currentRowKey))
      return;
    store.setCurrentRowKey(`${currentRowKey}`);
  }, {
    immediate: true
  });
  watch75(() => props.data, (data) => {
    table.store.commit("setData", data);
  }, {
    immediate: true,
    deep: true
  });
  watchEffect10(() => {
    if (props.expandRowKeys) {
      store.setExpandRowKeysAdapter(props.expandRowKeys);
    }
  });
  const handleMouseLeave = () => {
    table.store.commit("setHoverRow", null);
    if (table.hoverState)
      table.hoverState = null;
  };
  const handleHeaderFooterMousewheel = (event, data) => {
    const { pixelX, pixelY } = data;
    if (Math.abs(pixelX) >= Math.abs(pixelY)) {
      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;
    }
  };
  const shouldUpdateHeight = computed151(() => {
    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;
  });
  const tableBodyStyles = computed151(() => {
    return {
      width: layout2.bodyWidth.value ? `${layout2.bodyWidth.value}px` : ""
    };
  });
  const doLayout = () => {
    if (shouldUpdateHeight.value) {
      layout2.updateElsHeight();
    }
    layout2.updateColumnsWidth();
    requestAnimationFrame(syncPosition);
  };
  onMounted51(async () => {
    await nextTick42();
    store.updateColumns();
    bindEvents();
    requestAnimationFrame(doLayout);
    const el = table.vnode.el;
    const tableHeader = table.refs.headerWrapper;
    if (props.flexible && el && el.parentElement) {
      el.parentElement.style.minWidth = "0";
    }
    resizeState.value = {
      width: tableWidth.value = el.offsetWidth,
      height: el.offsetHeight,
      headerHeight: props.showHeader && tableHeader ? tableHeader.offsetHeight : null
    };
    store.states.columns.value.forEach((column2) => {
      if (column2.filteredValue && column2.filteredValue.length) {
        table.store.commit("filterChange", {
          column: column2,
          values: column2.filteredValue,
          silent: true
        });
      }
    });
    table.$ready = true;
  });
  const setScrollClassByEl = (el, className) => {
    if (!el)
      return;
    const classList = Array.from(el.classList).filter((item) => !item.startsWith("is-scrolling-"));
    classList.push(layout2.scrollX.value ? className : "is-scrolling-none");
    el.className = classList.join(" ");
  };
  const setScrollClass = (className) => {
    const { tableWrapper } = table.refs;
    setScrollClassByEl(tableWrapper, className);
  };
  const hasScrollClass = (className) => {
    const { tableWrapper } = table.refs;
    return !!(tableWrapper && tableWrapper.classList.contains(className));
  };
  const syncPosition = function() {
    if (!table.refs.scrollBarRef)
      return;
    if (!layout2.scrollX.value) {
      const scrollingNoneClass = "is-scrolling-none";
      if (!hasScrollClass(scrollingNoneClass)) {
        setScrollClass(scrollingNoneClass);
      }
      return;
    }
    const scrollContainer = table.refs.scrollBarRef.wrapRef;
    if (!scrollContainer)
      return;
    const { scrollLeft, offsetWidth, scrollWidth } = scrollContainer;
    const { headerWrapper, footerWrapper } = table.refs;
    if (headerWrapper)
      headerWrapper.scrollLeft = scrollLeft;
    if (footerWrapper)
      footerWrapper.scrollLeft = scrollLeft;
    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1;
    if (scrollLeft >= maxScrollLeftPosition) {
      setScrollClass("is-scrolling-right");
    } else if (scrollLeft === 0) {
      setScrollClass("is-scrolling-left");
    } else {
      setScrollClass("is-scrolling-middle");
    }
  };
  const bindEvents = () => {
    if (!table.refs.scrollBarRef)
      return;
    if (table.refs.scrollBarRef.wrapRef) {
      useEventListener(table.refs.scrollBarRef.wrapRef, "scroll", syncPosition, {
        passive: true
      });
    }
    if (props.fit) {
      useResizeObserver(table.vnode.el, resizeListener);
    } else {
      useEventListener(window, "resize", resizeListener);
    }
    useResizeObserver(table.refs.bodyWrapper, () => {
      var _a2, _b;
      resizeListener();
      (_b = (_a2 = table.refs) == null ? void 0 : _a2.scrollBarRef) == null ? void 0 : _b.update();
    });
  };
  const resizeListener = () => {
    var _a2, _b, _c, _d;
    const el = table.vnode.el;
    if (!table.$ready || !el)
      return;
    let shouldUpdateLayout = false;
    const {
      width: oldWidth,
      height: oldHeight,
      headerHeight: oldHeaderHeight
    } = resizeState.value;
    const width = tableWidth.value = el.offsetWidth;
    if (oldWidth !== width) {
      shouldUpdateLayout = true;
    }
    const height = el.offsetHeight;
    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {
      shouldUpdateLayout = true;
    }
    const tableHeader = props.tableLayout === "fixed" ? table.refs.headerWrapper : (_a2 = table.refs.tableHeaderRef) == null ? void 0 : _a2.$el;
    if (props.showHeader && (tableHeader == null ? void 0 : tableHeader.offsetHeight) !== oldHeaderHeight) {
      shouldUpdateLayout = true;
    }
    tableScrollHeight.value = ((_b = table.refs.tableWrapper) == null ? void 0 : _b.scrollHeight) || 0;
    headerScrollHeight.value = (tableHeader == null ? void 0 : tableHeader.scrollHeight) || 0;
    footerScrollHeight.value = ((_c = table.refs.footerWrapper) == null ? void 0 : _c.offsetHeight) || 0;
    appendScrollHeight.value = ((_d = table.refs.appendWrapper) == null ? void 0 : _d.offsetHeight) || 0;
    bodyScrollHeight.value = tableScrollHeight.value - headerScrollHeight.value - footerScrollHeight.value - appendScrollHeight.value;
    if (shouldUpdateLayout) {
      resizeState.value = {
        width,
        height,
        headerHeight: props.showHeader && (tableHeader == null ? void 0 : tableHeader.offsetHeight) || 0
      };
      doLayout();
    }
  };
  const tableSize = useFormSize();
  const bodyWidth = computed151(() => {
    const { bodyWidth: bodyWidth_, scrollY, gutterWidth } = layout2;
    return bodyWidth_.value ? `${bodyWidth_.value - (scrollY.value ? gutterWidth : 0)}px` : "";
  });
  const tableLayout = computed151(() => {
    if (props.maxHeight)
      return "fixed";
    return props.tableLayout;
  });
  const emptyBlockStyle = computed151(() => {
    if (props.data && props.data.length)
      return null;
    let height = "100%";
    if (props.height && bodyScrollHeight.value) {
      height = `${bodyScrollHeight.value}px`;
    }
    const width = tableWidth.value;
    return {
      width: width ? `${width}px` : "",
      height
    };
  });
  const tableInnerStyle = computed151(() => {
    if (props.height) {
      return {
        height: !Number.isNaN(Number(props.height)) ? `${props.height}px` : props.height
      };
    }
    if (props.maxHeight) {
      return {
        maxHeight: !Number.isNaN(Number(props.maxHeight)) ? `${props.maxHeight}px` : props.maxHeight
      };
    }
    return {};
  });
  const scrollbarStyle = computed151(() => {
    if (props.height) {
      return {
        height: "100%"
      };
    }
    if (props.maxHeight) {
      if (!Number.isNaN(Number(props.maxHeight))) {
        return {
          maxHeight: `${props.maxHeight - headerScrollHeight.value - footerScrollHeight.value}px`
        };
      } else {
        return {
          maxHeight: `calc(${props.maxHeight} - ${headerScrollHeight.value + footerScrollHeight.value}px)`
        };
      }
    }
    return {};
  });
  const handleFixedMousewheel = (event, data) => {
    const bodyWrapper = table.refs.bodyWrapper;
    if (Math.abs(data.spinY) > 0) {
      const currentScrollTop = bodyWrapper.scrollTop;
      if (data.pixelY < 0 && currentScrollTop !== 0) {
        event.preventDefault();
      }
      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {
        event.preventDefault();
      }
      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);
    } else {
      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);
    }
  };
  return {
    isHidden: isHidden2,
    renderExpanded,
    setDragVisible,
    isGroup,
    handleMouseLeave,
    handleHeaderFooterMousewheel,
    tableSize,
    emptyBlockStyle,
    handleFixedMousewheel,
    resizeProxyVisible,
    bodyWidth,
    resizeState,
    doLayout,
    tableBodyStyles,
    tableLayout,
    scrollbarViewStyle,
    tableInnerStyle,
    scrollbarStyle
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table/key-render-helper.mjs
import { ref as ref118, onMounted as onMounted52, onUnmounted as onUnmounted7 } from "vue";
function useKeyRender(table) {
  const observer = ref118();
  const initWatchDom = () => {
    const el = table.vnode.el;
    const columnsWrapper = el.querySelector(".hidden-columns");
    const config = { childList: true, subtree: true };
    const updateOrderFns = table.store.states.updateOrderFns;
    observer.value = new MutationObserver(() => {
      updateOrderFns.forEach((fn2) => fn2());
    });
    observer.value.observe(columnsWrapper, config);
  };
  onMounted52(() => {
    initWatchDom();
  });
  onUnmounted7(() => {
    var _a2;
    (_a2 = observer.value) == null ? void 0 : _a2.disconnect();
  });
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table/defaults.mjs
var defaultProps2 = {
  data: {
    type: Array,
    default: () => []
  },
  size: useSizeProp,
  width: [String, Number],
  height: [String, Number],
  maxHeight: [String, Number],
  fit: {
    type: Boolean,
    default: true
  },
  stripe: Boolean,
  border: Boolean,
  rowKey: [String, Function],
  showHeader: {
    type: Boolean,
    default: true
  },
  showSummary: Boolean,
  sumText: String,
  summaryMethod: Function,
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  cellClassName: [String, Function],
  cellStyle: [Object, Function],
  headerRowClassName: [String, Function],
  headerRowStyle: [Object, Function],
  headerCellClassName: [String, Function],
  headerCellStyle: [Object, Function],
  highlightCurrentRow: Boolean,
  currentRowKey: [String, Number],
  emptyText: String,
  expandRowKeys: Array,
  defaultExpandAll: Boolean,
  defaultSort: Object,
  tooltipEffect: String,
  tooltipOptions: Object,
  spanMethod: Function,
  selectOnIndeterminate: {
    type: Boolean,
    default: true
  },
  indent: {
    type: Number,
    default: 16
  },
  treeProps: {
    type: Object,
    default: () => {
      return {
        hasChildren: "hasChildren",
        children: "children"
      };
    }
  },
  lazy: Boolean,
  load: Function,
  style: {
    type: Object,
    default: () => ({})
  },
  className: {
    type: String,
    default: ""
  },
  tableLayout: {
    type: String,
    default: "fixed"
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: false
  },
  flexible: Boolean,
  showOverflowTooltip: [Boolean, Object]
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/composables/use-scrollbar.mjs
import { ref as ref119 } from "vue";
var useScrollbar = () => {
  const scrollBarRef = ref119();
  const scrollTo = (options, yCoord) => {
    const scrollbar = scrollBarRef.value;
    if (scrollbar) {
      scrollbar.scrollTo(options, yCoord);
    }
  };
  const setScrollPosition = (position, offset2) => {
    const scrollbar = scrollBarRef.value;
    if (scrollbar && isNumber3(offset2) && ["Top", "Left"].includes(position)) {
      scrollbar[`setScroll${position}`](offset2);
    }
  };
  const setScrollTop = (top) => setScrollPosition("Top", top);
  const setScrollLeft = (left2) => setScrollPosition("Left", left2);
  return {
    scrollBarRef,
    scrollTo,
    setScrollTop,
    setScrollLeft
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table.mjs
var tableIdSeed = 1;
var _sfc_main121 = defineComponent145({
  name: "ElTable",
  directives: {
    Mousewheel
  },
  components: {
    TableHeader,
    TableBody,
    TableFooter,
    ElScrollbar,
    hColgroup
  },
  props: defaultProps2,
  emits: [
    "select",
    "select-all",
    "selection-change",
    "cell-mouse-enter",
    "cell-mouse-leave",
    "cell-contextmenu",
    "cell-click",
    "cell-dblclick",
    "row-click",
    "row-contextmenu",
    "row-dblclick",
    "header-click",
    "header-contextmenu",
    "sort-change",
    "filter-change",
    "current-change",
    "header-dragend",
    "expand-change"
  ],
  setup(props) {
    const { t } = useLocale();
    const ns = useNamespace("table");
    const table = getCurrentInstance46();
    provide37(TABLE_INJECTION_KEY, table);
    const store = createStore(table, props);
    table.store = store;
    const layout2 = new TableLayout({
      store: table.store,
      table,
      fit: props.fit,
      showHeader: props.showHeader
    });
    table.layout = layout2;
    const isEmpty3 = computed152(() => (store.states.data.value || []).length === 0);
    const {
      setCurrentRow,
      getSelectionRows,
      toggleRowSelection,
      clearSelection,
      clearFilter,
      toggleAllSelection,
      toggleRowExpansion,
      clearSort,
      sort
    } = useUtils2(store);
    const {
      isHidden: isHidden2,
      renderExpanded,
      setDragVisible,
      isGroup,
      handleMouseLeave,
      handleHeaderFooterMousewheel,
      tableSize,
      emptyBlockStyle,
      handleFixedMousewheel,
      resizeProxyVisible,
      bodyWidth,
      resizeState,
      doLayout,
      tableBodyStyles,
      tableLayout,
      scrollbarViewStyle,
      tableInnerStyle,
      scrollbarStyle
    } = useStyle3(props, layout2, store, table);
    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } = useScrollbar();
    const debouncedUpdateLayout = debounce_default(doLayout, 50);
    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`;
    table.tableId = tableId;
    table.state = {
      isGroup,
      resizeState,
      doLayout,
      debouncedUpdateLayout
    };
    const computedSumText = computed152(() => props.sumText || t("el.table.sumText"));
    const computedEmptyText = computed152(() => {
      return props.emptyText || t("el.table.emptyText");
    });
    useKeyRender(table);
    return {
      ns,
      layout: layout2,
      store,
      handleHeaderFooterMousewheel,
      handleMouseLeave,
      tableId,
      tableSize,
      isHidden: isHidden2,
      isEmpty: isEmpty3,
      renderExpanded,
      resizeProxyVisible,
      resizeState,
      isGroup,
      bodyWidth,
      tableBodyStyles,
      emptyBlockStyle,
      debouncedUpdateLayout,
      handleFixedMousewheel,
      setCurrentRow,
      getSelectionRows,
      toggleRowSelection,
      clearSelection,
      clearFilter,
      toggleAllSelection,
      toggleRowExpansion,
      clearSort,
      doLayout,
      sort,
      t,
      setDragVisible,
      context: table,
      computedSumText,
      computedEmptyText,
      tableLayout,
      scrollbarViewStyle,
      tableInnerStyle,
      scrollbarStyle,
      scrollBarRef,
      scrollTo,
      setScrollLeft,
      setScrollTop
    };
  }
});
var _hoisted_159 = ["data-prefix"];
var _hoisted_238 = {
  ref: "hiddenColumns",
  class: "hidden-columns"
};
function _sfc_render29(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_hColgroup = resolveComponent14("hColgroup");
  const _component_table_header = resolveComponent14("table-header");
  const _component_table_body = resolveComponent14("table-body");
  const _component_el_scrollbar = resolveComponent14("el-scrollbar");
  const _component_table_footer = resolveComponent14("table-footer");
  const _directive_mousewheel = resolveDirective4("mousewheel");
  return openBlock117(), createElementBlock101("div", {
    ref: "tableWrapper",
    class: normalizeClass99([
      {
        [_ctx.ns.m("fit")]: _ctx.fit,
        [_ctx.ns.m("striped")]: _ctx.stripe,
        [_ctx.ns.m("border")]: _ctx.border || _ctx.isGroup,
        [_ctx.ns.m("hidden")]: _ctx.isHidden,
        [_ctx.ns.m("group")]: _ctx.isGroup,
        [_ctx.ns.m("fluid-height")]: _ctx.maxHeight,
        [_ctx.ns.m("scrollable-x")]: _ctx.layout.scrollX.value,
        [_ctx.ns.m("scrollable-y")]: _ctx.layout.scrollY.value,
        [_ctx.ns.m("enable-row-hover")]: !_ctx.store.states.isComplex.value,
        [_ctx.ns.m("enable-row-transition")]: (_ctx.store.states.data.value || []).length !== 0 && (_ctx.store.states.data.value || []).length < 100,
        "has-footer": _ctx.showSummary
      },
      _ctx.ns.m(_ctx.tableSize),
      _ctx.className,
      _ctx.ns.b(),
      _ctx.ns.m(`layout-${_ctx.tableLayout}`)
    ]),
    style: normalizeStyle48(_ctx.style),
    "data-prefix": _ctx.ns.namespace.value,
    onMouseleave: _cache[0] || (_cache[0] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args))
  }, [
    createElementVNode65("div", {
      class: normalizeClass99(_ctx.ns.e("inner-wrapper")),
      style: normalizeStyle48(_ctx.tableInnerStyle)
    }, [
      createElementVNode65("div", _hoisted_238, [
        renderSlot92(_ctx.$slots, "default")
      ], 512),
      _ctx.showHeader && _ctx.tableLayout === "fixed" ? withDirectives30((openBlock117(), createElementBlock101("div", {
        key: 0,
        ref: "headerWrapper",
        class: normalizeClass99(_ctx.ns.e("header-wrapper"))
      }, [
        createElementVNode65("table", {
          ref: "tableHeader",
          class: normalizeClass99(_ctx.ns.e("header")),
          style: normalizeStyle48(_ctx.tableBodyStyles),
          border: "0",
          cellpadding: "0",
          cellspacing: "0"
        }, [
          createVNode57(_component_hColgroup, {
            columns: _ctx.store.states.columns.value,
            "table-layout": _ctx.tableLayout
          }, null, 8, ["columns", "table-layout"]),
          createVNode57(_component_table_header, {
            ref: "tableHeaderRef",
            border: _ctx.border,
            "default-sort": _ctx.defaultSort,
            store: _ctx.store,
            onSetDragVisible: _ctx.setDragVisible
          }, null, 8, ["border", "default-sort", "store", "onSetDragVisible"])
        ], 6)
      ], 2)), [
        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]
      ]) : createCommentVNode58("v-if", true),
      createElementVNode65("div", {
        ref: "bodyWrapper",
        class: normalizeClass99(_ctx.ns.e("body-wrapper"))
      }, [
        createVNode57(_component_el_scrollbar, {
          ref: "scrollBarRef",
          "view-style": _ctx.scrollbarViewStyle,
          "wrap-style": _ctx.scrollbarStyle,
          always: _ctx.scrollbarAlwaysOn
        }, {
          default: withCtx65(() => [
            createElementVNode65("table", {
              ref: "tableBody",
              class: normalizeClass99(_ctx.ns.e("body")),
              cellspacing: "0",
              cellpadding: "0",
              border: "0",
              style: normalizeStyle48({
                width: _ctx.bodyWidth,
                tableLayout: _ctx.tableLayout
              })
            }, [
              createVNode57(_component_hColgroup, {
                columns: _ctx.store.states.columns.value,
                "table-layout": _ctx.tableLayout
              }, null, 8, ["columns", "table-layout"]),
              _ctx.showHeader && _ctx.tableLayout === "auto" ? (openBlock117(), createBlock69(_component_table_header, {
                key: 0,
                ref: "tableHeaderRef",
                border: _ctx.border,
                "default-sort": _ctx.defaultSort,
                store: _ctx.store,
                onSetDragVisible: _ctx.setDragVisible
              }, null, 8, ["border", "default-sort", "store", "onSetDragVisible"])) : createCommentVNode58("v-if", true),
              createVNode57(_component_table_body, {
                context: _ctx.context,
                highlight: _ctx.highlightCurrentRow,
                "row-class-name": _ctx.rowClassName,
                "tooltip-effect": _ctx.tooltipEffect,
                "tooltip-options": _ctx.tooltipOptions,
                "row-style": _ctx.rowStyle,
                store: _ctx.store,
                stripe: _ctx.stripe
              }, null, 8, ["context", "highlight", "row-class-name", "tooltip-effect", "tooltip-options", "row-style", "store", "stripe"])
            ], 6),
            _ctx.isEmpty ? (openBlock117(), createElementBlock101("div", {
              key: 0,
              ref: "emptyBlock",
              style: normalizeStyle48(_ctx.emptyBlockStyle),
              class: normalizeClass99(_ctx.ns.e("empty-block"))
            }, [
              createElementVNode65("span", {
                class: normalizeClass99(_ctx.ns.e("empty-text"))
              }, [
                renderSlot92(_ctx.$slots, "empty", {}, () => [
                  createTextVNode25(toDisplayString58(_ctx.computedEmptyText), 1)
                ])
              ], 2)
            ], 6)) : createCommentVNode58("v-if", true),
            _ctx.$slots.append ? (openBlock117(), createElementBlock101("div", {
              key: 1,
              ref: "appendWrapper",
              class: normalizeClass99(_ctx.ns.e("append-wrapper"))
            }, [
              renderSlot92(_ctx.$slots, "append")
            ], 2)) : createCommentVNode58("v-if", true)
          ]),
          _: 3
        }, 8, ["view-style", "wrap-style", "always"])
      ], 2),
      _ctx.showSummary ? withDirectives30((openBlock117(), createElementBlock101("div", {
        key: 1,
        ref: "footerWrapper",
        class: normalizeClass99(_ctx.ns.e("footer-wrapper"))
      }, [
        createVNode57(_component_table_footer, {
          border: _ctx.border,
          "default-sort": _ctx.defaultSort,
          store: _ctx.store,
          style: normalizeStyle48(_ctx.tableBodyStyles),
          "sum-text": _ctx.computedSumText,
          "summary-method": _ctx.summaryMethod
        }, null, 8, ["border", "default-sort", "store", "style", "sum-text", "summary-method"])
      ], 2)), [
        [vShow21, !_ctx.isEmpty],
        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]
      ]) : createCommentVNode58("v-if", true),
      _ctx.border || _ctx.isGroup ? (openBlock117(), createElementBlock101("div", {
        key: 2,
        class: normalizeClass99(_ctx.ns.e("border-left-patch"))
      }, null, 2)) : createCommentVNode58("v-if", true)
    ], 6),
    withDirectives30(createElementVNode65("div", {
      ref: "resizeProxy",
      class: normalizeClass99(_ctx.ns.e("column-resize-proxy"))
    }, null, 2), [
      [vShow21, _ctx.resizeProxyVisible]
    ])
  ], 46, _hoisted_159);
}
var Table = _export_sfc(_sfc_main121, [["render", _sfc_render29], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/table/src/table.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-column/index.mjs
import { defineComponent as defineComponent146, getCurrentInstance as getCurrentInstance49, ref as ref121, computed as computed154, onBeforeMount as onBeforeMount4, onMounted as onMounted53, onBeforeUnmount as onBeforeUnmount23, Fragment as Fragment41, h as h22 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/config.mjs
import { h as h20 } from "vue";
var defaultClassNames = {
  selection: "table-column--selection",
  expand: "table__expand-column"
};
var cellStarts = {
  default: {
    order: ""
  },
  selection: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  expand: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  index: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  }
};
var getDefaultClassName = (type4) => {
  return defaultClassNames[type4] || "";
};
var cellForced = {
  selection: {
    renderHeader({ store }) {
      function isDisabled() {
        return store.states.data.value && store.states.data.value.length === 0;
      }
      return h20(ElCheckbox, {
        disabled: isDisabled(),
        size: store.states.tableSize.value,
        indeterminate: store.states.selection.value.length > 0 && !store.states.isAllSelected.value,
        "onUpdate:modelValue": store.toggleAllSelection,
        modelValue: store.states.isAllSelected.value
      });
    },
    renderCell({
      row,
      column: column2,
      store,
      $index
    }) {
      return h20(ElCheckbox, {
        disabled: column2.selectable ? !column2.selectable.call(null, row, $index) : false,
        size: store.states.tableSize.value,
        onChange: () => {
          store.commit("rowSelectedChanged", row);
        },
        onClick: (event) => event.stopPropagation(),
        modelValue: store.isSelected(row)
      });
    },
    sortable: false,
    resizable: false
  },
  index: {
    renderHeader({ column: column2 }) {
      return column2.label || "#";
    },
    renderCell({
      column: column2,
      $index
    }) {
      let i = $index + 1;
      const index = column2.index;
      if (typeof index === "number") {
        i = $index + index;
      } else if (typeof index === "function") {
        i = index($index);
      }
      return h20("div", {}, [i]);
    },
    sortable: false
  },
  expand: {
    renderHeader({ column: column2 }) {
      return column2.label || "";
    },
    renderCell({
      row,
      store,
      expanded
    }) {
      const { ns } = store;
      const classes = [ns.e("expand-icon")];
      if (expanded) {
        classes.push(ns.em("expand-icon", "expanded"));
      }
      const callback = function(e) {
        e.stopPropagation();
        store.toggleRowExpansion(row);
      };
      return h20("div", {
        class: classes,
        onClick: callback
      }, {
        default: () => {
          return [
            h20(ElIcon, null, {
              default: () => {
                return [h20(arrow_right_default)];
              }
            })
          ];
        }
      });
    },
    sortable: false,
    resizable: false
  }
};
function defaultRenderCell({
  row,
  column: column2,
  $index
}) {
  var _a2;
  const property2 = column2.property;
  const value = property2 && getProp(row, property2).value;
  if (column2 && column2.formatter) {
    return column2.formatter(row, column2, value, $index);
  }
  return ((_a2 = value == null ? void 0 : value.toString) == null ? void 0 : _a2.call(value)) || "";
}
function treeCellPrefix({
  row,
  treeNode,
  store
}, createPlaceholder = false) {
  const { ns } = store;
  if (!treeNode) {
    if (createPlaceholder) {
      return [
        h20("span", {
          class: ns.e("placeholder")
        })
      ];
    }
    return null;
  }
  const ele = [];
  const callback = function(e) {
    e.stopPropagation();
    if (treeNode.loading) {
      return;
    }
    store.loadOrToggle(row);
  };
  if (treeNode.indent) {
    ele.push(h20("span", {
      class: ns.e("indent"),
      style: { "padding-left": `${treeNode.indent}px` }
    }));
  }
  if (typeof treeNode.expanded === "boolean" && !treeNode.noLazyChildren) {
    const expandClasses = [
      ns.e("expand-icon"),
      treeNode.expanded ? ns.em("expand-icon", "expanded") : ""
    ];
    let icon = arrow_right_default;
    if (treeNode.loading) {
      icon = loading_default;
    }
    ele.push(h20("div", {
      class: expandClasses,
      onClick: callback
    }, {
      default: () => {
        return [
          h20(ElIcon, { class: { [ns.is("loading")]: treeNode.loading } }, {
            default: () => [h20(icon)]
          })
        ];
      }
    }));
  } else {
    ele.push(h20("span", {
      class: ns.e("placeholder")
    }));
  }
  return ele;
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-column/watcher-helper.mjs
import { getCurrentInstance as getCurrentInstance47, watch as watch76 } from "vue";
import { hasOwn as hasOwn13 } from "@vue/shared";
function getAllAliases(props, aliases) {
  return props.reduce((prev, cur) => {
    prev[cur] = cur;
    return prev;
  }, aliases);
}
function useWatcher2(owner, props_) {
  const instance = getCurrentInstance47();
  const registerComplexWatchers = () => {
    const props = ["fixed"];
    const aliases = {
      realWidth: "width",
      realMinWidth: "minWidth"
    };
    const allAliases = getAllAliases(props, aliases);
    Object.keys(allAliases).forEach((key) => {
      const columnKey = aliases[key];
      if (hasOwn13(props_, columnKey)) {
        watch76(() => props_[columnKey], (newVal) => {
          let value = newVal;
          if (columnKey === "width" && key === "realWidth") {
            value = parseWidth(newVal);
          }
          if (columnKey === "minWidth" && key === "realMinWidth") {
            value = parseMinWidth(newVal);
          }
          instance.columnConfig.value[columnKey] = value;
          instance.columnConfig.value[key] = value;
          const updateColumns = columnKey === "fixed";
          owner.value.store.scheduleLayout(updateColumns);
        });
      }
    });
  };
  const registerNormalWatchers = () => {
    const props = [
      "label",
      "filters",
      "filterMultiple",
      "sortable",
      "index",
      "formatter",
      "className",
      "labelClassName",
      "showOverflowTooltip"
    ];
    const aliases = {
      property: "prop",
      align: "realAlign",
      headerAlign: "realHeaderAlign"
    };
    const allAliases = getAllAliases(props, aliases);
    Object.keys(allAliases).forEach((key) => {
      const columnKey = aliases[key];
      if (hasOwn13(props_, columnKey)) {
        watch76(() => props_[columnKey], (newVal) => {
          instance.columnConfig.value[key] = newVal;
        });
      }
    });
  };
  return {
    registerComplexWatchers,
    registerNormalWatchers
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-column/render-helper.mjs
import { getCurrentInstance as getCurrentInstance48, ref as ref120, watchEffect as watchEffect11, computed as computed153, unref as unref130, h as h21, Comment as Comment3 } from "vue";
function useRender2(props, slots, owner) {
  const instance = getCurrentInstance48();
  const columnId = ref120("");
  const isSubColumn = ref120(false);
  const realAlign = ref120();
  const realHeaderAlign = ref120();
  const ns = useNamespace("table");
  watchEffect11(() => {
    realAlign.value = props.align ? `is-${props.align}` : null;
    realAlign.value;
  });
  watchEffect11(() => {
    realHeaderAlign.value = props.headerAlign ? `is-${props.headerAlign}` : realAlign.value;
    realHeaderAlign.value;
  });
  const columnOrTableParent = computed153(() => {
    let parent2 = instance.vnode.vParent || instance.parent;
    while (parent2 && !parent2.tableId && !parent2.columnId) {
      parent2 = parent2.vnode.vParent || parent2.parent;
    }
    return parent2;
  });
  const hasTreeColumn = computed153(() => {
    const { store } = instance.parent;
    if (!store)
      return false;
    const { treeData } = store.states;
    const treeDataValue = treeData.value;
    return treeDataValue && Object.keys(treeDataValue).length > 0;
  });
  const realWidth = ref120(parseWidth(props.width));
  const realMinWidth = ref120(parseMinWidth(props.minWidth));
  const setColumnWidth = (column2) => {
    if (realWidth.value)
      column2.width = realWidth.value;
    if (realMinWidth.value) {
      column2.minWidth = realMinWidth.value;
    }
    if (!realWidth.value && realMinWidth.value) {
      column2.width = void 0;
    }
    if (!column2.minWidth) {
      column2.minWidth = 80;
    }
    column2.realWidth = Number(column2.width === void 0 ? column2.minWidth : column2.width);
    return column2;
  };
  const setColumnForcedProps = (column2) => {
    const type4 = column2.type;
    const source = cellForced[type4] || {};
    Object.keys(source).forEach((prop) => {
      const value = source[prop];
      if (prop !== "className" && value !== void 0) {
        column2[prop] = value;
      }
    });
    const className = getDefaultClassName(type4);
    if (className) {
      const forceClass = `${unref130(ns.namespace)}-${className}`;
      column2.className = column2.className ? `${column2.className} ${forceClass}` : forceClass;
    }
    return column2;
  };
  const checkSubColumn = (children) => {
    if (Array.isArray(children)) {
      children.forEach((child) => check(child));
    } else {
      check(children);
    }
    function check(item) {
      var _a2;
      if (((_a2 = item == null ? void 0 : item.type) == null ? void 0 : _a2.name) === "ElTableColumn") {
        item.vParent = instance;
      }
    }
  };
  const setColumnRenders = (column2) => {
    if (props.renderHeader) {
      debugWarn("TableColumn", "Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.");
    } else if (column2.type !== "selection") {
      column2.renderHeader = (scope) => {
        instance.columnConfig.value["label"];
        const renderHeader = slots.header;
        return renderHeader ? renderHeader(scope) : column2.label;
      };
    }
    let originRenderCell = column2.renderCell;
    if (column2.type === "expand") {
      column2.renderCell = (data) => h21("div", {
        class: "cell"
      }, [originRenderCell(data)]);
      owner.value.renderExpanded = (data) => {
        return slots.default ? slots.default(data) : slots.default;
      };
    } else {
      originRenderCell = originRenderCell || defaultRenderCell;
      column2.renderCell = (data) => {
        let children = null;
        if (slots.default) {
          const vnodes = slots.default(data);
          children = vnodes.some((v2) => v2.type !== Comment3) ? vnodes : originRenderCell(data);
        } else {
          children = originRenderCell(data);
        }
        const { columns: columns2 } = owner.value.store.states;
        const firstUserColumnIndex = columns2.value.findIndex((item) => item.type === "default");
        const shouldCreatePlaceholder = hasTreeColumn.value && data.cellIndex === firstUserColumnIndex;
        const prefix = treeCellPrefix(data, shouldCreatePlaceholder);
        const props2 = {
          class: "cell",
          style: {}
        };
        if (column2.showOverflowTooltip) {
          props2.class = `${props2.class} ${unref130(ns.namespace)}-tooltip`;
          props2.style = {
            width: `${(data.column.realWidth || Number(data.column.width)) - 1}px`
          };
        }
        checkSubColumn(children);
        return h21("div", props2, [prefix, children]);
      };
    }
    return column2;
  };
  const getPropsData = (...propsKey) => {
    return propsKey.reduce((prev, cur) => {
      if (Array.isArray(cur)) {
        cur.forEach((key) => {
          prev[key] = props[key];
        });
      }
      return prev;
    }, {});
  };
  const getColumnElIndex = (children, child) => {
    return Array.prototype.indexOf.call(children, child);
  };
  const updateColumnOrder = () => {
    owner.value.store.commit("updateColumnOrder", instance.columnConfig.value);
  };
  return {
    columnId,
    realAlign,
    isSubColumn,
    realHeaderAlign,
    columnOrTableParent,
    setColumnWidth,
    setColumnForcedProps,
    setColumnRenders,
    getPropsData,
    getColumnElIndex,
    updateColumnOrder
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-column/defaults.mjs
var defaultProps3 = {
  type: {
    type: String,
    default: "default"
  },
  label: String,
  className: String,
  labelClassName: String,
  property: String,
  prop: String,
  width: {
    type: [String, Number],
    default: ""
  },
  minWidth: {
    type: [String, Number],
    default: ""
  },
  renderHeader: Function,
  sortable: {
    type: [Boolean, String],
    default: false
  },
  sortMethod: Function,
  sortBy: [String, Function, Array],
  resizable: {
    type: Boolean,
    default: true
  },
  columnKey: String,
  align: String,
  headerAlign: String,
  showOverflowTooltip: {
    type: [Boolean, Object],
    default: void 0
  },
  fixed: [Boolean, String],
  formatter: Function,
  selectable: Function,
  reserveSelection: Boolean,
  filterMethod: Function,
  filteredValue: Array,
  filters: Array,
  filterPlacement: String,
  filterMultiple: {
    type: Boolean,
    default: true
  },
  index: [Number, Function],
  sortOrders: {
    type: Array,
    default: () => {
      return ["ascending", "descending", null];
    },
    validator: (val) => {
      return val.every((order) => ["ascending", "descending", null].includes(order));
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/src/table-column/index.mjs
import { isString as isString33 } from "@vue/shared";
var columnIdSeed = 1;
var ElTableColumn = defineComponent146({
  name: "ElTableColumn",
  components: {
    ElCheckbox
  },
  props: defaultProps3,
  setup(props, { slots }) {
    const instance = getCurrentInstance49();
    const columnConfig = ref121({});
    const owner = computed154(() => {
      let parent22 = instance.parent;
      while (parent22 && !parent22.tableId) {
        parent22 = parent22.parent;
      }
      return parent22;
    });
    const { registerNormalWatchers, registerComplexWatchers } = useWatcher2(owner, props);
    const {
      columnId,
      isSubColumn,
      realHeaderAlign,
      columnOrTableParent,
      setColumnWidth,
      setColumnForcedProps,
      setColumnRenders,
      getPropsData,
      getColumnElIndex,
      realAlign,
      updateColumnOrder
    } = useRender2(props, slots, owner);
    const parent2 = columnOrTableParent.value;
    columnId.value = `${parent2.tableId || parent2.columnId}_column_${columnIdSeed++}`;
    onBeforeMount4(() => {
      isSubColumn.value = owner.value !== parent2;
      const type4 = props.type || "default";
      const sortable = props.sortable === "" ? true : props.sortable;
      const showOverflowTooltip = isUndefined2(props.showOverflowTooltip) ? parent2.props.showOverflowTooltip : props.showOverflowTooltip;
      const defaults2 = {
        ...cellStarts[type4],
        id: columnId.value,
        type: type4,
        property: props.prop || props.property,
        align: realAlign,
        headerAlign: realHeaderAlign,
        showOverflowTooltip,
        filterable: props.filters || props.filterMethod,
        filteredValue: [],
        filterPlacement: "",
        isColumnGroup: false,
        isSubColumn: false,
        filterOpened: false,
        sortable,
        index: props.index,
        rawColumnKey: instance.vnode.key
      };
      const basicProps = [
        "columnKey",
        "label",
        "className",
        "labelClassName",
        "type",
        "renderHeader",
        "formatter",
        "fixed",
        "resizable"
      ];
      const sortProps = ["sortMethod", "sortBy", "sortOrders"];
      const selectProps = ["selectable", "reserveSelection"];
      const filterProps = [
        "filterMethod",
        "filters",
        "filterMultiple",
        "filterOpened",
        "filteredValue",
        "filterPlacement"
      ];
      let column2 = getPropsData(basicProps, sortProps, selectProps, filterProps);
      column2 = mergeOptions(defaults2, column2);
      const chains = compose(setColumnRenders, setColumnWidth, setColumnForcedProps);
      column2 = chains(column2);
      columnConfig.value = column2;
      registerNormalWatchers();
      registerComplexWatchers();
    });
    onMounted53(() => {
      var _a2;
      const parent22 = columnOrTableParent.value;
      const children = isSubColumn.value ? parent22.vnode.el.children : (_a2 = parent22.refs.hiddenColumns) == null ? void 0 : _a2.children;
      const getColumnIndex = () => getColumnElIndex(children || [], instance.vnode.el);
      columnConfig.value.getColumnIndex = getColumnIndex;
      const columnIndex = getColumnIndex();
      columnIndex > -1 && owner.value.store.commit("insertColumn", columnConfig.value, isSubColumn.value ? parent22.columnConfig.value : null, updateColumnOrder);
    });
    onBeforeUnmount23(() => {
      owner.value.store.commit("removeColumn", columnConfig.value, isSubColumn.value ? parent2.columnConfig.value : null, updateColumnOrder);
    });
    instance.columnId = columnId.value;
    instance.columnConfig = columnConfig;
    return;
  },
  render() {
    var _a2, _b, _c;
    try {
      const renderDefault = (_b = (_a2 = this.$slots).default) == null ? void 0 : _b.call(_a2, {
        row: {},
        column: {},
        $index: -1
      });
      const children = [];
      if (Array.isArray(renderDefault)) {
        for (const childNode of renderDefault) {
          if (((_c = childNode.type) == null ? void 0 : _c.name) === "ElTableColumn" || childNode.shapeFlag & 2) {
            children.push(childNode);
          } else if (childNode.type === Fragment41 && Array.isArray(childNode.children)) {
            childNode.children.forEach((vnode2) => {
              if ((vnode2 == null ? void 0 : vnode2.patchFlag) !== 1024 && !isString33(vnode2 == null ? void 0 : vnode2.children)) {
                children.push(vnode2);
              }
            });
          }
        }
      }
      const vnode = h22("div", children);
      return vnode;
    } catch (e) {
      return h22("div", []);
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table/index.mjs
var ElTable = withInstall(Table, {
  TableColumn: ElTableColumn
});
var ElTableColumn2 = withNoopInstall(ElTableColumn);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/table-v2.mjs
import { isVNode as isVNode12, defineComponent as defineComponent151, provide as provide38, unref as unref140, createVNode as createVNode76, mergeProps as mergeProps32 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/use-table.mjs
import { ref as ref126, toRef as toRef16, shallowRef as shallowRef14, computed as computed159, unref as unref136, watch as watch80 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-columns.mjs
import { computed as computed155, unref as unref131 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/constants.mjs
var SortOrder = ((SortOrder2) => {
  SortOrder2["ASC"] = "asc";
  SortOrder2["DESC"] = "desc";
  return SortOrder2;
})(SortOrder || {});
var Alignment = ((Alignment2) => {
  Alignment2["CENTER"] = "center";
  Alignment2["RIGHT"] = "right";
  return Alignment2;
})(Alignment || {});
var FixedDir = ((FixedDir2) => {
  FixedDir2["LEFT"] = "left";
  FixedDir2["RIGHT"] = "right";
  return FixedDir2;
})(FixedDir || {});
var oppositeOrderMap = {
  [
    "asc"
    /* ASC */
  ]: "desc",
  [
    "desc"
    /* DESC */
  ]: "asc"
  /* ASC */
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/private.mjs
var placeholderSign = Symbol("placeholder");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/utils.mjs
var calcColumnStyle = (column2, fixedColumn, fixed) => {
  var _a2;
  const flex = {
    flexGrow: 0,
    flexShrink: 0,
    ...fixed ? {} : {
      flexGrow: column2.flexGrow || 0,
      flexShrink: column2.flexShrink || 1
    }
  };
  if (!fixed) {
    flex.flexShrink = 1;
  }
  const style = {
    ...(_a2 = column2.style) != null ? _a2 : {},
    ...flex,
    flexBasis: "auto",
    width: column2.width
  };
  if (!fixedColumn) {
    if (column2.maxWidth)
      style.maxWidth = column2.maxWidth;
    if (column2.minWidth)
      style.minWidth = column2.minWidth;
  }
  return style;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-columns.mjs
import { isObject as isObject22 } from "@vue/shared";
function useColumns(props, columns2, fixed) {
  const visibleColumns = computed155(() => {
    return unref131(columns2).filter((column2) => !column2.hidden);
  });
  const fixedColumnsOnLeft = computed155(() => unref131(visibleColumns).filter((column2) => column2.fixed === "left" || column2.fixed === true));
  const fixedColumnsOnRight = computed155(() => unref131(visibleColumns).filter((column2) => column2.fixed === "right"));
  const normalColumns = computed155(() => unref131(visibleColumns).filter((column2) => !column2.fixed));
  const mainColumns = computed155(() => {
    const ret = [];
    unref131(fixedColumnsOnLeft).forEach((column2) => {
      ret.push({
        ...column2,
        placeholderSign
      });
    });
    unref131(normalColumns).forEach((column2) => {
      ret.push(column2);
    });
    unref131(fixedColumnsOnRight).forEach((column2) => {
      ret.push({
        ...column2,
        placeholderSign
      });
    });
    return ret;
  });
  const hasFixedColumns = computed155(() => {
    return unref131(fixedColumnsOnLeft).length || unref131(fixedColumnsOnRight).length;
  });
  const columnsStyles = computed155(() => {
    const _columns = unref131(columns2);
    return _columns.reduce((style, column2) => {
      style[column2.key] = calcColumnStyle(column2, unref131(fixed), props.fixed);
      return style;
    }, {});
  });
  const columnsTotalWidth = computed155(() => {
    return unref131(visibleColumns).reduce((width, column2) => width + column2.width, 0);
  });
  const getColumn = (key) => {
    return unref131(columns2).find((column2) => column2.key === key);
  };
  const getColumnStyle = (key) => {
    return unref131(columnsStyles)[key];
  };
  const updateColumnWidth = (column2, width) => {
    column2.width = width;
  };
  function onColumnSorted(e) {
    var _a2;
    const { key } = e.currentTarget.dataset;
    if (!key)
      return;
    const { sortState, sortBy: sortBy2 } = props;
    let order = SortOrder.ASC;
    if (isObject22(sortState)) {
      order = oppositeOrderMap[sortState[key]];
    } else {
      order = oppositeOrderMap[sortBy2.order];
    }
    (_a2 = props.onColumnSort) == null ? void 0 : _a2.call(props, { column: getColumn(key), key, order });
  }
  return {
    columns: columns2,
    columnsStyles,
    columnsTotalWidth,
    fixedColumnsOnLeft,
    fixedColumnsOnRight,
    hasFixedColumns,
    mainColumns,
    normalColumns,
    visibleColumns,
    getColumn,
    getColumnStyle,
    updateColumnWidth,
    onColumnSorted
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-scrollbar.mjs
import { ref as ref122, unref as unref132, watch as watch77 } from "vue";
var useScrollbar2 = (props, {
  mainTableRef,
  leftTableRef,
  rightTableRef,
  onMaybeEndReached
}) => {
  const scrollPos = ref122({ scrollLeft: 0, scrollTop: 0 });
  function doScroll(params) {
    var _a2, _b, _c;
    const { scrollTop } = params;
    (_a2 = mainTableRef.value) == null ? void 0 : _a2.scrollTo(params);
    (_b = leftTableRef.value) == null ? void 0 : _b.scrollToTop(scrollTop);
    (_c = rightTableRef.value) == null ? void 0 : _c.scrollToTop(scrollTop);
  }
  function scrollTo(params) {
    scrollPos.value = params;
    doScroll(params);
  }
  function scrollToTop(scrollTop) {
    scrollPos.value.scrollTop = scrollTop;
    doScroll(unref132(scrollPos));
  }
  function scrollToLeft(scrollLeft) {
    var _a2, _b;
    scrollPos.value.scrollLeft = scrollLeft;
    (_b = (_a2 = mainTableRef.value) == null ? void 0 : _a2.scrollTo) == null ? void 0 : _b.call(_a2, unref132(scrollPos));
  }
  function onScroll(params) {
    var _a2;
    scrollTo(params);
    (_a2 = props.onScroll) == null ? void 0 : _a2.call(props, params);
  }
  function onVerticalScroll({ scrollTop }) {
    const { scrollTop: currentScrollTop } = unref132(scrollPos);
    if (scrollTop !== currentScrollTop)
      scrollToTop(scrollTop);
  }
  function scrollToRow(row, strategy = "auto") {
    var _a2;
    (_a2 = mainTableRef.value) == null ? void 0 : _a2.scrollToRow(row, strategy);
  }
  watch77(() => unref132(scrollPos).scrollTop, (cur, prev) => {
    if (cur > prev)
      onMaybeEndReached();
  });
  return {
    scrollPos,
    scrollTo,
    scrollToLeft,
    scrollToTop,
    scrollToRow,
    onScroll,
    onVerticalScroll
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-row.mjs
import { getCurrentInstance as getCurrentInstance50, shallowRef as shallowRef13, ref as ref123, computed as computed156, unref as unref133 } from "vue";
var useRow = (props, { mainTableRef, leftTableRef, rightTableRef }) => {
  const vm = getCurrentInstance50();
  const { emit } = vm;
  const isResetting = shallowRef13(false);
  const hoveringRowKey = shallowRef13(null);
  const expandedRowKeys = ref123(props.defaultExpandedRowKeys || []);
  const lastRenderedRowIndex = ref123(-1);
  const resetIndex = shallowRef13(null);
  const rowHeights = ref123({});
  const pendingRowHeights = ref123({});
  const leftTableHeights = shallowRef13({});
  const mainTableHeights = shallowRef13({});
  const rightTableHeights = shallowRef13({});
  const isDynamic = computed156(() => isNumber3(props.estimatedRowHeight));
  function onRowsRendered(params) {
    var _a2;
    (_a2 = props.onRowsRendered) == null ? void 0 : _a2.call(props, params);
    if (params.rowCacheEnd > unref133(lastRenderedRowIndex)) {
      lastRenderedRowIndex.value = params.rowCacheEnd;
    }
  }
  function onRowHovered({ hovered, rowKey: rowKey2 }) {
    hoveringRowKey.value = hovered ? rowKey2 : null;
  }
  function onRowExpanded({
    expanded,
    rowData,
    rowIndex,
    rowKey: rowKey2
  }) {
    var _a2, _b;
    const _expandedRowKeys = [...unref133(expandedRowKeys)];
    const currentKeyIndex = _expandedRowKeys.indexOf(rowKey2);
    if (expanded) {
      if (currentKeyIndex === -1)
        _expandedRowKeys.push(rowKey2);
    } else {
      if (currentKeyIndex > -1)
        _expandedRowKeys.splice(currentKeyIndex, 1);
    }
    expandedRowKeys.value = _expandedRowKeys;
    emit("update:expandedRowKeys", _expandedRowKeys);
    (_a2 = props.onRowExpand) == null ? void 0 : _a2.call(props, {
      expanded,
      rowData,
      rowIndex,
      rowKey: rowKey2
    });
    (_b = props.onExpandedRowsChange) == null ? void 0 : _b.call(props, _expandedRowKeys);
  }
  const flushingRowHeights = debounce_default(() => {
    var _a2, _b, _c, _d;
    isResetting.value = true;
    rowHeights.value = { ...unref133(rowHeights), ...unref133(pendingRowHeights) };
    resetAfterIndex(unref133(resetIndex), false);
    pendingRowHeights.value = {};
    resetIndex.value = null;
    (_a2 = mainTableRef.value) == null ? void 0 : _a2.forceUpdate();
    (_b = leftTableRef.value) == null ? void 0 : _b.forceUpdate();
    (_c = rightTableRef.value) == null ? void 0 : _c.forceUpdate();
    (_d = vm.proxy) == null ? void 0 : _d.$forceUpdate();
    isResetting.value = false;
  }, 0);
  function resetAfterIndex(index, forceUpdate = false) {
    if (!unref133(isDynamic))
      return;
    [mainTableRef, leftTableRef, rightTableRef].forEach((tableRef) => {
      const table = unref133(tableRef);
      if (table)
        table.resetAfterRowIndex(index, forceUpdate);
    });
  }
  function resetHeights(rowKey2, height, rowIdx) {
    const resetIdx = unref133(resetIndex);
    if (resetIdx === null) {
      resetIndex.value = rowIdx;
    } else {
      if (resetIdx > rowIdx) {
        resetIndex.value = rowIdx;
      }
    }
    pendingRowHeights.value[rowKey2] = height;
  }
  function onRowHeightChange({ rowKey: rowKey2, height, rowIndex }, fixedDir) {
    if (!fixedDir) {
      mainTableHeights.value[rowKey2] = height;
    } else {
      if (fixedDir === FixedDir.RIGHT) {
        rightTableHeights.value[rowKey2] = height;
      } else {
        leftTableHeights.value[rowKey2] = height;
      }
    }
    const maximumHeight = Math.max(...[leftTableHeights, rightTableHeights, mainTableHeights].map((records) => records.value[rowKey2] || 0));
    if (unref133(rowHeights)[rowKey2] !== maximumHeight) {
      resetHeights(rowKey2, maximumHeight, rowIndex);
      flushingRowHeights();
    }
  }
  return {
    hoveringRowKey,
    expandedRowKeys,
    lastRenderedRowIndex,
    isDynamic,
    isResetting,
    rowHeights,
    resetAfterIndex,
    onRowExpanded,
    onRowHovered,
    onRowsRendered,
    onRowHeightChange
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-data.mjs
import { ref as ref124, computed as computed157, unref as unref134, watch as watch78 } from "vue";
var useData = (props, { expandedRowKeys, lastRenderedRowIndex, resetAfterIndex }) => {
  const depthMap = ref124({});
  const flattenedData = computed157(() => {
    const depths = {};
    const { data: data2, rowKey: rowKey2 } = props;
    const _expandedRowKeys = unref134(expandedRowKeys);
    if (!_expandedRowKeys || !_expandedRowKeys.length)
      return data2;
    const array4 = [];
    const keysSet = /* @__PURE__ */ new Set();
    _expandedRowKeys.forEach((x2) => keysSet.add(x2));
    let copy = data2.slice();
    copy.forEach((x2) => depths[x2[rowKey2]] = 0);
    while (copy.length > 0) {
      const item = copy.shift();
      array4.push(item);
      if (keysSet.has(item[rowKey2]) && Array.isArray(item.children) && item.children.length > 0) {
        copy = [...item.children, ...copy];
        item.children.forEach((child) => depths[child[rowKey2]] = depths[item[rowKey2]] + 1);
      }
    }
    depthMap.value = depths;
    return array4;
  });
  const data = computed157(() => {
    const { data: data2, expandColumnKey: expandColumnKey2 } = props;
    return expandColumnKey2 ? unref134(flattenedData) : data2;
  });
  watch78(data, (val, prev) => {
    if (val !== prev) {
      lastRenderedRowIndex.value = -1;
      resetAfterIndex(0, true);
    }
  });
  return {
    data,
    depthMap
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-styles.mjs
import { computed as computed158, unref as unref135 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/utils.mjs
import { isVNode as isVNode6, h as h23 } from "vue";
import { isArray as isArray32, isFunction as isFunction21 } from "@vue/shared";
var sumReducer = (sum22, num) => sum22 + num;
var sum2 = (listLike) => {
  return isArray32(listLike) ? listLike.reduce(sumReducer, 0) : listLike;
};
var tryCall = (fLike, params, defaultRet = {}) => {
  return isFunction21(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;
};
var enforceUnit = (style) => {
  ;
  ["width", "maxWidth", "minWidth", "height"].forEach((key) => {
    style[key] = addUnit(style[key]);
  });
  return style;
};
var componentToSlot = (ComponentLike) => isVNode6(ComponentLike) ? (props) => h23(ComponentLike, props) : ComponentLike;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-styles.mjs
var useStyles2 = (props, {
  columnsTotalWidth,
  data,
  fixedColumnsOnLeft,
  fixedColumnsOnRight
}) => {
  const bodyWidth = computed158(() => {
    const { fixed, width, vScrollbarSize } = props;
    const ret = width - vScrollbarSize;
    return fixed ? Math.max(Math.round(unref135(columnsTotalWidth)), ret) : ret;
  });
  const headerWidth = computed158(() => unref135(bodyWidth) + (props.fixed ? props.vScrollbarSize : 0));
  const mainTableHeight = computed158(() => {
    const { height = 0, maxHeight = 0, footerHeight: footerHeight2, hScrollbarSize } = props;
    if (maxHeight > 0) {
      const _fixedRowsHeight = unref135(fixedRowsHeight);
      const _rowsHeight = unref135(rowsHeight);
      const _headerHeight = unref135(headerHeight);
      const total2 = _headerHeight + _fixedRowsHeight + _rowsHeight + hScrollbarSize;
      return Math.min(total2, maxHeight - footerHeight2);
    }
    return height - footerHeight2;
  });
  const rowsHeight = computed158(() => {
    const { rowHeight, estimatedRowHeight } = props;
    const _data = unref135(data);
    if (isNumber3(estimatedRowHeight)) {
      return _data.length * estimatedRowHeight;
    }
    return _data.length * rowHeight;
  });
  const fixedTableHeight = computed158(() => {
    const { maxHeight } = props;
    const tableHeight = unref135(mainTableHeight);
    if (isNumber3(maxHeight) && maxHeight > 0)
      return tableHeight;
    const totalHeight = unref135(rowsHeight) + unref135(headerHeight) + unref135(fixedRowsHeight);
    return Math.min(tableHeight, totalHeight);
  });
  const mapColumn = (column2) => column2.width;
  const leftTableWidth = computed158(() => sum2(unref135(fixedColumnsOnLeft).map(mapColumn)));
  const rightTableWidth = computed158(() => sum2(unref135(fixedColumnsOnRight).map(mapColumn)));
  const headerHeight = computed158(() => sum2(props.headerHeight));
  const fixedRowsHeight = computed158(() => {
    var _a2;
    return (((_a2 = props.fixedData) == null ? void 0 : _a2.length) || 0) * props.rowHeight;
  });
  const windowHeight = computed158(() => {
    return unref135(mainTableHeight) - unref135(headerHeight) - unref135(fixedRowsHeight);
  });
  const rootStyle = computed158(() => {
    const { style = {}, height, width } = props;
    return enforceUnit({
      ...style,
      height,
      width
    });
  });
  const footerHeight = computed158(() => enforceUnit({ height: props.footerHeight }));
  const emptyStyle = computed158(() => ({
    top: addUnit(unref135(headerHeight)),
    bottom: addUnit(props.footerHeight),
    width: addUnit(props.width)
  }));
  return {
    bodyWidth,
    fixedTableHeight,
    mainTableHeight,
    leftTableWidth,
    rightTableWidth,
    headerWidth,
    rowsHeight,
    windowHeight,
    footerHeight,
    emptyStyle,
    rootStyle,
    headerHeight
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/composables/use-auto-resize.mjs
import { ref as ref125, onMounted as onMounted54, onBeforeUnmount as onBeforeUnmount24, watch as watch79 } from "vue";
var useAutoResize = (props) => {
  const sizer = ref125();
  const width$ = ref125(0);
  const height$ = ref125(0);
  let resizerStopper;
  onMounted54(() => {
    resizerStopper = useResizeObserver(sizer, ([entry]) => {
      const { width, height } = entry.contentRect;
      const { paddingLeft, paddingRight, paddingTop, paddingBottom } = getComputedStyle(entry.target);
      const left2 = Number.parseInt(paddingLeft) || 0;
      const right2 = Number.parseInt(paddingRight) || 0;
      const top = Number.parseInt(paddingTop) || 0;
      const bottom = Number.parseInt(paddingBottom) || 0;
      width$.value = width - left2 - right2;
      height$.value = height - top - bottom;
    }).stop;
  });
  onBeforeUnmount24(() => {
    resizerStopper == null ? void 0 : resizerStopper();
  });
  watch79([width$, height$], ([width, height]) => {
    var _a2;
    (_a2 = props.onResize) == null ? void 0 : _a2.call(props, {
      width,
      height
    });
  });
  return {
    sizer,
    width: width$,
    height: height$
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/use-table.mjs
import { isArray as isArray33 } from "@vue/shared";
function useTable(props) {
  const mainTableRef = ref126();
  const leftTableRef = ref126();
  const rightTableRef = ref126();
  const {
    columns: columns2,
    columnsStyles,
    columnsTotalWidth,
    fixedColumnsOnLeft,
    fixedColumnsOnRight,
    hasFixedColumns,
    mainColumns,
    onColumnSorted
  } = useColumns(props, toRef16(props, "columns"), toRef16(props, "fixed"));
  const {
    scrollTo,
    scrollToLeft,
    scrollToTop,
    scrollToRow,
    onScroll,
    onVerticalScroll,
    scrollPos
  } = useScrollbar2(props, {
    mainTableRef,
    leftTableRef,
    rightTableRef,
    onMaybeEndReached
  });
  const {
    expandedRowKeys,
    hoveringRowKey,
    lastRenderedRowIndex,
    isDynamic,
    isResetting,
    rowHeights,
    resetAfterIndex,
    onRowExpanded,
    onRowHeightChange,
    onRowHovered,
    onRowsRendered
  } = useRow(props, {
    mainTableRef,
    leftTableRef,
    rightTableRef
  });
  const { data, depthMap } = useData(props, {
    expandedRowKeys,
    lastRenderedRowIndex,
    resetAfterIndex
  });
  const {
    bodyWidth,
    fixedTableHeight,
    mainTableHeight,
    leftTableWidth,
    rightTableWidth,
    headerWidth,
    rowsHeight,
    windowHeight,
    footerHeight,
    emptyStyle,
    rootStyle,
    headerHeight
  } = useStyles2(props, {
    columnsTotalWidth,
    data,
    fixedColumnsOnLeft,
    fixedColumnsOnRight
  });
  const isScrolling = shallowRef14(false);
  const containerRef = ref126();
  const showEmpty = computed159(() => {
    const noData = unref136(data).length === 0;
    return isArray33(props.fixedData) ? props.fixedData.length === 0 && noData : noData;
  });
  function getRowHeight(rowIndex) {
    const { estimatedRowHeight, rowHeight, rowKey: rowKey2 } = props;
    if (!estimatedRowHeight)
      return rowHeight;
    return unref136(rowHeights)[unref136(data)[rowIndex][rowKey2]] || estimatedRowHeight;
  }
  function onMaybeEndReached() {
    const { onEndReached } = props;
    if (!onEndReached)
      return;
    const { scrollTop } = unref136(scrollPos);
    const _totalHeight = unref136(rowsHeight);
    const clientHeight = unref136(windowHeight);
    const heightUntilEnd = _totalHeight - (scrollTop + clientHeight) + props.hScrollbarSize;
    if (unref136(lastRenderedRowIndex) >= 0 && _totalHeight === scrollTop + unref136(mainTableHeight) - unref136(headerHeight)) {
      onEndReached(heightUntilEnd);
    }
  }
  watch80(() => props.expandedRowKeys, (val) => expandedRowKeys.value = val, {
    deep: true
  });
  return {
    columns: columns2,
    containerRef,
    mainTableRef,
    leftTableRef,
    rightTableRef,
    isDynamic,
    isResetting,
    isScrolling,
    hoveringRowKey,
    hasFixedColumns,
    columnsStyles,
    columnsTotalWidth,
    data,
    expandedRowKeys,
    depthMap,
    fixedColumnsOnLeft,
    fixedColumnsOnRight,
    mainColumns,
    bodyWidth,
    emptyStyle,
    rootStyle,
    headerWidth,
    footerHeight,
    mainTableHeight,
    fixedTableHeight,
    leftTableWidth,
    rightTableWidth,
    showEmpty,
    getRowHeight,
    onColumnSorted,
    onRowHovered,
    onRowExpanded,
    onRowsRendered,
    onRowHeightChange,
    scrollTo,
    scrollToLeft,
    scrollToTop,
    scrollToRow,
    onScroll,
    onVerticalScroll
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/tokens.mjs
var TableV2InjectionKey = Symbol("tableV2");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/common.mjs
var classType = String;
var columns = {
  type: definePropType(Array),
  required: true
};
var column = {
  type: definePropType(Object)
};
var fixedDataType = {
  type: definePropType(Array)
};
var dataType = {
  ...fixedDataType,
  required: true
};
var expandColumnKey = String;
var expandKeys = {
  type: definePropType(Array),
  default: () => mutable([])
};
var requiredNumber = {
  type: Number,
  required: true
};
var rowKey = {
  type: definePropType([String, Number, Symbol]),
  default: "id"
};
var styleType = {
  type: definePropType(Object)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/row.mjs
var tableV2RowProps = buildProps({
  class: String,
  columns,
  columnsStyles: {
    type: definePropType(Object),
    required: true
  },
  depth: Number,
  expandColumnKey,
  estimatedRowHeight: {
    ...virtualizedGridProps.estimatedRowHeight,
    default: void 0
  },
  isScrolling: Boolean,
  onRowExpand: {
    type: definePropType(Function)
  },
  onRowHover: {
    type: definePropType(Function)
  },
  onRowHeightChange: {
    type: definePropType(Function)
  },
  rowData: {
    type: definePropType(Object),
    required: true
  },
  rowEventHandlers: {
    type: definePropType(Object)
  },
  rowIndex: {
    type: Number,
    required: true
  },
  rowKey,
  style: {
    type: definePropType(Object)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/header.mjs
var requiredNumberType = {
  type: Number,
  required: true
};
var tableV2HeaderProps = buildProps({
  class: String,
  columns,
  fixedHeaderData: {
    type: definePropType(Array)
  },
  headerData: {
    type: definePropType(Array),
    required: true
  },
  headerHeight: {
    type: definePropType([Number, Array]),
    default: 50
  },
  rowWidth: requiredNumberType,
  rowHeight: {
    type: Number,
    default: 50
  },
  height: requiredNumberType,
  width: requiredNumberType
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/grid.mjs
var tableV2GridProps = buildProps({
  columns,
  data: dataType,
  fixedData: fixedDataType,
  estimatedRowHeight: tableV2RowProps.estimatedRowHeight,
  width: requiredNumber,
  height: requiredNumber,
  headerWidth: requiredNumber,
  headerHeight: tableV2HeaderProps.headerHeight,
  bodyWidth: requiredNumber,
  rowHeight: requiredNumber,
  cache: virtualizedListProps.cache,
  useIsScrolling: Boolean,
  scrollbarAlwaysOn: virtualizedGridProps.scrollbarAlwaysOn,
  scrollbarStartGap: virtualizedGridProps.scrollbarStartGap,
  scrollbarEndGap: virtualizedGridProps.scrollbarEndGap,
  class: classType,
  style: styleType,
  containerStyle: styleType,
  getRowHeight: {
    type: definePropType(Function),
    required: true
  },
  rowKey: tableV2RowProps.rowKey,
  onRowsRendered: {
    type: definePropType(Function)
  },
  onScroll: {
    type: definePropType(Function)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/table.mjs
var tableV2Props = buildProps({
  cache: tableV2GridProps.cache,
  estimatedRowHeight: tableV2RowProps.estimatedRowHeight,
  rowKey,
  headerClass: {
    type: definePropType([
      String,
      Function
    ])
  },
  headerProps: {
    type: definePropType([
      Object,
      Function
    ])
  },
  headerCellProps: {
    type: definePropType([
      Object,
      Function
    ])
  },
  headerHeight: tableV2HeaderProps.headerHeight,
  footerHeight: {
    type: Number,
    default: 0
  },
  rowClass: {
    type: definePropType([String, Function])
  },
  rowProps: {
    type: definePropType([Object, Function])
  },
  rowHeight: {
    type: Number,
    default: 50
  },
  cellProps: {
    type: definePropType([
      Object,
      Function
    ])
  },
  columns,
  data: dataType,
  dataGetter: {
    type: definePropType(Function)
  },
  fixedData: fixedDataType,
  expandColumnKey: tableV2RowProps.expandColumnKey,
  expandedRowKeys: expandKeys,
  defaultExpandedRowKeys: expandKeys,
  class: classType,
  fixed: Boolean,
  style: {
    type: definePropType(Object)
  },
  width: requiredNumber,
  height: requiredNumber,
  maxHeight: Number,
  useIsScrolling: Boolean,
  indentSize: {
    type: Number,
    default: 12
  },
  iconSize: {
    type: Number,
    default: 12
  },
  hScrollbarSize: virtualizedGridProps.hScrollbarSize,
  vScrollbarSize: virtualizedGridProps.vScrollbarSize,
  scrollbarAlwaysOn: virtualizedScrollbarProps.alwaysOn,
  sortBy: {
    type: definePropType(Object),
    default: () => ({})
  },
  sortState: {
    type: definePropType(Object),
    default: void 0
  },
  onColumnSort: {
    type: definePropType(Function)
  },
  onExpandedRowsChange: {
    type: definePropType(Function)
  },
  onEndReached: {
    type: definePropType(Function)
  },
  onRowExpand: tableV2RowProps.onRowExpand,
  onScroll: tableV2GridProps.onScroll,
  onRowsRendered: tableV2GridProps.onRowsRendered,
  rowEventHandlers: tableV2RowProps.rowEventHandlers
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/main-table.mjs
import { isVNode as isVNode7, createVNode as createVNode66, mergeProps as mergeProps26 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/table-grid.mjs
import { ref as ref129, computed as computed162, unref as unref139, defineComponent as defineComponent150, inject as inject73, createVNode as createVNode65 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/cell.mjs
import { createVNode as createVNode58 } from "vue";
var TableV2Cell = (props, {
  slots
}) => {
  var _a2;
  const {
    cellData,
    style
  } = props;
  const displayText = ((_a2 = cellData == null ? void 0 : cellData.toString) == null ? void 0 : _a2.call(cellData)) || "";
  return createVNode58("div", {
    "class": props.class,
    "title": displayText,
    "style": style
  }, [slots.default ? slots.default(props) : displayText]);
};
TableV2Cell.displayName = "ElTableV2Cell";
TableV2Cell.inheritAttrs = false;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/header-cell.mjs
import { createVNode as createVNode59 } from "vue";
var HeaderCell = (props, {
  slots
}) => {
  var _a2, _b;
  return slots.default ? slots.default(props) : createVNode59("div", {
    "class": props.class,
    "title": (_a2 = props.column) == null ? void 0 : _a2.title
  }, [(_b = props.column) == null ? void 0 : _b.title]);
};
HeaderCell.displayName = "ElTableV2HeaderCell";
HeaderCell.inheritAttrs = false;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/header-row.mjs
import { defineComponent as defineComponent147, createVNode as createVNode60 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/header-row.mjs
var tableV2HeaderRowProps = buildProps({
  class: String,
  columns,
  columnsStyles: {
    type: definePropType(Object),
    required: true
  },
  headerIndex: Number,
  style: { type: definePropType(Object) }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/header-row.mjs
import { isArray as isArray34 } from "@vue/shared";
var TableV2HeaderRow = defineComponent147({
  name: "ElTableV2HeaderRow",
  props: tableV2HeaderRowProps,
  setup(props, {
    slots
  }) {
    return () => {
      const {
        columns: columns2,
        columnsStyles,
        headerIndex,
        style
      } = props;
      let Cells = columns2.map((column2, columnIndex) => {
        return slots.cell({
          columns: columns2,
          column: column2,
          columnIndex,
          headerIndex,
          style: columnsStyles[column2.key]
        });
      });
      if (slots.header) {
        Cells = slots.header({
          cells: Cells.map((node) => {
            if (isArray34(node) && node.length === 1) {
              return node[0];
            }
            return node;
          }),
          columns: columns2,
          headerIndex
        });
      }
      return createVNode60("div", {
        "class": props.class,
        "style": style,
        "role": "row"
      }, [Cells]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/header.mjs
import { defineComponent as defineComponent148, ref as ref127, computed as computed160, unref as unref137, nextTick as nextTick43, createVNode as createVNode61 } from "vue";
var COMPONENT_NAME18 = "ElTableV2Header";
var TableV2Header = defineComponent148({
  name: COMPONENT_NAME18,
  props: tableV2HeaderProps,
  setup(props, {
    slots,
    expose
  }) {
    const ns = useNamespace("table-v2");
    const headerRef = ref127();
    const headerStyle = computed160(() => enforceUnit({
      width: props.width,
      height: props.height
    }));
    const rowStyle = computed160(() => enforceUnit({
      width: props.rowWidth,
      height: props.height
    }));
    const headerHeights = computed160(() => castArray_default(unref137(props.headerHeight)));
    const scrollToLeft = (left2) => {
      const headerEl = unref137(headerRef);
      nextTick43(() => {
        (headerEl == null ? void 0 : headerEl.scroll) && headerEl.scroll({
          left: left2
        });
      });
    };
    const renderFixedRows = () => {
      const fixedRowClassName = ns.e("fixed-header-row");
      const {
        columns: columns2,
        fixedHeaderData,
        rowHeight
      } = props;
      return fixedHeaderData == null ? void 0 : fixedHeaderData.map((fixedRowData, fixedRowIndex) => {
        var _a2;
        const style = enforceUnit({
          height: rowHeight,
          width: "100%"
        });
        return (_a2 = slots.fixed) == null ? void 0 : _a2.call(slots, {
          class: fixedRowClassName,
          columns: columns2,
          rowData: fixedRowData,
          rowIndex: -(fixedRowIndex + 1),
          style
        });
      });
    };
    const renderDynamicRows = () => {
      const dynamicRowClassName = ns.e("dynamic-header-row");
      const {
        columns: columns2
      } = props;
      return unref137(headerHeights).map((rowHeight, rowIndex) => {
        var _a2;
        const style = enforceUnit({
          width: "100%",
          height: rowHeight
        });
        return (_a2 = slots.dynamic) == null ? void 0 : _a2.call(slots, {
          class: dynamicRowClassName,
          columns: columns2,
          headerIndex: rowIndex,
          style
        });
      });
    };
    expose({
      scrollToLeft
    });
    return () => {
      if (props.height <= 0)
        return;
      return createVNode61("div", {
        "ref": headerRef,
        "class": props.class,
        "style": unref137(headerStyle),
        "role": "rowgroup"
      }, [createVNode61("div", {
        "style": unref137(rowStyle),
        "class": ns.e("header")
      }, [renderDynamicRows(), renderFixedRows()])]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/row.mjs
import { inject as inject72, ref as ref128, computed as computed161, unref as unref138, nextTick as nextTick44, onMounted as onMounted55, defineComponent as defineComponent149, createVNode as createVNode62, mergeProps as mergeProps24 } from "vue";
import { isFunction as isFunction22, isArray as isArray35 } from "@vue/shared";
var useTableRow = (props) => {
  const {
    isScrolling
  } = inject72(TableV2InjectionKey);
  const measured = ref128(false);
  const rowRef = ref128();
  const measurable = computed161(() => {
    return isNumber3(props.estimatedRowHeight) && props.rowIndex >= 0;
  });
  const doMeasure = (isInit = false) => {
    const $rowRef = unref138(rowRef);
    if (!$rowRef)
      return;
    const {
      columns: columns2,
      onRowHeightChange,
      rowKey: rowKey2,
      rowIndex,
      style
    } = props;
    const {
      height
    } = $rowRef.getBoundingClientRect();
    measured.value = true;
    nextTick44(() => {
      if (isInit || height !== Number.parseInt(style.height)) {
        const firstColumn = columns2[0];
        const isPlaceholder = (firstColumn == null ? void 0 : firstColumn.placeholderSign) === placeholderSign;
        onRowHeightChange == null ? void 0 : onRowHeightChange({
          rowKey: rowKey2,
          height,
          rowIndex
        }, firstColumn && !isPlaceholder && firstColumn.fixed);
      }
    });
  };
  const eventHandlers = computed161(() => {
    const {
      rowData,
      rowIndex,
      rowKey: rowKey2,
      onRowHover
    } = props;
    const handlers2 = props.rowEventHandlers || {};
    const eventHandlers2 = {};
    Object.entries(handlers2).forEach(([eventName, handler]) => {
      if (isFunction22(handler)) {
        eventHandlers2[eventName] = (event) => {
          handler({
            event,
            rowData,
            rowIndex,
            rowKey: rowKey2
          });
        };
      }
    });
    if (onRowHover) {
      ;
      [{
        name: "onMouseleave",
        hovered: false
      }, {
        name: "onMouseenter",
        hovered: true
      }].forEach(({
        name,
        hovered
      }) => {
        const existedHandler = eventHandlers2[name];
        eventHandlers2[name] = (event) => {
          onRowHover({
            event,
            hovered,
            rowData,
            rowIndex,
            rowKey: rowKey2
          });
          existedHandler == null ? void 0 : existedHandler(event);
        };
      });
    }
    return eventHandlers2;
  });
  const onExpand = (expanded) => {
    const {
      onRowExpand,
      rowData,
      rowIndex,
      rowKey: rowKey2
    } = props;
    onRowExpand == null ? void 0 : onRowExpand({
      expanded,
      rowData,
      rowIndex,
      rowKey: rowKey2
    });
  };
  onMounted55(() => {
    if (unref138(measurable)) {
      doMeasure(true);
    }
  });
  return {
    isScrolling,
    measurable,
    measured,
    rowRef,
    eventHandlers,
    onExpand
  };
};
var COMPONENT_NAME19 = "ElTableV2TableRow";
var TableV2Row = defineComponent149({
  name: COMPONENT_NAME19,
  props: tableV2RowProps,
  setup(props, {
    expose,
    slots,
    attrs
  }) {
    const {
      eventHandlers,
      isScrolling,
      measurable,
      measured,
      rowRef,
      onExpand
    } = useTableRow(props);
    expose({
      onExpand
    });
    return () => {
      const {
        columns: columns2,
        columnsStyles,
        expandColumnKey: expandColumnKey2,
        depth,
        rowData,
        rowIndex,
        style
      } = props;
      let ColumnCells = columns2.map((column2, columnIndex) => {
        const expandable = isArray35(rowData.children) && rowData.children.length > 0 && column2.key === expandColumnKey2;
        return slots.cell({
          column: column2,
          columns: columns2,
          columnIndex,
          depth,
          style: columnsStyles[column2.key],
          rowData,
          rowIndex,
          isScrolling: unref138(isScrolling),
          expandIconProps: expandable ? {
            rowData,
            rowIndex,
            onExpand
          } : void 0
        });
      });
      if (slots.row) {
        ColumnCells = slots.row({
          cells: ColumnCells.map((node) => {
            if (isArray35(node) && node.length === 1) {
              return node[0];
            }
            return node;
          }),
          style,
          columns: columns2,
          depth,
          rowData,
          rowIndex,
          isScrolling: unref138(isScrolling)
        });
      }
      if (unref138(measurable)) {
        const {
          height,
          ...exceptHeightStyle
        } = style || {};
        const _measured = unref138(measured);
        return createVNode62("div", mergeProps24({
          "ref": rowRef,
          "class": props.class,
          "style": _measured ? style : exceptHeightStyle,
          "role": "row"
        }, attrs, unref138(eventHandlers)), [ColumnCells]);
      }
      return createVNode62("div", mergeProps24(attrs, {
        "ref": rowRef,
        "class": props.class,
        "style": style,
        "role": "row"
      }, unref138(eventHandlers)), [ColumnCells]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/sort-icon.mjs
import { createVNode as createVNode63 } from "vue";
var SortIcon = (props) => {
  const {
    sortOrder
  } = props;
  return createVNode63(ElIcon, {
    "size": 14,
    "class": props.class
  }, {
    default: () => [sortOrder === SortOrder.ASC ? createVNode63(sort_up_default, null, null) : createVNode63(sort_down_default, null, null)]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/expand-icon.mjs
import { createVNode as createVNode64, mergeProps as mergeProps25 } from "vue";
var ExpandIcon = (props) => {
  const {
    expanded,
    expandable,
    onExpand,
    style,
    size: size4
  } = props;
  const expandIconProps = {
    onClick: expandable ? () => onExpand(!expanded) : void 0,
    class: props.class
  };
  return createVNode64(ElIcon, mergeProps25(expandIconProps, {
    "size": size4,
    "style": style
  }), {
    default: () => [createVNode64(arrow_right_default, null, null)]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/table-grid.mjs
import { isObject as isObject23 } from "@vue/shared";
var COMPONENT_NAME20 = "ElTableV2Grid";
var useTableGrid = (props) => {
  const headerRef = ref129();
  const bodyRef = ref129();
  const totalHeight = computed162(() => {
    const {
      data,
      rowHeight,
      estimatedRowHeight
    } = props;
    if (estimatedRowHeight) {
      return;
    }
    return data.length * rowHeight;
  });
  const fixedRowHeight = computed162(() => {
    const {
      fixedData,
      rowHeight
    } = props;
    return ((fixedData == null ? void 0 : fixedData.length) || 0) * rowHeight;
  });
  const headerHeight = computed162(() => sum2(props.headerHeight));
  const gridHeight = computed162(() => {
    const {
      height
    } = props;
    return Math.max(0, height - unref139(headerHeight) - unref139(fixedRowHeight));
  });
  const hasHeader = computed162(() => {
    return unref139(headerHeight) + unref139(fixedRowHeight) > 0;
  });
  const itemKey = ({
    data,
    rowIndex
  }) => data[rowIndex][props.rowKey];
  function onItemRendered({
    rowCacheStart,
    rowCacheEnd,
    rowVisibleStart,
    rowVisibleEnd
  }) {
    var _a2;
    (_a2 = props.onRowsRendered) == null ? void 0 : _a2.call(props, {
      rowCacheStart,
      rowCacheEnd,
      rowVisibleStart,
      rowVisibleEnd
    });
  }
  function resetAfterRowIndex(index, forceUpdate2) {
    var _a2;
    (_a2 = bodyRef.value) == null ? void 0 : _a2.resetAfterRowIndex(index, forceUpdate2);
  }
  function scrollTo(leftOrOptions, top) {
    const header$ = unref139(headerRef);
    const body$ = unref139(bodyRef);
    if (!header$ || !body$)
      return;
    if (isObject23(leftOrOptions)) {
      header$.scrollToLeft(leftOrOptions.scrollLeft);
      body$.scrollTo(leftOrOptions);
    } else {
      header$.scrollToLeft(leftOrOptions);
      body$.scrollTo({
        scrollLeft: leftOrOptions,
        scrollTop: top
      });
    }
  }
  function scrollToTop(scrollTop) {
    var _a2;
    (_a2 = unref139(bodyRef)) == null ? void 0 : _a2.scrollTo({
      scrollTop
    });
  }
  function scrollToRow(row, strategy) {
    var _a2;
    (_a2 = unref139(bodyRef)) == null ? void 0 : _a2.scrollToItem(row, 1, strategy);
  }
  function forceUpdate() {
    var _a2, _b;
    (_a2 = unref139(bodyRef)) == null ? void 0 : _a2.$forceUpdate();
    (_b = unref139(headerRef)) == null ? void 0 : _b.$forceUpdate();
  }
  return {
    bodyRef,
    forceUpdate,
    fixedRowHeight,
    gridHeight,
    hasHeader,
    headerHeight,
    headerRef,
    totalHeight,
    itemKey,
    onItemRendered,
    resetAfterRowIndex,
    scrollTo,
    scrollToTop,
    scrollToRow
  };
};
var TableGrid = defineComponent150({
  name: COMPONENT_NAME20,
  props: tableV2GridProps,
  setup(props, {
    slots,
    expose
  }) {
    const {
      ns
    } = inject73(TableV2InjectionKey);
    const {
      bodyRef,
      fixedRowHeight,
      gridHeight,
      hasHeader,
      headerRef,
      headerHeight,
      totalHeight,
      forceUpdate,
      itemKey,
      onItemRendered,
      resetAfterRowIndex,
      scrollTo,
      scrollToTop,
      scrollToRow
    } = useTableGrid(props);
    expose({
      forceUpdate,
      totalHeight,
      scrollTo,
      scrollToTop,
      scrollToRow,
      resetAfterRowIndex
    });
    const getColumnWidth = () => props.bodyWidth;
    return () => {
      const {
        cache: cache2,
        columns: columns2,
        data,
        fixedData,
        useIsScrolling,
        scrollbarAlwaysOn,
        scrollbarEndGap,
        scrollbarStartGap,
        style,
        rowHeight,
        bodyWidth,
        estimatedRowHeight,
        headerWidth,
        height,
        width,
        getRowHeight,
        onScroll
      } = props;
      const isDynamicRowEnabled = isNumber3(estimatedRowHeight);
      const Grid = isDynamicRowEnabled ? DynamicSizeGrid : FixedSizeGrid;
      const _headerHeight = unref139(headerHeight);
      return createVNode65("div", {
        "role": "table",
        "class": [ns.e("table"), props.class],
        "style": style
      }, [createVNode65(Grid, {
        "ref": bodyRef,
        "data": data,
        "useIsScrolling": useIsScrolling,
        "itemKey": itemKey,
        "columnCache": 0,
        "columnWidth": isDynamicRowEnabled ? getColumnWidth : bodyWidth,
        "totalColumn": 1,
        "totalRow": data.length,
        "rowCache": cache2,
        "rowHeight": isDynamicRowEnabled ? getRowHeight : rowHeight,
        "width": width,
        "height": unref139(gridHeight),
        "class": ns.e("body"),
        "role": "rowgroup",
        "scrollbarStartGap": scrollbarStartGap,
        "scrollbarEndGap": scrollbarEndGap,
        "scrollbarAlwaysOn": scrollbarAlwaysOn,
        "onScroll": onScroll,
        "onItemRendered": onItemRendered,
        "perfMode": false
      }, {
        default: (params) => {
          var _a2;
          const rowData = data[params.rowIndex];
          return (_a2 = slots.row) == null ? void 0 : _a2.call(slots, {
            ...params,
            columns: columns2,
            rowData
          });
        }
      }), unref139(hasHeader) && createVNode65(TableV2Header, {
        "ref": headerRef,
        "class": ns.e("header-wrapper"),
        "columns": columns2,
        "headerData": data,
        "headerHeight": props.headerHeight,
        "fixedHeaderData": fixedData,
        "rowWidth": headerWidth,
        "rowHeight": rowHeight,
        "width": width,
        "height": Math.min(_headerHeight + unref139(fixedRowHeight), height)
      }, {
        dynamic: slots.header,
        fixed: slots.row
      })]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/main-table.mjs
function _isSlot(s2) {
  return typeof s2 === "function" || Object.prototype.toString.call(s2) === "[object Object]" && !isVNode7(s2);
}
var MainTable = (props, {
  slots
}) => {
  const {
    mainTableRef,
    ...rest2
  } = props;
  return createVNode66(TableGrid, mergeProps26({
    "ref": mainTableRef
  }, rest2), _isSlot(slots) ? slots : {
    default: () => [slots]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/left-table.mjs
import { isVNode as isVNode8, createVNode as createVNode67, mergeProps as mergeProps27 } from "vue";
function _isSlot2(s2) {
  return typeof s2 === "function" || Object.prototype.toString.call(s2) === "[object Object]" && !isVNode8(s2);
}
var LeftTable = (props, {
  slots
}) => {
  if (!props.columns.length)
    return;
  const {
    leftTableRef,
    ...rest2
  } = props;
  return createVNode67(TableGrid, mergeProps27({
    "ref": leftTableRef
  }, rest2), _isSlot2(slots) ? slots : {
    default: () => [slots]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/right-table.mjs
import { isVNode as isVNode9, createVNode as createVNode68, mergeProps as mergeProps28 } from "vue";
function _isSlot3(s2) {
  return typeof s2 === "function" || Object.prototype.toString.call(s2) === "[object Object]" && !isVNode9(s2);
}
var LeftTable2 = (props, {
  slots
}) => {
  if (!props.columns.length)
    return;
  const {
    rightTableRef,
    ...rest2
  } = props;
  return createVNode68(TableGrid, mergeProps28({
    "ref": rightTableRef
  }, rest2), _isSlot3(slots) ? slots : {
    default: () => [slots]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/row.mjs
import { isVNode as isVNode10, createVNode as createVNode69, mergeProps as mergeProps29 } from "vue";
function _isSlot4(s2) {
  return typeof s2 === "function" || Object.prototype.toString.call(s2) === "[object Object]" && !isVNode10(s2);
}
var RowRenderer = (props, {
  slots
}) => {
  const {
    columns: columns2,
    columnsStyles,
    depthMap,
    expandColumnKey: expandColumnKey2,
    expandedRowKeys,
    estimatedRowHeight,
    hasFixedColumns,
    hoveringRowKey,
    rowData,
    rowIndex,
    style,
    isScrolling,
    rowProps: rowProps2,
    rowClass,
    rowKey: rowKey2,
    rowEventHandlers,
    ns,
    onRowHovered,
    onRowExpanded
  } = props;
  const rowKls = tryCall(rowClass, {
    columns: columns2,
    rowData,
    rowIndex
  }, "");
  const additionalProps = tryCall(rowProps2, {
    columns: columns2,
    rowData,
    rowIndex
  });
  const _rowKey = rowData[rowKey2];
  const depth = depthMap[_rowKey] || 0;
  const canExpand = Boolean(expandColumnKey2);
  const isFixedRow = rowIndex < 0;
  const kls = [ns.e("row"), rowKls, {
    [ns.e(`row-depth-${depth}`)]: canExpand && rowIndex >= 0,
    [ns.is("expanded")]: canExpand && expandedRowKeys.includes(_rowKey),
    [ns.is("hovered")]: !isScrolling && _rowKey === hoveringRowKey,
    [ns.is("fixed")]: !depth && isFixedRow,
    [ns.is("customized")]: Boolean(slots.row)
  }];
  const onRowHover = hasFixedColumns ? onRowHovered : void 0;
  const _rowProps = {
    ...additionalProps,
    columns: columns2,
    columnsStyles,
    class: kls,
    depth,
    expandColumnKey: expandColumnKey2,
    estimatedRowHeight: isFixedRow ? void 0 : estimatedRowHeight,
    isScrolling,
    rowIndex,
    rowData,
    rowKey: _rowKey,
    rowEventHandlers,
    style
  };
  return createVNode69(TableV2Row, mergeProps29(_rowProps, {
    "onRowHover": onRowHover,
    "onRowExpand": onRowExpanded
  }), _isSlot4(slots) ? slots : {
    default: () => [slots]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/cell.mjs
import { createVNode as createVNode70, mergeProps as mergeProps30 } from "vue";
import { isFunction as isFunction23, isObject as isObject24 } from "@vue/shared";
var CellRenderer = ({
  columns: columns2,
  column: column2,
  columnIndex,
  depth,
  expandIconProps,
  isScrolling,
  rowData,
  rowIndex,
  style,
  expandedRowKeys,
  ns,
  cellProps: _cellProps,
  expandColumnKey: expandColumnKey2,
  indentSize,
  iconSize,
  rowKey: rowKey2
}, {
  slots
}) => {
  const cellStyle = enforceUnit(style);
  if (column2.placeholderSign === placeholderSign) {
    return createVNode70("div", {
      "class": ns.em("row-cell", "placeholder"),
      "style": cellStyle
    }, null);
  }
  const {
    cellRenderer,
    dataKey,
    dataGetter
  } = column2;
  const columnCellRenderer = componentToSlot(cellRenderer);
  const CellComponent = columnCellRenderer || slots.default || ((props) => createVNode70(TableV2Cell, props, null));
  const cellData = isFunction23(dataGetter) ? dataGetter({
    columns: columns2,
    column: column2,
    columnIndex,
    rowData,
    rowIndex
  }) : get_default(rowData, dataKey != null ? dataKey : "");
  const extraCellProps = tryCall(_cellProps, {
    cellData,
    columns: columns2,
    column: column2,
    columnIndex,
    rowIndex,
    rowData
  });
  const cellProps = {
    class: ns.e("cell-text"),
    columns: columns2,
    column: column2,
    columnIndex,
    cellData,
    isScrolling,
    rowData,
    rowIndex
  };
  const Cell = CellComponent(cellProps);
  const kls = [ns.e("row-cell"), column2.class, column2.align === Alignment.CENTER && ns.is("align-center"), column2.align === Alignment.RIGHT && ns.is("align-right")];
  const expandable = rowIndex >= 0 && expandColumnKey2 && column2.key === expandColumnKey2;
  const expanded = rowIndex >= 0 && expandedRowKeys.includes(rowData[rowKey2]);
  let IconOrPlaceholder;
  const iconStyle = `margin-inline-start: ${depth * indentSize}px;`;
  if (expandable) {
    if (isObject24(expandIconProps)) {
      IconOrPlaceholder = createVNode70(ExpandIcon, mergeProps30(expandIconProps, {
        "class": [ns.e("expand-icon"), ns.is("expanded", expanded)],
        "size": iconSize,
        "expanded": expanded,
        "style": iconStyle,
        "expandable": true
      }), null);
    } else {
      IconOrPlaceholder = createVNode70("div", {
        "style": [iconStyle, `width: ${iconSize}px; height: ${iconSize}px;`].join(" ")
      }, null);
    }
  }
  return createVNode70("div", mergeProps30({
    "class": kls,
    "style": cellStyle
  }, extraCellProps, {
    "role": "cell"
  }), [IconOrPlaceholder, Cell]);
};
CellRenderer.inheritAttrs = false;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/header.mjs
import { isVNode as isVNode11, createVNode as createVNode71 } from "vue";
function _isSlot5(s2) {
  return typeof s2 === "function" || Object.prototype.toString.call(s2) === "[object Object]" && !isVNode11(s2);
}
var HeaderRenderer = ({
  columns: columns2,
  columnsStyles,
  headerIndex,
  style,
  headerClass,
  headerProps,
  ns
}, {
  slots
}) => {
  const param = {
    columns: columns2,
    headerIndex
  };
  const kls = [ns.e("header-row"), tryCall(headerClass, param, ""), {
    [ns.is("customized")]: Boolean(slots.header)
  }];
  const extraProps = {
    ...tryCall(headerProps, param),
    columnsStyles,
    class: kls,
    columns: columns2,
    headerIndex,
    style
  };
  return createVNode71(TableV2HeaderRow, extraProps, _isSlot5(slots) ? slots : {
    default: () => [slots]
  });
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/header-cell.mjs
import { createVNode as createVNode72, mergeProps as mergeProps31 } from "vue";
var HeaderCellRenderer = (props, {
  slots
}) => {
  const {
    column: column2,
    ns,
    style,
    onColumnSorted
  } = props;
  const cellStyle = enforceUnit(style);
  if (column2.placeholderSign === placeholderSign) {
    return createVNode72("div", {
      "class": ns.em("header-row-cell", "placeholder"),
      "style": cellStyle
    }, null);
  }
  const {
    headerCellRenderer,
    headerClass,
    sortable
  } = column2;
  const cellProps = {
    ...props,
    class: ns.e("header-cell-text")
  };
  const cellRenderer = componentToSlot(headerCellRenderer) || slots.default || ((props2) => createVNode72(HeaderCell, props2, null));
  const Cell = cellRenderer(cellProps);
  const {
    sortBy: sortBy2,
    sortState,
    headerCellProps
  } = props;
  let sorting, sortOrder;
  if (sortState) {
    const order = sortState[column2.key];
    sorting = Boolean(oppositeOrderMap[order]);
    sortOrder = sorting ? order : SortOrder.ASC;
  } else {
    sorting = column2.key === sortBy2.key;
    sortOrder = sorting ? sortBy2.order : SortOrder.ASC;
  }
  const cellKls = [ns.e("header-cell"), tryCall(headerClass, props, ""), column2.align === Alignment.CENTER && ns.is("align-center"), column2.align === Alignment.RIGHT && ns.is("align-right"), sortable && ns.is("sortable")];
  const cellWrapperProps = {
    ...tryCall(headerCellProps, props),
    onClick: column2.sortable ? onColumnSorted : void 0,
    class: cellKls,
    style: cellStyle,
    ["data-key"]: column2.key
  };
  return createVNode72("div", mergeProps31(cellWrapperProps, {
    "role": "columnheader"
  }), [Cell, sortable && createVNode72(SortIcon, {
    "class": [ns.e("sort-icon"), sorting && ns.is("sorting")],
    "sortOrder": sortOrder
  }, null)]);
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/footer.mjs
import { createVNode as createVNode73 } from "vue";
var Footer2 = (props, {
  slots
}) => {
  var _a2;
  return createVNode73("div", {
    "class": props.class,
    "style": props.style
  }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]);
};
Footer2.displayName = "ElTableV2Footer";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/empty.mjs
import { createVNode as createVNode74 } from "vue";
var Footer3 = (props, {
  slots
}) => {
  return createVNode74("div", {
    "class": props.class,
    "style": props.style
  }, [slots.default ? slots.default() : createVNode74(ElEmpty, null, null)]);
};
Footer3.displayName = "ElTableV2Empty";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/renderers/overlay.mjs
import { createVNode as createVNode75 } from "vue";
var Overlay2 = (props, {
  slots
}) => {
  var _a2;
  return createVNode75("div", {
    "class": props.class,
    "style": props.style
  }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]);
};
Overlay2.displayName = "ElTableV2Overlay";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/table-v2.mjs
function _isSlot6(s2) {
  return typeof s2 === "function" || Object.prototype.toString.call(s2) === "[object Object]" && !isVNode12(s2);
}
var COMPONENT_NAME21 = "ElTableV2";
var TableV2 = defineComponent151({
  name: COMPONENT_NAME21,
  props: tableV2Props,
  setup(props, {
    slots,
    expose
  }) {
    const ns = useNamespace("table-v2");
    const {
      columnsStyles,
      fixedColumnsOnLeft,
      fixedColumnsOnRight,
      mainColumns,
      mainTableHeight,
      fixedTableHeight,
      leftTableWidth,
      rightTableWidth,
      data,
      depthMap,
      expandedRowKeys,
      hasFixedColumns,
      hoveringRowKey,
      mainTableRef,
      leftTableRef,
      rightTableRef,
      isDynamic,
      isResetting,
      isScrolling,
      bodyWidth,
      emptyStyle,
      rootStyle,
      headerWidth,
      footerHeight,
      showEmpty,
      scrollTo,
      scrollToLeft,
      scrollToTop,
      scrollToRow,
      getRowHeight,
      onColumnSorted,
      onRowHeightChange,
      onRowHovered,
      onRowExpanded,
      onRowsRendered,
      onScroll,
      onVerticalScroll
    } = useTable(props);
    expose({
      scrollTo,
      scrollToLeft,
      scrollToTop,
      scrollToRow
    });
    provide38(TableV2InjectionKey, {
      ns,
      isResetting,
      hoveringRowKey,
      isScrolling
    });
    return () => {
      const {
        cache: cache2,
        cellProps,
        estimatedRowHeight,
        expandColumnKey: expandColumnKey2,
        fixedData,
        headerHeight,
        headerClass,
        headerProps,
        headerCellProps,
        sortBy: sortBy2,
        sortState,
        rowHeight,
        rowClass,
        rowEventHandlers,
        rowKey: rowKey2,
        rowProps: rowProps2,
        scrollbarAlwaysOn,
        indentSize,
        iconSize,
        useIsScrolling,
        vScrollbarSize,
        width
      } = props;
      const _data = unref140(data);
      const mainTableProps = {
        cache: cache2,
        class: ns.e("main"),
        columns: unref140(mainColumns),
        data: _data,
        fixedData,
        estimatedRowHeight,
        bodyWidth: unref140(bodyWidth),
        headerHeight,
        headerWidth: unref140(headerWidth),
        height: unref140(mainTableHeight),
        mainTableRef,
        rowKey: rowKey2,
        rowHeight,
        scrollbarAlwaysOn,
        scrollbarStartGap: 2,
        scrollbarEndGap: vScrollbarSize,
        useIsScrolling,
        width,
        getRowHeight,
        onRowsRendered,
        onScroll
      };
      const leftColumnsWidth = unref140(leftTableWidth);
      const _fixedTableHeight = unref140(fixedTableHeight);
      const leftTableProps = {
        cache: cache2,
        class: ns.e("left"),
        columns: unref140(fixedColumnsOnLeft),
        data: _data,
        estimatedRowHeight,
        leftTableRef,
        rowHeight,
        bodyWidth: leftColumnsWidth,
        headerWidth: leftColumnsWidth,
        headerHeight,
        height: _fixedTableHeight,
        rowKey: rowKey2,
        scrollbarAlwaysOn,
        scrollbarStartGap: 2,
        scrollbarEndGap: vScrollbarSize,
        useIsScrolling,
        width: leftColumnsWidth,
        getRowHeight,
        onScroll: onVerticalScroll
      };
      const rightColumnsWidth = unref140(rightTableWidth);
      const rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize;
      const rightTableProps = {
        cache: cache2,
        class: ns.e("right"),
        columns: unref140(fixedColumnsOnRight),
        data: _data,
        estimatedRowHeight,
        rightTableRef,
        rowHeight,
        bodyWidth: rightColumnsWidthWithScrollbar,
        headerWidth: rightColumnsWidthWithScrollbar,
        headerHeight,
        height: _fixedTableHeight,
        rowKey: rowKey2,
        scrollbarAlwaysOn,
        scrollbarStartGap: 2,
        scrollbarEndGap: vScrollbarSize,
        width: rightColumnsWidthWithScrollbar,
        style: `--${unref140(ns.namespace)}-table-scrollbar-size: ${vScrollbarSize}px`,
        useIsScrolling,
        getRowHeight,
        onScroll: onVerticalScroll
      };
      const _columnsStyles = unref140(columnsStyles);
      const tableRowProps = {
        ns,
        depthMap: unref140(depthMap),
        columnsStyles: _columnsStyles,
        expandColumnKey: expandColumnKey2,
        expandedRowKeys: unref140(expandedRowKeys),
        estimatedRowHeight,
        hasFixedColumns: unref140(hasFixedColumns),
        hoveringRowKey: unref140(hoveringRowKey),
        rowProps: rowProps2,
        rowClass,
        rowKey: rowKey2,
        rowEventHandlers,
        onRowHovered,
        onRowExpanded,
        onRowHeightChange
      };
      const tableCellProps = {
        cellProps,
        expandColumnKey: expandColumnKey2,
        indentSize,
        iconSize,
        rowKey: rowKey2,
        expandedRowKeys: unref140(expandedRowKeys),
        ns
      };
      const tableHeaderProps = {
        ns,
        headerClass,
        headerProps,
        columnsStyles: _columnsStyles
      };
      const tableHeaderCellProps = {
        ns,
        sortBy: sortBy2,
        sortState,
        headerCellProps,
        onColumnSorted
      };
      const tableSlots = {
        row: (props2) => createVNode76(RowRenderer, mergeProps32(props2, tableRowProps), {
          row: slots.row,
          cell: (props3) => {
            let _slot;
            return slots.cell ? createVNode76(CellRenderer, mergeProps32(props3, tableCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), _isSlot6(_slot = slots.cell(props3)) ? _slot : {
              default: () => [_slot]
            }) : createVNode76(CellRenderer, mergeProps32(props3, tableCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), null);
          }
        }),
        header: (props2) => createVNode76(HeaderRenderer, mergeProps32(props2, tableHeaderProps), {
          header: slots.header,
          cell: (props3) => {
            let _slot2;
            return slots["header-cell"] ? createVNode76(HeaderCellRenderer, mergeProps32(props3, tableHeaderCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), _isSlot6(_slot2 = slots["header-cell"](props3)) ? _slot2 : {
              default: () => [_slot2]
            }) : createVNode76(HeaderCellRenderer, mergeProps32(props3, tableHeaderCellProps, {
              "style": _columnsStyles[props3.column.key]
            }), null);
          }
        })
      };
      const rootKls = [props.class, ns.b(), ns.e("root"), {
        [ns.is("dynamic")]: unref140(isDynamic)
      }];
      const footerProps = {
        class: ns.e("footer"),
        style: unref140(footerHeight)
      };
      return createVNode76("div", {
        "class": rootKls,
        "style": unref140(rootStyle)
      }, [createVNode76(MainTable, mainTableProps, _isSlot6(tableSlots) ? tableSlots : {
        default: () => [tableSlots]
      }), createVNode76(LeftTable, leftTableProps, _isSlot6(tableSlots) ? tableSlots : {
        default: () => [tableSlots]
      }), createVNode76(LeftTable2, rightTableProps, _isSlot6(tableSlots) ? tableSlots : {
        default: () => [tableSlots]
      }), slots.footer && createVNode76(Footer2, footerProps, {
        default: slots.footer
      }), unref140(showEmpty) && createVNode76(Footer3, {
        "class": ns.e("empty"),
        "style": unref140(emptyStyle)
      }, {
        default: slots.empty
      }), slots.overlay && createVNode76(Overlay2, {
        "class": ns.e("overlay")
      }, {
        default: slots.overlay
      })]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/auto-resizer.mjs
import { defineComponent as defineComponent152, createVNode as createVNode77 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/auto-resizer.mjs
var autoResizerProps = buildProps({
  disableWidth: Boolean,
  disableHeight: Boolean,
  onResize: {
    type: definePropType(Function)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/src/components/auto-resizer.mjs
var AutoResizer = defineComponent152({
  name: "ElAutoResizer",
  props: autoResizerProps,
  setup(props, {
    slots
  }) {
    const ns = useNamespace("auto-resizer");
    const {
      height,
      width,
      sizer
    } = useAutoResize(props);
    const style = {
      width: "100%",
      height: "100%"
    };
    return () => {
      var _a2;
      return createVNode77("div", {
        "ref": sizer,
        "class": ns.b(),
        "style": style
      }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots, {
        height: height.value,
        width: width.value
      })]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/table-v2/index.mjs
var ElTableV2 = withInstall(TableV2);
var ElAutoResizer = withInstall(AutoResizer);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tabs.mjs
import { defineComponent as defineComponent155, getCurrentInstance as getCurrentInstance53, ref as ref132, computed as computed164, watch as watch83, nextTick as nextTick47, provide as provide39, createVNode as createVNode79, renderSlot as renderSlot93 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/constants.mjs
var tabsRootContextKey = Symbol("tabsRootContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-nav.mjs
import { defineComponent as defineComponent154, getCurrentInstance as getCurrentInstance52, inject as inject75, ref as ref131, computed as computed163, nextTick as nextTick46, watch as watch82, onMounted as onMounted56, onUpdated as onUpdated7, createVNode as createVNode78 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-bar2.mjs
import { defineComponent as defineComponent153, getCurrentInstance as getCurrentInstance51, inject as inject74, ref as ref130, watch as watch81, nextTick as nextTick45, openBlock as openBlock118, createElementBlock as createElementBlock102, normalizeClass as normalizeClass100, unref as unref141, normalizeStyle as normalizeStyle49 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-bar.mjs
var tabBarProps = buildProps({
  tabs: {
    type: definePropType(Array),
    default: () => mutable([])
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-bar2.mjs
var COMPONENT_NAME22 = "ElTabBar";
var __default__83 = defineComponent153({
  name: COMPONENT_NAME22
});
var _sfc_main122 = defineComponent153({
  ...__default__83,
  props: tabBarProps,
  setup(__props, { expose }) {
    const props = __props;
    const instance = getCurrentInstance51();
    const rootTabs = inject74(tabsRootContextKey);
    if (!rootTabs)
      throwError(COMPONENT_NAME22, "<el-tabs><el-tab-bar /></el-tabs>");
    const ns = useNamespace("tabs");
    const barRef = ref130();
    const barStyle = ref130();
    const getBarStyle = () => {
      let offset2 = 0;
      let tabSize = 0;
      const sizeName = ["top", "bottom"].includes(rootTabs.props.tabPosition) ? "width" : "height";
      const sizeDir = sizeName === "width" ? "x" : "y";
      const position = sizeDir === "x" ? "left" : "top";
      props.tabs.every((tab) => {
        var _a2, _b;
        const $el = (_b = (_a2 = instance.parent) == null ? void 0 : _a2.refs) == null ? void 0 : _b[`tab-${tab.uid}`];
        if (!$el)
          return false;
        if (!tab.active) {
          return true;
        }
        offset2 = $el[`offset${capitalize2(position)}`];
        tabSize = $el[`client${capitalize2(sizeName)}`];
        const tabStyles = window.getComputedStyle($el);
        if (sizeName === "width") {
          if (props.tabs.length > 1) {
            tabSize -= Number.parseFloat(tabStyles.paddingLeft) + Number.parseFloat(tabStyles.paddingRight);
          }
          offset2 += Number.parseFloat(tabStyles.paddingLeft);
        }
        return false;
      });
      return {
        [sizeName]: `${tabSize}px`,
        transform: `translate${capitalize2(sizeDir)}(${offset2}px)`
      };
    };
    const update2 = () => barStyle.value = getBarStyle();
    watch81(() => props.tabs, async () => {
      await nextTick45();
      update2();
    }, { immediate: true });
    useResizeObserver(barRef, () => update2());
    expose({
      ref: barRef,
      update: update2
    });
    return (_ctx, _cache) => {
      return openBlock118(), createElementBlock102("div", {
        ref_key: "barRef",
        ref: barRef,
        class: normalizeClass100([unref141(ns).e("active-bar"), unref141(ns).is(unref141(rootTabs).props.tabPosition)]),
        style: normalizeStyle49(barStyle.value)
      }, null, 6);
    };
  }
});
var TabBar = _export_sfc(_sfc_main122, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-bar.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-nav.mjs
var tabNavProps = buildProps({
  panes: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  currentName: {
    type: [String, Number],
    default: ""
  },
  editable: Boolean,
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  stretch: Boolean
});
var tabNavEmits = {
  tabClick: (tab, tabName, ev) => ev instanceof Event,
  tabRemove: (tab, ev) => ev instanceof Event
};
var COMPONENT_NAME23 = "ElTabNav";
var TabNav = defineComponent154({
  name: COMPONENT_NAME23,
  props: tabNavProps,
  emits: tabNavEmits,
  setup(props, {
    expose,
    emit
  }) {
    const vm = getCurrentInstance52();
    const rootTabs = inject75(tabsRootContextKey);
    if (!rootTabs)
      throwError(COMPONENT_NAME23, `<el-tabs><tab-nav /></el-tabs>`);
    const ns = useNamespace("tabs");
    const visibility = useDocumentVisibility();
    const focused = useWindowFocus();
    const navScroll$ = ref131();
    const nav$ = ref131();
    const el$ = ref131();
    const tabBarRef = ref131();
    const scrollable = ref131(false);
    const navOffset = ref131(0);
    const isFocus = ref131(false);
    const focusable = ref131(true);
    const sizeName = computed163(() => ["top", "bottom"].includes(rootTabs.props.tabPosition) ? "width" : "height");
    const navStyle = computed163(() => {
      const dir = sizeName.value === "width" ? "X" : "Y";
      return {
        transform: `translate${dir}(-${navOffset.value}px)`
      };
    });
    const scrollPrev = () => {
      if (!navScroll$.value)
        return;
      const containerSize = navScroll$.value[`offset${capitalize2(sizeName.value)}`];
      const currentOffset = navOffset.value;
      if (!currentOffset)
        return;
      const newOffset = currentOffset > containerSize ? currentOffset - containerSize : 0;
      navOffset.value = newOffset;
    };
    const scrollNext = () => {
      if (!navScroll$.value || !nav$.value)
        return;
      const navSize = nav$.value[`offset${capitalize2(sizeName.value)}`];
      const containerSize = navScroll$.value[`offset${capitalize2(sizeName.value)}`];
      const currentOffset = navOffset.value;
      if (navSize - currentOffset <= containerSize)
        return;
      const newOffset = navSize - currentOffset > containerSize * 2 ? currentOffset + containerSize : navSize - containerSize;
      navOffset.value = newOffset;
    };
    const scrollToActiveTab = async () => {
      const nav = nav$.value;
      if (!scrollable.value || !el$.value || !navScroll$.value || !nav)
        return;
      await nextTick46();
      const activeTab = el$.value.querySelector(".is-active");
      if (!activeTab)
        return;
      const navScroll = navScroll$.value;
      const isHorizontal2 = ["top", "bottom"].includes(rootTabs.props.tabPosition);
      const activeTabBounding = activeTab.getBoundingClientRect();
      const navScrollBounding = navScroll.getBoundingClientRect();
      const maxOffset = isHorizontal2 ? nav.offsetWidth - navScrollBounding.width : nav.offsetHeight - navScrollBounding.height;
      const currentOffset = navOffset.value;
      let newOffset = currentOffset;
      if (isHorizontal2) {
        if (activeTabBounding.left < navScrollBounding.left) {
          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);
        }
        if (activeTabBounding.right > navScrollBounding.right) {
          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;
        }
      } else {
        if (activeTabBounding.top < navScrollBounding.top) {
          newOffset = currentOffset - (navScrollBounding.top - activeTabBounding.top);
        }
        if (activeTabBounding.bottom > navScrollBounding.bottom) {
          newOffset = currentOffset + (activeTabBounding.bottom - navScrollBounding.bottom);
        }
      }
      newOffset = Math.max(newOffset, 0);
      navOffset.value = Math.min(newOffset, maxOffset);
    };
    const update2 = () => {
      var _a2;
      if (!nav$.value || !navScroll$.value)
        return;
      props.stretch && ((_a2 = tabBarRef.value) == null ? void 0 : _a2.update());
      const navSize = nav$.value[`offset${capitalize2(sizeName.value)}`];
      const containerSize = navScroll$.value[`offset${capitalize2(sizeName.value)}`];
      const currentOffset = navOffset.value;
      if (containerSize < navSize) {
        scrollable.value = scrollable.value || {};
        scrollable.value.prev = currentOffset;
        scrollable.value.next = currentOffset + containerSize < navSize;
        if (navSize - currentOffset < containerSize) {
          navOffset.value = navSize - containerSize;
        }
      } else {
        scrollable.value = false;
        if (currentOffset > 0) {
          navOffset.value = 0;
        }
      }
    };
    const changeTab = (e) => {
      const code = e.code;
      const {
        up: up2,
        down: down2,
        left: left2,
        right: right2
      } = EVENT_CODE;
      if (![up2, down2, left2, right2].includes(code))
        return;
      const tabList = Array.from(e.currentTarget.querySelectorAll("[role=tab]:not(.is-disabled)"));
      const currentIndex = tabList.indexOf(e.target);
      let nextIndex;
      if (code === left2 || code === up2) {
        if (currentIndex === 0) {
          nextIndex = tabList.length - 1;
        } else {
          nextIndex = currentIndex - 1;
        }
      } else {
        if (currentIndex < tabList.length - 1) {
          nextIndex = currentIndex + 1;
        } else {
          nextIndex = 0;
        }
      }
      tabList[nextIndex].focus({
        preventScroll: true
      });
      tabList[nextIndex].click();
      setFocus();
    };
    const setFocus = () => {
      if (focusable.value)
        isFocus.value = true;
    };
    const removeFocus = () => isFocus.value = false;
    watch82(visibility, (visibility2) => {
      if (visibility2 === "hidden") {
        focusable.value = false;
      } else if (visibility2 === "visible") {
        setTimeout(() => focusable.value = true, 50);
      }
    });
    watch82(focused, (focused2) => {
      if (focused2) {
        setTimeout(() => focusable.value = true, 50);
      } else {
        focusable.value = false;
      }
    });
    useResizeObserver(el$, update2);
    onMounted56(() => setTimeout(() => scrollToActiveTab(), 0));
    onUpdated7(() => update2());
    expose({
      scrollToActiveTab,
      removeFocus
    });
    watch82(() => props.panes, () => vm.update(), {
      flush: "post",
      deep: true
    });
    return () => {
      const scrollBtn = scrollable.value ? [createVNode78("span", {
        "class": [ns.e("nav-prev"), ns.is("disabled", !scrollable.value.prev)],
        "onClick": scrollPrev
      }, [createVNode78(ElIcon, null, {
        default: () => [createVNode78(arrow_left_default, null, null)]
      })]), createVNode78("span", {
        "class": [ns.e("nav-next"), ns.is("disabled", !scrollable.value.next)],
        "onClick": scrollNext
      }, [createVNode78(ElIcon, null, {
        default: () => [createVNode78(arrow_right_default, null, null)]
      })])] : null;
      const tabs = props.panes.map((pane, index) => {
        var _a2, _b, _c, _d;
        const uid2 = pane.uid;
        const disabled = pane.props.disabled;
        const tabName = (_b = (_a2 = pane.props.name) != null ? _a2 : pane.index) != null ? _b : `${index}`;
        const closable = !disabled && (pane.isClosable || props.editable);
        pane.index = `${index}`;
        const btnClose = closable ? createVNode78(ElIcon, {
          "class": "is-icon-close",
          "onClick": (ev) => emit("tabRemove", pane, ev)
        }, {
          default: () => [createVNode78(close_default, null, null)]
        }) : null;
        const tabLabelContent = ((_d = (_c = pane.slots).label) == null ? void 0 : _d.call(_c)) || pane.props.label;
        const tabindex = !disabled && pane.active ? 0 : -1;
        return createVNode78("div", {
          "ref": `tab-${uid2}`,
          "class": [ns.e("item"), ns.is(rootTabs.props.tabPosition), ns.is("active", pane.active), ns.is("disabled", disabled), ns.is("closable", closable), ns.is("focus", isFocus.value)],
          "id": `tab-${tabName}`,
          "key": `tab-${uid2}`,
          "aria-controls": `pane-${tabName}`,
          "role": "tab",
          "aria-selected": pane.active,
          "tabindex": tabindex,
          "onFocus": () => setFocus(),
          "onBlur": () => removeFocus(),
          "onClick": (ev) => {
            removeFocus();
            emit("tabClick", pane, tabName, ev);
          },
          "onKeydown": (ev) => {
            if (closable && (ev.code === EVENT_CODE.delete || ev.code === EVENT_CODE.backspace)) {
              emit("tabRemove", pane, ev);
            }
          }
        }, [...[tabLabelContent, btnClose]]);
      });
      return createVNode78("div", {
        "ref": el$,
        "class": [ns.e("nav-wrap"), ns.is("scrollable", !!scrollable.value), ns.is(rootTabs.props.tabPosition)]
      }, [scrollBtn, createVNode78("div", {
        "class": ns.e("nav-scroll"),
        "ref": navScroll$
      }, [createVNode78("div", {
        "class": [ns.e("nav"), ns.is(rootTabs.props.tabPosition), ns.is("stretch", props.stretch && ["top", "bottom"].includes(rootTabs.props.tabPosition))],
        "ref": nav$,
        "style": navStyle.value,
        "role": "tablist",
        "onKeydown": changeTab
      }, [...[!props.type ? createVNode78(TabBar, {
        "ref": tabBarRef,
        "tabs": [...props.panes]
      }, null) : null, tabs]])])]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tabs.mjs
import { isString as isString34 } from "@vue/shared";
var tabsProps = buildProps({
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  activeName: {
    type: [String, Number]
  },
  closable: Boolean,
  addable: Boolean,
  modelValue: {
    type: [String, Number]
  },
  editable: Boolean,
  tabPosition: {
    type: String,
    values: ["top", "right", "bottom", "left"],
    default: "top"
  },
  beforeLeave: {
    type: definePropType(Function),
    default: () => true
  },
  stretch: Boolean
});
var isPaneName = (value) => isString34(value) || isNumber3(value);
var tabsEmits = {
  [UPDATE_MODEL_EVENT]: (name) => isPaneName(name),
  tabClick: (pane, ev) => ev instanceof Event,
  tabChange: (name) => isPaneName(name),
  edit: (paneName, action) => ["remove", "add"].includes(action),
  tabRemove: (name) => isPaneName(name),
  tabAdd: () => true
};
var Tabs = defineComponent155({
  name: "ElTabs",
  props: tabsProps,
  emits: tabsEmits,
  setup(props, {
    emit,
    slots,
    expose
  }) {
    var _a2, _b;
    const ns = useNamespace("tabs");
    const {
      children: panes,
      addChild: registerPane,
      removeChild: unregisterPane
    } = useOrderedChildren(getCurrentInstance53(), "ElTabPane");
    const nav$ = ref132();
    const currentName = ref132((_b = (_a2 = props.modelValue) != null ? _a2 : props.activeName) != null ? _b : "0");
    const changeCurrentName = (value) => {
      currentName.value = value;
      emit(UPDATE_MODEL_EVENT, value);
      emit("tabChange", value);
    };
    const setCurrentName = async (value) => {
      var _a22, _b2, _c;
      if (currentName.value === value || isUndefined2(value))
        return;
      try {
        const canLeave = await ((_a22 = props.beforeLeave) == null ? void 0 : _a22.call(props, value, currentName.value));
        if (canLeave !== false) {
          changeCurrentName(value);
          (_c = (_b2 = nav$.value) == null ? void 0 : _b2.removeFocus) == null ? void 0 : _c.call(_b2);
        }
      } catch (e) {
      }
    };
    const handleTabClick = (tab, tabName, event) => {
      if (tab.props.disabled)
        return;
      setCurrentName(tabName);
      emit("tabClick", tab, event);
    };
    const handleTabRemove = (pane, ev) => {
      if (pane.props.disabled || isUndefined2(pane.props.name))
        return;
      ev.stopPropagation();
      emit("edit", pane.props.name, "remove");
      emit("tabRemove", pane.props.name);
    };
    const handleTabAdd = () => {
      emit("edit", void 0, "add");
      emit("tabAdd");
    };
    useDeprecated({
      from: '"activeName"',
      replacement: '"model-value" or "v-model"',
      scope: "ElTabs",
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/tabs.html#attributes",
      type: "Attribute"
    }, computed164(() => !!props.activeName));
    watch83(() => props.activeName, (modelValue) => setCurrentName(modelValue));
    watch83(() => props.modelValue, (modelValue) => setCurrentName(modelValue));
    watch83(currentName, async () => {
      var _a22;
      await nextTick47();
      (_a22 = nav$.value) == null ? void 0 : _a22.scrollToActiveTab();
    });
    provide39(tabsRootContextKey, {
      props,
      currentName,
      registerPane,
      unregisterPane
    });
    expose({
      currentName
    });
    return () => {
      const newButton = props.editable || props.addable ? createVNode79("span", {
        "class": ns.e("new-tab"),
        "tabindex": "0",
        "onClick": handleTabAdd,
        "onKeydown": (ev) => {
          if (ev.code === EVENT_CODE.enter)
            handleTabAdd();
        }
      }, [createVNode79(ElIcon, {
        "class": ns.is("icon-plus")
      }, {
        default: () => [createVNode79(plus_default, null, null)]
      })]) : null;
      const header = createVNode79("div", {
        "class": [ns.e("header"), ns.is(props.tabPosition)]
      }, [newButton, createVNode79(TabNav, {
        "ref": nav$,
        "currentName": currentName.value,
        "editable": props.editable,
        "type": props.type,
        "panes": panes.value,
        "stretch": props.stretch,
        "onTabClick": handleTabClick,
        "onTabRemove": handleTabRemove
      }, null)]);
      const panels = createVNode79("div", {
        "class": ns.e("content")
      }, [renderSlot93(slots, "default")]);
      return createVNode79("div", {
        "class": [ns.b(), ns.m(props.tabPosition), {
          [ns.m("card")]: props.type === "card",
          [ns.m("border-card")]: props.type === "border-card"
        }]
      }, [...props.tabPosition !== "bottom" ? [header, panels] : [panels, header]]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-pane2.mjs
import { defineComponent as defineComponent156, getCurrentInstance as getCurrentInstance54, useSlots as useSlots14, inject as inject76, ref as ref133, computed as computed165, watch as watch84, reactive as reactive27, onMounted as onMounted57, onUnmounted as onUnmounted8, unref as unref142, withDirectives as withDirectives31, openBlock as openBlock119, createElementBlock as createElementBlock103, normalizeClass as normalizeClass101, renderSlot as renderSlot94, vShow as vShow22, createCommentVNode as createCommentVNode59 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-pane.mjs
var tabPaneProps = buildProps({
  label: {
    type: String,
    default: ""
  },
  name: {
    type: [String, Number]
  },
  closable: Boolean,
  disabled: Boolean,
  lazy: Boolean
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/src/tab-pane2.mjs
var _hoisted_160 = ["id", "aria-hidden", "aria-labelledby"];
var COMPONENT_NAME24 = "ElTabPane";
var __default__84 = defineComponent156({
  name: COMPONENT_NAME24
});
var _sfc_main123 = defineComponent156({
  ...__default__84,
  props: tabPaneProps,
  setup(__props) {
    const props = __props;
    const instance = getCurrentInstance54();
    const slots = useSlots14();
    const tabsRoot = inject76(tabsRootContextKey);
    if (!tabsRoot)
      throwError(COMPONENT_NAME24, "usage: <el-tabs><el-tab-pane /></el-tabs/>");
    const ns = useNamespace("tab-pane");
    const index = ref133();
    const isClosable = computed165(() => props.closable || tabsRoot.props.closable);
    const active = computedEager(() => {
      var _a2;
      return tabsRoot.currentName.value === ((_a2 = props.name) != null ? _a2 : index.value);
    });
    const loaded = ref133(active.value);
    const paneName = computed165(() => {
      var _a2;
      return (_a2 = props.name) != null ? _a2 : index.value;
    });
    const shouldBeRender = computedEager(() => !props.lazy || loaded.value || active.value);
    watch84(active, (val) => {
      if (val)
        loaded.value = true;
    });
    const pane = reactive27({
      uid: instance.uid,
      slots,
      props,
      paneName,
      active,
      index,
      isClosable
    });
    onMounted57(() => {
      tabsRoot.registerPane(pane);
    });
    onUnmounted8(() => {
      tabsRoot.unregisterPane(pane.uid);
    });
    return (_ctx, _cache) => {
      return unref142(shouldBeRender) ? withDirectives31((openBlock119(), createElementBlock103("div", {
        key: 0,
        id: `pane-${unref142(paneName)}`,
        class: normalizeClass101(unref142(ns).b()),
        role: "tabpanel",
        "aria-hidden": !unref142(active),
        "aria-labelledby": `tab-${unref142(paneName)}`
      }, [
        renderSlot94(_ctx.$slots, "default")
      ], 10, _hoisted_160)), [
        [vShow22, unref142(active)]
      ]) : createCommentVNode59("v-if", true);
    };
  }
});
var TabPane = _export_sfc(_sfc_main123, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-pane.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tabs/index.mjs
var ElTabs = withInstall(Tabs, {
  TabPane
});
var ElTabPane = withNoopInstall(TabPane);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/text/src/text2.mjs
import { defineComponent as defineComponent157, computed as computed166, openBlock as openBlock120, createBlock as createBlock70, resolveDynamicComponent as resolveDynamicComponent30, normalizeClass as normalizeClass102, unref as unref143, withCtx as withCtx66, renderSlot as renderSlot95 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/text/src/text.mjs
var textProps = buildProps({
  type: {
    type: String,
    values: ["primary", "success", "info", "warning", "danger", ""],
    default: ""
  },
  size: {
    type: String,
    values: componentSizes,
    default: ""
  },
  truncated: {
    type: Boolean
  },
  tag: {
    type: String,
    default: "span"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/text/src/text2.mjs
var __default__85 = defineComponent157({
  name: "ElText"
});
var _sfc_main124 = defineComponent157({
  ...__default__85,
  props: textProps,
  setup(__props) {
    const props = __props;
    const textSize = useFormSize();
    const ns = useNamespace("text");
    const textKls = computed166(() => [
      ns.b(),
      ns.m(props.type),
      ns.m(textSize.value),
      ns.is("truncated", props.truncated)
    ]);
    return (_ctx, _cache) => {
      return openBlock120(), createBlock70(resolveDynamicComponent30(_ctx.tag), {
        class: normalizeClass102(unref143(textKls))
      }, {
        default: withCtx66(() => [
          renderSlot95(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"]);
    };
  }
});
var Text4 = _export_sfc(_sfc_main124, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/text/src/text.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/text/index.mjs
var ElText = withInstall(Text4);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-select/src/time-select2.mjs
var import_dayjs16 = __toESM(require_dayjs_min(), 1);
var import_customParseFormat3 = __toESM(require_customParseFormat(), 1);
import { defineComponent as defineComponent158, ref as ref134, computed as computed167, openBlock as openBlock121, createBlock as createBlock71, unref as unref144, withCtx as withCtx67, normalizeClass as normalizeClass103, resolveDynamicComponent as resolveDynamicComponent31, createCommentVNode as createCommentVNode60, createElementBlock as createElementBlock104, Fragment as Fragment42, renderList as renderList28 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-select/src/time-select.mjs
var timeSelectProps = buildProps({
  format: {
    type: String,
    default: "HH:mm"
  },
  modelValue: String,
  disabled: Boolean,
  editable: {
    type: Boolean,
    default: true
  },
  effect: {
    type: String,
    default: "light"
  },
  clearable: {
    type: Boolean,
    default: true
  },
  size: useSizeProp,
  placeholder: String,
  start: {
    type: String,
    default: "09:00"
  },
  end: {
    type: String,
    default: "18:00"
  },
  step: {
    type: String,
    default: "00:30"
  },
  minTime: String,
  maxTime: String,
  name: String,
  prefixIcon: {
    type: definePropType([String, Object]),
    default: () => clock_default
  },
  clearIcon: {
    type: definePropType([String, Object]),
    default: () => circle_close_default
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-select/src/utils.mjs
var parseTime = (time) => {
  const values2 = (time || "").split(":");
  if (values2.length >= 2) {
    let hours = Number.parseInt(values2[0], 10);
    const minutes = Number.parseInt(values2[1], 10);
    const timeUpper = time.toUpperCase();
    if (timeUpper.includes("AM") && hours === 12) {
      hours = 0;
    } else if (timeUpper.includes("PM") && hours !== 12) {
      hours += 12;
    }
    return {
      hours,
      minutes
    };
  }
  return null;
};
var compareTime = (time1, time2) => {
  const value1 = parseTime(time1);
  if (!value1)
    return -1;
  const value2 = parseTime(time2);
  if (!value2)
    return -1;
  const minutes1 = value1.minutes + value1.hours * 60;
  const minutes2 = value2.minutes + value2.hours * 60;
  if (minutes1 === minutes2) {
    return 0;
  }
  return minutes1 > minutes2 ? 1 : -1;
};
var padTime = (time) => {
  return `${time}`.padStart(2, "0");
};
var formatTime2 = (time) => {
  return `${padTime(time.hours)}:${padTime(time.minutes)}`;
};
var nextTime = (time, step) => {
  const timeValue = parseTime(time);
  if (!timeValue)
    return "";
  const stepValue = parseTime(step);
  if (!stepValue)
    return "";
  const next = {
    hours: timeValue.hours,
    minutes: timeValue.minutes
  };
  next.minutes += stepValue.minutes;
  next.hours += stepValue.hours;
  next.hours += Math.floor(next.minutes / 60);
  next.minutes = next.minutes % 60;
  return formatTime2(next);
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-select/src/time-select2.mjs
var __default__86 = defineComponent158({
  name: "ElTimeSelect"
});
var _sfc_main125 = defineComponent158({
  ...__default__86,
  props: timeSelectProps,
  emits: ["change", "blur", "focus", "update:modelValue"],
  setup(__props, { expose }) {
    const props = __props;
    import_dayjs16.default.extend(import_customParseFormat3.default);
    const { Option: ElOption2 } = ElSelect;
    const nsInput = useNamespace("input");
    const select = ref134();
    const _disabled = useFormDisabled();
    const value = computed167(() => props.modelValue);
    const start = computed167(() => {
      const time = parseTime(props.start);
      return time ? formatTime2(time) : null;
    });
    const end2 = computed167(() => {
      const time = parseTime(props.end);
      return time ? formatTime2(time) : null;
    });
    const step = computed167(() => {
      const time = parseTime(props.step);
      return time ? formatTime2(time) : null;
    });
    const minTime = computed167(() => {
      const time = parseTime(props.minTime || "");
      return time ? formatTime2(time) : null;
    });
    const maxTime = computed167(() => {
      const time = parseTime(props.maxTime || "");
      return time ? formatTime2(time) : null;
    });
    const items = computed167(() => {
      const result2 = [];
      if (props.start && props.end && props.step) {
        let current = start.value;
        let currentTime;
        while (current && end2.value && compareTime(current, end2.value) <= 0) {
          currentTime = (0, import_dayjs16.default)(current, "HH:mm").format(props.format);
          result2.push({
            value: currentTime,
            disabled: compareTime(current, minTime.value || "-1:-1") <= 0 || compareTime(current, maxTime.value || "100:100") >= 0
          });
          current = nextTime(current, step.value);
        }
      }
      return result2;
    });
    const blur = () => {
      var _a2, _b;
      (_b = (_a2 = select.value) == null ? void 0 : _a2.blur) == null ? void 0 : _b.call(_a2);
    };
    const focus = () => {
      var _a2, _b;
      (_b = (_a2 = select.value) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
    };
    expose({
      blur,
      focus
    });
    return (_ctx, _cache) => {
      return openBlock121(), createBlock71(unref144(ElSelect), {
        ref_key: "select",
        ref: select,
        "model-value": unref144(value),
        disabled: unref144(_disabled),
        clearable: _ctx.clearable,
        "clear-icon": _ctx.clearIcon,
        size: _ctx.size,
        effect: _ctx.effect,
        placeholder: _ctx.placeholder,
        "default-first-option": "",
        filterable: _ctx.editable,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = (event) => _ctx.$emit("update:modelValue", event)),
        onChange: _cache[1] || (_cache[1] = (event) => _ctx.$emit("change", event)),
        onBlur: _cache[2] || (_cache[2] = (event) => _ctx.$emit("blur", event)),
        onFocus: _cache[3] || (_cache[3] = (event) => _ctx.$emit("focus", event))
      }, {
        prefix: withCtx67(() => [
          _ctx.prefixIcon ? (openBlock121(), createBlock71(unref144(ElIcon), {
            key: 0,
            class: normalizeClass103(unref144(nsInput).e("prefix-icon"))
          }, {
            default: withCtx67(() => [
              (openBlock121(), createBlock71(resolveDynamicComponent31(_ctx.prefixIcon)))
            ]),
            _: 1
          }, 8, ["class"])) : createCommentVNode60("v-if", true)
        ]),
        default: withCtx67(() => [
          (openBlock121(true), createElementBlock104(Fragment42, null, renderList28(unref144(items), (item) => {
            return openBlock121(), createBlock71(unref144(ElOption2), {
              key: item.value,
              label: item.value,
              value: item.value,
              disabled: item.disabled
            }, null, 8, ["label", "value", "disabled"]);
          }), 128))
        ]),
        _: 1
      }, 8, ["model-value", "disabled", "clearable", "clear-icon", "size", "effect", "placeholder", "filterable"]);
    };
  }
});
var TimeSelect = _export_sfc(_sfc_main125, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/time-select/src/time-select.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/time-select/index.mjs
TimeSelect.install = (app) => {
  app.component(TimeSelect.name, TimeSelect);
};
var _TimeSelect = TimeSelect;
var ElTimeSelect = _TimeSelect;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/timeline/src/timeline.mjs
import { defineComponent as defineComponent159, provide as provide40, h as h24, renderSlot as renderSlot96 } from "vue";
var Timeline = defineComponent159({
  name: "ElTimeline",
  setup(_2, { slots }) {
    const ns = useNamespace("timeline");
    provide40("timeline", slots);
    return () => {
      return h24("ul", { class: [ns.b()] }, [renderSlot96(slots, "default")]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/timeline/src/timeline-item2.mjs
import { defineComponent as defineComponent160, computed as computed168, openBlock as openBlock122, createElementBlock as createElementBlock105, normalizeClass as normalizeClass104, unref as unref145, createElementVNode as createElementVNode66, normalizeStyle as normalizeStyle50, createBlock as createBlock72, withCtx as withCtx68, resolveDynamicComponent as resolveDynamicComponent32, createCommentVNode as createCommentVNode61, renderSlot as renderSlot97, toDisplayString as toDisplayString59 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/timeline/src/timeline-item.mjs
var timelineItemProps = buildProps({
  timestamp: {
    type: String,
    default: ""
  },
  hideTimestamp: {
    type: Boolean,
    default: false
  },
  center: {
    type: Boolean,
    default: false
  },
  placement: {
    type: String,
    values: ["top", "bottom"],
    default: "bottom"
  },
  type: {
    type: String,
    values: ["primary", "success", "warning", "danger", "info"],
    default: ""
  },
  color: {
    type: String,
    default: ""
  },
  size: {
    type: String,
    values: ["normal", "large"],
    default: "normal"
  },
  icon: {
    type: iconPropType
  },
  hollow: {
    type: Boolean,
    default: false
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/timeline/src/timeline-item2.mjs
var __default__87 = defineComponent160({
  name: "ElTimelineItem"
});
var _sfc_main126 = defineComponent160({
  ...__default__87,
  props: timelineItemProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("timeline-item");
    const defaultNodeKls = computed168(() => [
      ns.e("node"),
      ns.em("node", props.size || ""),
      ns.em("node", props.type || ""),
      ns.is("hollow", props.hollow)
    ]);
    return (_ctx, _cache) => {
      return openBlock122(), createElementBlock105("li", {
        class: normalizeClass104([unref145(ns).b(), { [unref145(ns).e("center")]: _ctx.center }])
      }, [
        createElementVNode66("div", {
          class: normalizeClass104(unref145(ns).e("tail"))
        }, null, 2),
        !_ctx.$slots.dot ? (openBlock122(), createElementBlock105("div", {
          key: 0,
          class: normalizeClass104(unref145(defaultNodeKls)),
          style: normalizeStyle50({
            backgroundColor: _ctx.color
          })
        }, [
          _ctx.icon ? (openBlock122(), createBlock72(unref145(ElIcon), {
            key: 0,
            class: normalizeClass104(unref145(ns).e("icon"))
          }, {
            default: withCtx68(() => [
              (openBlock122(), createBlock72(resolveDynamicComponent32(_ctx.icon)))
            ]),
            _: 1
          }, 8, ["class"])) : createCommentVNode61("v-if", true)
        ], 6)) : createCommentVNode61("v-if", true),
        _ctx.$slots.dot ? (openBlock122(), createElementBlock105("div", {
          key: 1,
          class: normalizeClass104(unref145(ns).e("dot"))
        }, [
          renderSlot97(_ctx.$slots, "dot")
        ], 2)) : createCommentVNode61("v-if", true),
        createElementVNode66("div", {
          class: normalizeClass104(unref145(ns).e("wrapper"))
        }, [
          !_ctx.hideTimestamp && _ctx.placement === "top" ? (openBlock122(), createElementBlock105("div", {
            key: 0,
            class: normalizeClass104([unref145(ns).e("timestamp"), unref145(ns).is("top")])
          }, toDisplayString59(_ctx.timestamp), 3)) : createCommentVNode61("v-if", true),
          createElementVNode66("div", {
            class: normalizeClass104(unref145(ns).e("content"))
          }, [
            renderSlot97(_ctx.$slots, "default")
          ], 2),
          !_ctx.hideTimestamp && _ctx.placement === "bottom" ? (openBlock122(), createElementBlock105("div", {
            key: 1,
            class: normalizeClass104([unref145(ns).e("timestamp"), unref145(ns).is("bottom")])
          }, toDisplayString59(_ctx.timestamp), 3)) : createCommentVNode61("v-if", true)
        ], 2)
      ], 2);
    };
  }
});
var TimelineItem = _export_sfc(_sfc_main126, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/timeline/src/timeline-item.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/timeline/index.mjs
var ElTimeline = withInstall(Timeline, {
  TimelineItem
});
var ElTimelineItem = withNoopInstall(TimelineItem);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/tooltip2.mjs
import { defineComponent as defineComponent167, toRefs as toRefs14, reactive as reactive28, openBlock as openBlock127, createBlock as createBlock74, normalizeProps as normalizeProps5, guardReactiveProps as guardReactiveProps3, withCtx as withCtx71, createVNode as createVNode82, mergeProps as mergeProps35, renderSlot as renderSlot102, Teleport as Teleport6, Transition as Transition15, createCommentVNode as createCommentVNode63, createElementBlock as createElementBlock110, Fragment as Fragment45 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/common.mjs
var tooltipV2CommonProps = buildProps({
  nowrap: Boolean
});
var TooltipV2Sides = ((TooltipV2Sides2) => {
  TooltipV2Sides2["top"] = "top";
  TooltipV2Sides2["bottom"] = "bottom";
  TooltipV2Sides2["left"] = "left";
  TooltipV2Sides2["right"] = "right";
  return TooltipV2Sides2;
})(TooltipV2Sides || {});
var tooltipV2Sides = Object.values(TooltipV2Sides);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/arrow.mjs
var tooltipV2ArrowProps = buildProps({
  width: {
    type: Number,
    default: 10
  },
  height: {
    type: Number,
    default: 10
  },
  style: {
    type: definePropType(Object),
    default: null
  }
});
var tooltipV2ArrowSpecialProps = buildProps({
  side: {
    type: definePropType(String),
    values: tooltipV2Sides,
    required: true
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/content.mjs
var tooltipV2Strategies = ["absolute", "fixed"];
var tooltipV2Placements = [
  "top-start",
  "top-end",
  "top",
  "bottom-start",
  "bottom-end",
  "bottom",
  "left-start",
  "left-end",
  "left",
  "right-start",
  "right-end",
  "right"
];
var tooltipV2ContentProps = buildProps({
  ariaLabel: String,
  arrowPadding: {
    type: definePropType(Number),
    default: 5
  },
  effect: {
    type: String,
    default: ""
  },
  contentClass: String,
  placement: {
    type: definePropType(String),
    values: tooltipV2Placements,
    default: "bottom"
  },
  reference: {
    type: definePropType(Object),
    default: null
  },
  offset: {
    type: Number,
    default: 8
  },
  strategy: {
    type: definePropType(String),
    values: tooltipV2Strategies,
    default: "absolute"
  },
  showArrow: {
    type: Boolean,
    default: false
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/root.mjs
var tooltipV2RootProps = buildProps({
  delayDuration: {
    type: Number,
    default: 300
  },
  defaultOpen: Boolean,
  open: {
    type: Boolean,
    default: void 0
  },
  onOpenChange: {
    type: definePropType(Function)
  },
  "onUpdate:open": {
    type: definePropType(Function)
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/trigger2.mjs
var EventHandler = {
  type: definePropType(Function)
};
var tooltipV2TriggerProps = buildProps({
  onBlur: EventHandler,
  onClick: EventHandler,
  onFocus: EventHandler,
  onMouseDown: EventHandler,
  onMouseEnter: EventHandler,
  onMouseLeave: EventHandler
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/tooltip.mjs
var tooltipV2Props = buildProps({
  ...tooltipV2RootProps,
  ...tooltipV2ArrowProps,
  ...tooltipV2TriggerProps,
  ...tooltipV2ContentProps,
  alwaysOn: Boolean,
  fullTransition: Boolean,
  transitionProps: {
    type: definePropType(Object),
    default: null
  },
  teleported: Boolean,
  to: {
    type: definePropType(String),
    default: "body"
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/root2.mjs
import { defineComponent as defineComponent161, ref as ref135, computed as computed169, unref as unref146, watch as watch85, onMounted as onMounted58, onBeforeUnmount as onBeforeUnmount25, provide as provide41, renderSlot as renderSlot98 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/constants.mjs
var tooltipV2RootKey = Symbol("tooltipV2");
var tooltipV2ContentKey = Symbol("tooltipV2Content");
var TOOLTIP_V2_OPEN = "tooltip_v2.open";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/root2.mjs
var __default__88 = defineComponent161({
  name: "ElTooltipV2Root"
});
var _sfc_main127 = defineComponent161({
  ...__default__88,
  props: tooltipV2RootProps,
  setup(__props, { expose }) {
    const props = __props;
    const _open = ref135(props.defaultOpen);
    const triggerRef2 = ref135(null);
    const open = computed169({
      get: () => isPropAbsent(props.open) ? _open.value : props.open,
      set: (open2) => {
        var _a2;
        _open.value = open2;
        (_a2 = props["onUpdate:open"]) == null ? void 0 : _a2.call(props, open2);
      }
    });
    const isOpenDelayed = computed169(() => isNumber3(props.delayDuration) && props.delayDuration > 0);
    const { start: onDelayedOpen, stop: clearTimer } = useTimeoutFn(() => {
      open.value = true;
    }, computed169(() => props.delayDuration), {
      immediate: false
    });
    const ns = useNamespace("tooltip-v2");
    const contentId = useId();
    const onNormalOpen = () => {
      clearTimer();
      open.value = true;
    };
    const onDelayOpen = () => {
      unref146(isOpenDelayed) ? onDelayedOpen() : onNormalOpen();
    };
    const onOpen = onNormalOpen;
    const onClose = () => {
      clearTimer();
      open.value = false;
    };
    const onChange = (open2) => {
      var _a2;
      if (open2) {
        document.dispatchEvent(new CustomEvent(TOOLTIP_V2_OPEN));
        onOpen();
      }
      (_a2 = props.onOpenChange) == null ? void 0 : _a2.call(props, open2);
    };
    watch85(open, onChange);
    onMounted58(() => {
      document.addEventListener(TOOLTIP_V2_OPEN, onClose);
    });
    onBeforeUnmount25(() => {
      clearTimer();
      document.removeEventListener(TOOLTIP_V2_OPEN, onClose);
    });
    provide41(tooltipV2RootKey, {
      contentId,
      triggerRef: triggerRef2,
      ns,
      onClose,
      onDelayOpen,
      onOpen
    });
    expose({
      onOpen,
      onClose
    });
    return (_ctx, _cache) => {
      return renderSlot98(_ctx.$slots, "default", { open: unref146(open) });
    };
  }
});
var TooltipV2Root = _export_sfc(_sfc_main127, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/root.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/arrow2.mjs
import { defineComponent as defineComponent162, inject as inject77, computed as computed170, openBlock as openBlock123, createElementBlock as createElementBlock106, normalizeStyle as normalizeStyle51, unref as unref147, normalizeClass as normalizeClass105 } from "vue";
var __default__89 = defineComponent162({
  name: "ElTooltipV2Arrow"
});
var _sfc_main128 = defineComponent162({
  ...__default__89,
  props: {
    ...tooltipV2ArrowProps,
    ...tooltipV2ArrowSpecialProps
  },
  setup(__props) {
    const props = __props;
    const { ns } = inject77(tooltipV2RootKey);
    const { arrowRef } = inject77(tooltipV2ContentKey);
    const arrowStyle = computed170(() => {
      const { style, width, height } = props;
      const namespace = ns.namespace.value;
      return {
        [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,
        [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,
        [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,
        [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,
        ...style || {}
      };
    });
    return (_ctx, _cache) => {
      return openBlock123(), createElementBlock106("span", {
        ref_key: "arrowRef",
        ref: arrowRef,
        style: normalizeStyle51(unref147(arrowStyle)),
        class: normalizeClass105(unref147(ns).e("arrow"))
      }, null, 6);
    };
  }
});
var TooltipV2Arrow = _export_sfc(_sfc_main128, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/arrow.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/content2.mjs
import { defineComponent as defineComponent164, inject as inject78, ref as ref136, computed as computed172, unref as unref149, watch as watch86, onMounted as onMounted59, provide as provide42, openBlock as openBlock125, createElementBlock as createElementBlock108, normalizeStyle as normalizeStyle52, normalizeClass as normalizeClass106, renderSlot as renderSlot100, createVNode as createVNode80, withCtx as withCtx69, Fragment as Fragment43, createTextVNode as createTextVNode26, toDisplayString as toDisplayString60, createCommentVNode as createCommentVNode62 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/visual-hidden/src/visual-hidden2.mjs
import { defineComponent as defineComponent163, computed as computed171, openBlock as openBlock124, createElementBlock as createElementBlock107, mergeProps as mergeProps33, unref as unref148, renderSlot as renderSlot99 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/visual-hidden/src/visual-hidden.mjs
var visualHiddenProps = buildProps({
  style: {
    type: definePropType([String, Object, Array]),
    default: () => ({})
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/visual-hidden/src/visual-hidden2.mjs
var __default__90 = defineComponent163({
  name: "ElVisuallyHidden"
});
var _sfc_main129 = defineComponent163({
  ...__default__90,
  props: visualHiddenProps,
  setup(__props) {
    const props = __props;
    const computedStyle = computed171(() => {
      return [
        props.style,
        {
          position: "absolute",
          border: 0,
          width: 1,
          height: 1,
          padding: 0,
          margin: -1,
          overflow: "hidden",
          clip: "rect(0, 0, 0, 0)",
          whiteSpace: "nowrap",
          wordWrap: "normal"
        }
      ];
    });
    return (_ctx, _cache) => {
      return openBlock124(), createElementBlock107("span", mergeProps33(_ctx.$attrs, { style: unref148(computedStyle) }), [
        renderSlot99(_ctx.$slots, "default")
      ], 16);
    };
  }
});
var ElVisuallyHidden = _export_sfc(_sfc_main129, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/visual-hidden/src/visual-hidden.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/content2.mjs
var _hoisted_161 = ["data-side"];
var __default__91 = defineComponent164({
  name: "ElTooltipV2Content"
});
var _sfc_main130 = defineComponent164({
  ...__default__91,
  props: { ...tooltipV2ContentProps, ...tooltipV2CommonProps },
  setup(__props) {
    const props = __props;
    const { triggerRef: triggerRef2, contentId } = inject78(tooltipV2RootKey);
    const placement = ref136(props.placement);
    const strategy = ref136(props.strategy);
    const arrowRef = ref136(null);
    const { referenceRef, contentRef, middlewareData, x: x2, y, update: update2 } = useFloating({
      placement,
      strategy,
      middleware: computed172(() => {
        const middleware = [offset(props.offset)];
        if (props.showArrow) {
          middleware.push(arrowMiddleware({
            arrowRef
          }));
        }
        return middleware;
      })
    });
    const zIndex2 = useZIndex().nextZIndex();
    const ns = useNamespace("tooltip-v2");
    const side = computed172(() => {
      return placement.value.split("-")[0];
    });
    const contentStyle = computed172(() => {
      return {
        position: unref149(strategy),
        top: `${unref149(y) || 0}px`,
        left: `${unref149(x2) || 0}px`,
        zIndex: zIndex2
      };
    });
    const arrowStyle = computed172(() => {
      if (!props.showArrow)
        return {};
      const { arrow: arrow2 } = unref149(middlewareData);
      return {
        [`--${ns.namespace.value}-tooltip-v2-arrow-x`]: `${arrow2 == null ? void 0 : arrow2.x}px` || "",
        [`--${ns.namespace.value}-tooltip-v2-arrow-y`]: `${arrow2 == null ? void 0 : arrow2.y}px` || ""
      };
    });
    const contentClass = computed172(() => [
      ns.e("content"),
      ns.is("dark", props.effect === "dark"),
      ns.is(unref149(strategy)),
      props.contentClass
    ]);
    watch86(arrowRef, () => update2());
    watch86(() => props.placement, (val) => placement.value = val);
    onMounted59(() => {
      watch86(() => props.reference || triggerRef2.value, (el) => {
        referenceRef.value = el || void 0;
      }, {
        immediate: true
      });
    });
    provide42(tooltipV2ContentKey, { arrowRef });
    return (_ctx, _cache) => {
      return openBlock125(), createElementBlock108("div", {
        ref_key: "contentRef",
        ref: contentRef,
        style: normalizeStyle52(unref149(contentStyle)),
        "data-tooltip-v2-root": ""
      }, [
        !_ctx.nowrap ? (openBlock125(), createElementBlock108("div", {
          key: 0,
          "data-side": unref149(side),
          class: normalizeClass106(unref149(contentClass))
        }, [
          renderSlot100(_ctx.$slots, "default", {
            contentStyle: unref149(contentStyle),
            contentClass: unref149(contentClass)
          }),
          createVNode80(unref149(ElVisuallyHidden), {
            id: unref149(contentId),
            role: "tooltip"
          }, {
            default: withCtx69(() => [
              _ctx.ariaLabel ? (openBlock125(), createElementBlock108(Fragment43, { key: 0 }, [
                createTextVNode26(toDisplayString60(_ctx.ariaLabel), 1)
              ], 64)) : renderSlot100(_ctx.$slots, "default", { key: 1 })
            ]),
            _: 3
          }, 8, ["id"]),
          renderSlot100(_ctx.$slots, "arrow", {
            style: normalizeStyle52(unref149(arrowStyle)),
            side: unref149(side)
          })
        ], 10, _hoisted_161)) : createCommentVNode62("v-if", true)
      ], 4);
    };
  }
});
var TooltipV2Content = _export_sfc(_sfc_main130, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/content.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/trigger.mjs
import { defineComponent as defineComponent166, inject as inject79, watch as watch87, onBeforeUnmount as onBeforeUnmount26, openBlock as openBlock126, createBlock as createBlock73, unref as unref150, withCtx as withCtx70, renderSlot as renderSlot101, createElementBlock as createElementBlock109, mergeProps as mergeProps34 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/forward-ref.mjs
import { defineComponent as defineComponent165, ref as ref137, createVNode as createVNode81, Fragment as Fragment44 } from "vue";
var forwardRefProps = buildProps({
  setRef: {
    type: definePropType(Function),
    required: true
  },
  onlyChild: Boolean
});
var ForwardRef = defineComponent165({
  props: forwardRefProps,
  setup(props, {
    slots
  }) {
    const fragmentRef = ref137();
    const setRef = composeRefs(fragmentRef, (el) => {
      if (el) {
        props.setRef(el.nextElementSibling);
      } else {
        props.setRef(null);
      }
    });
    return () => {
      var _a2;
      const [firstChild] = ((_a2 = slots.default) == null ? void 0 : _a2.call(slots)) || [];
      const child = props.onlyChild ? ensureOnlyChild(firstChild.children) : firstChild.children;
      return createVNode81(Fragment44, {
        "ref": setRef
      }, [child]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/trigger.mjs
var __default__92 = defineComponent166({
  name: "ElTooltipV2Trigger"
});
var _sfc_main131 = defineComponent166({
  ...__default__92,
  props: {
    ...tooltipV2CommonProps,
    ...tooltipV2TriggerProps
  },
  setup(__props) {
    const props = __props;
    const { onClose, onOpen, onDelayOpen, triggerRef: triggerRef2, contentId } = inject79(tooltipV2RootKey);
    let isMousedown = false;
    const setTriggerRef = (el) => {
      triggerRef2.value = el;
    };
    const onMouseup = () => {
      isMousedown = false;
    };
    const onMouseenter = composeEventHandlers(props.onMouseEnter, onDelayOpen);
    const onMouseleave = composeEventHandlers(props.onMouseLeave, onClose);
    const onMousedown = composeEventHandlers(props.onMouseDown, () => {
      onClose();
      isMousedown = true;
      document.addEventListener("mouseup", onMouseup, { once: true });
    });
    const onFocus = composeEventHandlers(props.onFocus, () => {
      if (!isMousedown)
        onOpen();
    });
    const onBlur = composeEventHandlers(props.onBlur, onClose);
    const onClick = composeEventHandlers(props.onClick, (e) => {
      if (e.detail === 0)
        onClose();
    });
    const events = {
      blur: onBlur,
      click: onClick,
      focus: onFocus,
      mousedown: onMousedown,
      mouseenter: onMouseenter,
      mouseleave: onMouseleave
    };
    const setEvents = (el, events2, type4) => {
      if (el) {
        Object.entries(events2).forEach(([name, handler]) => {
          el[type4](name, handler);
        });
      }
    };
    watch87(triggerRef2, (triggerEl, previousTriggerEl) => {
      setEvents(triggerEl, events, "addEventListener");
      setEvents(previousTriggerEl, events, "removeEventListener");
      if (triggerEl) {
        triggerEl.setAttribute("aria-describedby", contentId.value);
      }
    });
    onBeforeUnmount26(() => {
      setEvents(triggerRef2.value, events, "removeEventListener");
      document.removeEventListener("mouseup", onMouseup);
    });
    return (_ctx, _cache) => {
      return _ctx.nowrap ? (openBlock126(), createBlock73(unref150(ForwardRef), {
        key: 0,
        "set-ref": setTriggerRef,
        "only-child": ""
      }, {
        default: withCtx70(() => [
          renderSlot101(_ctx.$slots, "default")
        ]),
        _: 3
      })) : (openBlock126(), createElementBlock109("button", mergeProps34({
        key: 1,
        ref_key: "triggerRef",
        ref: triggerRef2
      }, _ctx.$attrs), [
        renderSlot101(_ctx.$slots, "default")
      ], 16));
    };
  }
});
var TooltipV2Trigger = _export_sfc(_sfc_main131, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/trigger.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/src/tooltip2.mjs
var __default__93 = defineComponent167({
  name: "ElTooltipV2"
});
var _sfc_main132 = defineComponent167({
  ...__default__93,
  props: tooltipV2Props,
  setup(__props) {
    const props = __props;
    const refedProps = toRefs14(props);
    const arrowProps = reactive28(pick_default(refedProps, Object.keys(tooltipV2ArrowProps)));
    const contentProps = reactive28(pick_default(refedProps, Object.keys(tooltipV2ContentProps)));
    const rootProps = reactive28(pick_default(refedProps, Object.keys(tooltipV2RootProps)));
    const triggerProps = reactive28(pick_default(refedProps, Object.keys(tooltipV2TriggerProps)));
    return (_ctx, _cache) => {
      return openBlock127(), createBlock74(TooltipV2Root, normalizeProps5(guardReactiveProps3(rootProps)), {
        default: withCtx71(({ open }) => [
          createVNode82(TooltipV2Trigger, mergeProps35(triggerProps, { nowrap: "" }), {
            default: withCtx71(() => [
              renderSlot102(_ctx.$slots, "trigger")
            ]),
            _: 3
          }, 16),
          (openBlock127(), createBlock74(Teleport6, {
            to: _ctx.to,
            disabled: !_ctx.teleported
          }, [
            _ctx.fullTransition ? (openBlock127(), createBlock74(Transition15, normalizeProps5(mergeProps35({ key: 0 }, _ctx.transitionProps)), {
              default: withCtx71(() => [
                _ctx.alwaysOn || open ? (openBlock127(), createBlock74(TooltipV2Content, normalizeProps5(mergeProps35({ key: 0 }, contentProps)), {
                  arrow: withCtx71(({ style, side }) => [
                    _ctx.showArrow ? (openBlock127(), createBlock74(TooltipV2Arrow, mergeProps35({ key: 0 }, arrowProps, {
                      style,
                      side
                    }), null, 16, ["style", "side"])) : createCommentVNode63("v-if", true)
                  ]),
                  default: withCtx71(() => [
                    renderSlot102(_ctx.$slots, "default")
                  ]),
                  _: 3
                }, 16)) : createCommentVNode63("v-if", true)
              ]),
              _: 2
            }, 1040)) : (openBlock127(), createElementBlock110(Fragment45, { key: 1 }, [
              _ctx.alwaysOn || open ? (openBlock127(), createBlock74(TooltipV2Content, normalizeProps5(mergeProps35({ key: 0 }, contentProps)), {
                arrow: withCtx71(({ style, side }) => [
                  _ctx.showArrow ? (openBlock127(), createBlock74(TooltipV2Arrow, mergeProps35({ key: 0 }, arrowProps, {
                    style,
                    side
                  }), null, 16, ["style", "side"])) : createCommentVNode63("v-if", true)
                ]),
                default: withCtx71(() => [
                  renderSlot102(_ctx.$slots, "default")
                ]),
                _: 3
              }, 16)) : createCommentVNode63("v-if", true)
            ], 64))
          ], 8, ["to", "disabled"]))
        ]),
        _: 3
      }, 16);
    };
  }
});
var TooltipV2 = _export_sfc(_sfc_main132, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/tooltip.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tooltip-v2/index.mjs
var ElTooltipV2 = withInstall(TooltipV2);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/transfer2.mjs
import { defineComponent as defineComponent169, useSlots as useSlots16, reactive as reactive30, ref as ref138, computed as computed177, watch as watch89, h as h25, openBlock as openBlock129, createElementBlock as createElementBlock112, normalizeClass as normalizeClass108, unref as unref152, createVNode as createVNode84, withCtx as withCtx73, renderSlot as renderSlot104, createElementVNode as createElementVNode68, toDisplayString as toDisplayString62, createCommentVNode as createCommentVNode65 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/transfer.mjs
import { isArray as isArray36 } from "@vue/shared";
var LEFT_CHECK_CHANGE_EVENT = "left-check-change";
var RIGHT_CHECK_CHANGE_EVENT = "right-check-change";
var transferProps = buildProps({
  data: {
    type: definePropType(Array),
    default: () => []
  },
  titles: {
    type: definePropType(Array),
    default: () => []
  },
  buttonTexts: {
    type: definePropType(Array),
    default: () => []
  },
  filterPlaceholder: String,
  filterMethod: {
    type: definePropType(Function)
  },
  leftDefaultChecked: {
    type: definePropType(Array),
    default: () => []
  },
  rightDefaultChecked: {
    type: definePropType(Array),
    default: () => []
  },
  renderContent: {
    type: definePropType(Function)
  },
  modelValue: {
    type: definePropType(Array),
    default: () => []
  },
  format: {
    type: definePropType(Object),
    default: () => ({})
  },
  filterable: Boolean,
  props: {
    type: definePropType(Object),
    default: () => mutable({
      label: "label",
      key: "key",
      disabled: "disabled"
    })
  },
  targetOrder: {
    type: String,
    values: ["original", "push", "unshift"],
    default: "original"
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var transferCheckedChangeFn = (value, movedKeys) => [value, movedKeys].every(isArray36) || isArray36(value) && isNil_default(movedKeys);
var transferEmits = {
  [CHANGE_EVENT]: (value, direction2, movedKeys) => [value, movedKeys].every(isArray36) && ["left", "right"].includes(direction2),
  [UPDATE_MODEL_EVENT]: (value) => isArray36(value),
  [LEFT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,
  [RIGHT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/composables/use-check.mjs
import { computed as computed174, watch as watch88 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/transfer-panel.mjs
var CHECKED_CHANGE_EVENT = "checked-change";
var transferPanelProps = buildProps({
  data: transferProps.data,
  optionRender: {
    type: definePropType(Function)
  },
  placeholder: String,
  title: String,
  filterable: Boolean,
  format: transferProps.format,
  filterMethod: transferProps.filterMethod,
  defaultChecked: transferProps.leftDefaultChecked,
  props: transferProps.props
});
var transferPanelEmits = {
  [CHECKED_CHANGE_EVENT]: transferCheckedChangeFn
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/composables/use-props-alias.mjs
import { computed as computed173 } from "vue";
var usePropsAlias = (props) => {
  const initProps = {
    label: "label",
    key: "key",
    disabled: "disabled"
  };
  return computed173(() => ({
    ...initProps,
    ...props.props
  }));
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/composables/use-check.mjs
import { isFunction as isFunction24 } from "@vue/shared";
var useCheck = (props, panelState, emit) => {
  const propsAlias = usePropsAlias(props);
  const filteredData = computed174(() => {
    return props.data.filter((item) => {
      if (isFunction24(props.filterMethod)) {
        return props.filterMethod(panelState.query, item);
      } else {
        const label = String(item[propsAlias.value.label] || item[propsAlias.value.key]);
        return label.toLowerCase().includes(panelState.query.toLowerCase());
      }
    });
  });
  const checkableData = computed174(() => filteredData.value.filter((item) => !item[propsAlias.value.disabled]));
  const checkedSummary = computed174(() => {
    const checkedLength = panelState.checked.length;
    const dataLength = props.data.length;
    const { noChecked, hasChecked } = props.format;
    if (noChecked && hasChecked) {
      return checkedLength > 0 ? hasChecked.replace(/\${checked}/g, checkedLength.toString()).replace(/\${total}/g, dataLength.toString()) : noChecked.replace(/\${total}/g, dataLength.toString());
    } else {
      return `${checkedLength}/${dataLength}`;
    }
  });
  const isIndeterminate = computed174(() => {
    const checkedLength = panelState.checked.length;
    return checkedLength > 0 && checkedLength < checkableData.value.length;
  });
  const updateAllChecked = () => {
    const checkableDataKeys = checkableData.value.map((item) => item[propsAlias.value.key]);
    panelState.allChecked = checkableDataKeys.length > 0 && checkableDataKeys.every((item) => panelState.checked.includes(item));
  };
  const handleAllCheckedChange = (value) => {
    panelState.checked = value ? checkableData.value.map((item) => item[propsAlias.value.key]) : [];
  };
  watch88(() => panelState.checked, (val, oldVal) => {
    updateAllChecked();
    if (panelState.checkChangeByUser) {
      const movedKeys = val.concat(oldVal).filter((v2) => !val.includes(v2) || !oldVal.includes(v2));
      emit(CHECKED_CHANGE_EVENT, val, movedKeys);
    } else {
      emit(CHECKED_CHANGE_EVENT, val);
      panelState.checkChangeByUser = true;
    }
  });
  watch88(checkableData, () => {
    updateAllChecked();
  });
  watch88(() => props.data, () => {
    const checked = [];
    const filteredDataKeys = filteredData.value.map((item) => item[propsAlias.value.key]);
    panelState.checked.forEach((item) => {
      if (filteredDataKeys.includes(item)) {
        checked.push(item);
      }
    });
    panelState.checkChangeByUser = false;
    panelState.checked = checked;
  });
  watch88(() => props.defaultChecked, (val, oldVal) => {
    if (oldVal && val.length === oldVal.length && val.every((item) => oldVal.includes(item)))
      return;
    const checked = [];
    const checkableDataKeys = checkableData.value.map((item) => item[propsAlias.value.key]);
    val.forEach((item) => {
      if (checkableDataKeys.includes(item)) {
        checked.push(item);
      }
    });
    panelState.checkChangeByUser = false;
    panelState.checked = checked;
  }, {
    immediate: true
  });
  return {
    filteredData,
    checkableData,
    checkedSummary,
    isIndeterminate,
    updateAllChecked,
    handleAllCheckedChange
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/composables/use-checked-change.mjs
var useCheckedChange = (checkedState, emit) => {
  const onSourceCheckedChange = (val, movedKeys) => {
    checkedState.leftChecked = val;
    if (!movedKeys)
      return;
    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys);
  };
  const onTargetCheckedChange = (val, movedKeys) => {
    checkedState.rightChecked = val;
    if (!movedKeys)
      return;
    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys);
  };
  return {
    onSourceCheckedChange,
    onTargetCheckedChange
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/composables/use-computed-data.mjs
import { computed as computed175 } from "vue";
var useComputedData = (props) => {
  const propsAlias = usePropsAlias(props);
  const dataObj = computed175(() => props.data.reduce((o2, cur) => (o2[cur[propsAlias.value.key]] = cur) && o2, {}));
  const sourceData = computed175(() => props.data.filter((item) => !props.modelValue.includes(item[propsAlias.value.key])));
  const targetData = computed175(() => {
    if (props.targetOrder === "original") {
      return props.data.filter((item) => props.modelValue.includes(item[propsAlias.value.key]));
    } else {
      return props.modelValue.reduce((arr, cur) => {
        const val = dataObj.value[cur];
        if (val) {
          arr.push(val);
        }
        return arr;
      }, []);
    }
  });
  return {
    sourceData,
    targetData
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/composables/use-move.mjs
var useMove = (props, checkedState, emit) => {
  const propsAlias = usePropsAlias(props);
  const _emit = (value, direction2, movedKeys) => {
    emit(UPDATE_MODEL_EVENT, value);
    emit(CHANGE_EVENT, value, direction2, movedKeys);
  };
  const addToLeft = () => {
    const currentValue = props.modelValue.slice();
    checkedState.rightChecked.forEach((item) => {
      const index = currentValue.indexOf(item);
      if (index > -1) {
        currentValue.splice(index, 1);
      }
    });
    _emit(currentValue, "left", checkedState.rightChecked);
  };
  const addToRight = () => {
    let currentValue = props.modelValue.slice();
    const itemsToBeMoved = props.data.filter((item) => {
      const itemKey = item[propsAlias.value.key];
      return checkedState.leftChecked.includes(itemKey) && !props.modelValue.includes(itemKey);
    }).map((item) => item[propsAlias.value.key]);
    currentValue = props.targetOrder === "unshift" ? itemsToBeMoved.concat(currentValue) : currentValue.concat(itemsToBeMoved);
    if (props.targetOrder === "original") {
      currentValue = props.data.filter((item) => currentValue.includes(item[propsAlias.value.key])).map((item) => item[propsAlias.value.key]);
    }
    _emit(currentValue, "right", checkedState.leftChecked);
  };
  return {
    addToLeft,
    addToRight
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/transfer-panel2.mjs
import { defineComponent as defineComponent168, useSlots as useSlots15, reactive as reactive29, computed as computed176, toRefs as toRefs15, openBlock as openBlock128, createElementBlock as createElementBlock111, normalizeClass as normalizeClass107, unref as unref151, createElementVNode as createElementVNode67, createVNode as createVNode83, isRef as isRef13, withCtx as withCtx72, createTextVNode as createTextVNode27, toDisplayString as toDisplayString61, createBlock as createBlock75, createCommentVNode as createCommentVNode64, withDirectives as withDirectives32, Fragment as Fragment46, renderList as renderList29, vShow as vShow23, renderSlot as renderSlot103 } from "vue";
var __default__94 = defineComponent168({
  name: "ElTransferPanel"
});
var _sfc_main133 = defineComponent168({
  ...__default__94,
  props: transferPanelProps,
  emits: transferPanelEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const slots = useSlots15();
    const OptionContent = ({ option }) => option;
    const { t } = useLocale();
    const ns = useNamespace("transfer");
    const panelState = reactive29({
      checked: [],
      allChecked: false,
      query: "",
      checkChangeByUser: true
    });
    const propsAlias = usePropsAlias(props);
    const {
      filteredData,
      checkedSummary,
      isIndeterminate,
      handleAllCheckedChange
    } = useCheck(props, panelState, emit);
    const hasNoMatch = computed176(() => !isEmpty2(panelState.query) && isEmpty2(filteredData.value));
    const hasFooter = computed176(() => !isEmpty2(slots.default()[0].children));
    const { checked, allChecked, query } = toRefs15(panelState);
    expose({
      query
    });
    return (_ctx, _cache) => {
      return openBlock128(), createElementBlock111("div", {
        class: normalizeClass107(unref151(ns).b("panel"))
      }, [
        createElementVNode67("p", {
          class: normalizeClass107(unref151(ns).be("panel", "header"))
        }, [
          createVNode83(unref151(ElCheckbox), {
            modelValue: unref151(allChecked),
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef13(allChecked) ? allChecked.value = $event : null),
            indeterminate: unref151(isIndeterminate),
            "validate-event": false,
            onChange: unref151(handleAllCheckedChange)
          }, {
            default: withCtx72(() => [
              createTextVNode27(toDisplayString61(_ctx.title) + " ", 1),
              createElementVNode67("span", null, toDisplayString61(unref151(checkedSummary)), 1)
            ]),
            _: 1
          }, 8, ["modelValue", "indeterminate", "onChange"])
        ], 2),
        createElementVNode67("div", {
          class: normalizeClass107([unref151(ns).be("panel", "body"), unref151(ns).is("with-footer", unref151(hasFooter))])
        }, [
          _ctx.filterable ? (openBlock128(), createBlock75(unref151(ElInput), {
            key: 0,
            modelValue: unref151(query),
            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => isRef13(query) ? query.value = $event : null),
            class: normalizeClass107(unref151(ns).be("panel", "filter")),
            size: "default",
            placeholder: _ctx.placeholder,
            "prefix-icon": unref151(search_default),
            clearable: "",
            "validate-event": false
          }, null, 8, ["modelValue", "class", "placeholder", "prefix-icon"])) : createCommentVNode64("v-if", true),
          withDirectives32(createVNode83(unref151(ElCheckboxGroup), {
            modelValue: unref151(checked),
            "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => isRef13(checked) ? checked.value = $event : null),
            "validate-event": false,
            class: normalizeClass107([unref151(ns).is("filterable", _ctx.filterable), unref151(ns).be("panel", "list")])
          }, {
            default: withCtx72(() => [
              (openBlock128(true), createElementBlock111(Fragment46, null, renderList29(unref151(filteredData), (item) => {
                return openBlock128(), createBlock75(unref151(ElCheckbox), {
                  key: item[unref151(propsAlias).key],
                  class: normalizeClass107(unref151(ns).be("panel", "item")),
                  label: item[unref151(propsAlias).key],
                  disabled: item[unref151(propsAlias).disabled],
                  "validate-event": false
                }, {
                  default: withCtx72(() => {
                    var _a2;
                    return [
                      createVNode83(OptionContent, {
                        option: (_a2 = _ctx.optionRender) == null ? void 0 : _a2.call(_ctx, item)
                      }, null, 8, ["option"])
                    ];
                  }),
                  _: 2
                }, 1032, ["class", "label", "disabled"]);
              }), 128))
            ]),
            _: 1
          }, 8, ["modelValue", "class"]), [
            [vShow23, !unref151(hasNoMatch) && !unref151(isEmpty2)(_ctx.data)]
          ]),
          withDirectives32(createElementVNode67("p", {
            class: normalizeClass107(unref151(ns).be("panel", "empty"))
          }, toDisplayString61(unref151(hasNoMatch) ? unref151(t)("el.transfer.noMatch") : unref151(t)("el.transfer.noData")), 3), [
            [vShow23, unref151(hasNoMatch) || unref151(isEmpty2)(_ctx.data)]
          ])
        ], 2),
        unref151(hasFooter) ? (openBlock128(), createElementBlock111("p", {
          key: 0,
          class: normalizeClass107(unref151(ns).be("panel", "footer"))
        }, [
          renderSlot103(_ctx.$slots, "default")
        ], 2)) : createCommentVNode64("v-if", true)
      ], 2);
    };
  }
});
var TransferPanel = _export_sfc(_sfc_main133, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/transfer/src/transfer-panel.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/src/transfer2.mjs
var _hoisted_163 = { key: 0 };
var _hoisted_239 = { key: 0 };
var __default__95 = defineComponent169({
  name: "ElTransfer"
});
var _sfc_main134 = defineComponent169({
  ...__default__95,
  props: transferProps,
  emits: transferEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const slots = useSlots16();
    const { t } = useLocale();
    const ns = useNamespace("transfer");
    const { formItem } = useFormItem();
    const checkedState = reactive30({
      leftChecked: [],
      rightChecked: []
    });
    const propsAlias = usePropsAlias(props);
    const { sourceData, targetData } = useComputedData(props);
    const { onSourceCheckedChange, onTargetCheckedChange } = useCheckedChange(checkedState, emit);
    const { addToLeft, addToRight } = useMove(props, checkedState, emit);
    const leftPanel = ref138();
    const rightPanel = ref138();
    const clearQuery = (which) => {
      switch (which) {
        case "left":
          leftPanel.value.query = "";
          break;
        case "right":
          rightPanel.value.query = "";
          break;
      }
    };
    const hasButtonTexts = computed177(() => props.buttonTexts.length === 2);
    const leftPanelTitle = computed177(() => props.titles[0] || t("el.transfer.titles.0"));
    const rightPanelTitle = computed177(() => props.titles[1] || t("el.transfer.titles.1"));
    const panelFilterPlaceholder = computed177(() => props.filterPlaceholder || t("el.transfer.filterPlaceholder"));
    watch89(() => props.modelValue, () => {
      var _a2;
      if (props.validateEvent) {
        (_a2 = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a2.call(formItem, "change").catch((err) => debugWarn(err));
      }
    });
    const optionRender = computed177(() => (option) => {
      if (props.renderContent)
        return props.renderContent(h25, option);
      if (slots.default)
        return slots.default({ option });
      return h25("span", option[propsAlias.value.label] || option[propsAlias.value.key]);
    });
    expose({
      clearQuery,
      leftPanel,
      rightPanel
    });
    return (_ctx, _cache) => {
      return openBlock129(), createElementBlock112("div", {
        class: normalizeClass108(unref152(ns).b())
      }, [
        createVNode84(TransferPanel, {
          ref_key: "leftPanel",
          ref: leftPanel,
          data: unref152(sourceData),
          "option-render": unref152(optionRender),
          placeholder: unref152(panelFilterPlaceholder),
          title: unref152(leftPanelTitle),
          filterable: _ctx.filterable,
          format: _ctx.format,
          "filter-method": _ctx.filterMethod,
          "default-checked": _ctx.leftDefaultChecked,
          props: props.props,
          onCheckedChange: unref152(onSourceCheckedChange)
        }, {
          default: withCtx73(() => [
            renderSlot104(_ctx.$slots, "left-footer")
          ]),
          _: 3
        }, 8, ["data", "option-render", "placeholder", "title", "filterable", "format", "filter-method", "default-checked", "props", "onCheckedChange"]),
        createElementVNode68("div", {
          class: normalizeClass108(unref152(ns).e("buttons"))
        }, [
          createVNode84(unref152(ElButton), {
            type: "primary",
            class: normalizeClass108([unref152(ns).e("button"), unref152(ns).is("with-texts", unref152(hasButtonTexts))]),
            disabled: unref152(isEmpty2)(checkedState.rightChecked),
            onClick: unref152(addToLeft)
          }, {
            default: withCtx73(() => [
              createVNode84(unref152(ElIcon), null, {
                default: withCtx73(() => [
                  createVNode84(unref152(arrow_left_default))
                ]),
                _: 1
              }),
              !unref152(isUndefined2)(_ctx.buttonTexts[0]) ? (openBlock129(), createElementBlock112("span", _hoisted_163, toDisplayString62(_ctx.buttonTexts[0]), 1)) : createCommentVNode65("v-if", true)
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"]),
          createVNode84(unref152(ElButton), {
            type: "primary",
            class: normalizeClass108([unref152(ns).e("button"), unref152(ns).is("with-texts", unref152(hasButtonTexts))]),
            disabled: unref152(isEmpty2)(checkedState.leftChecked),
            onClick: unref152(addToRight)
          }, {
            default: withCtx73(() => [
              !unref152(isUndefined2)(_ctx.buttonTexts[1]) ? (openBlock129(), createElementBlock112("span", _hoisted_239, toDisplayString62(_ctx.buttonTexts[1]), 1)) : createCommentVNode65("v-if", true),
              createVNode84(unref152(ElIcon), null, {
                default: withCtx73(() => [
                  createVNode84(unref152(arrow_right_default))
                ]),
                _: 1
              })
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ], 2),
        createVNode84(TransferPanel, {
          ref_key: "rightPanel",
          ref: rightPanel,
          data: unref152(targetData),
          "option-render": unref152(optionRender),
          placeholder: unref152(panelFilterPlaceholder),
          filterable: _ctx.filterable,
          format: _ctx.format,
          "filter-method": _ctx.filterMethod,
          title: unref152(rightPanelTitle),
          "default-checked": _ctx.rightDefaultChecked,
          props: props.props,
          onCheckedChange: unref152(onTargetCheckedChange)
        }, {
          default: withCtx73(() => [
            renderSlot104(_ctx.$slots, "right-footer")
          ]),
          _: 3
        }, 8, ["data", "option-render", "placeholder", "filterable", "format", "filter-method", "title", "default-checked", "props", "onCheckedChange"])
      ], 2);
    };
  }
});
var Transfer = _export_sfc(_sfc_main134, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/transfer/src/transfer.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/transfer/index.mjs
var ElTransfer = withInstall(Transfer);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/tree.mjs
import { defineComponent as defineComponent172, ref as ref141, computed as computed178, watch as watch92, provide as provide46, getCurrentInstance as getCurrentInstance56, resolveComponent as resolveComponent16, openBlock as openBlock131, createElementBlock as createElementBlock114, normalizeClass as normalizeClass110, Fragment as Fragment48, renderList as renderList31, createBlock as createBlock77, renderSlot as renderSlot105, createElementVNode as createElementVNode70, toDisplayString as toDisplayString63, createCommentVNode as createCommentVNode67, withDirectives as withDirectives34, vShow as vShow25 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/node.mjs
import { reactive as reactive31 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/util.mjs
var NODE_KEY = "$treeNodeId";
var markNodeData = function(node, data) {
  if (!data || data[NODE_KEY])
    return;
  Object.defineProperty(data, NODE_KEY, {
    value: node.id,
    enumerable: false,
    configurable: false,
    writable: false
  });
};
var getNodeKey = function(key, data) {
  if (!key)
    return data[NODE_KEY];
  return data[key];
};
var handleCurrentChange = (store, emit, setCurrent) => {
  const preCurrentNode = store.value.currentNode;
  setCurrent();
  const currentNode = store.value.currentNode;
  if (preCurrentNode === currentNode)
    return;
  emit("current-change", currentNode ? currentNode.data : null, currentNode);
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/node.mjs
import { hasOwn as hasOwn14 } from "@vue/shared";
var getChildState = (node) => {
  let all = true;
  let none = true;
  let allWithoutDisable = true;
  for (let i = 0, j = node.length; i < j; i++) {
    const n = node[i];
    if (n.checked !== true || n.indeterminate) {
      all = false;
      if (!n.disabled) {
        allWithoutDisable = false;
      }
    }
    if (n.checked !== false || n.indeterminate) {
      none = false;
    }
  }
  return { all, none, allWithoutDisable, half: !all && !none };
};
var reInitChecked = function(node) {
  if (node.childNodes.length === 0 || node.loading)
    return;
  const { all, none, half } = getChildState(node.childNodes);
  if (all) {
    node.checked = true;
    node.indeterminate = false;
  } else if (half) {
    node.checked = false;
    node.indeterminate = true;
  } else if (none) {
    node.checked = false;
    node.indeterminate = false;
  }
  const parent2 = node.parent;
  if (!parent2 || parent2.level === 0)
    return;
  if (!node.store.checkStrictly) {
    reInitChecked(parent2);
  }
};
var getPropertyFromData = function(node, prop) {
  const props = node.store.props;
  const data = node.data || {};
  const config = props[prop];
  if (typeof config === "function") {
    return config(data, node);
  } else if (typeof config === "string") {
    return data[config];
  } else if (typeof config === "undefined") {
    const dataProp = data[prop];
    return dataProp === void 0 ? "" : dataProp;
  }
};
var nodeIdSeed = 0;
var Node2 = class {
  constructor(options) {
    this.id = nodeIdSeed++;
    this.text = null;
    this.checked = false;
    this.indeterminate = false;
    this.data = null;
    this.expanded = false;
    this.parent = null;
    this.visible = true;
    this.isCurrent = false;
    this.canFocus = false;
    for (const name in options) {
      if (hasOwn14(options, name)) {
        this[name] = options[name];
      }
    }
    this.level = 0;
    this.loaded = false;
    this.childNodes = [];
    this.loading = false;
    if (this.parent) {
      this.level = this.parent.level + 1;
    }
  }
  initialize() {
    const store = this.store;
    if (!store) {
      throw new Error("[Node]store is required!");
    }
    store.registerNode(this);
    const props = store.props;
    if (props && typeof props.isLeaf !== "undefined") {
      const isLeaf2 = getPropertyFromData(this, "isLeaf");
      if (typeof isLeaf2 === "boolean") {
        this.isLeafByUser = isLeaf2;
      }
    }
    if (store.lazy !== true && this.data) {
      this.setData(this.data);
      if (store.defaultExpandAll) {
        this.expanded = true;
        this.canFocus = true;
      }
    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {
      this.expand();
    }
    if (!Array.isArray(this.data)) {
      markNodeData(this, this.data);
    }
    if (!this.data)
      return;
    const defaultExpandedKeys = store.defaultExpandedKeys;
    const key = store.key;
    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {
      this.expand(null, store.autoExpandParent);
    }
    if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {
      store.currentNode = this;
      store.currentNode.isCurrent = true;
    }
    if (store.lazy) {
      store._initDefaultCheckedNode(this);
    }
    this.updateLeafState();
    if (this.parent && (this.level === 1 || this.parent.expanded === true))
      this.canFocus = true;
  }
  setData(data) {
    if (!Array.isArray(data)) {
      markNodeData(this, data);
    }
    this.data = data;
    this.childNodes = [];
    let children;
    if (this.level === 0 && Array.isArray(this.data)) {
      children = this.data;
    } else {
      children = getPropertyFromData(this, "children") || [];
    }
    for (let i = 0, j = children.length; i < j; i++) {
      this.insertChild({ data: children[i] });
    }
  }
  get label() {
    return getPropertyFromData(this, "label");
  }
  get key() {
    const nodeKey = this.store.key;
    if (this.data)
      return this.data[nodeKey];
    return null;
  }
  get disabled() {
    return getPropertyFromData(this, "disabled");
  }
  get nextSibling() {
    const parent2 = this.parent;
    if (parent2) {
      const index = parent2.childNodes.indexOf(this);
      if (index > -1) {
        return parent2.childNodes[index + 1];
      }
    }
    return null;
  }
  get previousSibling() {
    const parent2 = this.parent;
    if (parent2) {
      const index = parent2.childNodes.indexOf(this);
      if (index > -1) {
        return index > 0 ? parent2.childNodes[index - 1] : null;
      }
    }
    return null;
  }
  contains(target2, deep = true) {
    return (this.childNodes || []).some((child) => child === target2 || deep && child.contains(target2));
  }
  remove() {
    const parent2 = this.parent;
    if (parent2) {
      parent2.removeChild(this);
    }
  }
  insertChild(child, index, batch) {
    if (!child)
      throw new Error("InsertChild error: child is required.");
    if (!(child instanceof Node2)) {
      if (!batch) {
        const children = this.getChildren(true);
        if (!children.includes(child.data)) {
          if (typeof index === "undefined" || index < 0) {
            children.push(child.data);
          } else {
            children.splice(index, 0, child.data);
          }
        }
      }
      Object.assign(child, {
        parent: this,
        store: this.store
      });
      child = reactive31(new Node2(child));
      if (child instanceof Node2) {
        child.initialize();
      }
    }
    ;
    child.level = this.level + 1;
    if (typeof index === "undefined" || index < 0) {
      this.childNodes.push(child);
    } else {
      this.childNodes.splice(index, 0, child);
    }
    this.updateLeafState();
  }
  insertBefore(child, ref153) {
    let index;
    if (ref153) {
      index = this.childNodes.indexOf(ref153);
    }
    this.insertChild(child, index);
  }
  insertAfter(child, ref153) {
    let index;
    if (ref153) {
      index = this.childNodes.indexOf(ref153);
      if (index !== -1)
        index += 1;
    }
    this.insertChild(child, index);
  }
  removeChild(child) {
    const children = this.getChildren() || [];
    const dataIndex = children.indexOf(child.data);
    if (dataIndex > -1) {
      children.splice(dataIndex, 1);
    }
    const index = this.childNodes.indexOf(child);
    if (index > -1) {
      this.store && this.store.deregisterNode(child);
      child.parent = null;
      this.childNodes.splice(index, 1);
    }
    this.updateLeafState();
  }
  removeChildByData(data) {
    let targetNode = null;
    for (let i = 0; i < this.childNodes.length; i++) {
      if (this.childNodes[i].data === data) {
        targetNode = this.childNodes[i];
        break;
      }
    }
    if (targetNode) {
      this.removeChild(targetNode);
    }
  }
  expand(callback, expandParent) {
    const done = () => {
      if (expandParent) {
        let parent2 = this.parent;
        while (parent2.level > 0) {
          parent2.expanded = true;
          parent2 = parent2.parent;
        }
      }
      this.expanded = true;
      if (callback)
        callback();
      this.childNodes.forEach((item) => {
        item.canFocus = true;
      });
    };
    if (this.shouldLoadData()) {
      this.loadData((data) => {
        if (Array.isArray(data)) {
          if (this.checked) {
            this.setChecked(true, true);
          } else if (!this.store.checkStrictly) {
            reInitChecked(this);
          }
          done();
        }
      });
    } else {
      done();
    }
  }
  doCreateChildren(array4, defaultProps4 = {}) {
    array4.forEach((item) => {
      this.insertChild(Object.assign({ data: item }, defaultProps4), void 0, true);
    });
  }
  collapse() {
    this.expanded = false;
    this.childNodes.forEach((item) => {
      item.canFocus = false;
    });
  }
  shouldLoadData() {
    return this.store.lazy === true && this.store.load && !this.loaded;
  }
  updateLeafState() {
    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== "undefined") {
      this.isLeaf = this.isLeafByUser;
      return;
    }
    const childNodes = this.childNodes;
    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {
      this.isLeaf = !childNodes || childNodes.length === 0;
      return;
    }
    this.isLeaf = false;
  }
  setChecked(value, deep, recursion, passValue) {
    this.indeterminate = value === "half";
    this.checked = value === true;
    if (this.store.checkStrictly)
      return;
    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {
      const { all, allWithoutDisable } = getChildState(this.childNodes);
      if (!this.isLeaf && !all && allWithoutDisable) {
        this.checked = false;
        value = false;
      }
      const handleDescendants = () => {
        if (deep) {
          const childNodes = this.childNodes;
          for (let i = 0, j = childNodes.length; i < j; i++) {
            const child = childNodes[i];
            passValue = passValue || value !== false;
            const isCheck = child.disabled ? child.checked : passValue;
            child.setChecked(isCheck, deep, true, passValue);
          }
          const { half, all: all2 } = getChildState(childNodes);
          if (!all2) {
            this.checked = all2;
            this.indeterminate = half;
          }
        }
      };
      if (this.shouldLoadData()) {
        this.loadData(() => {
          handleDescendants();
          reInitChecked(this);
        }, {
          checked: value !== false
        });
        return;
      } else {
        handleDescendants();
      }
    }
    const parent2 = this.parent;
    if (!parent2 || parent2.level === 0)
      return;
    if (!recursion) {
      reInitChecked(parent2);
    }
  }
  getChildren(forceInit = false) {
    if (this.level === 0)
      return this.data;
    const data = this.data;
    if (!data)
      return null;
    const props = this.store.props;
    let children = "children";
    if (props) {
      children = props.children || "children";
    }
    if (data[children] === void 0) {
      data[children] = null;
    }
    if (forceInit && !data[children]) {
      data[children] = [];
    }
    return data[children];
  }
  updateChildren() {
    const newData = this.getChildren() || [];
    const oldData = this.childNodes.map((node) => node.data);
    const newDataMap = {};
    const newNodes = [];
    newData.forEach((item, index) => {
      const key = item[NODE_KEY];
      const isNodeExists = !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0;
      if (isNodeExists) {
        newDataMap[key] = { index, data: item };
      } else {
        newNodes.push({ index, data: item });
      }
    });
    if (!this.store.lazy) {
      oldData.forEach((item) => {
        if (!newDataMap[item[NODE_KEY]])
          this.removeChildByData(item);
      });
    }
    newNodes.forEach(({ index, data }) => {
      this.insertChild({ data }, index);
    });
    this.updateLeafState();
  }
  loadData(callback, defaultProps4 = {}) {
    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps4).length)) {
      this.loading = true;
      const resolve = (children) => {
        this.childNodes = [];
        this.doCreateChildren(children, defaultProps4);
        this.loaded = true;
        this.loading = false;
        this.updateLeafState();
        if (callback) {
          callback.call(this, children);
        }
      };
      this.store.load(this, resolve);
    } else {
      if (callback) {
        callback.call(this);
      }
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/tree-store.mjs
import { hasOwn as hasOwn15, isObject as isObject25 } from "@vue/shared";
var TreeStore = class {
  constructor(options) {
    this.currentNode = null;
    this.currentNodeKey = null;
    for (const option in options) {
      if (hasOwn15(options, option)) {
        this[option] = options[option];
      }
    }
    this.nodesMap = {};
  }
  initialize() {
    this.root = new Node2({
      data: this.data,
      store: this
    });
    this.root.initialize();
    if (this.lazy && this.load) {
      const loadFn = this.load;
      loadFn(this.root, (data) => {
        this.root.doCreateChildren(data);
        this._initDefaultCheckedNodes();
      });
    } else {
      this._initDefaultCheckedNodes();
    }
  }
  filter(value) {
    const filterNodeMethod = this.filterNodeMethod;
    const lazy = this.lazy;
    const traverse = function(node) {
      const childNodes = node.root ? node.root.childNodes : node.childNodes;
      childNodes.forEach((child) => {
        child.visible = filterNodeMethod.call(child, value, child.data, child);
        traverse(child);
      });
      if (!node.visible && childNodes.length) {
        let allHidden = true;
        allHidden = !childNodes.some((child) => child.visible);
        if (node.root) {
          ;
          node.root.visible = allHidden === false;
        } else {
          ;
          node.visible = allHidden === false;
        }
      }
      if (!value)
        return;
      if (node.visible && !node.isLeaf && !lazy)
        node.expand();
    };
    traverse(this);
  }
  setData(newVal) {
    const instanceChanged = newVal !== this.root.data;
    if (instanceChanged) {
      this.root.setData(newVal);
      this._initDefaultCheckedNodes();
    } else {
      this.root.updateChildren();
    }
  }
  getNode(data) {
    if (data instanceof Node2)
      return data;
    const key = isObject25(data) ? getNodeKey(this.key, data) : data;
    return this.nodesMap[key] || null;
  }
  insertBefore(data, refData) {
    const refNode = this.getNode(refData);
    refNode.parent.insertBefore({ data }, refNode);
  }
  insertAfter(data, refData) {
    const refNode = this.getNode(refData);
    refNode.parent.insertAfter({ data }, refNode);
  }
  remove(data) {
    const node = this.getNode(data);
    if (node && node.parent) {
      if (node === this.currentNode) {
        this.currentNode = null;
      }
      node.parent.removeChild(node);
    }
  }
  append(data, parentData) {
    const parentNode = parentData ? this.getNode(parentData) : this.root;
    if (parentNode) {
      parentNode.insertChild({ data });
    }
  }
  _initDefaultCheckedNodes() {
    const defaultCheckedKeys = this.defaultCheckedKeys || [];
    const nodesMap = this.nodesMap;
    defaultCheckedKeys.forEach((checkedKey) => {
      const node = nodesMap[checkedKey];
      if (node) {
        node.setChecked(true, !this.checkStrictly);
      }
    });
  }
  _initDefaultCheckedNode(node) {
    const defaultCheckedKeys = this.defaultCheckedKeys || [];
    if (defaultCheckedKeys.includes(node.key)) {
      node.setChecked(true, !this.checkStrictly);
    }
  }
  setDefaultCheckedKey(newVal) {
    if (newVal !== this.defaultCheckedKeys) {
      this.defaultCheckedKeys = newVal;
      this._initDefaultCheckedNodes();
    }
  }
  registerNode(node) {
    const key = this.key;
    if (!node || !node.data)
      return;
    if (!key) {
      this.nodesMap[node.id] = node;
    } else {
      const nodeKey = node.key;
      if (nodeKey !== void 0)
        this.nodesMap[node.key] = node;
    }
  }
  deregisterNode(node) {
    const key = this.key;
    if (!key || !node || !node.data)
      return;
    node.childNodes.forEach((child) => {
      this.deregisterNode(child);
    });
    delete this.nodesMap[node.key];
  }
  getCheckedNodes(leafOnly = false, includeHalfChecked = false) {
    const checkedNodes = [];
    const traverse = function(node) {
      const childNodes = node.root ? node.root.childNodes : node.childNodes;
      childNodes.forEach((child) => {
        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {
          checkedNodes.push(child.data);
        }
        traverse(child);
      });
    };
    traverse(this);
    return checkedNodes;
  }
  getCheckedKeys(leafOnly = false) {
    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key]);
  }
  getHalfCheckedNodes() {
    const nodes = [];
    const traverse = function(node) {
      const childNodes = node.root ? node.root.childNodes : node.childNodes;
      childNodes.forEach((child) => {
        if (child.indeterminate) {
          nodes.push(child.data);
        }
        traverse(child);
      });
    };
    traverse(this);
    return nodes;
  }
  getHalfCheckedKeys() {
    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key]);
  }
  _getAllNodes() {
    const allNodes = [];
    const nodesMap = this.nodesMap;
    for (const nodeKey in nodesMap) {
      if (hasOwn15(nodesMap, nodeKey)) {
        allNodes.push(nodesMap[nodeKey]);
      }
    }
    return allNodes;
  }
  updateChildren(key, data) {
    const node = this.nodesMap[key];
    if (!node)
      return;
    const childNodes = node.childNodes;
    for (let i = childNodes.length - 1; i >= 0; i--) {
      const child = childNodes[i];
      this.remove(child.data);
    }
    for (let i = 0, j = data.length; i < j; i++) {
      const child = data[i];
      this.append(child, node.data);
    }
  }
  _setCheckedKeys(key, leafOnly = false, checkedKeys) {
    const allNodes = this._getAllNodes().sort((a2, b2) => b2.level - a2.level);
    const cache2 = /* @__PURE__ */ Object.create(null);
    const keys3 = Object.keys(checkedKeys);
    allNodes.forEach((node) => node.setChecked(false, false));
    for (let i = 0, j = allNodes.length; i < j; i++) {
      const node = allNodes[i];
      const nodeKey = node.data[key].toString();
      const checked = keys3.includes(nodeKey);
      if (!checked) {
        if (node.checked && !cache2[nodeKey]) {
          node.setChecked(false, false);
        }
        continue;
      }
      let parent2 = node.parent;
      while (parent2 && parent2.level > 0) {
        cache2[parent2.data[key]] = true;
        parent2 = parent2.parent;
      }
      if (node.isLeaf || this.checkStrictly) {
        node.setChecked(true, false);
        continue;
      }
      node.setChecked(true, true);
      if (leafOnly) {
        node.setChecked(false, false);
        const traverse = function(node2) {
          const childNodes = node2.childNodes;
          childNodes.forEach((child) => {
            if (!child.isLeaf) {
              child.setChecked(false, false);
            }
            traverse(child);
          });
        };
        traverse(node);
      }
    }
  }
  setCheckedNodes(array4, leafOnly = false) {
    const key = this.key;
    const checkedKeys = {};
    array4.forEach((item) => {
      checkedKeys[(item || {})[key]] = true;
    });
    this._setCheckedKeys(key, leafOnly, checkedKeys);
  }
  setCheckedKeys(keys3, leafOnly = false) {
    this.defaultCheckedKeys = keys3;
    const key = this.key;
    const checkedKeys = {};
    keys3.forEach((key2) => {
      checkedKeys[key2] = true;
    });
    this._setCheckedKeys(key, leafOnly, checkedKeys);
  }
  setDefaultExpandedKeys(keys3) {
    keys3 = keys3 || [];
    this.defaultExpandedKeys = keys3;
    keys3.forEach((key) => {
      const node = this.getNode(key);
      if (node)
        node.expand(null, this.autoExpandParent);
    });
  }
  setChecked(data, checked, deep) {
    const node = this.getNode(data);
    if (node) {
      node.setChecked(!!checked, deep);
    }
  }
  getCurrentNode() {
    return this.currentNode;
  }
  setCurrentNode(currentNode) {
    const prevCurrentNode = this.currentNode;
    if (prevCurrentNode) {
      prevCurrentNode.isCurrent = false;
    }
    this.currentNode = currentNode;
    this.currentNode.isCurrent = true;
  }
  setUserCurrentNode(node, shouldAutoExpandParent = true) {
    const key = node[this.key];
    const currNode = this.nodesMap[key];
    this.setCurrentNode(currNode);
    if (shouldAutoExpandParent && this.currentNode.level > 1) {
      this.currentNode.parent.expand(null, true);
    }
  }
  setCurrentNodeKey(key, shouldAutoExpandParent = true) {
    if (key === null || key === void 0) {
      this.currentNode && (this.currentNode.isCurrent = false);
      this.currentNode = null;
      return;
    }
    const node = this.getNode(key);
    if (node) {
      this.setCurrentNode(node);
      if (shouldAutoExpandParent && this.currentNode.level > 1) {
        this.currentNode.parent.expand(null, true);
      }
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/tree-node.mjs
import { defineComponent as defineComponent171, inject as inject82, ref as ref140, getCurrentInstance as getCurrentInstance55, provide as provide45, watch as watch90, nextTick as nextTick48, resolveComponent as resolveComponent15, withDirectives as withDirectives33, openBlock as openBlock130, createElementBlock as createElementBlock113, normalizeClass as normalizeClass109, withModifiers as withModifiers26, createElementVNode as createElementVNode69, normalizeStyle as normalizeStyle53, createBlock as createBlock76, withCtx as withCtx74, resolveDynamicComponent as resolveDynamicComponent33, createCommentVNode as createCommentVNode66, createVNode as createVNode85, Fragment as Fragment47, renderList as renderList30, vShow as vShow24 } from "vue";
import { isFunction as isFunction25, isString as isString35 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/tree-node-content.mjs
import { defineComponent as defineComponent170, inject as inject80, h as h26 } from "vue";
var _sfc_main135 = defineComponent170({
  name: "ElTreeNodeContent",
  props: {
    node: {
      type: Object,
      required: true
    },
    renderContent: Function
  },
  setup(props) {
    const ns = useNamespace("tree");
    const nodeInstance = inject80("NodeInstance");
    const tree = inject80("RootTree");
    return () => {
      const node = props.node;
      const { data, store } = node;
      return props.renderContent ? props.renderContent(h26, { _self: nodeInstance, node, data, store }) : tree.ctx.slots.default ? tree.ctx.slots.default({ node, data }) : h26("span", { class: ns.be("node", "label") }, [node.label]);
    };
  }
});
var NodeContent2 = _export_sfc(_sfc_main135, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/useNodeExpandEventBroadcast.mjs
import { inject as inject81, provide as provide43 } from "vue";
function useNodeExpandEventBroadcast(props) {
  const parentNodeMap = inject81("TreeNodeMap", null);
  const currentNodeMap = {
    treeNodeExpand: (node) => {
      if (props.node !== node) {
        props.node.collapse();
      }
    },
    children: []
  };
  if (parentNodeMap) {
    parentNodeMap.children.push(currentNodeMap);
  }
  provide43("TreeNodeMap", currentNodeMap);
  return {
    broadcastExpanded: (node) => {
      if (!props.accordion)
        return;
      for (const childNode of currentNodeMap.children) {
        childNode.treeNodeExpand(node);
      }
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/useDragNode.mjs
import { ref as ref139, provide as provide44 } from "vue";
var dragEventsKey = Symbol("dragEvents");
function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {
  const ns = useNamespace("tree");
  const dragState = ref139({
    showDropIndicator: false,
    draggingNode: null,
    dropNode: null,
    allowDrop: true,
    dropType: null
  });
  const treeNodeDragStart = ({ event, treeNode }) => {
    if (typeof props.allowDrag === "function" && !props.allowDrag(treeNode.node)) {
      event.preventDefault();
      return false;
    }
    event.dataTransfer.effectAllowed = "move";
    try {
      event.dataTransfer.setData("text/plain", "");
    } catch (e) {
    }
    dragState.value.draggingNode = treeNode;
    ctx.emit("node-drag-start", treeNode.node, event);
  };
  const treeNodeDragOver = ({ event, treeNode }) => {
    const dropNode = treeNode;
    const oldDropNode = dragState.value.dropNode;
    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {
      removeClass(oldDropNode.$el, ns.is("drop-inner"));
    }
    const draggingNode = dragState.value.draggingNode;
    if (!draggingNode || !dropNode)
      return;
    let dropPrev = true;
    let dropInner = true;
    let dropNext = true;
    let userAllowDropInner = true;
    if (typeof props.allowDrop === "function") {
      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, "prev");
      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, "inner");
      dropNext = props.allowDrop(draggingNode.node, dropNode.node, "next");
    }
    event.dataTransfer.dropEffect = dropInner || dropPrev || dropNext ? "move" : "none";
    if ((dropPrev || dropInner || dropNext) && (oldDropNode == null ? void 0 : oldDropNode.node.id) !== dropNode.node.id) {
      if (oldDropNode) {
        ctx.emit("node-drag-leave", draggingNode.node, oldDropNode.node, event);
      }
      ctx.emit("node-drag-enter", draggingNode.node, dropNode.node, event);
    }
    if (dropPrev || dropInner || dropNext) {
      dragState.value.dropNode = dropNode;
    }
    if (dropNode.node.nextSibling === draggingNode.node) {
      dropNext = false;
    }
    if (dropNode.node.previousSibling === draggingNode.node) {
      dropPrev = false;
    }
    if (dropNode.node.contains(draggingNode.node, false)) {
      dropInner = false;
    }
    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {
      dropPrev = false;
      dropInner = false;
      dropNext = false;
    }
    const targetPosition = dropNode.$el.getBoundingClientRect();
    const treePosition = el$.value.getBoundingClientRect();
    let dropType;
    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;
    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;
    let indicatorTop = -9999;
    const distance = event.clientY - targetPosition.top;
    if (distance < targetPosition.height * prevPercent) {
      dropType = "before";
    } else if (distance > targetPosition.height * nextPercent) {
      dropType = "after";
    } else if (dropInner) {
      dropType = "inner";
    } else {
      dropType = "none";
    }
    const iconPosition = dropNode.$el.querySelector(`.${ns.be("node", "expand-icon")}`).getBoundingClientRect();
    const dropIndicator = dropIndicator$.value;
    if (dropType === "before") {
      indicatorTop = iconPosition.top - treePosition.top;
    } else if (dropType === "after") {
      indicatorTop = iconPosition.bottom - treePosition.top;
    }
    dropIndicator.style.top = `${indicatorTop}px`;
    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`;
    if (dropType === "inner") {
      addClass(dropNode.$el, ns.is("drop-inner"));
    } else {
      removeClass(dropNode.$el, ns.is("drop-inner"));
    }
    dragState.value.showDropIndicator = dropType === "before" || dropType === "after";
    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;
    dragState.value.dropType = dropType;
    ctx.emit("node-drag-over", draggingNode.node, dropNode.node, event);
  };
  const treeNodeDragEnd = (event) => {
    const { draggingNode, dropType, dropNode } = dragState.value;
    event.preventDefault();
    event.dataTransfer.dropEffect = "move";
    if (draggingNode && dropNode) {
      const draggingNodeCopy = { data: draggingNode.node.data };
      if (dropType !== "none") {
        draggingNode.node.remove();
      }
      if (dropType === "before") {
        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);
      } else if (dropType === "after") {
        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);
      } else if (dropType === "inner") {
        dropNode.node.insertChild(draggingNodeCopy);
      }
      if (dropType !== "none") {
        store.value.registerNode(draggingNodeCopy);
      }
      removeClass(dropNode.$el, ns.is("drop-inner"));
      ctx.emit("node-drag-end", draggingNode.node, dropNode.node, dropType, event);
      if (dropType !== "none") {
        ctx.emit("node-drop", draggingNode.node, dropNode.node, dropType, event);
      }
    }
    if (draggingNode && !dropNode) {
      ctx.emit("node-drag-end", draggingNode.node, null, dropType, event);
    }
    dragState.value.showDropIndicator = false;
    dragState.value.draggingNode = null;
    dragState.value.dropNode = null;
    dragState.value.allowDrop = true;
  };
  provide44(dragEventsKey, {
    treeNodeDragStart,
    treeNodeDragOver,
    treeNodeDragEnd
  });
  return {
    dragState
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/tree-node.mjs
var _sfc_main136 = defineComponent171({
  name: "ElTreeNode",
  components: {
    ElCollapseTransition: _CollapseTransition,
    ElCheckbox,
    NodeContent: NodeContent2,
    ElIcon,
    Loading: loading_default
  },
  props: {
    node: {
      type: Node2,
      default: () => ({})
    },
    props: {
      type: Object,
      default: () => ({})
    },
    accordion: Boolean,
    renderContent: Function,
    renderAfterExpand: Boolean,
    showCheckbox: {
      type: Boolean,
      default: false
    }
  },
  emits: ["node-expand"],
  setup(props, ctx) {
    const ns = useNamespace("tree");
    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);
    const tree = inject82("RootTree");
    const expanded = ref140(false);
    const childNodeRendered = ref140(false);
    const oldChecked = ref140(null);
    const oldIndeterminate = ref140(null);
    const node$ = ref140(null);
    const dragEvents = inject82(dragEventsKey);
    const instance = getCurrentInstance55();
    provide45("NodeInstance", instance);
    if (!tree) {
      debugWarn("Tree", "Can not find node's tree.");
    }
    if (props.node.expanded) {
      expanded.value = true;
      childNodeRendered.value = true;
    }
    const childrenKey = tree.props["children"] || "children";
    watch90(() => {
      const children = props.node.data[childrenKey];
      return children && [...children];
    }, () => {
      props.node.updateChildren();
    });
    watch90(() => props.node.indeterminate, (val) => {
      handleSelectChange(props.node.checked, val);
    });
    watch90(() => props.node.checked, (val) => {
      handleSelectChange(val, props.node.indeterminate);
    });
    watch90(() => props.node.expanded, (val) => {
      nextTick48(() => expanded.value = val);
      if (val) {
        childNodeRendered.value = true;
      }
    });
    const getNodeKey$1 = (node) => {
      return getNodeKey(tree.props.nodeKey, node.data);
    };
    const getNodeClass = (node) => {
      const nodeClassFunc = props.props.class;
      if (!nodeClassFunc) {
        return {};
      }
      let className;
      if (isFunction25(nodeClassFunc)) {
        const { data } = node;
        className = nodeClassFunc(data, node);
      } else {
        className = nodeClassFunc;
      }
      if (isString35(className)) {
        return { [className]: true };
      } else {
        return className;
      }
    };
    const handleSelectChange = (checked, indeterminate) => {
      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {
        tree.ctx.emit("check-change", props.node.data, checked, indeterminate);
      }
      oldChecked.value = checked;
      oldIndeterminate.value = indeterminate;
    };
    const handleClick = (e) => {
      handleCurrentChange(tree.store, tree.ctx.emit, () => tree.store.value.setCurrentNode(props.node));
      tree.currentNode.value = props.node;
      if (tree.props.expandOnClickNode) {
        handleExpandIconClick();
      }
      if (tree.props.checkOnClickNode && !props.node.disabled) {
        handleCheckChange(null, {
          target: { checked: !props.node.checked }
        });
      }
      tree.ctx.emit("node-click", props.node.data, props.node, instance, e);
    };
    const handleContextMenu = (event) => {
      if (tree.instance.vnode.props["onNodeContextmenu"]) {
        event.stopPropagation();
        event.preventDefault();
      }
      tree.ctx.emit("node-contextmenu", event, props.node.data, props.node, instance);
    };
    const handleExpandIconClick = () => {
      if (props.node.isLeaf)
        return;
      if (expanded.value) {
        tree.ctx.emit("node-collapse", props.node.data, props.node, instance);
        props.node.collapse();
      } else {
        props.node.expand();
        ctx.emit("node-expand", props.node.data, props.node, instance);
      }
    };
    const handleCheckChange = (value, ev) => {
      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);
      nextTick48(() => {
        const store = tree.store.value;
        tree.ctx.emit("check", props.node.data, {
          checkedNodes: store.getCheckedNodes(),
          checkedKeys: store.getCheckedKeys(),
          halfCheckedNodes: store.getHalfCheckedNodes(),
          halfCheckedKeys: store.getHalfCheckedKeys()
        });
      });
    };
    const handleChildNodeExpand = (nodeData, node, instance2) => {
      broadcastExpanded(node);
      tree.ctx.emit("node-expand", nodeData, node, instance2);
    };
    const handleDragStart = (event) => {
      if (!tree.props.draggable)
        return;
      dragEvents.treeNodeDragStart({ event, treeNode: props });
    };
    const handleDragOver = (event) => {
      event.preventDefault();
      if (!tree.props.draggable)
        return;
      dragEvents.treeNodeDragOver({
        event,
        treeNode: { $el: node$.value, node: props.node }
      });
    };
    const handleDrop = (event) => {
      event.preventDefault();
    };
    const handleDragEnd = (event) => {
      if (!tree.props.draggable)
        return;
      dragEvents.treeNodeDragEnd(event);
    };
    return {
      ns,
      node$,
      tree,
      expanded,
      childNodeRendered,
      oldChecked,
      oldIndeterminate,
      getNodeKey: getNodeKey$1,
      getNodeClass,
      handleSelectChange,
      handleClick,
      handleContextMenu,
      handleExpandIconClick,
      handleCheckChange,
      handleChildNodeExpand,
      handleDragStart,
      handleDragOver,
      handleDrop,
      handleDragEnd,
      CaretRight: caret_right_default
    };
  }
});
var _hoisted_164 = ["aria-expanded", "aria-disabled", "aria-checked", "draggable", "data-key"];
var _hoisted_240 = ["aria-expanded"];
function _sfc_render30(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_icon = resolveComponent15("el-icon");
  const _component_el_checkbox = resolveComponent15("el-checkbox");
  const _component_loading = resolveComponent15("loading");
  const _component_node_content = resolveComponent15("node-content");
  const _component_el_tree_node = resolveComponent15("el-tree-node");
  const _component_el_collapse_transition = resolveComponent15("el-collapse-transition");
  return withDirectives33((openBlock130(), createElementBlock113("div", {
    ref: "node$",
    class: normalizeClass109([
      _ctx.ns.b("node"),
      _ctx.ns.is("expanded", _ctx.expanded),
      _ctx.ns.is("current", _ctx.node.isCurrent),
      _ctx.ns.is("hidden", !_ctx.node.visible),
      _ctx.ns.is("focusable", !_ctx.node.disabled),
      _ctx.ns.is("checked", !_ctx.node.disabled && _ctx.node.checked),
      _ctx.getNodeClass(_ctx.node)
    ]),
    role: "treeitem",
    tabindex: "-1",
    "aria-expanded": _ctx.expanded,
    "aria-disabled": _ctx.node.disabled,
    "aria-checked": _ctx.node.checked,
    draggable: _ctx.tree.props.draggable,
    "data-key": _ctx.getNodeKey(_ctx.node),
    onClick: _cache[1] || (_cache[1] = withModifiers26((...args) => _ctx.handleClick && _ctx.handleClick(...args), ["stop"])),
    onContextmenu: _cache[2] || (_cache[2] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args)),
    onDragstart: _cache[3] || (_cache[3] = withModifiers26((...args) => _ctx.handleDragStart && _ctx.handleDragStart(...args), ["stop"])),
    onDragover: _cache[4] || (_cache[4] = withModifiers26((...args) => _ctx.handleDragOver && _ctx.handleDragOver(...args), ["stop"])),
    onDragend: _cache[5] || (_cache[5] = withModifiers26((...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args), ["stop"])),
    onDrop: _cache[6] || (_cache[6] = withModifiers26((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), ["stop"]))
  }, [
    createElementVNode69("div", {
      class: normalizeClass109(_ctx.ns.be("node", "content")),
      style: normalizeStyle53({ paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + "px" })
    }, [
      _ctx.tree.props.icon || _ctx.CaretRight ? (openBlock130(), createBlock76(_component_el_icon, {
        key: 0,
        class: normalizeClass109([
          _ctx.ns.be("node", "expand-icon"),
          _ctx.ns.is("leaf", _ctx.node.isLeaf),
          {
            expanded: !_ctx.node.isLeaf && _ctx.expanded
          }
        ]),
        onClick: withModifiers26(_ctx.handleExpandIconClick, ["stop"])
      }, {
        default: withCtx74(() => [
          (openBlock130(), createBlock76(resolveDynamicComponent33(_ctx.tree.props.icon || _ctx.CaretRight)))
        ]),
        _: 1
      }, 8, ["class", "onClick"])) : createCommentVNode66("v-if", true),
      _ctx.showCheckbox ? (openBlock130(), createBlock76(_component_el_checkbox, {
        key: 1,
        "model-value": _ctx.node.checked,
        indeterminate: _ctx.node.indeterminate,
        disabled: !!_ctx.node.disabled,
        onClick: _cache[0] || (_cache[0] = withModifiers26(() => {
        }, ["stop"])),
        onChange: _ctx.handleCheckChange
      }, null, 8, ["model-value", "indeterminate", "disabled", "onChange"])) : createCommentVNode66("v-if", true),
      _ctx.node.loading ? (openBlock130(), createBlock76(_component_el_icon, {
        key: 2,
        class: normalizeClass109([_ctx.ns.be("node", "loading-icon"), _ctx.ns.is("loading")])
      }, {
        default: withCtx74(() => [
          createVNode85(_component_loading)
        ]),
        _: 1
      }, 8, ["class"])) : createCommentVNode66("v-if", true),
      createVNode85(_component_node_content, {
        node: _ctx.node,
        "render-content": _ctx.renderContent
      }, null, 8, ["node", "render-content"])
    ], 6),
    createVNode85(_component_el_collapse_transition, null, {
      default: withCtx74(() => [
        !_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives33((openBlock130(), createElementBlock113("div", {
          key: 0,
          class: normalizeClass109(_ctx.ns.be("node", "children")),
          role: "group",
          "aria-expanded": _ctx.expanded
        }, [
          (openBlock130(true), createElementBlock113(Fragment47, null, renderList30(_ctx.node.childNodes, (child) => {
            return openBlock130(), createBlock76(_component_el_tree_node, {
              key: _ctx.getNodeKey(child),
              "render-content": _ctx.renderContent,
              "render-after-expand": _ctx.renderAfterExpand,
              "show-checkbox": _ctx.showCheckbox,
              node: child,
              accordion: _ctx.accordion,
              props: _ctx.props,
              onNodeExpand: _ctx.handleChildNodeExpand
            }, null, 8, ["render-content", "render-after-expand", "show-checkbox", "node", "accordion", "props", "onNodeExpand"]);
          }), 128))
        ], 10, _hoisted_240)), [
          [vShow24, _ctx.expanded]
        ]) : createCommentVNode66("v-if", true)
      ]),
      _: 1
    })
  ], 42, _hoisted_164)), [
    [vShow24, _ctx.node.visible]
  ]);
}
var ElTreeNode = _export_sfc(_sfc_main136, [["render", _sfc_render30], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/model/useKeydown.mjs
import { shallowRef as shallowRef15, onMounted as onMounted60, onUpdated as onUpdated8, watch as watch91 } from "vue";
function useKeydown({ el$ }, store) {
  const ns = useNamespace("tree");
  const treeItems = shallowRef15([]);
  const checkboxItems = shallowRef15([]);
  onMounted60(() => {
    initTabIndex();
  });
  onUpdated8(() => {
    treeItems.value = Array.from(el$.value.querySelectorAll("[role=treeitem]"));
    checkboxItems.value = Array.from(el$.value.querySelectorAll("input[type=checkbox]"));
  });
  watch91(checkboxItems, (val) => {
    val.forEach((checkbox) => {
      checkbox.setAttribute("tabindex", "-1");
    });
  });
  const handleKeydown = (ev) => {
    const currentItem = ev.target;
    if (!currentItem.className.includes(ns.b("node")))
      return;
    const code = ev.code;
    treeItems.value = Array.from(el$.value.querySelectorAll(`.${ns.is("focusable")}[role=treeitem]`));
    const currentIndex = treeItems.value.indexOf(currentItem);
    let nextIndex;
    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {
      ev.preventDefault();
      if (code === EVENT_CODE.up) {
        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;
        const startIndex = nextIndex;
        while (true) {
          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)
            break;
          nextIndex--;
          if (nextIndex === startIndex) {
            nextIndex = -1;
            break;
          }
          if (nextIndex < 0) {
            nextIndex = treeItems.value.length - 1;
          }
        }
      } else {
        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;
        const startIndex = nextIndex;
        while (true) {
          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)
            break;
          nextIndex++;
          if (nextIndex === startIndex) {
            nextIndex = -1;
            break;
          }
          if (nextIndex >= treeItems.value.length) {
            nextIndex = 0;
          }
        }
      }
      nextIndex !== -1 && treeItems.value[nextIndex].focus();
    }
    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {
      ev.preventDefault();
      currentItem.click();
    }
    const hasInput = currentItem.querySelector('[type="checkbox"]');
    if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && hasInput) {
      ev.preventDefault();
      hasInput.click();
    }
  };
  useEventListener(el$, "keydown", handleKeydown);
  const initTabIndex = () => {
    var _a2;
    treeItems.value = Array.from(el$.value.querySelectorAll(`.${ns.is("focusable")}[role=treeitem]`));
    checkboxItems.value = Array.from(el$.value.querySelectorAll("input[type=checkbox]"));
    const checkedItem = el$.value.querySelectorAll(`.${ns.is("checked")}[role=treeitem]`);
    if (checkedItem.length) {
      checkedItem[0].setAttribute("tabindex", "0");
      return;
    }
    (_a2 = treeItems.value[0]) == null ? void 0 : _a2.setAttribute("tabindex", "0");
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/src/tree.mjs
var _sfc_main137 = defineComponent172({
  name: "ElTree",
  components: { ElTreeNode },
  props: {
    data: {
      type: Array,
      default: () => []
    },
    emptyText: {
      type: String
    },
    renderAfterExpand: {
      type: Boolean,
      default: true
    },
    nodeKey: String,
    checkStrictly: Boolean,
    defaultExpandAll: Boolean,
    expandOnClickNode: {
      type: Boolean,
      default: true
    },
    checkOnClickNode: Boolean,
    checkDescendants: {
      type: Boolean,
      default: false
    },
    autoExpandParent: {
      type: Boolean,
      default: true
    },
    defaultCheckedKeys: Array,
    defaultExpandedKeys: Array,
    currentNodeKey: [String, Number],
    renderContent: Function,
    showCheckbox: {
      type: Boolean,
      default: false
    },
    draggable: {
      type: Boolean,
      default: false
    },
    allowDrag: Function,
    allowDrop: Function,
    props: {
      type: Object,
      default: () => ({
        children: "children",
        label: "label",
        disabled: "disabled"
      })
    },
    lazy: {
      type: Boolean,
      default: false
    },
    highlightCurrent: Boolean,
    load: Function,
    filterNodeMethod: Function,
    accordion: Boolean,
    indent: {
      type: Number,
      default: 18
    },
    icon: {
      type: iconPropType
    }
  },
  emits: [
    "check-change",
    "current-change",
    "node-click",
    "node-contextmenu",
    "node-collapse",
    "node-expand",
    "check",
    "node-drag-start",
    "node-drag-end",
    "node-drop",
    "node-drag-leave",
    "node-drag-enter",
    "node-drag-over"
  ],
  setup(props, ctx) {
    const { t } = useLocale();
    const ns = useNamespace("tree");
    const store = ref141(new TreeStore({
      key: props.nodeKey,
      data: props.data,
      lazy: props.lazy,
      props: props.props,
      load: props.load,
      currentNodeKey: props.currentNodeKey,
      checkStrictly: props.checkStrictly,
      checkDescendants: props.checkDescendants,
      defaultCheckedKeys: props.defaultCheckedKeys,
      defaultExpandedKeys: props.defaultExpandedKeys,
      autoExpandParent: props.autoExpandParent,
      defaultExpandAll: props.defaultExpandAll,
      filterNodeMethod: props.filterNodeMethod
    }));
    store.value.initialize();
    const root2 = ref141(store.value.root);
    const currentNode = ref141(null);
    const el$ = ref141(null);
    const dropIndicator$ = ref141(null);
    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);
    const { dragState } = useDragNodeHandler({
      props,
      ctx,
      el$,
      dropIndicator$,
      store
    });
    useKeydown({ el$ }, store);
    const isEmpty3 = computed178(() => {
      const { childNodes } = root2.value;
      return !childNodes || childNodes.length === 0 || childNodes.every(({ visible }) => !visible);
    });
    watch92(() => props.currentNodeKey, (newVal) => {
      store.value.setCurrentNodeKey(newVal);
    });
    watch92(() => props.defaultCheckedKeys, (newVal) => {
      store.value.setDefaultCheckedKey(newVal);
    });
    watch92(() => props.defaultExpandedKeys, (newVal) => {
      store.value.setDefaultExpandedKeys(newVal);
    });
    watch92(() => props.data, (newVal) => {
      store.value.setData(newVal);
    }, { deep: true });
    watch92(() => props.checkStrictly, (newVal) => {
      store.value.checkStrictly = newVal;
    });
    const filter2 = (value) => {
      if (!props.filterNodeMethod)
        throw new Error("[Tree] filterNodeMethod is required when filter");
      store.value.filter(value);
    };
    const getNodeKey$1 = (node) => {
      return getNodeKey(props.nodeKey, node.data);
    };
    const getNodePath = (data) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in getNodePath");
      const node = store.value.getNode(data);
      if (!node)
        return [];
      const path = [node.data];
      let parent2 = node.parent;
      while (parent2 && parent2 !== root2.value) {
        path.push(parent2.data);
        parent2 = parent2.parent;
      }
      return path.reverse();
    };
    const getCheckedNodes = (leafOnly, includeHalfChecked) => {
      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);
    };
    const getCheckedKeys = (leafOnly) => {
      return store.value.getCheckedKeys(leafOnly);
    };
    const getCurrentNode = () => {
      const currentNode2 = store.value.getCurrentNode();
      return currentNode2 ? currentNode2.data : null;
    };
    const getCurrentKey = () => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in getCurrentKey");
      const currentNode2 = getCurrentNode();
      return currentNode2 ? currentNode2[props.nodeKey] : null;
    };
    const setCheckedNodes = (nodes, leafOnly) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCheckedNodes");
      store.value.setCheckedNodes(nodes, leafOnly);
    };
    const setCheckedKeys = (keys3, leafOnly) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCheckedKeys");
      store.value.setCheckedKeys(keys3, leafOnly);
    };
    const setChecked = (data, checked, deep) => {
      store.value.setChecked(data, checked, deep);
    };
    const getHalfCheckedNodes = () => {
      return store.value.getHalfCheckedNodes();
    };
    const getHalfCheckedKeys = () => {
      return store.value.getHalfCheckedKeys();
    };
    const setCurrentNode = (node, shouldAutoExpandParent = true) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCurrentNode");
      handleCurrentChange(store, ctx.emit, () => store.value.setUserCurrentNode(node, shouldAutoExpandParent));
    };
    const setCurrentKey = (key, shouldAutoExpandParent = true) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCurrentKey");
      handleCurrentChange(store, ctx.emit, () => store.value.setCurrentNodeKey(key, shouldAutoExpandParent));
    };
    const getNode = (data) => {
      return store.value.getNode(data);
    };
    const remove2 = (data) => {
      store.value.remove(data);
    };
    const append = (data, parentNode) => {
      store.value.append(data, parentNode);
    };
    const insertBefore = (data, refNode) => {
      store.value.insertBefore(data, refNode);
    };
    const insertAfter = (data, refNode) => {
      store.value.insertAfter(data, refNode);
    };
    const handleNodeExpand = (nodeData, node, instance) => {
      broadcastExpanded(node);
      ctx.emit("node-expand", nodeData, node, instance);
    };
    const updateKeyChildren = (key, data) => {
      if (!props.nodeKey)
        throw new Error("[Tree] nodeKey is required in updateKeyChild");
      store.value.updateChildren(key, data);
    };
    provide46("RootTree", {
      ctx,
      props,
      store,
      root: root2,
      currentNode,
      instance: getCurrentInstance56()
    });
    provide46(formItemContextKey, void 0);
    return {
      ns,
      store,
      root: root2,
      currentNode,
      dragState,
      el$,
      dropIndicator$,
      isEmpty: isEmpty3,
      filter: filter2,
      getNodeKey: getNodeKey$1,
      getNodePath,
      getCheckedNodes,
      getCheckedKeys,
      getCurrentNode,
      getCurrentKey,
      setCheckedNodes,
      setCheckedKeys,
      setChecked,
      getHalfCheckedNodes,
      getHalfCheckedKeys,
      setCurrentNode,
      setCurrentKey,
      t,
      getNode,
      remove: remove2,
      append,
      insertBefore,
      insertAfter,
      handleNodeExpand,
      updateKeyChildren
    };
  }
});
function _sfc_render31(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tree_node = resolveComponent16("el-tree-node");
  return openBlock131(), createElementBlock114("div", {
    ref: "el$",
    class: normalizeClass110([
      _ctx.ns.b(),
      _ctx.ns.is("dragging", !!_ctx.dragState.draggingNode),
      _ctx.ns.is("drop-not-allow", !_ctx.dragState.allowDrop),
      _ctx.ns.is("drop-inner", _ctx.dragState.dropType === "inner"),
      { [_ctx.ns.m("highlight-current")]: _ctx.highlightCurrent }
    ]),
    role: "tree"
  }, [
    (openBlock131(true), createElementBlock114(Fragment48, null, renderList31(_ctx.root.childNodes, (child) => {
      return openBlock131(), createBlock77(_component_el_tree_node, {
        key: _ctx.getNodeKey(child),
        node: child,
        props: _ctx.props,
        accordion: _ctx.accordion,
        "render-after-expand": _ctx.renderAfterExpand,
        "show-checkbox": _ctx.showCheckbox,
        "render-content": _ctx.renderContent,
        onNodeExpand: _ctx.handleNodeExpand
      }, null, 8, ["node", "props", "accordion", "render-after-expand", "show-checkbox", "render-content", "onNodeExpand"]);
    }), 128)),
    _ctx.isEmpty ? (openBlock131(), createElementBlock114("div", {
      key: 0,
      class: normalizeClass110(_ctx.ns.e("empty-block"))
    }, [
      renderSlot105(_ctx.$slots, "empty", {}, () => {
        var _a2;
        return [
          createElementVNode70("span", {
            class: normalizeClass110(_ctx.ns.e("empty-text"))
          }, toDisplayString63((_a2 = _ctx.emptyText) != null ? _a2 : _ctx.t("el.tree.emptyText")), 3)
        ];
      })
    ], 2)) : createCommentVNode67("v-if", true),
    withDirectives34(createElementVNode70("div", {
      ref: "dropIndicator$",
      class: normalizeClass110(_ctx.ns.e("drop-indicator"))
    }, null, 2), [
      [vShow25, _ctx.dragState.showDropIndicator]
    ])
  ], 2);
}
var Tree = _export_sfc(_sfc_main137, [["render", _sfc_render31], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree/index.mjs
Tree.install = (app) => {
  app.component(Tree.name, Tree);
};
var _Tree = Tree;
var ElTree = _Tree;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/tree-select.mjs
import { defineComponent as defineComponent175, ref as ref142, computed as computed181, reactive as reactive32, onMounted as onMounted61, h as h27 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/select.mjs
import { toRefs as toRefs16, computed as computed179, nextTick as nextTick49 } from "vue";
var useSelect3 = (props, { attrs }, {
  tree,
  key
}) => {
  const ns = useNamespace("tree-select");
  const result2 = {
    ...pick_default(toRefs16(props), Object.keys(ElSelect.props)),
    ...attrs,
    valueKey: key,
    popperClass: computed179(() => {
      const classes = [ns.e("popper")];
      if (props.popperClass)
        classes.push(props.popperClass);
      return classes.join(" ");
    }),
    filterMethod: (keyword = "") => {
      if (props.filterMethod)
        props.filterMethod(keyword);
      nextTick49(() => {
        var _a2;
        (_a2 = tree.value) == null ? void 0 : _a2.filter(keyword);
      });
    },
    onVisibleChange: (visible) => {
      var _a2;
      (_a2 = attrs.onVisibleChange) == null ? void 0 : _a2.call(attrs, visible);
      if (props.filterable && visible) {
        result2.filterMethod();
      }
    }
  };
  return result2;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/tree.mjs
import { watch as watch93, nextTick as nextTick51, computed as computed180, toRefs as toRefs17 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/tree-select-option.mjs
import { defineComponent as defineComponent173, getCurrentInstance as getCurrentInstance57, nextTick as nextTick50 } from "vue";
var component = defineComponent173({
  extends: ElOption,
  setup(props, ctx) {
    const result2 = ElOption.setup(props, ctx);
    delete result2.selectOptionClick;
    const vm = getCurrentInstance57().proxy;
    nextTick50(() => {
      if (!result2.select.cachedOptions.get(vm.value)) {
        result2.select.onOptionCreate(vm);
      }
    });
    return result2;
  },
  methods: {
    selectOptionClick() {
      this.$el.parentElement.click();
    }
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/utils.mjs
function isValidValue2(val) {
  return val || val === 0;
}
function isValidArray(val) {
  return Array.isArray(val) && val.length;
}
function toValidArray(val) {
  return Array.isArray(val) ? val : isValidValue2(val) ? [val] : [];
}
function treeFind(treeData, findCallback, getChildren, resultCallback, parent2) {
  for (let i = 0; i < treeData.length; i++) {
    const data = treeData[i];
    if (findCallback(data, i, treeData, parent2)) {
      return resultCallback ? resultCallback(data, i, treeData, parent2) : data;
    } else {
      const children = getChildren(data);
      if (isValidArray(children)) {
        const find2 = treeFind(children, findCallback, getChildren, resultCallback, data);
        if (find2)
          return find2;
      }
    }
  }
}
function treeEach(treeData, callback, getChildren, parent2) {
  for (let i = 0; i < treeData.length; i++) {
    const data = treeData[i];
    callback(data, i, treeData, parent2);
    const children = getChildren(data);
    if (isValidArray(children)) {
      treeEach(children, callback, getChildren, data);
    }
  }
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/tree.mjs
import { isFunction as isFunction26 } from "@vue/shared";
var useTree2 = (props, { attrs, slots, emit }, {
  select,
  tree,
  key
}) => {
  watch93(() => props.modelValue, () => {
    if (props.showCheckbox) {
      nextTick51(() => {
        const treeInstance = tree.value;
        if (treeInstance && !isEqual_default(treeInstance.getCheckedKeys(), toValidArray(props.modelValue))) {
          treeInstance.setCheckedKeys(toValidArray(props.modelValue));
        }
      });
    }
  }, {
    immediate: true,
    deep: true
  });
  const propsMap = computed180(() => ({
    value: key.value,
    label: "label",
    children: "children",
    disabled: "disabled",
    isLeaf: "isLeaf",
    ...props.props
  }));
  const getNodeValByProp = (prop, data) => {
    var _a2;
    const propVal = propsMap.value[prop];
    if (isFunction26(propVal)) {
      return propVal(data, (_a2 = tree.value) == null ? void 0 : _a2.getNode(getNodeValByProp("value", data)));
    } else {
      return data[propVal];
    }
  };
  const defaultExpandedParentKeys = toValidArray(props.modelValue).map((value) => {
    return treeFind(props.data || [], (data) => getNodeValByProp("value", data) === value, (data) => getNodeValByProp("children", data), (data, index, array4, parent2) => parent2 && getNodeValByProp("value", parent2));
  }).filter((item) => isValidValue2(item));
  const cacheOptions = computed180(() => {
    if (!props.renderAfterExpand && !props.lazy)
      return [];
    const options = [];
    treeEach(props.data.concat(props.cacheData), (node) => {
      const value = getNodeValByProp("value", node);
      options.push({
        value,
        currentLabel: getNodeValByProp("label", node),
        isDisabled: getNodeValByProp("disabled", node)
      });
    }, (data) => getNodeValByProp("children", data));
    return options;
  });
  const cacheOptionsMap = computed180(() => {
    return cacheOptions.value.reduce((prev, next) => ({ ...prev, [next.value]: next }), {});
  });
  return {
    ...pick_default(toRefs17(props), Object.keys(_Tree.props)),
    ...attrs,
    nodeKey: key,
    expandOnClickNode: computed180(() => {
      return !props.checkStrictly && props.expandOnClickNode;
    }),
    defaultExpandedKeys: computed180(() => {
      return props.defaultExpandedKeys ? props.defaultExpandedKeys.concat(defaultExpandedParentKeys) : defaultExpandedParentKeys;
    }),
    renderContent: (h30, { node, data, store }) => {
      return h30(component, {
        value: getNodeValByProp("value", data),
        label: getNodeValByProp("label", data),
        disabled: getNodeValByProp("disabled", data)
      }, props.renderContent ? () => props.renderContent(h30, { node, data, store }) : slots.default ? () => slots.default({ node, data, store }) : void 0);
    },
    filterNodeMethod: (value, data, node) => {
      var _a2;
      if (props.filterNodeMethod)
        return props.filterNodeMethod(value, data, node);
      if (!value)
        return true;
      return (_a2 = getNodeValByProp("label", data)) == null ? void 0 : _a2.includes(value);
    },
    onNodeClick: (data, node, e) => {
      var _a2, _b, _c;
      (_a2 = attrs.onNodeClick) == null ? void 0 : _a2.call(attrs, data, node, e);
      if (props.showCheckbox && props.checkOnClickNode)
        return;
      if (!props.showCheckbox && (props.checkStrictly || node.isLeaf)) {
        if (!getNodeValByProp("disabled", data)) {
          const option = (_b = select.value) == null ? void 0 : _b.options.get(getNodeValByProp("value", data));
          (_c = select.value) == null ? void 0 : _c.handleOptionSelect(option);
        }
      } else if (props.expandOnClickNode) {
        e.proxy.handleExpandIconClick();
      }
    },
    onCheck: (data, params) => {
      if (!props.showCheckbox)
        return;
      const dataValue = getNodeValByProp("value", data);
      const uncachedCheckedKeys = params.checkedKeys;
      const cachedKeys = props.multiple ? toValidArray(props.modelValue).filter((item) => item in cacheOptionsMap.value && !tree.value.getNode(item) && !uncachedCheckedKeys.includes(item)) : [];
      const checkedKeys = uncachedCheckedKeys.concat(cachedKeys);
      if (props.checkStrictly) {
        emit(UPDATE_MODEL_EVENT, props.multiple ? checkedKeys : checkedKeys.includes(dataValue) ? dataValue : void 0);
      } else {
        if (props.multiple) {
          emit(UPDATE_MODEL_EVENT, tree.value.getCheckedKeys(true));
        } else {
          const firstLeaf = treeFind([data], (data2) => !isValidArray(getNodeValByProp("children", data2)) && !getNodeValByProp("disabled", data2), (data2) => getNodeValByProp("children", data2));
          const firstLeafKey = firstLeaf ? getNodeValByProp("value", firstLeaf) : void 0;
          const hasCheckedChild = isValidValue2(props.modelValue) && !!treeFind([data], (data2) => getNodeValByProp("value", data2) === props.modelValue, (data2) => getNodeValByProp("children", data2));
          emit(UPDATE_MODEL_EVENT, firstLeafKey === props.modelValue || hasCheckedChild ? void 0 : firstLeafKey);
        }
      }
      nextTick51(() => {
        var _a2;
        const checkedKeys2 = toValidArray(props.modelValue);
        tree.value.setCheckedKeys(checkedKeys2);
        (_a2 = attrs.onCheck) == null ? void 0 : _a2.call(attrs, data, {
          checkedKeys: tree.value.getCheckedKeys(),
          checkedNodes: tree.value.getCheckedNodes(),
          halfCheckedKeys: tree.value.getHalfCheckedKeys(),
          halfCheckedNodes: tree.value.getHalfCheckedNodes()
        });
      });
    },
    cacheOptions
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/cache-options.mjs
import { defineComponent as defineComponent174, inject as inject83, watch as watch94 } from "vue";
var CacheOptions = defineComponent174({
  props: {
    data: {
      type: Array,
      default: () => []
    }
  },
  setup(props) {
    const select = inject83(selectKey);
    watch94(() => props.data, () => {
      var _a2;
      props.data.forEach((item) => {
        if (!select.cachedOptions.has(item.value)) {
          select.cachedOptions.set(item.value, item);
        }
      });
      const inputs = ((_a2 = select.selectWrapper) == null ? void 0 : _a2.querySelectorAll("input")) || [];
      if (!Array.from(inputs).includes(document.activeElement)) {
        select.setSelected();
      }
    }, { flush: "post", immediate: true });
    return () => void 0;
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/src/tree-select.mjs
var _sfc_main138 = defineComponent175({
  name: "ElTreeSelect",
  inheritAttrs: false,
  props: {
    ...ElSelect.props,
    ..._Tree.props,
    cacheData: {
      type: Array,
      default: () => []
    }
  },
  setup(props, context) {
    const { slots, expose } = context;
    const select = ref142();
    const tree = ref142();
    const key = computed181(() => props.nodeKey || props.valueKey || "value");
    const selectProps = useSelect3(props, context, { select, tree, key });
    const { cacheOptions, ...treeProps2 } = useTree2(props, context, {
      select,
      tree,
      key
    });
    const methods = reactive32({});
    expose(methods);
    onMounted61(() => {
      Object.assign(methods, {
        ...pick_default(tree.value, [
          "filter",
          "updateKeyChildren",
          "getCheckedNodes",
          "setCheckedNodes",
          "getCheckedKeys",
          "setCheckedKeys",
          "setChecked",
          "getHalfCheckedNodes",
          "getHalfCheckedKeys",
          "getCurrentKey",
          "getCurrentNode",
          "setCurrentKey",
          "setCurrentNode",
          "getNode",
          "remove",
          "append",
          "insertBefore",
          "insertAfter"
        ]),
        ...pick_default(select.value, ["focus", "blur"])
      });
    });
    return () => h27(ElSelect, reactive32({
      ...selectProps,
      ref: (ref210) => select.value = ref210
    }), {
      ...slots,
      default: () => [
        h27(CacheOptions, { data: cacheOptions.value }),
        h27(_Tree, reactive32({
          ...treeProps2,
          ref: (ref210) => tree.value = ref210
        }))
      ]
    });
  }
});
var TreeSelect = _export_sfc(_sfc_main138, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree-select/src/tree-select.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-select/index.mjs
TreeSelect.install = (app) => {
  app.component(TreeSelect.name, TreeSelect);
};
var _TreeSelect = TreeSelect;
var ElTreeSelect = _TreeSelect;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/tree.mjs
import { defineComponent as defineComponent178, useSlots as useSlots17, computed as computed185, provide as provide47, getCurrentInstance as getCurrentInstance59, openBlock as openBlock133, createElementBlock as createElementBlock116, normalizeClass as normalizeClass112, unref as unref154, createBlock as createBlock79, withCtx as withCtx76, normalizeStyle as normalizeStyle55, createElementVNode as createElementVNode72, toDisplayString as toDisplayString64 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/composables/useTree.mjs
import { ref as ref145, shallowRef as shallowRef16, watch as watch96, computed as computed183, nextTick as nextTick53 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/virtual-tree.mjs
var ROOT_TREE_INJECTION_KEY = Symbol();
var EMPTY_NODE = {
  key: -1,
  level: -1,
  data: {}
};
var TreeOptionsEnum = ((TreeOptionsEnum2) => {
  TreeOptionsEnum2["KEY"] = "id";
  TreeOptionsEnum2["LABEL"] = "label";
  TreeOptionsEnum2["CHILDREN"] = "children";
  TreeOptionsEnum2["DISABLED"] = "disabled";
  return TreeOptionsEnum2;
})(TreeOptionsEnum || {});
var SetOperationEnum = ((SetOperationEnum2) => {
  SetOperationEnum2["ADD"] = "add";
  SetOperationEnum2["DELETE"] = "delete";
  return SetOperationEnum2;
})(SetOperationEnum || {});
var itemSize2 = {
  type: Number,
  default: 26
};
var treeProps = buildProps({
  data: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  emptyText: {
    type: String
  },
  height: {
    type: Number,
    default: 200
  },
  props: {
    type: definePropType(Object),
    default: () => mutable({
      children: "children",
      label: "label",
      disabled: "disabled",
      value: "id"
      /* KEY */
    })
  },
  highlightCurrent: {
    type: Boolean,
    default: false
  },
  showCheckbox: {
    type: Boolean,
    default: false
  },
  defaultCheckedKeys: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  checkStrictly: {
    type: Boolean,
    default: false
  },
  defaultExpandedKeys: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  indent: {
    type: Number,
    default: 16
  },
  itemSize: itemSize2,
  icon: {
    type: iconPropType
  },
  expandOnClickNode: {
    type: Boolean,
    default: true
  },
  checkOnClickNode: {
    type: Boolean,
    default: false
  },
  currentNodeKey: {
    type: definePropType([String, Number])
  },
  accordion: {
    type: Boolean,
    default: false
  },
  filterMethod: {
    type: definePropType(Function)
  },
  perfMode: {
    type: Boolean,
    default: true
  }
});
var treeNodeProps = buildProps({
  node: {
    type: definePropType(Object),
    default: () => mutable(EMPTY_NODE)
  },
  expanded: {
    type: Boolean,
    default: false
  },
  checked: {
    type: Boolean,
    default: false
  },
  indeterminate: {
    type: Boolean,
    default: false
  },
  showCheckbox: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  current: {
    type: Boolean,
    default: false
  },
  hiddenExpandIcon: {
    type: Boolean,
    default: false
  },
  itemSize: itemSize2
});
var treeNodeContentProps = buildProps({
  node: {
    type: definePropType(Object),
    required: true
  }
});
var NODE_CLICK = "node-click";
var NODE_EXPAND = "node-expand";
var NODE_COLLAPSE = "node-collapse";
var CURRENT_CHANGE = "current-change";
var NODE_CHECK = "check";
var NODE_CHECK_CHANGE = "check-change";
var NODE_CONTEXTMENU = "node-contextmenu";
var treeEmits = {
  [NODE_CLICK]: (data, node, e) => data && node && e,
  [NODE_EXPAND]: (data, node) => data && node,
  [NODE_COLLAPSE]: (data, node) => data && node,
  [CURRENT_CHANGE]: (data, node) => data && node,
  [NODE_CHECK]: (data, checkedInfo) => data && checkedInfo,
  [NODE_CHECK_CHANGE]: (data, checked) => data && typeof checked === "boolean",
  [NODE_CONTEXTMENU]: (event, data, node) => event && data && node
};
var treeNodeEmits = {
  click: (node, e) => !!(node && e),
  toggle: (node) => !!node,
  check: (node, checked) => node && typeof checked === "boolean"
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/composables/useCheck.mjs
import { ref as ref143, getCurrentInstance as getCurrentInstance58, watch as watch95, nextTick as nextTick52 } from "vue";
function useCheck2(props, tree) {
  const checkedKeys = ref143(/* @__PURE__ */ new Set());
  const indeterminateKeys = ref143(/* @__PURE__ */ new Set());
  const { emit } = getCurrentInstance58();
  watch95([() => tree.value, () => props.defaultCheckedKeys], () => {
    return nextTick52(() => {
      _setCheckedKeys(props.defaultCheckedKeys);
    });
  }, {
    immediate: true
  });
  const updateCheckedKeys = () => {
    if (!tree.value || !props.showCheckbox || props.checkStrictly) {
      return;
    }
    const { levelTreeNodeMap, maxLevel } = tree.value;
    const checkedKeySet = checkedKeys.value;
    const indeterminateKeySet = /* @__PURE__ */ new Set();
    for (let level = maxLevel - 1; level >= 1; --level) {
      const nodes = levelTreeNodeMap.get(level);
      if (!nodes)
        continue;
      nodes.forEach((node) => {
        const children = node.children;
        if (children) {
          let allChecked = true;
          let hasChecked = false;
          for (const childNode of children) {
            const key = childNode.key;
            if (checkedKeySet.has(key)) {
              hasChecked = true;
            } else if (indeterminateKeySet.has(key)) {
              allChecked = false;
              hasChecked = true;
              break;
            } else {
              allChecked = false;
            }
          }
          if (allChecked) {
            checkedKeySet.add(node.key);
          } else if (hasChecked) {
            indeterminateKeySet.add(node.key);
            checkedKeySet.delete(node.key);
          } else {
            checkedKeySet.delete(node.key);
            indeterminateKeySet.delete(node.key);
          }
        }
      });
    }
    indeterminateKeys.value = indeterminateKeySet;
  };
  const isChecked = (node) => checkedKeys.value.has(node.key);
  const isIndeterminate = (node) => indeterminateKeys.value.has(node.key);
  const toggleCheckbox = (node, isChecked2, nodeClick = true) => {
    const checkedKeySet = checkedKeys.value;
    const toggle = (node2, checked) => {
      checkedKeySet[checked ? SetOperationEnum.ADD : SetOperationEnum.DELETE](node2.key);
      const children = node2.children;
      if (!props.checkStrictly && children) {
        children.forEach((childNode) => {
          if (!childNode.disabled) {
            toggle(childNode, checked);
          }
        });
      }
    };
    toggle(node, isChecked2);
    updateCheckedKeys();
    if (nodeClick) {
      afterNodeCheck(node, isChecked2);
    }
  };
  const afterNodeCheck = (node, checked) => {
    const { checkedNodes, checkedKeys: checkedKeys2 } = getChecked();
    const { halfCheckedNodes, halfCheckedKeys } = getHalfChecked();
    emit(NODE_CHECK, node.data, {
      checkedKeys: checkedKeys2,
      checkedNodes,
      halfCheckedKeys,
      halfCheckedNodes
    });
    emit(NODE_CHECK_CHANGE, node.data, checked);
  };
  function getCheckedKeys(leafOnly = false) {
    return getChecked(leafOnly).checkedKeys;
  }
  function getCheckedNodes(leafOnly = false) {
    return getChecked(leafOnly).checkedNodes;
  }
  function getHalfCheckedKeys() {
    return getHalfChecked().halfCheckedKeys;
  }
  function getHalfCheckedNodes() {
    return getHalfChecked().halfCheckedNodes;
  }
  function getChecked(leafOnly = false) {
    const checkedNodes = [];
    const keys3 = [];
    if ((tree == null ? void 0 : tree.value) && props.showCheckbox) {
      const { treeNodeMap } = tree.value;
      checkedKeys.value.forEach((key) => {
        const node = treeNodeMap.get(key);
        if (node && (!leafOnly || leafOnly && node.isLeaf)) {
          keys3.push(key);
          checkedNodes.push(node.data);
        }
      });
    }
    return {
      checkedKeys: keys3,
      checkedNodes
    };
  }
  function getHalfChecked() {
    const halfCheckedNodes = [];
    const halfCheckedKeys = [];
    if ((tree == null ? void 0 : tree.value) && props.showCheckbox) {
      const { treeNodeMap } = tree.value;
      indeterminateKeys.value.forEach((key) => {
        const node = treeNodeMap.get(key);
        if (node) {
          halfCheckedKeys.push(key);
          halfCheckedNodes.push(node.data);
        }
      });
    }
    return {
      halfCheckedNodes,
      halfCheckedKeys
    };
  }
  function setCheckedKeys(keys3) {
    checkedKeys.value.clear();
    indeterminateKeys.value.clear();
    _setCheckedKeys(keys3);
  }
  function setChecked(key, isChecked2) {
    if ((tree == null ? void 0 : tree.value) && props.showCheckbox) {
      const node = tree.value.treeNodeMap.get(key);
      if (node) {
        toggleCheckbox(node, isChecked2, false);
      }
    }
  }
  function _setCheckedKeys(keys3) {
    if (tree == null ? void 0 : tree.value) {
      const { treeNodeMap } = tree.value;
      if (props.showCheckbox && treeNodeMap && keys3) {
        for (const key of keys3) {
          const node = treeNodeMap.get(key);
          if (node && !isChecked(node)) {
            toggleCheckbox(node, true, false);
          }
        }
      }
    }
  }
  return {
    updateCheckedKeys,
    toggleCheckbox,
    isChecked,
    isIndeterminate,
    getCheckedKeys,
    getCheckedNodes,
    getHalfCheckedKeys,
    getHalfCheckedNodes,
    setChecked,
    setCheckedKeys
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/composables/useFilter.mjs
import { ref as ref144, computed as computed182 } from "vue";
import { isFunction as isFunction27 } from "@vue/shared";
function useFilter(props, tree) {
  const hiddenNodeKeySet = ref144(/* @__PURE__ */ new Set([]));
  const hiddenExpandIconKeySet = ref144(/* @__PURE__ */ new Set([]));
  const filterable = computed182(() => {
    return isFunction27(props.filterMethod);
  });
  function doFilter(query) {
    var _a2;
    if (!filterable.value) {
      return;
    }
    const expandKeySet = /* @__PURE__ */ new Set();
    const hiddenExpandIconKeys = hiddenExpandIconKeySet.value;
    const hiddenKeys = hiddenNodeKeySet.value;
    const family = [];
    const nodes = ((_a2 = tree.value) == null ? void 0 : _a2.treeNodes) || [];
    const filter2 = props.filterMethod;
    hiddenKeys.clear();
    function traverse(nodes2) {
      nodes2.forEach((node) => {
        family.push(node);
        if (filter2 == null ? void 0 : filter2(query, node.data)) {
          family.forEach((member) => {
            expandKeySet.add(member.key);
          });
        } else if (node.isLeaf) {
          hiddenKeys.add(node.key);
        }
        const children = node.children;
        if (children) {
          traverse(children);
        }
        if (!node.isLeaf) {
          if (!expandKeySet.has(node.key)) {
            hiddenKeys.add(node.key);
          } else if (children) {
            let allHidden = true;
            for (const childNode of children) {
              if (!hiddenKeys.has(childNode.key)) {
                allHidden = false;
                break;
              }
            }
            if (allHidden) {
              hiddenExpandIconKeys.add(node.key);
            } else {
              hiddenExpandIconKeys.delete(node.key);
            }
          }
        }
        family.pop();
      });
    }
    traverse(nodes);
    return expandKeySet;
  }
  function isForceHiddenExpandIcon(node) {
    return hiddenExpandIconKeySet.value.has(node.key);
  }
  return {
    hiddenExpandIconKeySet,
    hiddenNodeKeySet,
    doFilter,
    isForceHiddenExpandIcon
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/composables/useTree.mjs
import { isObject as isObject26 } from "@vue/shared";
function useTree3(props, emit) {
  const expandedKeySet = ref145(new Set(props.defaultExpandedKeys));
  const currentKey = ref145();
  const tree = shallowRef16();
  watch96(() => props.currentNodeKey, (key) => {
    currentKey.value = key;
  }, {
    immediate: true
  });
  watch96(() => props.data, (data) => {
    setData2(data);
  }, {
    immediate: true
  });
  const {
    isIndeterminate,
    isChecked,
    toggleCheckbox,
    getCheckedKeys,
    getCheckedNodes,
    getHalfCheckedKeys,
    getHalfCheckedNodes,
    setChecked,
    setCheckedKeys
  } = useCheck2(props, tree);
  const { doFilter, hiddenNodeKeySet, isForceHiddenExpandIcon } = useFilter(props, tree);
  const valueKey = computed183(() => {
    var _a2;
    return ((_a2 = props.props) == null ? void 0 : _a2.value) || TreeOptionsEnum.KEY;
  });
  const childrenKey = computed183(() => {
    var _a2;
    return ((_a2 = props.props) == null ? void 0 : _a2.children) || TreeOptionsEnum.CHILDREN;
  });
  const disabledKey = computed183(() => {
    var _a2;
    return ((_a2 = props.props) == null ? void 0 : _a2.disabled) || TreeOptionsEnum.DISABLED;
  });
  const labelKey = computed183(() => {
    var _a2;
    return ((_a2 = props.props) == null ? void 0 : _a2.label) || TreeOptionsEnum.LABEL;
  });
  const flattenTree = computed183(() => {
    const expandedKeys = expandedKeySet.value;
    const hiddenKeys = hiddenNodeKeySet.value;
    const flattenNodes = [];
    const nodes = tree.value && tree.value.treeNodes || [];
    function traverse() {
      const stack = [];
      for (let i = nodes.length - 1; i >= 0; --i) {
        stack.push(nodes[i]);
      }
      while (stack.length) {
        const node = stack.pop();
        if (!node)
          continue;
        if (!hiddenKeys.has(node.key)) {
          flattenNodes.push(node);
        }
        if (expandedKeys.has(node.key)) {
          const children = node.children;
          if (children) {
            const length = children.length;
            for (let i = length - 1; i >= 0; --i) {
              stack.push(children[i]);
            }
          }
        }
      }
    }
    traverse();
    return flattenNodes;
  });
  const isNotEmpty = computed183(() => {
    return flattenTree.value.length > 0;
  });
  function createTree(data) {
    const treeNodeMap = /* @__PURE__ */ new Map();
    const levelTreeNodeMap = /* @__PURE__ */ new Map();
    let maxLevel = 1;
    function traverse(nodes, level = 1, parent2 = void 0) {
      var _a2;
      const siblings = [];
      for (const rawNode of nodes) {
        const value = getKey(rawNode);
        const node = {
          level,
          key: value,
          data: rawNode
        };
        node.label = getLabel(rawNode);
        node.parent = parent2;
        const children = getChildren(rawNode);
        node.disabled = getDisabled(rawNode);
        node.isLeaf = !children || children.length === 0;
        if (children && children.length) {
          node.children = traverse(children, level + 1, node);
        }
        siblings.push(node);
        treeNodeMap.set(value, node);
        if (!levelTreeNodeMap.has(level)) {
          levelTreeNodeMap.set(level, []);
        }
        (_a2 = levelTreeNodeMap.get(level)) == null ? void 0 : _a2.push(node);
      }
      if (level > maxLevel) {
        maxLevel = level;
      }
      return siblings;
    }
    const treeNodes = traverse(data);
    return {
      treeNodeMap,
      levelTreeNodeMap,
      maxLevel,
      treeNodes
    };
  }
  function filter2(query) {
    const keys3 = doFilter(query);
    if (keys3) {
      expandedKeySet.value = keys3;
    }
  }
  function getChildren(node) {
    return node[childrenKey.value];
  }
  function getKey(node) {
    if (!node) {
      return "";
    }
    return node[valueKey.value];
  }
  function getDisabled(node) {
    return node[disabledKey.value];
  }
  function getLabel(node) {
    return node[labelKey.value];
  }
  function toggleExpand(node) {
    const expandedKeys = expandedKeySet.value;
    if (expandedKeys.has(node.key)) {
      collapseNode(node);
    } else {
      expandNode(node);
    }
  }
  function setExpandedKeys(keys3) {
    expandedKeySet.value = new Set(keys3);
  }
  function handleNodeClick(node, e) {
    emit(NODE_CLICK, node.data, node, e);
    handleCurrentChange2(node);
    if (props.expandOnClickNode) {
      toggleExpand(node);
    }
    if (props.showCheckbox && props.checkOnClickNode && !node.disabled) {
      toggleCheckbox(node, !isChecked(node), true);
    }
  }
  function handleCurrentChange2(node) {
    if (!isCurrent(node)) {
      currentKey.value = node.key;
      emit(CURRENT_CHANGE, node.data, node);
    }
  }
  function handleNodeCheck(node, checked) {
    toggleCheckbox(node, checked);
  }
  function expandNode(node) {
    const keySet = expandedKeySet.value;
    if (tree.value && props.accordion) {
      const { treeNodeMap } = tree.value;
      keySet.forEach((key) => {
        const treeNode = treeNodeMap.get(key);
        if (node && node.level === (treeNode == null ? void 0 : treeNode.level)) {
          keySet.delete(key);
        }
      });
    }
    keySet.add(node.key);
    emit(NODE_EXPAND, node.data, node);
  }
  function collapseNode(node) {
    expandedKeySet.value.delete(node.key);
    emit(NODE_COLLAPSE, node.data, node);
  }
  function isExpanded(node) {
    return expandedKeySet.value.has(node.key);
  }
  function isDisabled(node) {
    return !!node.disabled;
  }
  function isCurrent(node) {
    const current = currentKey.value;
    return !!current && current === node.key;
  }
  function getCurrentNode() {
    var _a2, _b;
    if (!currentKey.value)
      return void 0;
    return (_b = (_a2 = tree.value) == null ? void 0 : _a2.treeNodeMap.get(currentKey.value)) == null ? void 0 : _b.data;
  }
  function getCurrentKey() {
    return currentKey.value;
  }
  function setCurrentKey(key) {
    currentKey.value = key;
  }
  function setData2(data) {
    nextTick53(() => tree.value = createTree(data));
  }
  function getNode(data) {
    var _a2;
    const key = isObject26(data) ? getKey(data) : data;
    return (_a2 = tree.value) == null ? void 0 : _a2.treeNodeMap.get(key);
  }
  return {
    tree,
    flattenTree,
    isNotEmpty,
    getKey,
    getChildren,
    toggleExpand,
    toggleCheckbox,
    isExpanded,
    isChecked,
    isIndeterminate,
    isDisabled,
    isCurrent,
    isForceHiddenExpandIcon,
    handleNodeClick,
    handleNodeCheck,
    getCurrentNode,
    getCurrentKey,
    setCurrentKey,
    getCheckedKeys,
    getCheckedNodes,
    getHalfCheckedKeys,
    getHalfCheckedNodes,
    setChecked,
    setCheckedKeys,
    filter: filter2,
    setData: setData2,
    getNode,
    expandNode,
    collapseNode,
    setExpandedKeys
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/tree-node.mjs
import { defineComponent as defineComponent177, inject as inject85, computed as computed184, openBlock as openBlock132, createElementBlock as createElementBlock115, normalizeClass as normalizeClass111, unref as unref153, withModifiers as withModifiers27, createElementVNode as createElementVNode71, normalizeStyle as normalizeStyle54, createBlock as createBlock78, withCtx as withCtx75, resolveDynamicComponent as resolveDynamicComponent34, createCommentVNode as createCommentVNode68, createVNode as createVNode86 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/tree-node-content.mjs
import { defineComponent as defineComponent176, inject as inject84, h as h28 } from "vue";
var ElNodeContent = defineComponent176({
  name: "ElTreeNodeContent",
  props: treeNodeContentProps,
  setup(props) {
    const tree = inject84(ROOT_TREE_INJECTION_KEY);
    const ns = useNamespace("tree");
    return () => {
      const node = props.node;
      const { data } = node;
      return (tree == null ? void 0 : tree.ctx.slots.default) ? tree.ctx.slots.default({ node, data }) : h28("span", { class: ns.be("node", "label") }, [node == null ? void 0 : node.label]);
    };
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/tree-node.mjs
var _hoisted_165 = ["aria-expanded", "aria-disabled", "aria-checked", "data-key", "onClick"];
var __default__96 = defineComponent177({
  name: "ElTreeNode"
});
var _sfc_main139 = defineComponent177({
  ...__default__96,
  props: treeNodeProps,
  emits: treeNodeEmits,
  setup(__props, { emit }) {
    const props = __props;
    const tree = inject85(ROOT_TREE_INJECTION_KEY);
    const ns = useNamespace("tree");
    const indent = computed184(() => {
      var _a2;
      return (_a2 = tree == null ? void 0 : tree.props.indent) != null ? _a2 : 16;
    });
    const icon = computed184(() => {
      var _a2;
      return (_a2 = tree == null ? void 0 : tree.props.icon) != null ? _a2 : caret_right_default;
    });
    const handleClick = (e) => {
      emit("click", props.node, e);
    };
    const handleExpandIconClick = () => {
      emit("toggle", props.node);
    };
    const handleCheckChange = (value) => {
      emit("check", props.node, value);
    };
    const handleContextMenu = (event) => {
      var _a2, _b, _c, _d;
      if ((_c = (_b = (_a2 = tree == null ? void 0 : tree.instance) == null ? void 0 : _a2.vnode) == null ? void 0 : _b.props) == null ? void 0 : _c["onNodeContextmenu"]) {
        event.stopPropagation();
        event.preventDefault();
      }
      tree == null ? void 0 : tree.ctx.emit(NODE_CONTEXTMENU, event, (_d = props.node) == null ? void 0 : _d.data, props.node);
    };
    return (_ctx, _cache) => {
      var _a2, _b, _c;
      return openBlock132(), createElementBlock115("div", {
        ref: "node$",
        class: normalizeClass111([
          unref153(ns).b("node"),
          unref153(ns).is("expanded", _ctx.expanded),
          unref153(ns).is("current", _ctx.current),
          unref153(ns).is("focusable", !_ctx.disabled),
          unref153(ns).is("checked", !_ctx.disabled && _ctx.checked)
        ]),
        role: "treeitem",
        tabindex: "-1",
        "aria-expanded": _ctx.expanded,
        "aria-disabled": _ctx.disabled,
        "aria-checked": _ctx.checked,
        "data-key": (_a2 = _ctx.node) == null ? void 0 : _a2.key,
        onClick: withModifiers27(handleClick, ["stop"]),
        onContextmenu: handleContextMenu
      }, [
        createElementVNode71("div", {
          class: normalizeClass111(unref153(ns).be("node", "content")),
          style: normalizeStyle54({
            paddingLeft: `${(_ctx.node.level - 1) * unref153(indent)}px`,
            height: _ctx.itemSize + "px"
          })
        }, [
          unref153(icon) ? (openBlock132(), createBlock78(unref153(ElIcon), {
            key: 0,
            class: normalizeClass111([
              unref153(ns).is("leaf", !!((_b = _ctx.node) == null ? void 0 : _b.isLeaf)),
              unref153(ns).is("hidden", _ctx.hiddenExpandIcon),
              {
                expanded: !((_c = _ctx.node) == null ? void 0 : _c.isLeaf) && _ctx.expanded
              },
              unref153(ns).be("node", "expand-icon")
            ]),
            onClick: withModifiers27(handleExpandIconClick, ["stop"])
          }, {
            default: withCtx75(() => [
              (openBlock132(), createBlock78(resolveDynamicComponent34(unref153(icon))))
            ]),
            _: 1
          }, 8, ["class", "onClick"])) : createCommentVNode68("v-if", true),
          _ctx.showCheckbox ? (openBlock132(), createBlock78(unref153(ElCheckbox), {
            key: 1,
            "model-value": _ctx.checked,
            indeterminate: _ctx.indeterminate,
            disabled: _ctx.disabled,
            onChange: handleCheckChange,
            onClick: _cache[0] || (_cache[0] = withModifiers27(() => {
            }, ["stop"]))
          }, null, 8, ["model-value", "indeterminate", "disabled"])) : createCommentVNode68("v-if", true),
          createVNode86(unref153(ElNodeContent), { node: _ctx.node }, null, 8, ["node"])
        ], 6)
      ], 42, _hoisted_165);
    };
  }
});
var ElTreeNode2 = _export_sfc(_sfc_main139, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree-node.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/src/tree.mjs
var __default__97 = defineComponent178({
  name: "ElTreeV2"
});
var _sfc_main140 = defineComponent178({
  ...__default__97,
  props: treeProps,
  emits: treeEmits,
  setup(__props, { expose, emit }) {
    const props = __props;
    const slots = useSlots17();
    const treeNodeSize = computed185(() => props.itemSize);
    provide47(ROOT_TREE_INJECTION_KEY, {
      ctx: {
        emit,
        slots
      },
      props,
      instance: getCurrentInstance59()
    });
    provide47(formItemContextKey, void 0);
    const { t } = useLocale();
    const ns = useNamespace("tree");
    const {
      flattenTree,
      isNotEmpty,
      toggleExpand,
      isExpanded,
      isIndeterminate,
      isChecked,
      isDisabled,
      isCurrent,
      isForceHiddenExpandIcon,
      handleNodeClick,
      handleNodeCheck,
      toggleCheckbox,
      getCurrentNode,
      getCurrentKey,
      setCurrentKey,
      getCheckedKeys,
      getCheckedNodes,
      getHalfCheckedKeys,
      getHalfCheckedNodes,
      setChecked,
      setCheckedKeys,
      filter: filter2,
      setData: setData2,
      getNode,
      expandNode,
      collapseNode,
      setExpandedKeys
    } = useTree3(props, emit);
    expose({
      toggleCheckbox,
      getCurrentNode,
      getCurrentKey,
      setCurrentKey,
      getCheckedKeys,
      getCheckedNodes,
      getHalfCheckedKeys,
      getHalfCheckedNodes,
      setChecked,
      setCheckedKeys,
      filter: filter2,
      setData: setData2,
      getNode,
      expandNode,
      collapseNode,
      setExpandedKeys
    });
    return (_ctx, _cache) => {
      var _a2;
      return openBlock133(), createElementBlock116("div", {
        class: normalizeClass112([unref154(ns).b(), { [unref154(ns).m("highlight-current")]: _ctx.highlightCurrent }]),
        role: "tree"
      }, [
        unref154(isNotEmpty) ? (openBlock133(), createBlock79(unref154(FixedSizeList), {
          key: 0,
          "class-name": unref154(ns).b("virtual-list"),
          data: unref154(flattenTree),
          total: unref154(flattenTree).length,
          height: _ctx.height,
          "item-size": unref154(treeNodeSize),
          "perf-mode": _ctx.perfMode
        }, {
          default: withCtx76(({ data, index, style }) => [
            (openBlock133(), createBlock79(ElTreeNode2, {
              key: data[index].key,
              style: normalizeStyle55(style),
              node: data[index],
              expanded: unref154(isExpanded)(data[index]),
              "show-checkbox": _ctx.showCheckbox,
              checked: unref154(isChecked)(data[index]),
              indeterminate: unref154(isIndeterminate)(data[index]),
              "item-size": unref154(treeNodeSize),
              disabled: unref154(isDisabled)(data[index]),
              current: unref154(isCurrent)(data[index]),
              "hidden-expand-icon": unref154(isForceHiddenExpandIcon)(data[index]),
              onClick: unref154(handleNodeClick),
              onToggle: unref154(toggleExpand),
              onCheck: unref154(handleNodeCheck)
            }, null, 8, ["style", "node", "expanded", "show-checkbox", "checked", "indeterminate", "item-size", "disabled", "current", "hidden-expand-icon", "onClick", "onToggle", "onCheck"]))
          ]),
          _: 1
        }, 8, ["class-name", "data", "total", "height", "item-size", "perf-mode"])) : (openBlock133(), createElementBlock116("div", {
          key: 1,
          class: normalizeClass112(unref154(ns).e("empty-block"))
        }, [
          createElementVNode72("span", {
            class: normalizeClass112(unref154(ns).e("empty-text"))
          }, toDisplayString64((_a2 = _ctx.emptyText) != null ? _a2 : unref154(t)("el.tree.emptyText")), 3)
        ], 2))
      ], 2);
    };
  }
});
var TreeV2 = _export_sfc(_sfc_main140, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/tree-v2/index.mjs
var ElTreeV2 = withInstall(TreeV2);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload2.mjs
import { defineComponent as defineComponent182, useSlots as useSlots18, shallowRef as shallowRef18, computed as computed186, onBeforeUnmount as onBeforeUnmount27, provide as provide48, toRef as toRef17, openBlock as openBlock137, createElementBlock as createElementBlock120, unref as unref158, createBlock as createBlock82, createSlots as createSlots7, withCtx as withCtx79, createVNode as createVNode88, mergeProps as mergeProps36, renderSlot as renderSlot109, createCommentVNode as createCommentVNode70 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/constants.mjs
var uploadContextKey = Symbol("uploadContextKey");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-list2.mjs
import { defineComponent as defineComponent179, ref as ref146, openBlock as openBlock134, createBlock as createBlock80, TransitionGroup as TransitionGroup2, normalizeClass as normalizeClass113, unref as unref155, withCtx as withCtx77, createElementBlock as createElementBlock117, Fragment as Fragment49, renderList as renderList32, withKeys as withKeys13, renderSlot as renderSlot106, createCommentVNode as createCommentVNode69, createElementVNode as createElementVNode73, withModifiers as withModifiers28, createVNode as createVNode87, toDisplayString as toDisplayString65, normalizeStyle as normalizeStyle56 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-list.mjs
import { NOOP as NOOP13 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload.mjs
import { NOOP as NOOP12 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/ajax.mjs
var SCOPE7 = "ElUpload";
var UploadAjaxError = class extends Error {
  constructor(message2, status, method5, url2) {
    super(message2);
    this.name = "UploadAjaxError";
    this.status = status;
    this.method = method5;
    this.url = url2;
  }
};
function getError(action, option, xhr) {
  let msg;
  if (xhr.response) {
    msg = `${xhr.response.error || xhr.response}`;
  } else if (xhr.responseText) {
    msg = `${xhr.responseText}`;
  } else {
    msg = `fail to ${option.method} ${action} ${xhr.status}`;
  }
  return new UploadAjaxError(msg, xhr.status, option.method, action);
}
function getBody(xhr) {
  const text = xhr.responseText || xhr.response;
  if (!text) {
    return text;
  }
  try {
    return JSON.parse(text);
  } catch (e) {
    return text;
  }
}
var ajaxUpload = (option) => {
  if (typeof XMLHttpRequest === "undefined")
    throwError(SCOPE7, "XMLHttpRequest is undefined");
  const xhr = new XMLHttpRequest();
  const action = option.action;
  if (xhr.upload) {
    xhr.upload.addEventListener("progress", (evt) => {
      const progressEvt = evt;
      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;
      option.onProgress(progressEvt);
    });
  }
  const formData = new FormData();
  if (option.data) {
    for (const [key, value] of Object.entries(option.data)) {
      if (Array.isArray(value))
        formData.append(key, ...value);
      else
        formData.append(key, value);
    }
  }
  formData.append(option.filename, option.file, option.file.name);
  xhr.addEventListener("error", () => {
    option.onError(getError(action, option, xhr));
  });
  xhr.addEventListener("load", () => {
    if (xhr.status < 200 || xhr.status >= 300) {
      return option.onError(getError(action, option, xhr));
    }
    option.onSuccess(getBody(xhr));
  });
  xhr.open(option.method, action, true);
  if (option.withCredentials && "withCredentials" in xhr) {
    xhr.withCredentials = true;
  }
  const headers = option.headers || {};
  if (headers instanceof Headers) {
    headers.forEach((value, key) => xhr.setRequestHeader(key, value));
  } else {
    for (const [key, value] of Object.entries(headers)) {
      if (isNil_default(value))
        continue;
      xhr.setRequestHeader(key, String(value));
    }
  }
  xhr.send(formData);
  return xhr;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload.mjs
var uploadListTypes = ["text", "picture", "picture-card"];
var fileId = 1;
var genFileId = () => Date.now() + fileId++;
var uploadBaseProps = buildProps({
  action: {
    type: String,
    default: "#"
  },
  headers: {
    type: definePropType(Object)
  },
  method: {
    type: String,
    default: "post"
  },
  data: {
    type: Object,
    default: () => mutable({})
  },
  multiple: {
    type: Boolean,
    default: false
  },
  name: {
    type: String,
    default: "file"
  },
  drag: {
    type: Boolean,
    default: false
  },
  withCredentials: Boolean,
  showFileList: {
    type: Boolean,
    default: true
  },
  accept: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    default: "select"
  },
  fileList: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  autoUpload: {
    type: Boolean,
    default: true
  },
  listType: {
    type: String,
    values: uploadListTypes,
    default: "text"
  },
  httpRequest: {
    type: definePropType(Function),
    default: ajaxUpload
  },
  disabled: Boolean,
  limit: Number
});
var uploadProps = buildProps({
  ...uploadBaseProps,
  beforeUpload: {
    type: definePropType(Function),
    default: NOOP12
  },
  beforeRemove: {
    type: definePropType(Function)
  },
  onRemove: {
    type: definePropType(Function),
    default: NOOP12
  },
  onChange: {
    type: definePropType(Function),
    default: NOOP12
  },
  onPreview: {
    type: definePropType(Function),
    default: NOOP12
  },
  onSuccess: {
    type: definePropType(Function),
    default: NOOP12
  },
  onProgress: {
    type: definePropType(Function),
    default: NOOP12
  },
  onError: {
    type: definePropType(Function),
    default: NOOP12
  },
  onExceed: {
    type: definePropType(Function),
    default: NOOP12
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-list.mjs
var uploadListProps = buildProps({
  files: {
    type: definePropType(Array),
    default: () => mutable([])
  },
  disabled: {
    type: Boolean,
    default: false
  },
  handlePreview: {
    type: definePropType(Function),
    default: NOOP13
  },
  listType: {
    type: String,
    values: uploadListTypes,
    default: "text"
  }
});
var uploadListEmits = {
  remove: (file) => !!file
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-list2.mjs
var _hoisted_166 = ["onKeydown"];
var _hoisted_241 = ["src"];
var _hoisted_320 = ["onClick"];
var _hoisted_411 = ["title"];
var _hoisted_58 = ["onClick"];
var _hoisted_63 = ["onClick"];
var __default__98 = defineComponent179({
  name: "ElUploadList"
});
var _sfc_main141 = defineComponent179({
  ...__default__98,
  props: uploadListProps,
  emits: uploadListEmits,
  setup(__props, { emit }) {
    const { t } = useLocale();
    const nsUpload = useNamespace("upload");
    const nsIcon = useNamespace("icon");
    const nsList = useNamespace("list");
    const disabled = useFormDisabled();
    const focusing = ref146(false);
    const handleRemove = (file) => {
      emit("remove", file);
    };
    return (_ctx, _cache) => {
      return openBlock134(), createBlock80(TransitionGroup2, {
        tag: "ul",
        class: normalizeClass113([
          unref155(nsUpload).b("list"),
          unref155(nsUpload).bm("list", _ctx.listType),
          unref155(nsUpload).is("disabled", unref155(disabled))
        ]),
        name: unref155(nsList).b()
      }, {
        default: withCtx77(() => [
          (openBlock134(true), createElementBlock117(Fragment49, null, renderList32(_ctx.files, (file) => {
            return openBlock134(), createElementBlock117("li", {
              key: file.uid || file.name,
              class: normalizeClass113([
                unref155(nsUpload).be("list", "item"),
                unref155(nsUpload).is(file.status),
                { focusing: focusing.value }
              ]),
              tabindex: "0",
              onKeydown: withKeys13(($event) => !unref155(disabled) && handleRemove(file), ["delete"]),
              onFocus: _cache[0] || (_cache[0] = ($event) => focusing.value = true),
              onBlur: _cache[1] || (_cache[1] = ($event) => focusing.value = false),
              onClick: _cache[2] || (_cache[2] = ($event) => focusing.value = false)
            }, [
              renderSlot106(_ctx.$slots, "default", { file }, () => [
                _ctx.listType === "picture" || file.status !== "uploading" && _ctx.listType === "picture-card" ? (openBlock134(), createElementBlock117("img", {
                  key: 0,
                  class: normalizeClass113(unref155(nsUpload).be("list", "item-thumbnail")),
                  src: file.url,
                  alt: ""
                }, null, 10, _hoisted_241)) : createCommentVNode69("v-if", true),
                file.status === "uploading" || _ctx.listType !== "picture-card" ? (openBlock134(), createElementBlock117("div", {
                  key: 1,
                  class: normalizeClass113(unref155(nsUpload).be("list", "item-info"))
                }, [
                  createElementVNode73("a", {
                    class: normalizeClass113(unref155(nsUpload).be("list", "item-name")),
                    onClick: withModifiers28(($event) => _ctx.handlePreview(file), ["prevent"])
                  }, [
                    createVNode87(unref155(ElIcon), {
                      class: normalizeClass113(unref155(nsIcon).m("document"))
                    }, {
                      default: withCtx77(() => [
                        createVNode87(unref155(document_default))
                      ]),
                      _: 1
                    }, 8, ["class"]),
                    createElementVNode73("span", {
                      class: normalizeClass113(unref155(nsUpload).be("list", "item-file-name")),
                      title: file.name
                    }, toDisplayString65(file.name), 11, _hoisted_411)
                  ], 10, _hoisted_320),
                  file.status === "uploading" ? (openBlock134(), createBlock80(unref155(ElProgress), {
                    key: 0,
                    type: _ctx.listType === "picture-card" ? "circle" : "line",
                    "stroke-width": _ctx.listType === "picture-card" ? 6 : 2,
                    percentage: Number(file.percentage),
                    style: normalizeStyle56(_ctx.listType === "picture-card" ? "" : "margin-top: 0.5rem")
                  }, null, 8, ["type", "stroke-width", "percentage", "style"])) : createCommentVNode69("v-if", true)
                ], 2)) : createCommentVNode69("v-if", true),
                createElementVNode73("label", {
                  class: normalizeClass113(unref155(nsUpload).be("list", "item-status-label"))
                }, [
                  _ctx.listType === "text" ? (openBlock134(), createBlock80(unref155(ElIcon), {
                    key: 0,
                    class: normalizeClass113([unref155(nsIcon).m("upload-success"), unref155(nsIcon).m("circle-check")])
                  }, {
                    default: withCtx77(() => [
                      createVNode87(unref155(circle_check_default))
                    ]),
                    _: 1
                  }, 8, ["class"])) : ["picture-card", "picture"].includes(_ctx.listType) ? (openBlock134(), createBlock80(unref155(ElIcon), {
                    key: 1,
                    class: normalizeClass113([unref155(nsIcon).m("upload-success"), unref155(nsIcon).m("check")])
                  }, {
                    default: withCtx77(() => [
                      createVNode87(unref155(check_default))
                    ]),
                    _: 1
                  }, 8, ["class"])) : createCommentVNode69("v-if", true)
                ], 2),
                !unref155(disabled) ? (openBlock134(), createBlock80(unref155(ElIcon), {
                  key: 2,
                  class: normalizeClass113(unref155(nsIcon).m("close")),
                  onClick: ($event) => handleRemove(file)
                }, {
                  default: withCtx77(() => [
                    createVNode87(unref155(close_default))
                  ]),
                  _: 2
                }, 1032, ["class", "onClick"])) : createCommentVNode69("v-if", true),
                createCommentVNode69(" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn"),
                createCommentVNode69(" This is a bug which needs to be fixed "),
                createCommentVNode69(" TODO: Fix the incorrect navigation interaction "),
                !unref155(disabled) ? (openBlock134(), createElementBlock117("i", {
                  key: 3,
                  class: normalizeClass113(unref155(nsIcon).m("close-tip"))
                }, toDisplayString65(unref155(t)("el.upload.deleteTip")), 3)) : createCommentVNode69("v-if", true),
                _ctx.listType === "picture-card" ? (openBlock134(), createElementBlock117("span", {
                  key: 4,
                  class: normalizeClass113(unref155(nsUpload).be("list", "item-actions"))
                }, [
                  createElementVNode73("span", {
                    class: normalizeClass113(unref155(nsUpload).be("list", "item-preview")),
                    onClick: ($event) => _ctx.handlePreview(file)
                  }, [
                    createVNode87(unref155(ElIcon), {
                      class: normalizeClass113(unref155(nsIcon).m("zoom-in"))
                    }, {
                      default: withCtx77(() => [
                        createVNode87(unref155(zoom_in_default))
                      ]),
                      _: 1
                    }, 8, ["class"])
                  ], 10, _hoisted_58),
                  !unref155(disabled) ? (openBlock134(), createElementBlock117("span", {
                    key: 0,
                    class: normalizeClass113(unref155(nsUpload).be("list", "item-delete")),
                    onClick: ($event) => handleRemove(file)
                  }, [
                    createVNode87(unref155(ElIcon), {
                      class: normalizeClass113(unref155(nsIcon).m("delete"))
                    }, {
                      default: withCtx77(() => [
                        createVNode87(unref155(delete_default))
                      ]),
                      _: 1
                    }, 8, ["class"])
                  ], 10, _hoisted_63)) : createCommentVNode69("v-if", true)
                ], 2)) : createCommentVNode69("v-if", true)
              ])
            ], 42, _hoisted_166);
          }), 128)),
          renderSlot106(_ctx.$slots, "append")
        ]),
        _: 3
      }, 8, ["class", "name"]);
    };
  }
});
var UploadList = _export_sfc(_sfc_main141, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-list.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-content2.mjs
import { defineComponent as defineComponent181, shallowRef as shallowRef17, openBlock as openBlock136, createElementBlock as createElementBlock119, normalizeClass as normalizeClass115, unref as unref157, withKeys as withKeys14, withModifiers as withModifiers30, createBlock as createBlock81, withCtx as withCtx78, renderSlot as renderSlot108, createElementVNode as createElementVNode74 } from "vue";
import { isObject as isObject27 } from "@vue/shared";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-dragger2.mjs
import { defineComponent as defineComponent180, inject as inject86, ref as ref147, openBlock as openBlock135, createElementBlock as createElementBlock118, normalizeClass as normalizeClass114, unref as unref156, withModifiers as withModifiers29, renderSlot as renderSlot107 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-dragger.mjs
import { isArray as isArray37 } from "@vue/shared";
var uploadDraggerProps = buildProps({
  disabled: {
    type: Boolean,
    default: false
  }
});
var uploadDraggerEmits = {
  file: (file) => isArray37(file)
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-dragger2.mjs
var _hoisted_167 = ["onDrop", "onDragover"];
var COMPONENT_NAME25 = "ElUploadDrag";
var __default__99 = defineComponent180({
  name: COMPONENT_NAME25
});
var _sfc_main142 = defineComponent180({
  ...__default__99,
  props: uploadDraggerProps,
  emits: uploadDraggerEmits,
  setup(__props, { emit }) {
    const uploaderContext = inject86(uploadContextKey);
    if (!uploaderContext) {
      throwError(COMPONENT_NAME25, "usage: <el-upload><el-upload-dragger /></el-upload>");
    }
    const ns = useNamespace("upload");
    const dragover = ref147(false);
    const disabled = useFormDisabled();
    const onDrop = (e) => {
      if (disabled.value)
        return;
      dragover.value = false;
      e.stopPropagation();
      const files = Array.from(e.dataTransfer.files);
      const accept = uploaderContext.accept.value;
      if (!accept) {
        emit("file", files);
        return;
      }
      const filesFiltered = files.filter((file) => {
        const { type: type4, name } = file;
        const extension = name.includes(".") ? `.${name.split(".").pop()}` : "";
        const baseType = type4.replace(/\/.*$/, "");
        return accept.split(",").map((type22) => type22.trim()).filter((type22) => type22).some((acceptedType) => {
          if (acceptedType.startsWith(".")) {
            return extension === acceptedType;
          }
          if (/\/\*$/.test(acceptedType)) {
            return baseType === acceptedType.replace(/\/\*$/, "");
          }
          if (/^[^/]+\/[^/]+$/.test(acceptedType)) {
            return type4 === acceptedType;
          }
          return false;
        });
      });
      emit("file", filesFiltered);
    };
    const onDragover = () => {
      if (!disabled.value)
        dragover.value = true;
    };
    return (_ctx, _cache) => {
      return openBlock135(), createElementBlock118("div", {
        class: normalizeClass114([unref156(ns).b("dragger"), unref156(ns).is("dragover", dragover.value)]),
        onDrop: withModifiers29(onDrop, ["prevent"]),
        onDragover: withModifiers29(onDragover, ["prevent"]),
        onDragleave: _cache[0] || (_cache[0] = withModifiers29(($event) => dragover.value = false, ["prevent"]))
      }, [
        renderSlot107(_ctx.$slots, "default")
      ], 42, _hoisted_167);
    };
  }
});
var UploadDragger = _export_sfc(_sfc_main142, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-dragger.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-content.mjs
import { NOOP as NOOP14 } from "@vue/shared";
var uploadContentProps = buildProps({
  ...uploadBaseProps,
  beforeUpload: {
    type: definePropType(Function),
    default: NOOP14
  },
  onRemove: {
    type: definePropType(Function),
    default: NOOP14
  },
  onStart: {
    type: definePropType(Function),
    default: NOOP14
  },
  onSuccess: {
    type: definePropType(Function),
    default: NOOP14
  },
  onProgress: {
    type: definePropType(Function),
    default: NOOP14
  },
  onError: {
    type: definePropType(Function),
    default: NOOP14
  },
  onExceed: {
    type: definePropType(Function),
    default: NOOP14
  }
});

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload-content2.mjs
var _hoisted_168 = ["onKeydown"];
var _hoisted_242 = ["name", "multiple", "accept"];
var __default__100 = defineComponent181({
  name: "ElUploadContent",
  inheritAttrs: false
});
var _sfc_main143 = defineComponent181({
  ...__default__100,
  props: uploadContentProps,
  setup(__props, { expose }) {
    const props = __props;
    const ns = useNamespace("upload");
    const disabled = useFormDisabled();
    const requests = shallowRef17({});
    const inputRef = shallowRef17();
    const uploadFiles = (files) => {
      if (files.length === 0)
        return;
      const { autoUpload, limit, fileList, multiple, onStart, onExceed } = props;
      if (limit && fileList.length + files.length > limit) {
        onExceed(files, fileList);
        return;
      }
      if (!multiple) {
        files = files.slice(0, 1);
      }
      for (const file of files) {
        const rawFile = file;
        rawFile.uid = genFileId();
        onStart(rawFile);
        if (autoUpload)
          upload(rawFile);
      }
    };
    const upload = async (rawFile) => {
      inputRef.value.value = "";
      if (!props.beforeUpload) {
        return doUpload(rawFile);
      }
      let hookResult;
      let beforeData = {};
      try {
        const originData = props.data;
        const beforeUploadPromise = props.beforeUpload(rawFile);
        beforeData = isObject27(props.data) ? cloneDeep_default(props.data) : props.data;
        hookResult = await beforeUploadPromise;
        if (isObject27(props.data) && isEqual_default(originData, beforeData)) {
          beforeData = cloneDeep_default(props.data);
        }
      } catch (e) {
        hookResult = false;
      }
      if (hookResult === false) {
        props.onRemove(rawFile);
        return;
      }
      let file = rawFile;
      if (hookResult instanceof Blob) {
        if (hookResult instanceof File) {
          file = hookResult;
        } else {
          file = new File([hookResult], rawFile.name, {
            type: rawFile.type
          });
        }
      }
      doUpload(Object.assign(file, {
        uid: rawFile.uid
      }), beforeData);
    };
    const doUpload = (rawFile, beforeData) => {
      const {
        headers,
        data,
        method: method5,
        withCredentials,
        name: filename,
        action,
        onProgress,
        onSuccess,
        onError,
        httpRequest
      } = props;
      const { uid: uid2 } = rawFile;
      const options = {
        headers: headers || {},
        withCredentials,
        file: rawFile,
        data: beforeData != null ? beforeData : data,
        method: method5,
        filename,
        action,
        onProgress: (evt) => {
          onProgress(evt, rawFile);
        },
        onSuccess: (res) => {
          onSuccess(res, rawFile);
          delete requests.value[uid2];
        },
        onError: (err) => {
          onError(err, rawFile);
          delete requests.value[uid2];
        }
      };
      const request = httpRequest(options);
      requests.value[uid2] = request;
      if (request instanceof Promise) {
        request.then(options.onSuccess, options.onError);
      }
    };
    const handleChange = (e) => {
      const files = e.target.files;
      if (!files)
        return;
      uploadFiles(Array.from(files));
    };
    const handleClick = () => {
      if (!disabled.value) {
        inputRef.value.value = "";
        inputRef.value.click();
      }
    };
    const handleKeydown = () => {
      handleClick();
    };
    const abort = (file) => {
      const _reqs = entriesOf(requests.value).filter(file ? ([uid2]) => String(file.uid) === uid2 : () => true);
      _reqs.forEach(([uid2, req]) => {
        if (req instanceof XMLHttpRequest)
          req.abort();
        delete requests.value[uid2];
      });
    };
    expose({
      abort,
      upload
    });
    return (_ctx, _cache) => {
      return openBlock136(), createElementBlock119("div", {
        class: normalizeClass115([unref157(ns).b(), unref157(ns).m(_ctx.listType), unref157(ns).is("drag", _ctx.drag)]),
        tabindex: "0",
        onClick: handleClick,
        onKeydown: withKeys14(withModifiers30(handleKeydown, ["self"]), ["enter", "space"])
      }, [
        _ctx.drag ? (openBlock136(), createBlock81(UploadDragger, {
          key: 0,
          disabled: unref157(disabled),
          onFile: uploadFiles
        }, {
          default: withCtx78(() => [
            renderSlot108(_ctx.$slots, "default")
          ]),
          _: 3
        }, 8, ["disabled"])) : renderSlot108(_ctx.$slots, "default", { key: 1 }),
        createElementVNode74("input", {
          ref_key: "inputRef",
          ref: inputRef,
          class: normalizeClass115(unref157(ns).e("input")),
          name: _ctx.name,
          multiple: _ctx.multiple,
          accept: _ctx.accept,
          type: "file",
          onChange: handleChange,
          onClick: _cache[0] || (_cache[0] = withModifiers30(() => {
          }, ["stop"]))
        }, null, 42, _hoisted_242)
      ], 42, _hoisted_168);
    };
  }
});
var UploadContent = _export_sfc(_sfc_main143, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-content.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/use-handlers.mjs
import { watch as watch97 } from "vue";
var SCOPE8 = "ElUpload";
var revokeObjectURL = (file) => {
  var _a2;
  if ((_a2 = file.url) == null ? void 0 : _a2.startsWith("blob:")) {
    URL.revokeObjectURL(file.url);
  }
};
var useHandlers = (props, uploadRef) => {
  const uploadFiles = useVModel(props, "fileList", void 0, { passive: true });
  const getFile = (rawFile) => uploadFiles.value.find((file) => file.uid === rawFile.uid);
  function abort(file) {
    var _a2;
    (_a2 = uploadRef.value) == null ? void 0 : _a2.abort(file);
  }
  function clearFiles(states = ["ready", "uploading", "success", "fail"]) {
    uploadFiles.value = uploadFiles.value.filter((row) => !states.includes(row.status));
  }
  const handleError = (err, rawFile) => {
    const file = getFile(rawFile);
    if (!file)
      return;
    console.error(err);
    file.status = "fail";
    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);
    props.onError(err, file, uploadFiles.value);
    props.onChange(file, uploadFiles.value);
  };
  const handleProgress = (evt, rawFile) => {
    const file = getFile(rawFile);
    if (!file)
      return;
    props.onProgress(evt, file, uploadFiles.value);
    file.status = "uploading";
    file.percentage = Math.round(evt.percent);
  };
  const handleSuccess = (response, rawFile) => {
    const file = getFile(rawFile);
    if (!file)
      return;
    file.status = "success";
    file.response = response;
    props.onSuccess(response, file, uploadFiles.value);
    props.onChange(file, uploadFiles.value);
  };
  const handleStart = (file) => {
    if (isNil_default(file.uid))
      file.uid = genFileId();
    const uploadFile = {
      name: file.name,
      percentage: 0,
      status: "ready",
      size: file.size,
      raw: file,
      uid: file.uid
    };
    if (props.listType === "picture-card" || props.listType === "picture") {
      try {
        uploadFile.url = URL.createObjectURL(file);
      } catch (err) {
        debugWarn(SCOPE8, err.message);
        props.onError(err, uploadFile, uploadFiles.value);
      }
    }
    uploadFiles.value = [...uploadFiles.value, uploadFile];
    props.onChange(uploadFile, uploadFiles.value);
  };
  const handleRemove = async (file) => {
    const uploadFile = file instanceof File ? getFile(file) : file;
    if (!uploadFile)
      throwError(SCOPE8, "file to be removed not found");
    const doRemove = (file2) => {
      abort(file2);
      const fileList = uploadFiles.value;
      fileList.splice(fileList.indexOf(file2), 1);
      props.onRemove(file2, fileList);
      revokeObjectURL(file2);
    };
    if (props.beforeRemove) {
      const before2 = await props.beforeRemove(uploadFile, uploadFiles.value);
      if (before2 !== false)
        doRemove(uploadFile);
    } else {
      doRemove(uploadFile);
    }
  };
  function submit() {
    uploadFiles.value.filter(({ status }) => status === "ready").forEach(({ raw }) => {
      var _a2;
      return raw && ((_a2 = uploadRef.value) == null ? void 0 : _a2.upload(raw));
    });
  }
  watch97(() => props.listType, (val) => {
    if (val !== "picture-card" && val !== "picture") {
      return;
    }
    uploadFiles.value = uploadFiles.value.map((file) => {
      const { raw, url: url2 } = file;
      if (!url2 && raw) {
        try {
          file.url = URL.createObjectURL(raw);
        } catch (err) {
          props.onError(err, file, uploadFiles.value);
        }
      }
      return file;
    });
  });
  watch97(uploadFiles, (files) => {
    for (const file of files) {
      file.uid || (file.uid = genFileId());
      file.status || (file.status = "success");
    }
  }, { immediate: true, deep: true });
  return {
    uploadFiles,
    abort,
    clearFiles,
    handleError,
    handleProgress,
    handleStart,
    handleSuccess,
    handleRemove,
    submit
  };
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/src/upload2.mjs
var __default__101 = defineComponent182({
  name: "ElUpload"
});
var _sfc_main144 = defineComponent182({
  ...__default__101,
  props: uploadProps,
  setup(__props, { expose }) {
    const props = __props;
    const slots = useSlots18();
    const disabled = useFormDisabled();
    const uploadRef = shallowRef18();
    const {
      abort,
      submit,
      clearFiles,
      uploadFiles,
      handleStart,
      handleError,
      handleRemove,
      handleSuccess,
      handleProgress
    } = useHandlers(props, uploadRef);
    const isPictureCard = computed186(() => props.listType === "picture-card");
    const uploadContentProps2 = computed186(() => ({
      ...props,
      fileList: uploadFiles.value,
      onStart: handleStart,
      onProgress: handleProgress,
      onSuccess: handleSuccess,
      onError: handleError,
      onRemove: handleRemove
    }));
    onBeforeUnmount27(() => {
      uploadFiles.value.forEach(({ url: url2 }) => {
        if (url2 == null ? void 0 : url2.startsWith("blob:"))
          URL.revokeObjectURL(url2);
      });
    });
    provide48(uploadContextKey, {
      accept: toRef17(props, "accept")
    });
    expose({
      abort,
      submit,
      clearFiles,
      handleStart,
      handleRemove
    });
    return (_ctx, _cache) => {
      return openBlock137(), createElementBlock120("div", null, [
        unref158(isPictureCard) && _ctx.showFileList ? (openBlock137(), createBlock82(UploadList, {
          key: 0,
          disabled: unref158(disabled),
          "list-type": _ctx.listType,
          files: unref158(uploadFiles),
          "handle-preview": _ctx.onPreview,
          onRemove: unref158(handleRemove)
        }, createSlots7({
          append: withCtx79(() => [
            createVNode88(UploadContent, mergeProps36({
              ref_key: "uploadRef",
              ref: uploadRef
            }, unref158(uploadContentProps2)), {
              default: withCtx79(() => [
                unref158(slots).trigger ? renderSlot109(_ctx.$slots, "trigger", { key: 0 }) : createCommentVNode70("v-if", true),
                !unref158(slots).trigger && unref158(slots).default ? renderSlot109(_ctx.$slots, "default", { key: 1 }) : createCommentVNode70("v-if", true)
              ]),
              _: 3
            }, 16)
          ]),
          _: 2
        }, [
          _ctx.$slots.file ? {
            name: "default",
            fn: withCtx79(({ file }) => [
              renderSlot109(_ctx.$slots, "file", { file })
            ])
          } : void 0
        ]), 1032, ["disabled", "list-type", "files", "handle-preview", "onRemove"])) : createCommentVNode70("v-if", true),
        !unref158(isPictureCard) || unref158(isPictureCard) && !_ctx.showFileList ? (openBlock137(), createBlock82(UploadContent, mergeProps36({
          key: 1,
          ref_key: "uploadRef",
          ref: uploadRef
        }, unref158(uploadContentProps2)), {
          default: withCtx79(() => [
            unref158(slots).trigger ? renderSlot109(_ctx.$slots, "trigger", { key: 0 }) : createCommentVNode70("v-if", true),
            !unref158(slots).trigger && unref158(slots).default ? renderSlot109(_ctx.$slots, "default", { key: 1 }) : createCommentVNode70("v-if", true)
          ]),
          _: 3
        }, 16)) : createCommentVNode70("v-if", true),
        _ctx.$slots.trigger ? renderSlot109(_ctx.$slots, "default", { key: 2 }) : createCommentVNode70("v-if", true),
        renderSlot109(_ctx.$slots, "tip"),
        !unref158(isPictureCard) && _ctx.showFileList ? (openBlock137(), createBlock82(UploadList, {
          key: 3,
          disabled: unref158(disabled),
          "list-type": _ctx.listType,
          files: unref158(uploadFiles),
          "handle-preview": _ctx.onPreview,
          onRemove: unref158(handleRemove)
        }, createSlots7({ _: 2 }, [
          _ctx.$slots.file ? {
            name: "default",
            fn: withCtx79(({ file }) => [
              renderSlot109(_ctx.$slots, "file", { file })
            ])
          } : void 0
        ]), 1032, ["disabled", "list-type", "files", "handle-preview", "onRemove"])) : createCommentVNode70("v-if", true)
      ]);
    };
  }
});
var Upload = _export_sfc(_sfc_main144, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/upload/index.mjs
var ElUpload = withInstall(Upload);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/component.mjs
var Components = [
  ElAffix,
  ElAlert,
  ElAutocomplete,
  ElAutoResizer,
  ElAvatar,
  ElBacktop,
  ElBadge,
  ElBreadcrumb,
  ElBreadcrumbItem,
  ElButton,
  ElButtonGroup,
  ElCalendar,
  ElCard,
  ElCarousel,
  ElCarouselItem,
  ElCascader,
  ElCascaderPanel,
  ElCheckTag,
  ElCheckbox,
  ElCheckboxButton,
  ElCheckboxGroup,
  ElCol,
  ElCollapse,
  ElCollapseItem,
  ElCollapseTransition,
  ElColorPicker,
  ElConfigProvider,
  ElContainer,
  ElAside,
  ElFooter,
  ElHeader,
  ElMain,
  ElDatePicker,
  ElDescriptions,
  ElDescriptionsItem,
  ElDialog,
  ElDivider,
  ElDrawer,
  ElDropdown,
  ElDropdownItem,
  ElDropdownMenu,
  ElEmpty,
  ElForm,
  ElFormItem,
  ElIcon,
  ElImage,
  ElImageViewer,
  ElInput,
  ElInputNumber,
  ElLink,
  ElMenu,
  ElMenuItem,
  ElMenuItemGroup,
  ElSubMenu,
  ElPageHeader,
  ElPagination,
  ElPopconfirm,
  ElPopover,
  ElPopper,
  ElProgress,
  ElRadio,
  ElRadioButton,
  ElRadioGroup,
  ElRate,
  ElResult,
  ElRow,
  ElScrollbar,
  ElSelect,
  ElOption,
  ElOptionGroup,
  ElSelectV2,
  ElSkeleton,
  ElSkeletonItem,
  ElSlider,
  ElSpace,
  ElStatistic,
  ElCountdown,
  ElSteps,
  ElStep,
  ElSwitch,
  ElTable,
  ElTableColumn2,
  ElTableV2,
  ElTabs,
  ElTabPane,
  ElTag,
  ElText,
  ElTimePicker,
  ElTimeSelect,
  ElTimeline,
  ElTimelineItem,
  ElTooltip,
  ElTooltipV2,
  ElTransfer,
  ElTree,
  ElTreeSelect,
  ElTreeV2,
  ElUpload
];

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/infinite-scroll/src/index.mjs
import { nextTick as nextTick54 } from "vue";
import { isFunction as isFunction28 } from "@vue/shared";
var SCOPE9 = "ElInfiniteScroll";
var CHECK_INTERVAL = 50;
var DEFAULT_DELAY = 200;
var DEFAULT_DISTANCE = 0;
var attributes = {
  delay: {
    type: Number,
    default: DEFAULT_DELAY
  },
  distance: {
    type: Number,
    default: DEFAULT_DISTANCE
  },
  disabled: {
    type: Boolean,
    default: false
  },
  immediate: {
    type: Boolean,
    default: true
  }
};
var getScrollOptions = (el, instance) => {
  return Object.entries(attributes).reduce((acm, [name, option]) => {
    var _a2, _b;
    const { type: type4, default: defaultValue } = option;
    const attrVal = el.getAttribute(`infinite-scroll-${name}`);
    let value = (_b = (_a2 = instance[attrVal]) != null ? _a2 : attrVal) != null ? _b : defaultValue;
    value = value === "false" ? false : value;
    value = type4(value);
    acm[name] = Number.isNaN(value) ? defaultValue : value;
    return acm;
  }, {});
};
var destroyObserver = (el) => {
  const { observer } = el[SCOPE9];
  if (observer) {
    observer.disconnect();
    delete el[SCOPE9].observer;
  }
};
var handleScroll = (el, cb) => {
  const { container, containerEl, instance, observer, lastScrollTop } = el[SCOPE9];
  const { disabled, distance } = getScrollOptions(el, instance);
  const { clientHeight, scrollHeight, scrollTop } = containerEl;
  const delta = scrollTop - lastScrollTop;
  el[SCOPE9].lastScrollTop = scrollTop;
  if (observer || disabled || delta < 0)
    return;
  let shouldTrigger = false;
  if (container === el) {
    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance;
  } else {
    const { clientTop, scrollHeight: height } = el;
    const offsetTop = getOffsetTopDistance(el, containerEl);
    shouldTrigger = scrollTop + clientHeight >= offsetTop + clientTop + height - distance;
  }
  if (shouldTrigger) {
    cb.call(instance);
  }
};
function checkFull(el, cb) {
  const { containerEl, instance } = el[SCOPE9];
  const { disabled } = getScrollOptions(el, instance);
  if (disabled || containerEl.clientHeight === 0)
    return;
  if (containerEl.scrollHeight <= containerEl.clientHeight) {
    cb.call(instance);
  } else {
    destroyObserver(el);
  }
}
var InfiniteScroll = {
  async mounted(el, binding) {
    const { instance, value: cb } = binding;
    if (!isFunction28(cb)) {
      throwError(SCOPE9, "'v-infinite-scroll' binding value must be a function");
    }
    await nextTick54();
    const { delay: delay2, immediate } = getScrollOptions(el, instance);
    const container = getScrollContainer(el, true);
    const containerEl = container === window ? document.documentElement : container;
    const onScroll = throttle_default(handleScroll.bind(null, el, cb), delay2);
    if (!container)
      return;
    el[SCOPE9] = {
      instance,
      container,
      containerEl,
      delay: delay2,
      cb,
      onScroll,
      lastScrollTop: containerEl.scrollTop
    };
    if (immediate) {
      const observer = new MutationObserver(throttle_default(checkFull.bind(null, el, cb), CHECK_INTERVAL));
      el[SCOPE9].observer = observer;
      observer.observe(el, { childList: true, subtree: true });
      checkFull(el, cb);
    }
    container.addEventListener("scroll", onScroll);
  },
  unmounted(el) {
    const { container, onScroll } = el[SCOPE9];
    container == null ? void 0 : container.removeEventListener("scroll", onScroll);
    destroyObserver(el);
  },
  async updated(el) {
    if (!el[SCOPE9]) {
      await nextTick54();
    } else {
      const { containerEl, cb, observer } = el[SCOPE9];
      if (containerEl.clientHeight && observer) {
        checkFull(el, cb);
      }
    }
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/infinite-scroll/index.mjs
var _InfiniteScroll = InfiniteScroll;
_InfiniteScroll.install = (app) => {
  app.directive("InfiniteScroll", _InfiniteScroll);
};
var ElInfiniteScroll = _InfiniteScroll;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/loading/src/service.mjs
import { nextTick as nextTick55 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/loading/src/loading.mjs
import { ref as ref148, reactive as reactive33, defineComponent as defineComponent183, h as h29, Transition as Transition16, withCtx as withCtx80, withDirectives as withDirectives35, createVNode as createVNode89, vShow as vShow26, createApp, toRefs as toRefs18 } from "vue";
function createLoadingComponent(options) {
  let afterLeaveTimer;
  const afterLeaveFlag = ref148(false);
  const data = reactive33({
    ...options,
    originalPosition: "",
    originalOverflow: "",
    visible: false
  });
  function setText(text) {
    data.text = text;
  }
  function destroySelf() {
    const target2 = data.parent;
    const ns = vm.ns;
    if (!target2.vLoadingAddClassList) {
      let loadingNumber = target2.getAttribute("loading-number");
      loadingNumber = Number.parseInt(loadingNumber) - 1;
      if (!loadingNumber) {
        removeClass(target2, ns.bm("parent", "relative"));
        target2.removeAttribute("loading-number");
      } else {
        target2.setAttribute("loading-number", loadingNumber.toString());
      }
      removeClass(target2, ns.bm("parent", "hidden"));
    }
    removeElLoadingChild();
    loadingInstance.unmount();
  }
  function removeElLoadingChild() {
    var _a2, _b;
    (_b = (_a2 = vm.$el) == null ? void 0 : _a2.parentNode) == null ? void 0 : _b.removeChild(vm.$el);
  }
  function close2() {
    var _a2;
    if (options.beforeClose && !options.beforeClose())
      return;
    afterLeaveFlag.value = true;
    clearTimeout(afterLeaveTimer);
    afterLeaveTimer = window.setTimeout(handleAfterLeave, 400);
    data.visible = false;
    (_a2 = options.closed) == null ? void 0 : _a2.call(options);
  }
  function handleAfterLeave() {
    if (!afterLeaveFlag.value)
      return;
    const target2 = data.parent;
    afterLeaveFlag.value = false;
    target2.vLoadingAddClassList = void 0;
    destroySelf();
  }
  const elLoadingComponent = defineComponent183({
    name: "ElLoading",
    setup(_2, { expose }) {
      const { ns, zIndex: zIndex2 } = useGlobalComponentSettings("loading");
      expose({
        ns,
        zIndex: zIndex2
      });
      return () => {
        const svg = data.spinner || data.svg;
        const spinner = h29("svg", {
          class: "circular",
          viewBox: data.svgViewBox ? data.svgViewBox : "0 0 50 50",
          ...svg ? { innerHTML: svg } : {}
        }, [
          h29("circle", {
            class: "path",
            cx: "25",
            cy: "25",
            r: "20",
            fill: "none"
          })
        ]);
        const spinnerText = data.text ? h29("p", { class: ns.b("text") }, [data.text]) : void 0;
        return h29(Transition16, {
          name: ns.b("fade"),
          onAfterLeave: handleAfterLeave
        }, {
          default: withCtx80(() => [
            withDirectives35(createVNode89("div", {
              style: {
                backgroundColor: data.background || ""
              },
              class: [
                ns.b("mask"),
                data.customClass,
                data.fullscreen ? "is-fullscreen" : ""
              ]
            }, [
              h29("div", {
                class: ns.b("spinner")
              }, [spinner, spinnerText])
            ]), [[vShow26, data.visible]])
          ])
        });
      };
    }
  });
  const loadingInstance = createApp(elLoadingComponent);
  const vm = loadingInstance.mount(document.createElement("div"));
  return {
    ...toRefs18(data),
    setText,
    removeElLoadingChild,
    close: close2,
    handleAfterLeave,
    vm,
    get $el() {
      return vm.$el;
    }
  };
}

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/loading/src/service.mjs
import { isString as isString36 } from "@vue/shared";
var fullscreenInstance = void 0;
var Loading = function(options = {}) {
  if (!isClient)
    return void 0;
  const resolved = resolveOptions(options);
  if (resolved.fullscreen && fullscreenInstance) {
    return fullscreenInstance;
  }
  const instance = createLoadingComponent({
    ...resolved,
    closed: () => {
      var _a2;
      (_a2 = resolved.closed) == null ? void 0 : _a2.call(resolved);
      if (resolved.fullscreen)
        fullscreenInstance = void 0;
    }
  });
  addStyle(resolved, resolved.parent, instance);
  addClassList(resolved, resolved.parent, instance);
  resolved.parent.vLoadingAddClassList = () => addClassList(resolved, resolved.parent, instance);
  let loadingNumber = resolved.parent.getAttribute("loading-number");
  if (!loadingNumber) {
    loadingNumber = "1";
  } else {
    loadingNumber = `${Number.parseInt(loadingNumber) + 1}`;
  }
  resolved.parent.setAttribute("loading-number", loadingNumber);
  resolved.parent.appendChild(instance.$el);
  nextTick55(() => instance.visible.value = resolved.visible);
  if (resolved.fullscreen) {
    fullscreenInstance = instance;
  }
  return instance;
};
var resolveOptions = (options) => {
  var _a2, _b, _c, _d;
  let target2;
  if (isString36(options.target)) {
    target2 = (_a2 = document.querySelector(options.target)) != null ? _a2 : document.body;
  } else {
    target2 = options.target || document.body;
  }
  return {
    parent: target2 === document.body || options.body ? document.body : target2,
    background: options.background || "",
    svg: options.svg || "",
    svgViewBox: options.svgViewBox || "",
    spinner: options.spinner || false,
    text: options.text || "",
    fullscreen: target2 === document.body && ((_b = options.fullscreen) != null ? _b : true),
    lock: (_c = options.lock) != null ? _c : false,
    customClass: options.customClass || "",
    visible: (_d = options.visible) != null ? _d : true,
    target: target2
  };
};
var addStyle = async (options, parent2, instance) => {
  const { nextZIndex } = instance.vm.zIndex || instance.vm._.exposed.zIndex;
  const maskStyle = {};
  if (options.fullscreen) {
    instance.originalPosition.value = getStyle(document.body, "position");
    instance.originalOverflow.value = getStyle(document.body, "overflow");
    maskStyle.zIndex = nextZIndex();
  } else if (options.parent === document.body) {
    instance.originalPosition.value = getStyle(document.body, "position");
    await nextTick55();
    for (const property2 of ["top", "left"]) {
      const scroll = property2 === "top" ? "scrollTop" : "scrollLeft";
      maskStyle[property2] = `${options.target.getBoundingClientRect()[property2] + document.body[scroll] + document.documentElement[scroll] - Number.parseInt(getStyle(document.body, `margin-${property2}`), 10)}px`;
    }
    for (const property2 of ["height", "width"]) {
      maskStyle[property2] = `${options.target.getBoundingClientRect()[property2]}px`;
    }
  } else {
    instance.originalPosition.value = getStyle(parent2, "position");
  }
  for (const [key, value] of Object.entries(maskStyle)) {
    instance.$el.style[key] = value;
  }
};
var addClassList = (options, parent2, instance) => {
  const ns = instance.vm.ns || instance.vm._.exposed.ns;
  if (!["absolute", "fixed", "sticky"].includes(instance.originalPosition.value)) {
    addClass(parent2, ns.bm("parent", "relative"));
  } else {
    removeClass(parent2, ns.bm("parent", "relative"));
  }
  if (options.fullscreen && options.lock) {
    addClass(parent2, ns.bm("parent", "hidden"));
  } else {
    removeClass(parent2, ns.bm("parent", "hidden"));
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/loading/src/directive.mjs
import { ref as ref149, isRef as isRef14 } from "vue";
import { isObject as isObject28, isString as isString37, hyphenate as hyphenate5 } from "@vue/shared";
var INSTANCE_KEY = Symbol("ElLoading");
var createInstance = (el, binding) => {
  var _a2, _b, _c, _d;
  const vm = binding.instance;
  const getBindingProp = (key) => isObject28(binding.value) ? binding.value[key] : void 0;
  const resolveExpression = (key) => {
    const data = isString37(key) && (vm == null ? void 0 : vm[key]) || key;
    if (data)
      return ref149(data);
    else
      return data;
  };
  const getProp2 = (name) => resolveExpression(getBindingProp(name) || el.getAttribute(`element-loading-${hyphenate5(name)}`));
  const fullscreen = (_a2 = getBindingProp("fullscreen")) != null ? _a2 : binding.modifiers.fullscreen;
  const options = {
    text: getProp2("text"),
    svg: getProp2("svg"),
    svgViewBox: getProp2("svgViewBox"),
    spinner: getProp2("spinner"),
    background: getProp2("background"),
    customClass: getProp2("customClass"),
    fullscreen,
    target: (_b = getBindingProp("target")) != null ? _b : fullscreen ? void 0 : el,
    body: (_c = getBindingProp("body")) != null ? _c : binding.modifiers.body,
    lock: (_d = getBindingProp("lock")) != null ? _d : binding.modifiers.lock
  };
  el[INSTANCE_KEY] = {
    options,
    instance: Loading(options)
  };
};
var updateOptions = (newOptions, originalOptions) => {
  for (const key of Object.keys(originalOptions)) {
    if (isRef14(originalOptions[key]))
      originalOptions[key].value = newOptions[key];
  }
};
var vLoading = {
  mounted(el, binding) {
    if (binding.value) {
      createInstance(el, binding);
    }
  },
  updated(el, binding) {
    const instance = el[INSTANCE_KEY];
    if (binding.oldValue !== binding.value) {
      if (binding.value && !binding.oldValue) {
        createInstance(el, binding);
      } else if (binding.value && binding.oldValue) {
        if (isObject28(binding.value))
          updateOptions(binding.value, instance.options);
      } else {
        instance == null ? void 0 : instance.instance.close();
      }
    }
  },
  unmounted(el) {
    var _a2;
    (_a2 = el[INSTANCE_KEY]) == null ? void 0 : _a2.instance.close();
  }
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/loading/index.mjs
var ElLoading = {
  install(app) {
    app.directive("loading", vLoading);
    app.config.globalProperties.$loading = Loading;
  },
  directive: vLoading,
  service: Loading
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/src/method.mjs
import { isVNode as isVNode13, render, createVNode as createVNode91 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/src/message2.mjs
import { defineComponent as defineComponent184, ref as ref150, computed as computed187, onMounted as onMounted62, watch as watch98, openBlock as openBlock138, createBlock as createBlock83, Transition as Transition17, unref as unref159, withCtx as withCtx81, withDirectives as withDirectives36, createElementVNode as createElementVNode75, normalizeClass as normalizeClass116, normalizeStyle as normalizeStyle57, createCommentVNode as createCommentVNode71, resolveDynamicComponent as resolveDynamicComponent35, renderSlot as renderSlot110, createElementBlock as createElementBlock121, toDisplayString as toDisplayString66, Fragment as Fragment50, withModifiers as withModifiers31, createVNode as createVNode90, vShow as vShow27 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/src/message.mjs
var messageTypes = ["success", "info", "warning", "error"];
var messageDefaults = mutable({
  customClass: "",
  center: false,
  dangerouslyUseHTMLString: false,
  duration: 3e3,
  icon: void 0,
  id: "",
  message: "",
  onClose: void 0,
  showClose: false,
  type: "info",
  offset: 16,
  zIndex: 0,
  grouping: false,
  repeatNum: 1,
  appendTo: isClient ? document.body : void 0
});
var messageProps = buildProps({
  customClass: {
    type: String,
    default: messageDefaults.customClass
  },
  center: {
    type: Boolean,
    default: messageDefaults.center
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: messageDefaults.dangerouslyUseHTMLString
  },
  duration: {
    type: Number,
    default: messageDefaults.duration
  },
  icon: {
    type: iconPropType,
    default: messageDefaults.icon
  },
  id: {
    type: String,
    default: messageDefaults.id
  },
  message: {
    type: definePropType([
      String,
      Object,
      Function
    ]),
    default: messageDefaults.message
  },
  onClose: {
    type: definePropType(Function),
    required: false
  },
  showClose: {
    type: Boolean,
    default: messageDefaults.showClose
  },
  type: {
    type: String,
    values: messageTypes,
    default: messageDefaults.type
  },
  offset: {
    type: Number,
    default: messageDefaults.offset
  },
  zIndex: {
    type: Number,
    default: messageDefaults.zIndex
  },
  grouping: {
    type: Boolean,
    default: messageDefaults.grouping
  },
  repeatNum: {
    type: Number,
    default: messageDefaults.repeatNum
  }
});
var messageEmits = {
  destroy: () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/src/instance.mjs
import { shallowReactive } from "vue";
var instances = shallowReactive([]);
var getInstance = (id) => {
  const idx = instances.findIndex((instance) => instance.id === id);
  const current = instances[idx];
  let prev;
  if (idx > 0) {
    prev = instances[idx - 1];
  }
  return { current, prev };
};
var getLastOffset = (id) => {
  const { prev } = getInstance(id);
  if (!prev)
    return 0;
  return prev.vm.exposed.bottom.value;
};
var getOffsetOrSpace = (id, offset2) => {
  const idx = instances.findIndex((instance) => instance.id === id);
  return idx > 0 ? 20 : offset2;
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/src/message2.mjs
var _hoisted_169 = ["id"];
var _hoisted_243 = ["innerHTML"];
var __default__102 = defineComponent184({
  name: "ElMessage"
});
var _sfc_main145 = defineComponent184({
  ...__default__102,
  props: messageProps,
  emits: messageEmits,
  setup(__props, { expose }) {
    const props = __props;
    const { Close } = TypeComponents;
    const { ns, zIndex: zIndex2 } = useGlobalComponentSettings("message");
    const { currentZIndex, nextZIndex } = zIndex2;
    const messageRef = ref150();
    const visible = ref150(false);
    const height = ref150(0);
    let stopTimer = void 0;
    const badgeType = computed187(() => props.type ? props.type === "error" ? "danger" : props.type : "info");
    const typeClass = computed187(() => {
      const type4 = props.type;
      return { [ns.bm("icon", type4)]: type4 && TypeComponentsMap[type4] };
    });
    const iconComponent = computed187(() => props.icon || TypeComponentsMap[props.type] || "");
    const lastOffset = computed187(() => getLastOffset(props.id));
    const offset2 = computed187(() => getOffsetOrSpace(props.id, props.offset) + lastOffset.value);
    const bottom = computed187(() => height.value + offset2.value);
    const customStyle = computed187(() => ({
      top: `${offset2.value}px`,
      zIndex: currentZIndex.value
    }));
    function startTimer() {
      if (props.duration === 0)
        return;
      ({ stop: stopTimer } = useTimeoutFn(() => {
        close2();
      }, props.duration));
    }
    function clearTimer() {
      stopTimer == null ? void 0 : stopTimer();
    }
    function close2() {
      visible.value = false;
    }
    function keydown({ code }) {
      if (code === EVENT_CODE.esc) {
        close2();
      }
    }
    onMounted62(() => {
      startTimer();
      nextZIndex();
      visible.value = true;
    });
    watch98(() => props.repeatNum, () => {
      clearTimer();
      startTimer();
    });
    useEventListener(document, "keydown", keydown);
    useResizeObserver(messageRef, () => {
      height.value = messageRef.value.getBoundingClientRect().height;
    });
    expose({
      visible,
      bottom,
      close: close2
    });
    return (_ctx, _cache) => {
      return openBlock138(), createBlock83(Transition17, {
        name: unref159(ns).b("fade"),
        onBeforeLeave: _ctx.onClose,
        onAfterLeave: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("destroy")),
        persisted: ""
      }, {
        default: withCtx81(() => [
          withDirectives36(createElementVNode75("div", {
            id: _ctx.id,
            ref_key: "messageRef",
            ref: messageRef,
            class: normalizeClass116([
              unref159(ns).b(),
              { [unref159(ns).m(_ctx.type)]: _ctx.type && !_ctx.icon },
              unref159(ns).is("center", _ctx.center),
              unref159(ns).is("closable", _ctx.showClose),
              _ctx.customClass
            ]),
            style: normalizeStyle57(unref159(customStyle)),
            role: "alert",
            onMouseenter: clearTimer,
            onMouseleave: startTimer
          }, [
            _ctx.repeatNum > 1 ? (openBlock138(), createBlock83(unref159(ElBadge), {
              key: 0,
              value: _ctx.repeatNum,
              type: unref159(badgeType),
              class: normalizeClass116(unref159(ns).e("badge"))
            }, null, 8, ["value", "type", "class"])) : createCommentVNode71("v-if", true),
            unref159(iconComponent) ? (openBlock138(), createBlock83(unref159(ElIcon), {
              key: 1,
              class: normalizeClass116([unref159(ns).e("icon"), unref159(typeClass)])
            }, {
              default: withCtx81(() => [
                (openBlock138(), createBlock83(resolveDynamicComponent35(unref159(iconComponent))))
              ]),
              _: 1
            }, 8, ["class"])) : createCommentVNode71("v-if", true),
            renderSlot110(_ctx.$slots, "default", {}, () => [
              !_ctx.dangerouslyUseHTMLString ? (openBlock138(), createElementBlock121("p", {
                key: 0,
                class: normalizeClass116(unref159(ns).e("content"))
              }, toDisplayString66(_ctx.message), 3)) : (openBlock138(), createElementBlock121(Fragment50, { key: 1 }, [
                createCommentVNode71(" Caution here, message could've been compromised, never use user's input as message "),
                createElementVNode75("p", {
                  class: normalizeClass116(unref159(ns).e("content")),
                  innerHTML: _ctx.message
                }, null, 10, _hoisted_243)
              ], 2112))
            ]),
            _ctx.showClose ? (openBlock138(), createBlock83(unref159(ElIcon), {
              key: 2,
              class: normalizeClass116(unref159(ns).e("closeBtn")),
              onClick: withModifiers31(close2, ["stop"])
            }, {
              default: withCtx81(() => [
                createVNode90(unref159(Close))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : createCommentVNode71("v-if", true)
          ], 46, _hoisted_169), [
            [vShow27, visible.value]
          ])
        ]),
        _: 3
      }, 8, ["name", "onBeforeLeave"]);
    };
  }
});
var MessageConstructor = _export_sfc(_sfc_main145, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/message/src/message.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/src/method.mjs
import { isString as isString38, isFunction as isFunction29 } from "@vue/shared";
var seed = 1;
var normalizeOptions = (params) => {
  const options = !params || isString38(params) || isVNode13(params) || isFunction29(params) ? { message: params } : params;
  const normalized = {
    ...messageDefaults,
    ...options
  };
  if (!normalized.appendTo) {
    normalized.appendTo = document.body;
  } else if (isString38(normalized.appendTo)) {
    let appendTo = document.querySelector(normalized.appendTo);
    if (!isElement2(appendTo)) {
      debugWarn("ElMessage", "the appendTo option is not an HTMLElement. Falling back to document.body.");
      appendTo = document.body;
    }
    normalized.appendTo = appendTo;
  }
  return normalized;
};
var closeMessage = (instance) => {
  const idx = instances.indexOf(instance);
  if (idx === -1)
    return;
  instances.splice(idx, 1);
  const { handler } = instance;
  handler.close();
};
var createMessage = ({ appendTo, ...options }, context) => {
  const id = `message_${seed++}`;
  const userOnClose = options.onClose;
  const container = document.createElement("div");
  const props = {
    ...options,
    id,
    onClose: () => {
      userOnClose == null ? void 0 : userOnClose();
      closeMessage(instance);
    },
    onDestroy: () => {
      render(null, container);
    }
  };
  const vnode = createVNode91(MessageConstructor, props, isFunction29(props.message) || isVNode13(props.message) ? {
    default: isFunction29(props.message) ? props.message : () => props.message
  } : null);
  vnode.appContext = context || message._context;
  render(vnode, container);
  appendTo.appendChild(container.firstElementChild);
  const vm = vnode.component;
  const handler = {
    close: () => {
      vm.exposed.visible.value = false;
    }
  };
  const instance = {
    id,
    vnode,
    vm,
    handler,
    props: vnode.component.props
  };
  return instance;
};
var message = (options = {}, context) => {
  if (!isClient)
    return { close: () => void 0 };
  if (isNumber3(messageConfig.max) && instances.length >= messageConfig.max) {
    return { close: () => void 0 };
  }
  const normalized = normalizeOptions(options);
  if (normalized.grouping && instances.length) {
    const instance2 = instances.find(({ vnode: vm }) => {
      var _a2;
      return ((_a2 = vm.props) == null ? void 0 : _a2.message) === normalized.message;
    });
    if (instance2) {
      instance2.props.repeatNum += 1;
      instance2.props.type = normalized.type;
      return instance2.handler;
    }
  }
  const instance = createMessage(normalized, context);
  instances.push(instance);
  return instance.handler;
};
messageTypes.forEach((type4) => {
  message[type4] = (options = {}, appContext) => {
    const normalized = normalizeOptions(options);
    return message({ ...normalized, type: type4 }, appContext);
  };
});
function closeAll(type4) {
  for (const instance of instances) {
    if (!type4 || type4 === instance.props.type) {
      instance.handler.close();
    }
  }
}
message.closeAll = closeAll;
message._context = null;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message/index.mjs
var ElMessage = withInstallFunction(message, "$message");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message-box/src/messageBox.mjs
import { createVNode as createVNode93, isVNode as isVNode14, render as render2 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message-box/src/index.mjs
import { defineComponent as defineComponent185, computed as computed188, ref as ref151, reactive as reactive34, watch as watch99, nextTick as nextTick56, onMounted as onMounted63, onBeforeUnmount as onBeforeUnmount28, toRefs as toRefs19, resolveComponent as resolveComponent17, openBlock as openBlock139, createBlock as createBlock84, Transition as Transition18, withCtx as withCtx82, withDirectives as withDirectives37, createVNode as createVNode92, createElementVNode as createElementVNode76, normalizeClass as normalizeClass117, normalizeStyle as normalizeStyle58, withModifiers as withModifiers32, createElementBlock as createElementBlock122, resolveDynamicComponent as resolveDynamicComponent36, createCommentVNode as createCommentVNode72, toDisplayString as toDisplayString67, withKeys as withKeys15, renderSlot as renderSlot111, createTextVNode as createTextVNode28, vShow as vShow28 } from "vue";
var _sfc_main146 = defineComponent185({
  name: "ElMessageBox",
  directives: {
    TrapFocus
  },
  components: {
    ElButton,
    ElFocusTrap,
    ElInput,
    ElOverlay,
    ElIcon,
    ...TypeComponents
  },
  inheritAttrs: false,
  props: {
    buttonSize: {
      type: String,
      validator: isValidComponentSize
    },
    modal: {
      type: Boolean,
      default: true
    },
    lockScroll: {
      type: Boolean,
      default: true
    },
    showClose: {
      type: Boolean,
      default: true
    },
    closeOnClickModal: {
      type: Boolean,
      default: true
    },
    closeOnPressEscape: {
      type: Boolean,
      default: true
    },
    closeOnHashChange: {
      type: Boolean,
      default: true
    },
    center: Boolean,
    draggable: Boolean,
    roundButton: {
      default: false,
      type: Boolean
    },
    container: {
      type: String,
      default: "body"
    },
    boxType: {
      type: String,
      default: ""
    }
  },
  emits: ["vanish", "action"],
  setup(props, { emit }) {
    const {
      locale,
      zIndex: zIndex2,
      ns,
      size: btnSize
    } = useGlobalComponentSettings("message-box", computed188(() => props.buttonSize));
    const { t } = locale;
    const { nextZIndex } = zIndex2;
    const visible = ref151(false);
    const state = reactive34({
      autofocus: true,
      beforeClose: null,
      callback: null,
      cancelButtonText: "",
      cancelButtonClass: "",
      confirmButtonText: "",
      confirmButtonClass: "",
      customClass: "",
      customStyle: {},
      dangerouslyUseHTMLString: false,
      distinguishCancelAndClose: false,
      icon: "",
      inputPattern: null,
      inputPlaceholder: "",
      inputType: "text",
      inputValue: null,
      inputValidator: null,
      inputErrorMessage: "",
      message: null,
      modalFade: true,
      modalClass: "",
      showCancelButton: false,
      showConfirmButton: true,
      type: "",
      title: void 0,
      showInput: false,
      action: "",
      confirmButtonLoading: false,
      cancelButtonLoading: false,
      confirmButtonDisabled: false,
      editorErrorMessage: "",
      validateError: false,
      zIndex: nextZIndex()
    });
    const typeClass = computed188(() => {
      const type4 = state.type;
      return { [ns.bm("icon", type4)]: type4 && TypeComponentsMap[type4] };
    });
    const contentId = useId();
    const inputId = useId();
    const iconComponent = computed188(() => state.icon || TypeComponentsMap[state.type] || "");
    const hasMessage = computed188(() => !!state.message);
    const rootRef = ref151();
    const headerRef = ref151();
    const focusStartRef = ref151();
    const inputRef = ref151();
    const confirmRef = ref151();
    const confirmButtonClasses = computed188(() => state.confirmButtonClass);
    watch99(() => state.inputValue, async (val) => {
      await nextTick56();
      if (props.boxType === "prompt" && val !== null) {
        validate();
      }
    }, { immediate: true });
    watch99(() => visible.value, (val) => {
      var _a2, _b;
      if (val) {
        if (props.boxType !== "prompt") {
          if (state.autofocus) {
            focusStartRef.value = (_b = (_a2 = confirmRef.value) == null ? void 0 : _a2.$el) != null ? _b : rootRef.value;
          } else {
            focusStartRef.value = rootRef.value;
          }
        }
        state.zIndex = nextZIndex();
      }
      if (props.boxType !== "prompt")
        return;
      if (val) {
        nextTick56().then(() => {
          var _a22;
          if (inputRef.value && inputRef.value.$el) {
            if (state.autofocus) {
              focusStartRef.value = (_a22 = getInputElement()) != null ? _a22 : rootRef.value;
            } else {
              focusStartRef.value = rootRef.value;
            }
          }
        });
      } else {
        state.editorErrorMessage = "";
        state.validateError = false;
      }
    });
    const draggable2 = computed188(() => props.draggable);
    useDraggable(rootRef, headerRef, draggable2);
    onMounted63(async () => {
      await nextTick56();
      if (props.closeOnHashChange) {
        window.addEventListener("hashchange", doClose);
      }
    });
    onBeforeUnmount28(() => {
      if (props.closeOnHashChange) {
        window.removeEventListener("hashchange", doClose);
      }
    });
    function doClose() {
      if (!visible.value)
        return;
      visible.value = false;
      nextTick56(() => {
        if (state.action)
          emit("action", state.action);
      });
    }
    const handleWrapperClick = () => {
      if (props.closeOnClickModal) {
        handleAction(state.distinguishCancelAndClose ? "close" : "cancel");
      }
    };
    const overlayEvent = useSameTarget(handleWrapperClick);
    const handleInputEnter = (e) => {
      if (state.inputType !== "textarea") {
        e.preventDefault();
        return handleAction("confirm");
      }
    };
    const handleAction = (action) => {
      var _a2;
      if (props.boxType === "prompt" && action === "confirm" && !validate()) {
        return;
      }
      state.action = action;
      if (state.beforeClose) {
        (_a2 = state.beforeClose) == null ? void 0 : _a2.call(state, action, state, doClose);
      } else {
        doClose();
      }
    };
    const validate = () => {
      if (props.boxType === "prompt") {
        const inputPattern = state.inputPattern;
        if (inputPattern && !inputPattern.test(state.inputValue || "")) {
          state.editorErrorMessage = state.inputErrorMessage || t("el.messagebox.error");
          state.validateError = true;
          return false;
        }
        const inputValidator = state.inputValidator;
        if (typeof inputValidator === "function") {
          const validateResult = inputValidator(state.inputValue);
          if (validateResult === false) {
            state.editorErrorMessage = state.inputErrorMessage || t("el.messagebox.error");
            state.validateError = true;
            return false;
          }
          if (typeof validateResult === "string") {
            state.editorErrorMessage = validateResult;
            state.validateError = true;
            return false;
          }
        }
      }
      state.editorErrorMessage = "";
      state.validateError = false;
      return true;
    };
    const getInputElement = () => {
      const inputRefs = inputRef.value.$refs;
      return inputRefs.input || inputRefs.textarea;
    };
    const handleClose = () => {
      handleAction("close");
    };
    const onCloseRequested = () => {
      if (props.closeOnPressEscape) {
        handleClose();
      }
    };
    if (props.lockScroll) {
      useLockscreen(visible);
    }
    return {
      ...toRefs19(state),
      ns,
      overlayEvent,
      visible,
      hasMessage,
      typeClass,
      contentId,
      inputId,
      btnSize,
      iconComponent,
      confirmButtonClasses,
      rootRef,
      focusStartRef,
      headerRef,
      inputRef,
      confirmRef,
      doClose,
      handleClose,
      onCloseRequested,
      handleWrapperClick,
      handleInputEnter,
      handleAction,
      t
    };
  }
});
var _hoisted_170 = ["aria-label", "aria-describedby"];
var _hoisted_244 = ["aria-label"];
var _hoisted_321 = ["id"];
function _sfc_render32(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_icon = resolveComponent17("el-icon");
  const _component_close = resolveComponent17("close");
  const _component_el_input = resolveComponent17("el-input");
  const _component_el_button = resolveComponent17("el-button");
  const _component_el_focus_trap = resolveComponent17("el-focus-trap");
  const _component_el_overlay = resolveComponent17("el-overlay");
  return openBlock139(), createBlock84(Transition18, {
    name: "fade-in-linear",
    onAfterLeave: _cache[11] || (_cache[11] = ($event) => _ctx.$emit("vanish")),
    persisted: ""
  }, {
    default: withCtx82(() => [
      withDirectives37(createVNode92(_component_el_overlay, {
        "z-index": _ctx.zIndex,
        "overlay-class": [_ctx.ns.is("message-box"), _ctx.modalClass],
        mask: _ctx.modal
      }, {
        default: withCtx82(() => [
          createElementVNode76("div", {
            role: "dialog",
            "aria-label": _ctx.title,
            "aria-modal": "true",
            "aria-describedby": !_ctx.showInput ? _ctx.contentId : void 0,
            class: normalizeClass117(`${_ctx.ns.namespace.value}-overlay-message-box`),
            onClick: _cache[8] || (_cache[8] = (...args) => _ctx.overlayEvent.onClick && _ctx.overlayEvent.onClick(...args)),
            onMousedown: _cache[9] || (_cache[9] = (...args) => _ctx.overlayEvent.onMousedown && _ctx.overlayEvent.onMousedown(...args)),
            onMouseup: _cache[10] || (_cache[10] = (...args) => _ctx.overlayEvent.onMouseup && _ctx.overlayEvent.onMouseup(...args))
          }, [
            createVNode92(_component_el_focus_trap, {
              loop: "",
              trapped: _ctx.visible,
              "focus-trap-el": _ctx.rootRef,
              "focus-start-el": _ctx.focusStartRef,
              onReleaseRequested: _ctx.onCloseRequested
            }, {
              default: withCtx82(() => [
                createElementVNode76("div", {
                  ref: "rootRef",
                  class: normalizeClass117([
                    _ctx.ns.b(),
                    _ctx.customClass,
                    _ctx.ns.is("draggable", _ctx.draggable),
                    { [_ctx.ns.m("center")]: _ctx.center }
                  ]),
                  style: normalizeStyle58(_ctx.customStyle),
                  tabindex: "-1",
                  onClick: _cache[7] || (_cache[7] = withModifiers32(() => {
                  }, ["stop"]))
                }, [
                  _ctx.title !== null && _ctx.title !== void 0 ? (openBlock139(), createElementBlock122("div", {
                    key: 0,
                    ref: "headerRef",
                    class: normalizeClass117(_ctx.ns.e("header"))
                  }, [
                    createElementVNode76("div", {
                      class: normalizeClass117(_ctx.ns.e("title"))
                    }, [
                      _ctx.iconComponent && _ctx.center ? (openBlock139(), createBlock84(_component_el_icon, {
                        key: 0,
                        class: normalizeClass117([_ctx.ns.e("status"), _ctx.typeClass])
                      }, {
                        default: withCtx82(() => [
                          (openBlock139(), createBlock84(resolveDynamicComponent36(_ctx.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : createCommentVNode72("v-if", true),
                      createElementVNode76("span", null, toDisplayString67(_ctx.title), 1)
                    ], 2),
                    _ctx.showClose ? (openBlock139(), createElementBlock122("button", {
                      key: 0,
                      type: "button",
                      class: normalizeClass117(_ctx.ns.e("headerbtn")),
                      "aria-label": _ctx.t("el.messagebox.close"),
                      onClick: _cache[0] || (_cache[0] = ($event) => _ctx.handleAction(_ctx.distinguishCancelAndClose ? "close" : "cancel")),
                      onKeydown: _cache[1] || (_cache[1] = withKeys15(withModifiers32(($event) => _ctx.handleAction(_ctx.distinguishCancelAndClose ? "close" : "cancel"), ["prevent"]), ["enter"]))
                    }, [
                      createVNode92(_component_el_icon, {
                        class: normalizeClass117(_ctx.ns.e("close"))
                      }, {
                        default: withCtx82(() => [
                          createVNode92(_component_close)
                        ]),
                        _: 1
                      }, 8, ["class"])
                    ], 42, _hoisted_244)) : createCommentVNode72("v-if", true)
                  ], 2)) : createCommentVNode72("v-if", true),
                  createElementVNode76("div", {
                    id: _ctx.contentId,
                    class: normalizeClass117(_ctx.ns.e("content"))
                  }, [
                    createElementVNode76("div", {
                      class: normalizeClass117(_ctx.ns.e("container"))
                    }, [
                      _ctx.iconComponent && !_ctx.center && _ctx.hasMessage ? (openBlock139(), createBlock84(_component_el_icon, {
                        key: 0,
                        class: normalizeClass117([_ctx.ns.e("status"), _ctx.typeClass])
                      }, {
                        default: withCtx82(() => [
                          (openBlock139(), createBlock84(resolveDynamicComponent36(_ctx.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : createCommentVNode72("v-if", true),
                      _ctx.hasMessage ? (openBlock139(), createElementBlock122("div", {
                        key: 1,
                        class: normalizeClass117(_ctx.ns.e("message"))
                      }, [
                        renderSlot111(_ctx.$slots, "default", {}, () => [
                          !_ctx.dangerouslyUseHTMLString ? (openBlock139(), createBlock84(resolveDynamicComponent36(_ctx.showInput ? "label" : "p"), {
                            key: 0,
                            for: _ctx.showInput ? _ctx.inputId : void 0
                          }, {
                            default: withCtx82(() => [
                              createTextVNode28(toDisplayString67(!_ctx.dangerouslyUseHTMLString ? _ctx.message : ""), 1)
                            ]),
                            _: 1
                          }, 8, ["for"])) : (openBlock139(), createBlock84(resolveDynamicComponent36(_ctx.showInput ? "label" : "p"), {
                            key: 1,
                            for: _ctx.showInput ? _ctx.inputId : void 0,
                            innerHTML: _ctx.message
                          }, null, 8, ["for", "innerHTML"]))
                        ])
                      ], 2)) : createCommentVNode72("v-if", true)
                    ], 2),
                    withDirectives37(createElementVNode76("div", {
                      class: normalizeClass117(_ctx.ns.e("input"))
                    }, [
                      createVNode92(_component_el_input, {
                        id: _ctx.inputId,
                        ref: "inputRef",
                        modelValue: _ctx.inputValue,
                        "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.inputValue = $event),
                        type: _ctx.inputType,
                        placeholder: _ctx.inputPlaceholder,
                        "aria-invalid": _ctx.validateError,
                        class: normalizeClass117({ invalid: _ctx.validateError }),
                        onKeydown: withKeys15(_ctx.handleInputEnter, ["enter"])
                      }, null, 8, ["id", "modelValue", "type", "placeholder", "aria-invalid", "class", "onKeydown"]),
                      createElementVNode76("div", {
                        class: normalizeClass117(_ctx.ns.e("errormsg")),
                        style: normalizeStyle58({
                          visibility: !!_ctx.editorErrorMessage ? "visible" : "hidden"
                        })
                      }, toDisplayString67(_ctx.editorErrorMessage), 7)
                    ], 2), [
                      [vShow28, _ctx.showInput]
                    ])
                  ], 10, _hoisted_321),
                  createElementVNode76("div", {
                    class: normalizeClass117(_ctx.ns.e("btns"))
                  }, [
                    _ctx.showCancelButton ? (openBlock139(), createBlock84(_component_el_button, {
                      key: 0,
                      loading: _ctx.cancelButtonLoading,
                      class: normalizeClass117([_ctx.cancelButtonClass]),
                      round: _ctx.roundButton,
                      size: _ctx.btnSize,
                      onClick: _cache[3] || (_cache[3] = ($event) => _ctx.handleAction("cancel")),
                      onKeydown: _cache[4] || (_cache[4] = withKeys15(withModifiers32(($event) => _ctx.handleAction("cancel"), ["prevent"]), ["enter"]))
                    }, {
                      default: withCtx82(() => [
                        createTextVNode28(toDisplayString67(_ctx.cancelButtonText || _ctx.t("el.messagebox.cancel")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "size"])) : createCommentVNode72("v-if", true),
                    withDirectives37(createVNode92(_component_el_button, {
                      ref: "confirmRef",
                      type: "primary",
                      loading: _ctx.confirmButtonLoading,
                      class: normalizeClass117([_ctx.confirmButtonClasses]),
                      round: _ctx.roundButton,
                      disabled: _ctx.confirmButtonDisabled,
                      size: _ctx.btnSize,
                      onClick: _cache[5] || (_cache[5] = ($event) => _ctx.handleAction("confirm")),
                      onKeydown: _cache[6] || (_cache[6] = withKeys15(withModifiers32(($event) => _ctx.handleAction("confirm"), ["prevent"]), ["enter"]))
                    }, {
                      default: withCtx82(() => [
                        createTextVNode28(toDisplayString67(_ctx.confirmButtonText || _ctx.t("el.messagebox.confirm")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "disabled", "size"]), [
                      [vShow28, _ctx.showConfirmButton]
                    ])
                  ], 2)
                ], 6)
              ]),
              _: 3
            }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onReleaseRequested"])
          ], 42, _hoisted_170)
        ]),
        _: 3
      }, 8, ["z-index", "overlay-class", "mask"]), [
        [vShow28, _ctx.visible]
      ])
    ]),
    _: 3
  });
}
var MessageBoxConstructor = _export_sfc(_sfc_main146, [["render", _sfc_render32], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/message-box/src/index.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message-box/src/messageBox.mjs
import { isString as isString39, isFunction as isFunction30, hasOwn as hasOwn16, isObject as isObject29 } from "@vue/shared";
var messageInstance = /* @__PURE__ */ new Map();
var getAppendToElement = (props) => {
  let appendTo = document.body;
  if (props.appendTo) {
    if (isString39(props.appendTo)) {
      appendTo = document.querySelector(props.appendTo);
    }
    if (isElement2(props.appendTo)) {
      appendTo = props.appendTo;
    }
    if (!isElement2(appendTo)) {
      debugWarn("ElMessageBox", "the appendTo option is not an HTMLElement. Falling back to document.body.");
      appendTo = document.body;
    }
  }
  return appendTo;
};
var initInstance = (props, container, appContext = null) => {
  const vnode = createVNode93(MessageBoxConstructor, props, isFunction30(props.message) || isVNode14(props.message) ? {
    default: isFunction30(props.message) ? props.message : () => props.message
  } : null);
  vnode.appContext = appContext;
  render2(vnode, container);
  getAppendToElement(props).appendChild(container.firstElementChild);
  return vnode.component;
};
var genContainer = () => {
  return document.createElement("div");
};
var showMessage = (options, appContext) => {
  const container = genContainer();
  options.onVanish = () => {
    render2(null, container);
    messageInstance.delete(vm);
  };
  options.onAction = (action) => {
    const currentMsg = messageInstance.get(vm);
    let resolve;
    if (options.showInput) {
      resolve = { value: vm.inputValue, action };
    } else {
      resolve = action;
    }
    if (options.callback) {
      options.callback(resolve, instance.proxy);
    } else {
      if (action === "cancel" || action === "close") {
        if (options.distinguishCancelAndClose && action !== "cancel") {
          currentMsg.reject("close");
        } else {
          currentMsg.reject("cancel");
        }
      } else {
        currentMsg.resolve(resolve);
      }
    }
  };
  const instance = initInstance(options, container, appContext);
  const vm = instance.proxy;
  for (const prop in options) {
    if (hasOwn16(options, prop) && !hasOwn16(vm.$props, prop)) {
      vm[prop] = options[prop];
    }
  }
  vm.visible = true;
  return vm;
};
function MessageBox(options, appContext = null) {
  if (!isClient)
    return Promise.reject();
  let callback;
  if (isString39(options) || isVNode14(options)) {
    options = {
      message: options
    };
  } else {
    callback = options.callback;
  }
  return new Promise((resolve, reject2) => {
    const vm = showMessage(options, appContext != null ? appContext : MessageBox._context);
    messageInstance.set(vm, {
      options,
      callback,
      resolve,
      reject: reject2
    });
  });
}
var MESSAGE_BOX_VARIANTS = ["alert", "confirm", "prompt"];
var MESSAGE_BOX_DEFAULT_OPTS = {
  alert: { closeOnPressEscape: false, closeOnClickModal: false },
  confirm: { showCancelButton: true },
  prompt: { showCancelButton: true, showInput: true }
};
MESSAGE_BOX_VARIANTS.forEach((boxType) => {
  ;
  MessageBox[boxType] = messageBoxFactory(boxType);
});
function messageBoxFactory(boxType) {
  return (message2, title, options, appContext) => {
    let titleOrOpts = "";
    if (isObject29(title)) {
      options = title;
      titleOrOpts = "";
    } else if (isUndefined2(title)) {
      titleOrOpts = "";
    } else {
      titleOrOpts = title;
    }
    return MessageBox(Object.assign({
      title: titleOrOpts,
      message: message2,
      type: "",
      ...MESSAGE_BOX_DEFAULT_OPTS[boxType]
    }, options, {
      boxType
    }), appContext);
  };
}
MessageBox.close = () => {
  messageInstance.forEach((_2, vm) => {
    vm.doClose();
  });
  messageInstance.clear();
};
MessageBox._context = null;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/message-box/index.mjs
var _MessageBox = MessageBox;
_MessageBox.install = (app) => {
  _MessageBox._context = app._context;
  app.config.globalProperties.$msgbox = _MessageBox;
  app.config.globalProperties.$messageBox = _MessageBox;
  app.config.globalProperties.$alert = _MessageBox.alert;
  app.config.globalProperties.$confirm = _MessageBox.confirm;
  app.config.globalProperties.$prompt = _MessageBox.prompt;
};
var ElMessageBox = _MessageBox;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/notification/src/notify.mjs
import { isVNode as isVNode15, createVNode as createVNode95, render as render3 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/notification/src/notification2.mjs
import { defineComponent as defineComponent186, ref as ref152, computed as computed189, onMounted as onMounted64, openBlock as openBlock140, createBlock as createBlock85, Transition as Transition19, unref as unref160, withCtx as withCtx83, withDirectives as withDirectives38, createElementVNode as createElementVNode77, normalizeClass as normalizeClass118, normalizeStyle as normalizeStyle59, resolveDynamicComponent as resolveDynamicComponent37, createCommentVNode as createCommentVNode73, toDisplayString as toDisplayString68, renderSlot as renderSlot112, createElementBlock as createElementBlock123, Fragment as Fragment51, vShow as vShow29, withModifiers as withModifiers33, createVNode as createVNode94 } from "vue";

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/notification/src/notification.mjs
var notificationTypes = [
  "success",
  "info",
  "warning",
  "error"
];
var notificationProps = buildProps({
  customClass: {
    type: String,
    default: ""
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: false
  },
  duration: {
    type: Number,
    default: 4500
  },
  icon: {
    type: iconPropType
  },
  id: {
    type: String,
    default: ""
  },
  message: {
    type: definePropType([String, Object]),
    default: ""
  },
  offset: {
    type: Number,
    default: 0
  },
  onClick: {
    type: definePropType(Function),
    default: () => void 0
  },
  onClose: {
    type: definePropType(Function),
    required: true
  },
  position: {
    type: String,
    values: ["top-right", "top-left", "bottom-right", "bottom-left"],
    default: "top-right"
  },
  showClose: {
    type: Boolean,
    default: true
  },
  title: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    values: [...notificationTypes, ""],
    default: ""
  },
  zIndex: Number
});
var notificationEmits = {
  destroy: () => true
};

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/notification/src/notification2.mjs
var _hoisted_171 = ["id"];
var _hoisted_245 = ["textContent"];
var _hoisted_322 = { key: 0 };
var _hoisted_412 = ["innerHTML"];
var __default__103 = defineComponent186({
  name: "ElNotification"
});
var _sfc_main147 = defineComponent186({
  ...__default__103,
  props: notificationProps,
  emits: notificationEmits,
  setup(__props, { expose }) {
    const props = __props;
    const { ns, zIndex: zIndex2 } = useGlobalComponentSettings("notification");
    const { nextZIndex, currentZIndex } = zIndex2;
    const { Close } = CloseComponents;
    const visible = ref152(false);
    let timer = void 0;
    const typeClass = computed189(() => {
      const type4 = props.type;
      return type4 && TypeComponentsMap[props.type] ? ns.m(type4) : "";
    });
    const iconComponent = computed189(() => {
      if (!props.type)
        return props.icon;
      return TypeComponentsMap[props.type] || props.icon;
    });
    const horizontalClass = computed189(() => props.position.endsWith("right") ? "right" : "left");
    const verticalProperty = computed189(() => props.position.startsWith("top") ? "top" : "bottom");
    const positionStyle = computed189(() => {
      var _a2;
      return {
        [verticalProperty.value]: `${props.offset}px`,
        zIndex: (_a2 = props.zIndex) != null ? _a2 : currentZIndex.value
      };
    });
    function startTimer() {
      if (props.duration > 0) {
        ;
        ({ stop: timer } = useTimeoutFn(() => {
          if (visible.value)
            close2();
        }, props.duration));
      }
    }
    function clearTimer() {
      timer == null ? void 0 : timer();
    }
    function close2() {
      visible.value = false;
    }
    function onKeydown({ code }) {
      if (code === EVENT_CODE.delete || code === EVENT_CODE.backspace) {
        clearTimer();
      } else if (code === EVENT_CODE.esc) {
        if (visible.value) {
          close2();
        }
      } else {
        startTimer();
      }
    }
    onMounted64(() => {
      startTimer();
      nextZIndex();
      visible.value = true;
    });
    useEventListener(document, "keydown", onKeydown);
    expose({
      visible,
      close: close2
    });
    return (_ctx, _cache) => {
      return openBlock140(), createBlock85(Transition19, {
        name: unref160(ns).b("fade"),
        onBeforeLeave: _ctx.onClose,
        onAfterLeave: _cache[1] || (_cache[1] = ($event) => _ctx.$emit("destroy")),
        persisted: ""
      }, {
        default: withCtx83(() => [
          withDirectives38(createElementVNode77("div", {
            id: _ctx.id,
            class: normalizeClass118([unref160(ns).b(), _ctx.customClass, unref160(horizontalClass)]),
            style: normalizeStyle59(unref160(positionStyle)),
            role: "alert",
            onMouseenter: clearTimer,
            onMouseleave: startTimer,
            onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onClick && _ctx.onClick(...args))
          }, [
            unref160(iconComponent) ? (openBlock140(), createBlock85(unref160(ElIcon), {
              key: 0,
              class: normalizeClass118([unref160(ns).e("icon"), unref160(typeClass)])
            }, {
              default: withCtx83(() => [
                (openBlock140(), createBlock85(resolveDynamicComponent37(unref160(iconComponent))))
              ]),
              _: 1
            }, 8, ["class"])) : createCommentVNode73("v-if", true),
            createElementVNode77("div", {
              class: normalizeClass118(unref160(ns).e("group"))
            }, [
              createElementVNode77("h2", {
                class: normalizeClass118(unref160(ns).e("title")),
                textContent: toDisplayString68(_ctx.title)
              }, null, 10, _hoisted_245),
              withDirectives38(createElementVNode77("div", {
                class: normalizeClass118(unref160(ns).e("content")),
                style: normalizeStyle59(!!_ctx.title ? void 0 : { margin: 0 })
              }, [
                renderSlot112(_ctx.$slots, "default", {}, () => [
                  !_ctx.dangerouslyUseHTMLString ? (openBlock140(), createElementBlock123("p", _hoisted_322, toDisplayString68(_ctx.message), 1)) : (openBlock140(), createElementBlock123(Fragment51, { key: 1 }, [
                    createCommentVNode73(" Caution here, message could've been compromised, never use user's input as message "),
                    createElementVNode77("p", { innerHTML: _ctx.message }, null, 8, _hoisted_412)
                  ], 2112))
                ])
              ], 6), [
                [vShow29, _ctx.message]
              ]),
              _ctx.showClose ? (openBlock140(), createBlock85(unref160(ElIcon), {
                key: 0,
                class: normalizeClass118(unref160(ns).e("closeBtn")),
                onClick: withModifiers33(close2, ["stop"])
              }, {
                default: withCtx83(() => [
                  createVNode94(unref160(Close))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : createCommentVNode73("v-if", true)
            ], 2)
          ], 46, _hoisted_171), [
            [vShow29, visible.value]
          ])
        ]),
        _: 3
      }, 8, ["name", "onBeforeLeave"]);
    };
  }
});
var NotificationConstructor = _export_sfc(_sfc_main147, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/notification/src/notification.vue"]]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/notification/src/notify.mjs
import { isString as isString40 } from "@vue/shared";
var notifications = {
  "top-left": [],
  "top-right": [],
  "bottom-left": [],
  "bottom-right": []
};
var GAP_SIZE = 16;
var seed2 = 1;
var notify = function(options = {}, context = null) {
  if (!isClient)
    return { close: () => void 0 };
  if (typeof options === "string" || isVNode15(options)) {
    options = { message: options };
  }
  const position = options.position || "top-right";
  let verticalOffset = options.offset || 0;
  notifications[position].forEach(({ vm: vm2 }) => {
    var _a2;
    verticalOffset += (((_a2 = vm2.el) == null ? void 0 : _a2.offsetHeight) || 0) + GAP_SIZE;
  });
  verticalOffset += GAP_SIZE;
  const id = `notification_${seed2++}`;
  const userOnClose = options.onClose;
  const props = {
    ...options,
    offset: verticalOffset,
    id,
    onClose: () => {
      close(id, position, userOnClose);
    }
  };
  let appendTo = document.body;
  if (isElement2(options.appendTo)) {
    appendTo = options.appendTo;
  } else if (isString40(options.appendTo)) {
    appendTo = document.querySelector(options.appendTo);
  }
  if (!isElement2(appendTo)) {
    debugWarn("ElNotification", "the appendTo option is not an HTMLElement. Falling back to document.body.");
    appendTo = document.body;
  }
  const container = document.createElement("div");
  const vm = createVNode95(NotificationConstructor, props, isVNode15(props.message) ? {
    default: () => props.message
  } : null);
  vm.appContext = context != null ? context : notify._context;
  vm.props.onDestroy = () => {
    render3(null, container);
  };
  render3(vm, container);
  notifications[position].push({ vm });
  appendTo.appendChild(container.firstElementChild);
  return {
    close: () => {
      ;
      vm.component.exposed.visible.value = false;
    }
  };
};
notificationTypes.forEach((type4) => {
  notify[type4] = (options = {}) => {
    if (typeof options === "string" || isVNode15(options)) {
      options = {
        message: options
      };
    }
    return notify({
      ...options,
      type: type4
    });
  };
});
function close(id, position, userOnClose) {
  const orientedNotifications = notifications[position];
  const idx = orientedNotifications.findIndex(({ vm: vm2 }) => {
    var _a2;
    return ((_a2 = vm2.component) == null ? void 0 : _a2.props.id) === id;
  });
  if (idx === -1)
    return;
  const { vm } = orientedNotifications[idx];
  if (!vm)
    return;
  userOnClose == null ? void 0 : userOnClose(vm);
  const removedHeight = vm.el.offsetHeight;
  const verticalPos = position.split("-")[0];
  orientedNotifications.splice(idx, 1);
  const len = orientedNotifications.length;
  if (len < 1)
    return;
  for (let i = idx; i < len; i++) {
    const { el, component: component2 } = orientedNotifications[i].vm;
    const pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;
    component2.props.offset = pos;
  }
}
function closeAll2() {
  for (const orientedNotifications of Object.values(notifications)) {
    orientedNotifications.forEach(({ vm }) => {
      ;
      vm.component.exposed.visible.value = false;
    });
  }
}
notify.closeAll = closeAll2;
notify._context = null;

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/components/notification/index.mjs
var ElNotification = withInstallFunction(notify, "$notify");

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/plugin.mjs
var Plugins = [
  ElInfiniteScroll,
  ElLoading,
  ElMessage,
  ElMessageBox,
  ElNotification,
  ElPopoverDirective
];

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/defaults.mjs
var installer = makeInstaller([...Components, ...Plugins]);

// ../../../../../Documents/HBuilderProjects/ChidaoUniApp vue3/node_modules/element-plus/es/index.mjs
var import_dayjs17 = __toESM(require_dayjs_min(), 1);
var install3 = installer.install;
var version3 = installer.version;
var export_dayjs = import_dayjs17.default;
export {
  BAR_MAP,
  CASCADER_PANEL_INJECTION_KEY,
  CHANGE_EVENT,
  ClickOutside,
  CommonPicker,
  CommonProps,
  DEFAULT_FORMATS_DATE,
  DEFAULT_FORMATS_DATEPICKER,
  DEFAULT_FORMATS_TIME,
  COLLECTION_INJECTION_KEY2 as DROPDOWN_COLLECTION_INJECTION_KEY,
  COLLECTION_ITEM_INJECTION_KEY2 as DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,
  DROPDOWN_INJECTION_KEY,
  DefaultProps,
  DynamicSizeGrid,
  DynamicSizeList,
  EVENT_CODE,
  Effect,
  ElAffix,
  ElAlert,
  ElAside,
  ElAutoResizer,
  ElAutocomplete,
  ElAvatar,
  ElBacktop,
  ElBadge,
  ElBreadcrumb,
  ElBreadcrumbItem,
  ElButton,
  ElButtonGroup,
  ElCalendar,
  ElCard,
  ElCarousel,
  ElCarouselItem,
  ElCascader,
  ElCascaderPanel,
  ElCheckTag,
  ElCheckbox,
  ElCheckboxButton,
  ElCheckboxGroup,
  ElCol,
  ElCollapse,
  ElCollapseItem,
  ElCollapseTransition,
  ElCollection2 as ElCollection,
  ElCollectionItem2 as ElCollectionItem,
  ElColorPicker,
  ElConfigProvider,
  ElContainer,
  ElCountdown,
  ElDatePicker,
  ElDescriptions,
  ElDescriptionsItem,
  ElDialog,
  ElDivider,
  ElDrawer,
  ElDropdown,
  ElDropdownItem,
  ElDropdownMenu,
  ElEmpty,
  ElFooter,
  ElForm,
  ElFormItem,
  ElHeader,
  ElIcon,
  ElImage,
  ElImageViewer,
  ElInfiniteScroll,
  ElInput,
  ElInputNumber,
  ElLink,
  ElLoading,
  vLoading as ElLoadingDirective,
  Loading as ElLoadingService,
  ElMain,
  ElMenu,
  ElMenuItem,
  ElMenuItemGroup,
  ElMessage,
  ElMessageBox,
  ElNotification,
  ElOption,
  ElOptionGroup,
  ElOverlay,
  ElPageHeader,
  ElPagination,
  ElPopconfirm,
  ElPopover,
  ElPopoverDirective,
  ElPopper,
  ElPopperArrow,
  ElPopperContent,
  ElPopperTrigger,
  ElProgress,
  ElRadio,
  ElRadioButton,
  ElRadioGroup,
  ElRate,
  ElResult,
  ElRow,
  ElScrollbar,
  ElSelect,
  ElSelectV2,
  ElSkeleton,
  ElSkeletonItem,
  ElSlider,
  ElSpace,
  ElStatistic,
  ElStep,
  ElSteps,
  ElSubMenu,
  ElSwitch,
  ElTabPane,
  ElTable,
  ElTableColumn2 as ElTableColumn,
  ElTableV2,
  ElTabs,
  ElTag,
  ElText,
  ElTimePicker,
  ElTimeSelect,
  ElTimeline,
  ElTimelineItem,
  ElTooltip,
  ElTransfer,
  ElTree,
  ElTreeSelect,
  ElTreeV2,
  ElUpload,
  FIRST_KEYS,
  FIRST_LAST_KEYS,
  FORWARD_REF_INJECTION_KEY,
  FixedSizeGrid,
  FixedSizeList,
  GAP,
  ID_INJECTION_KEY,
  INPUT_EVENT,
  INSTALLED_KEY,
  IconComponentMap,
  IconMap,
  LAST_KEYS,
  LEFT_CHECK_CHANGE_EVENT,
  Mousewheel,
  POPPER_CONTENT_INJECTION_KEY,
  POPPER_INJECTION_KEY,
  RIGHT_CHECK_CHANGE_EVENT,
  ROOT_PICKER_INJECTION_KEY,
  RowAlign,
  RowJustify,
  SIZE_INJECTION_KEY,
  TOOLTIP_INJECTION_KEY,
  TableV2,
  Alignment as TableV2Alignment,
  FixedDir as TableV2FixedDir,
  placeholderSign as TableV2Placeholder,
  SortOrder as TableV2SortOrder,
  TimePickPanel,
  TrapFocus,
  UPDATE_MODEL_EVENT,
  WEEK_DAYS,
  affixEmits,
  affixProps,
  alertEffects,
  alertEmits,
  alertProps,
  arrowMiddleware,
  autoResizerProps,
  autocompleteEmits,
  autocompleteProps,
  avatarEmits,
  avatarProps,
  backtopEmits,
  backtopProps,
  badgeProps,
  breadcrumbItemProps,
  breadcrumbKey,
  breadcrumbProps,
  buildLocaleContext,
  buildTimeList,
  buildTranslator,
  buttonEmits,
  buttonGroupContextKey,
  buttonNativeTypes,
  buttonProps,
  buttonTypes,
  calendarEmits,
  calendarProps,
  cardProps,
  carouselContextKey,
  carouselEmits,
  carouselItemProps,
  carouselProps,
  cascaderEmits,
  cascaderProps,
  checkTagEmits,
  checkTagProps,
  checkboxEmits,
  checkboxGroupContextKey,
  checkboxGroupEmits,
  checkboxGroupProps,
  checkboxProps,
  colProps,
  collapseContextKey,
  collapseEmits,
  collapseItemProps,
  collapseProps,
  colorPickerContextKey,
  colorPickerEmits,
  colorPickerProps,
  componentSizeMap,
  componentSizes,
  configProviderContextKey,
  configProviderProps,
  countdownEmits,
  countdownProps,
  createModelToggleComposable,
  dateEquals,
  datePickTypes,
  datePickerProps,
  export_dayjs as dayjs,
  installer as default,
  defaultInitialZIndex,
  defaultNamespace,
  descriptionProps,
  dialogEmits,
  dialogInjectionKey,
  dialogProps,
  dividerProps,
  drawerEmits,
  drawerProps,
  dropdownItemProps,
  dropdownMenuProps,
  dropdownProps,
  elPaginationKey,
  emitChangeFn,
  emptyProps,
  extractDateFormat,
  extractTimeFormat,
  formContextKey,
  formEmits,
  formItemContextKey,
  formItemProps,
  formItemValidateStates,
  formProps,
  formatter,
  genFileId,
  getPositionDataWithUnit,
  iconProps,
  imageEmits,
  imageProps,
  imageViewerEmits,
  imageViewerProps,
  inputEmits,
  inputNumberEmits,
  inputNumberProps,
  inputProps,
  install3 as install,
  linkEmits,
  linkProps,
  localeContextKey,
  makeInstaller,
  makeList,
  menuEmits,
  menuItemEmits,
  menuItemGroupProps,
  menuItemProps,
  menuProps,
  messageConfig,
  messageDefaults,
  messageEmits,
  messageProps,
  messageTypes,
  namespaceContextKey,
  notificationEmits,
  notificationProps,
  notificationTypes,
  overlayEmits,
  overlayProps,
  pageHeaderEmits,
  pageHeaderProps,
  paginationEmits,
  paginationProps,
  parseDate,
  popconfirmEmits,
  popconfirmProps,
  popoverEmits,
  popoverProps,
  popperArrowProps,
  popperContentEmits,
  popperContentProps,
  popperCoreConfigProps,
  popperProps,
  popperTriggerProps,
  progressProps,
  provideGlobalConfig,
  radioButtonProps,
  radioEmits,
  radioGroupEmits,
  radioGroupKey,
  radioGroupProps,
  radioProps,
  radioPropsBase,
  rangeArr,
  rateEmits,
  rateProps,
  renderThumbStyle,
  resultProps,
  roleTypes,
  rowContextKey,
  rowProps,
  scrollbarContextKey,
  scrollbarEmits,
  scrollbarProps,
  selectGroupKey,
  selectKey,
  selectV2InjectionKey,
  skeletonItemProps,
  skeletonProps,
  sliderContextKey,
  sliderEmits,
  sliderProps,
  spaceProps,
  statisticProps,
  stepProps,
  stepsEmits,
  stepsProps,
  subMenuProps,
  switchEmits,
  switchProps,
  tabBarProps,
  tabNavEmits,
  tabNavProps,
  tabPaneProps,
  tableV2Props,
  tableV2RowProps,
  tabsEmits,
  tabsProps,
  tabsRootContextKey,
  tagEmits,
  tagProps,
  textProps,
  thumbProps,
  timePickerDefaultProps,
  timeUnits,
  timelineItemProps,
  tooltipEmits,
  transferCheckedChangeFn,
  transferEmits,
  transferProps,
  translate,
  uploadBaseProps,
  uploadContentProps,
  uploadContextKey,
  uploadDraggerEmits,
  uploadDraggerProps,
  uploadListEmits,
  uploadListProps,
  uploadListTypes,
  uploadProps,
  useAttrs,
  useCascaderConfig,
  useCursor,
  useDelayedRender,
  useDelayedToggle,
  useDelayedToggleProps,
  useDeprecated,
  useDialog,
  useDisabled,
  useDraggable,
  useEscapeKeydown,
  useFloating,
  useFloatingProps,
  useFocus,
  useFormDisabled,
  useFormItem,
  useFormItemInputId,
  useFormSize,
  useForwardRef,
  useForwardRefDirective,
  useGetDerivedNamespace,
  useGlobalComponentSettings,
  useGlobalConfig,
  useGlobalSize,
  useId,
  useIdInjection,
  useLocale,
  useLockscreen,
  useModal,
  useModelToggle,
  useModelToggleEmits,
  useModelToggleProps,
  useNamespace,
  useOrderedChildren,
  usePopper,
  usePopperArrowProps,
  usePopperContainer,
  usePopperContainerId,
  usePopperContentEmits,
  usePopperContentProps,
  usePopperCoreConfigProps,
  usePopperProps,
  usePopperTriggerProps,
  usePreventGlobal,
  useProp,
  useSameTarget,
  useSize,
  useSizeProp,
  useSizeProps,
  useSpace,
  useTeleport,
  useThrottleRender,
  useTimeout,
  useTooltipContentProps,
  useTooltipModelToggle,
  useTooltipModelToggleEmits,
  useTooltipModelToggleProps,
  useTooltipProps,
  useTooltipTriggerProps,
  useTransitionFallthrough,
  useTransitionFallthroughEmits,
  useZIndex,
  vLoading,
  vRepeatClick,
  valueEquals,
  version3 as version,
  virtualizedGridProps,
  virtualizedListProps,
  virtualizedProps,
  virtualizedScrollbarProps,
  zIndexContextKey
};
/*! Bundled license information:

escape-html/index.js:
  (*!
   * escape-html
   * Copyright(c) 2012-2013 TJ Holowaychuk
   * Copyright(c) 2015 Andreas Lubbe
   * Copyright(c) 2015 Tiancheng "Timothy" Gu
   * MIT Licensed
   *)

lodash-es/lodash.default.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

lodash-es/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

normalize-wheel-es/dist/index.mjs:
  (**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @param {?boolean} capture Check if the capture phase is supported.
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   *)
*/
//# sourceMappingURL=element-plus.js.map
